

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Jun 04 13:56:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  001674                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for _values
    39  001674  00                 	db	0
    40  001675  00                 	db	0
    41  001676  00                 	db	0
    42  001677  00                 	db	0
    43  001678  00                 	db	0
    44  001679  00                 	db	0
    45  00167A  00                 	db	0
    46  00167B  00                 	db	0
    47  00167C  00                 	db	0
    48  00167D  00                 	db	0
    49  00167E  00                 	db	0
    50  00167F  30                 	db	48
    51  001680  00                 	db	0
    52  001681  00                 	db	0
    53                           
    54                           ;initializer for _temperature_timer
    55  001682  2710               	dw	10000
    56  0000                     _TMR0	set	4054
    57  0000                     _ADCON0	set	4034
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADRESH	set	4036
    61  0000                     _ADRESL	set	4035
    62  0000                     _EEADR	set	4009
    63  0000                     _EECON1bits	set	4006
    64  0000                     _EECON2	set	4007
    65  0000                     _EEDATA	set	4008
    66  0000                     _INTCON	set	4082
    67  0000                     _INTCONbits	set	4082
    68  0000                     _PIE1bits	set	3997
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PORTB	set	3969
    71  0000                     _PORTD	set	3971
    72  0000                     _PORTE	set	3972
    73  0000                     _RCON	set	4048
    74  0000                     _T0CON	set	4053
    75  0000                     _TRISA	set	3986
    76  0000                     _TRISB	set	3987
    77  0000                     _TRISC	set	3988
    78  0000                     _TRISD	set	3989
    79  0000                     _TRISE	set	3990
    80  0000                     _RA4	set	31748
    81  0000                     _RB0	set	31752
    82  0000                     _RB1	set	31753
    83  0000                     _RB2	set	31754
    84  0000                     _RC0	set	31760
    85  0000                     _RC1	set	31761
    86  0000                     _RC2	set	31762
    87  0000                     _RC3	set	31763
    88  0000                     _RC6	set	31766
    89  0000                     _RC7	set	31767
    90  0000                     _T0IF	set	32658
    91                           
    92                           ; #config settings
    93                           
    94                           	psect	cinit
    95  0015B8                     __pcinit:
    96                           	opt stack 0
    97  0015B8                     start_initialization:
    98                           	opt stack 0
    99  0015B8                     __initialization:
   100                           	opt stack 0
   101                           
   102                           ; Clear objects allocated to COMRAM (8 bytes)
   103  0015B8  EE00  F06B         	lfsr	0,__pbssCOMRAM
   104  0015BC  0E08               	movlw	8
   105  0015BE                     clear_0:
   106  0015BE  6AEE               	clrf	postinc0,c
   107  0015C0  06E8               	decf	wreg,f,c
   108  0015C2  E1FD               	bnz	clear_0
   109                           
   110                           ; Initialize objects allocated to COMRAM (16 bytes)
   111                           ; load TBLPTR registers with __pidataCOMRAM
   112  0015C4  0E74               	movlw	low __pidataCOMRAM
   113  0015C6  6EF6               	movwf	tblptrl,c
   114  0015C8  0E16               	movlw	high __pidataCOMRAM
   115  0015CA  6EF7               	movwf	tblptrh,c
   116  0015CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   117  0015CE  6EF8               	movwf	tblptru,c
   118  0015D0  EE00  F05B         	lfsr	0,__pdataCOMRAM
   119  0015D4  EE10 F010          	lfsr	1,16
   120  0015D8                     copy_data0:
   121  0015D8  0009               	tblrd		*+
   122  0015DA  CFF5 FFEE          	movff	tablat,postinc0
   123  0015DE  50E5               	movf	postdec1,w,c
   124  0015E0  50E1               	movf	fsr1l,w,c
   125  0015E2  E1FA               	bnz	copy_data0
   126  0015E4                     end_of_initialization:
   127                           	opt stack 0
   128  0015E4                     __end_of__initialization:
   129                           	opt stack 0
   130  0015E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   131  0015E6  6EF8               	movwf	tblptru,c
   132  0015E8  0100               	movlb	0
   133  0015EA  EF74  F000         	goto	_main	;jump to C main() function
   134                           tblptru	equ	0xFF8
   135                           tblptrh	equ	0xFF7
   136                           tblptrl	equ	0xFF6
   137                           tablat	equ	0xFF5
   138                           postinc0	equ	0xFEE
   139                           wreg	equ	0xFE8
   140                           postdec1	equ	0xFE5
   141                           fsr1l	equ	0xFE1
   142                           
   143                           	psect	bssCOMRAM
   144  00006B                     __pbssCOMRAM:
   145                           	opt stack 0
   146  00006B                     _analog_result:
   147                           	opt stack 0
   148  00006B                     	ds	2
   149  00006D                     _analog_temp_result:
   150                           	opt stack 0
   151  00006D                     	ds	2
   152  00006F                     _timer:
   153                           	opt stack 0
   154  00006F                     	ds	2
   155  000071                     _adr:
   156                           	opt stack 0
   157  000071                     	ds	1
   158  000072                     _count:
   159                           	opt stack 0
   160  000072                     	ds	1
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           postdec1	equ	0xFE5
   168                           fsr1l	equ	0xFE1
   169                           
   170                           	psect	dataCOMRAM
   171  00005B                     __pdataCOMRAM:
   172                           	opt stack 0
   173  00005B                     _values:
   174                           	opt stack 0
   175  00005B                     	ds	14
   176  000069                     _temperature_timer:
   177                           	opt stack 0
   178  000069                     	ds	2
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           postdec1	equ	0xFE5
   186                           fsr1l	equ	0xFE1
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ??_tmr_int:
   192  000001                     
   193                           ; 1 bytes @ 0x0
   194  000001                     	ds	14
   195  00000F                     ??_SetChanADC:
   196  00000F                     ?_ReadADC:
   197                           	opt stack 0
   198  00000F                     ?___awdiv:
   199                           	opt stack 0
   200  00000F                     ?___awmod:
   201                           	opt stack 0
   202  00000F                     ?___lwdiv:
   203                           	opt stack 0
   204  00000F                     ?___lwmod:
   205                           	opt stack 0
   206  00000F                     ?___ftpack:
   207                           	opt stack 0
   208  00000F                     OpenADC@config2:
   209                           	opt stack 0
   210  00000F                     Read_b_eep@badd:
   211                           	opt stack 0
   212  00000F                     Write_b_eep@badd:
   213                           	opt stack 0
   214  00000F                     ___awdiv@dividend:
   215                           	opt stack 0
   216  00000F                     ___awmod@dividend:
   217                           	opt stack 0
   218  00000F                     ___lwdiv@dividend:
   219                           	opt stack 0
   220  00000F                     ___lwmod@dividend:
   221                           	opt stack 0
   222  00000F                     ___ftpack@arg:
   223                           	opt stack 0
   224  00000F                     ___ftge@ff1:
   225                           	opt stack 0
   226                           
   227                           ; 3 bytes @ 0xE
   228  00000F                     	ds	1
   229  000010                     ??_OpenADC:
   230  000010                     SetChanADC@channel:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0xF
   234  000010                     	ds	1
   235  000011                     OpenADC@config:
   236                           	opt stack 0
   237  000011                     Write_b_eep@bdat:
   238                           	opt stack 0
   239  000011                     ___awdiv@divisor:
   240                           	opt stack 0
   241  000011                     ___awmod@divisor:
   242                           	opt stack 0
   243  000011                     ___lwdiv@divisor:
   244                           	opt stack 0
   245  000011                     ___lwmod@divisor:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x10
   249  000011                     	ds	1
   250  000012                     Write_b_eep@GIE_BIT_VAL:
   251                           	opt stack 0
   252  000012                     ___ftpack@exp:
   253                           	opt stack 0
   254  000012                     ___ftge@ff2:
   255                           	opt stack 0
   256                           
   257                           ; 3 bytes @ 0x11
   258  000012                     	ds	1
   259  000013                     ___awdiv@counter:
   260                           	opt stack 0
   261  000013                     ___awmod@counter:
   262                           	opt stack 0
   263  000013                     ___ftpack@sign:
   264                           	opt stack 0
   265  000013                     ___lwmod@counter:
   266                           	opt stack 0
   267  000013                     ___lwdiv@quotient:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x12
   271  000013                     	ds	1
   272  000014                     ??___ftpack:
   273  000014                     ___awdiv@sign:
   274                           	opt stack 0
   275  000014                     ___awmod@sign:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x13
   279  000014                     	ds	1
   280  000015                     ??___ftge:
   281  000015                     ___lwdiv@counter:
   282                           	opt stack 0
   283  000015                     ___awdiv@quotient:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x14
   287  000015                     	ds	2
   288  000017                     ?___awtoft:
   289                           	opt stack 0
   290  000017                     ?___lbtoft:
   291                           	opt stack 0
   292  000017                     ___awtoft@c:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x16
   296  000017                     	ds	3
   297  00001A                     ___awtoft@sign:
   298                           	opt stack 0
   299  00001A                     ___lbtoft@c:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x19
   303  00001A                     	ds	1
   304  00001B                     ?___ftadd:
   305                           	opt stack 0
   306  00001B                     ?___ftdiv:
   307                           	opt stack 0
   308  00001B                     ?___ftmul:
   309                           	opt stack 0
   310  00001B                     ___ftadd@f1:
   311                           	opt stack 0
   312  00001B                     ___ftdiv@f1:
   313                           	opt stack 0
   314  00001B                     ___ftmul@f1:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0x1A
   318  00001B                     	ds	3
   319  00001E                     ___ftadd@f2:
   320                           	opt stack 0
   321  00001E                     ___ftdiv@f2:
   322                           	opt stack 0
   323  00001E                     ___ftmul@f2:
   324                           	opt stack 0
   325                           
   326                           ; 3 bytes @ 0x1D
   327  00001E                     	ds	3
   328  000021                     ??___ftadd:
   329  000021                     ??___ftdiv:
   330  000021                     ??___ftmul:
   331                           
   332                           ; 0 bytes @ 0x20
   333  000021                     	ds	3
   334  000024                     ___ftadd@sign:
   335                           	opt stack 0
   336  000024                     ___ftdiv@f3:
   337                           	opt stack 0
   338  000024                     ___ftmul@f3_as_product:
   339                           	opt stack 0
   340                           
   341                           ; 3 bytes @ 0x23
   342  000024                     	ds	1
   343  000025                     ___ftadd@exp2:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x24
   347  000025                     	ds	1
   348  000026                     ___ftadd@exp1:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x25
   352  000026                     	ds	1
   353  000027                     ___ftdiv@cntr:
   354                           	opt stack 0
   355  000027                     ___ftmul@exp:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x26
   359  000027                     	ds	1
   360  000028                     ___ftdiv@exp:
   361                           	opt stack 0
   362  000028                     ___ftmul@cntr:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x27
   366  000028                     	ds	1
   367  000029                     ___ftdiv@sign:
   368                           	opt stack 0
   369  000029                     ___ftmul@sign:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x28
   373  000029                     	ds	1
   374  00002A                     ?___fttol:
   375                           	opt stack 0
   376  00002A                     ___fttol@f1:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x29
   380  00002A                     	ds	4
   381  00002E                     ??___fttol:
   382                           
   383                           ; 0 bytes @ 0x2D
   384  00002E                     	ds	5
   385  000033                     ___fttol@sign1:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x32
   389  000033                     	ds	1
   390  000034                     ___fttol@lval:
   391                           	opt stack 0
   392                           
   393                           ; 4 bytes @ 0x33
   394  000034                     	ds	4
   395  000038                     ___fttol@exp1:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x37
   399  000038                     	ds	1
   400  000039                     ??_main:
   401                           
   402                           ; 0 bytes @ 0x38
   403  000039                     	ds	7
   404  000040                     main@temp_volume:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0x3F
   408  000040                     	ds	3
   409  000043                     main@real_temp:
   410                           	opt stack 0
   411                           
   412                           ; 3 bytes @ 0x42
   413  000043                     	ds	3
   414  000046                     main@portd_old_status:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x45
   418  000046                     	ds	1
   419  000047                     main@volve:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x46
   423  000047                     	ds	1
   424  000048                     main@temp:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x47
   428  000048                     	ds	1
   429  000049                     main@debounce:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x48
   433  000049                     	ds	1
   434  00004A                     main@actual_flow:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x49
   438  00004A                     	ds	1
   439  00004B                     main@control:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x4A
   443  00004B                     	ds	1
   444  00004C                     main@temp_time:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x4B
   448  00004C                     	ds	1
   449  00004D                     main@hand_flag:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x4C
   453  00004D                     	ds	1
   454  00004E                     main@volume:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x4D
   458  00004E                     	ds	2
   459  000050                     main@real_volume:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0x4F
   463  000050                     	ds	3
   464  000053                     main@real_pressure:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x52
   468  000053                     	ds	1
   469  000054                     main@air:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x53
   473  000054                     	ds	1
   474  000055                     main@hundreds:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x54
   478  000055                     	ds	1
   479  000056                     main@set_flow:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x55
   483  000056                     	ds	1
   484  000057                     main@actual_pressure:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x56
   488  000057                     	ds	1
   489  000058                     main@set_pressure:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x57
   493  000058                     	ds	1
   494  000059                     main@units:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x58
   498  000059                     	ds	1
   499  00005A                     main@tens:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x59
   503  00005A                     	ds	1
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 11 in file "E:\Study Material\XC8 PROJECTS\Analog\CO2.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  real_volume     3   79[COMRAM] float 
   523 ;;  real_temp       3   66[COMRAM] float 
   524 ;;  temp_volume     3   63[COMRAM] float 
   525 ;;  volume          2   77[COMRAM] unsigned int 
   526 ;;  tens            1   89[COMRAM] unsigned char 
   527 ;;  units           1   88[COMRAM] unsigned char 
   528 ;;  set_pressure    1   87[COMRAM] unsigned char 
   529 ;;  actual_press    1   86[COMRAM] unsigned char 
   530 ;;  set_flow        1   85[COMRAM] unsigned char 
   531 ;;  hundreds        1   84[COMRAM] unsigned char 
   532 ;;  air             1   83[COMRAM] unsigned char 
   533 ;;  real_pressur    1   82[COMRAM] unsigned char 
   534 ;;  hand_flag       1   76[COMRAM] unsigned char 
   535 ;;  temp_time       1   75[COMRAM] unsigned char 
   536 ;;  control         1   74[COMRAM] unsigned char 
   537 ;;  actual_flow     1   73[COMRAM] unsigned char 
   538 ;;  debounce        1   72[COMRAM] unsigned char 
   539 ;;  temp            1   71[COMRAM] unsigned char 
   540 ;;  volve           1   70[COMRAM] unsigned char 
   541 ;;  portd_old_st    1   69[COMRAM] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;		None               void
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   551 ;;      Params:         0       0       0       0       0       0       0
   552 ;;      Locals:        27       0       0       0       0       0       0
   553 ;;      Temps:          7       0       0       0       0       0       0
   554 ;;      Totals:        34       0       0       0       0       0       0
   555 ;;Total ram usage:       34 bytes
   556 ;; Hardware stack levels required when called:    3
   557 ;; This function calls:
   558 ;;		_BusyADC
   559 ;;		_ConvertADC
   560 ;;		_OpenADC
   561 ;;		_ReadADC
   562 ;;		_Read_b_eep
   563 ;;		_SetChanADC
   564 ;;		_Write_b_eep
   565 ;;		___awdiv
   566 ;;		___awmod
   567 ;;		___awtoft
   568 ;;		___ftadd
   569 ;;		___ftdiv
   570 ;;		___ftge
   571 ;;		___ftmul
   572 ;;		___fttol
   573 ;;		___lbtoft
   574 ;;		___lwdiv
   575 ;;		___lwmod
   576 ;; This function is called by:
   577 ;;		Startup code after reset
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text0
   582  0000E8                     __ptext0:
   583                           	opt stack 0
   584  0000E8                     _main:
   585                           	opt stack 28
   586                           
   587                           ;incstack = 0
   588  0000E8  FFFF               	dw	65535
   589                           
   590                           ;CO2.c: 13: unsigned char set_pressure = 0, set_flow = 0, actual_flow = 0, actual_pressu
      +                          re = 0, real_pressure = 0, portd_old_status = 0xFF, units = 0, tens = 0, hundreds = 0, d
      +                          ebounce = 0, control = 0, volve = 0, temp_time = 0, air = 0, temp = 0, hand_flag = 0;
   591  0000EA  0E00               	movlw	0
   592  0000EC  6E58               	movwf	main@set_pressure,c
   593  0000EE  0E00               	movlw	0
   594  0000F0  6E56               	movwf	main@set_flow,c
   595  0000F2  0E00               	movlw	0
   596  0000F4  6E4A               	movwf	main@actual_flow,c
   597  0000F6  0E00               	movlw	0
   598  0000F8  6E57               	movwf	main@actual_pressure,c
   599  0000FA  0E00               	movlw	0
   600  0000FC  6E53               	movwf	main@real_pressure,c
   601  0000FE  6846               	setf	main@portd_old_status,c
   602  000100  0E00               	movlw	0
   603  000102  6E59               	movwf	main@units,c
   604  000104  0E00               	movlw	0
   605  000106  6E5A               	movwf	main@tens,c
   606  000108  0E00               	movlw	0
   607  00010A  6E55               	movwf	main@hundreds,c
   608  00010C  0E00               	movlw	0
   609  00010E  6E49               	movwf	main@debounce,c
   610  000110  0E00               	movlw	0
   611  000112  6E4B               	movwf	main@control,c
   612  000114  0E00               	movlw	0
   613  000116  6E47               	movwf	main@volve,c
   614  000118  0E00               	movlw	0
   615  00011A  6E4C               	movwf	main@temp_time,c
   616  00011C  0E00               	movlw	0
   617  00011E  6E54               	movwf	main@air,c
   618  000120  0E00               	movlw	0
   619  000122  6E48               	movwf	main@temp,c
   620  000124  0E00               	movlw	0
   621  000126  6E4D               	movwf	main@hand_flag,c
   622                           
   623                           ;CO2.c: 14: float real_volume = 0, temp_volume = 0, real_temp = 0;
   624  000128  0E00               	movlw	0
   625  00012A  6E50               	movwf	main@real_volume,c
   626  00012C  0E00               	movlw	0
   627  00012E  6E51               	movwf	main@real_volume+1,c
   628  000130  0E00               	movlw	0
   629  000132  6E52               	movwf	main@real_volume+2,c
   630  000134  0E00               	movlw	0
   631  000136  6E40               	movwf	main@temp_volume,c
   632  000138  0E00               	movlw	0
   633  00013A  6E41               	movwf	main@temp_volume+1,c
   634  00013C  0E00               	movlw	0
   635  00013E  6E42               	movwf	main@temp_volume+2,c
   636  000140  0E00               	movlw	0
   637  000142  6E43               	movwf	main@real_temp,c
   638  000144  0E00               	movlw	0
   639  000146  6E44               	movwf	main@real_temp+1,c
   640  000148  0E00               	movlw	0
   641  00014A  6E45               	movwf	main@real_temp+2,c
   642                           
   643                           ;CO2.c: 15: unsigned int volume = 0;
   644  00014C  0E00               	movlw	0
   645  00014E  6E4F               	movwf	main@volume+1,c
   646  000150  0E00               	movlw	0
   647  000152  6E4E               	movwf	main@volume,c
   648                           
   649                           ;CO2.c: 17: TRISA = 0x0B;
   650  000154  0E0B               	movlw	11
   651  000156  6E92               	movwf	3986,c	;volatile
   652                           
   653                           ;CO2.c: 18: TRISE = 0x00;
   654  000158  0E00               	movlw	0
   655  00015A  6E96               	movwf	3990,c	;volatile
   656                           
   657                           ;CO2.c: 19: TRISB = 0x00;
   658  00015C  0E00               	movlw	0
   659  00015E  6E93               	movwf	3987,c	;volatile
   660                           
   661                           ;CO2.c: 20: TRISD = 0xFF;
   662  000160  6895               	setf	3989,c	;volatile
   663                           
   664                           ;CO2.c: 21: TRISC = 0x00;
   665  000162  0E00               	movlw	0
   666  000164  6E94               	movwf	3988,c	;volatile
   667                           
   668                           ;CO2.c: 23: RCON = 0x9F;
   669  000166  0E9F               	movlw	159
   670  000168  6ED0               	movwf	4048,c	;volatile
   671                           
   672                           ;CO2.c: 24: INTCON = 0xA0;
   673  00016A  0EA0               	movlw	160
   674  00016C  6EF2               	movwf	intcon,c	;volatile
   675                           
   676                           ;CO2.c: 25: T0CON = 0xC2;
   677  00016E  0EC2               	movlw	194
   678  000170  6ED5               	movwf	4053,c	;volatile
   679                           
   680                           ;CO2.c: 26: TMR0 = 0x00;
   681  000172  0E00               	movlw	0
   682  000174  6ED7               	movwf	4055,c	;volatile
   683  000176  0E00               	movlw	0
   684  000178  6ED6               	movwf	4054,c	;volatile
   685                           
   686                           ;CO2.c: 29: set_pressure = Read_b_eep( 0x01 );
   687  00017A  0E00               	movlw	0
   688  00017C  6E10               	movwf	Read_b_eep@badd+1,c
   689  00017E  0E01               	movlw	1
   690  000180  6E0F               	movwf	Read_b_eep@badd,c
   691  000182  EC2F  F00B         	call	_Read_b_eep	;wreg free
   692  000186  6E58               	movwf	main@set_pressure,c
   693                           
   694                           ;CO2.c: 30: _delay(50);
   695  000188  0E0A               	movlw	10
   696  00018A                     u1207:
   697  00018A  F000               	nop	
   698  00018C  2EE8               	decfsz	wreg,f,c
   699  00018E  D7FD               	goto	u1207
   700                           
   701                           ;CO2.c: 31: set_flow = Read_b_eep( 0x02 );
   702  000190  0E00               	movlw	0
   703  000192  6E10               	movwf	Read_b_eep@badd+1,c
   704  000194  0E02               	movlw	2
   705  000196  6E0F               	movwf	Read_b_eep@badd,c
   706  000198  EC2F  F00B         	call	_Read_b_eep	;wreg free
   707  00019C  6E56               	movwf	main@set_flow,c
   708                           
   709                           ;CO2.c: 32: _delay(50);
   710  00019E  0E0A               	movlw	10
   711  0001A0                     u1217:
   712  0001A0  F000               	nop	
   713  0001A2  2EE8               	decfsz	wreg,f,c
   714  0001A4  D7FD               	goto	u1217
   715                           
   716                           ;CO2.c: 35: hundreds = Read_b_eep( 0x03 );
   717  0001A6  0E00               	movlw	0
   718  0001A8  6E10               	movwf	Read_b_eep@badd+1,c
   719  0001AA  0E03               	movlw	3
   720  0001AC  6E0F               	movwf	Read_b_eep@badd,c
   721  0001AE  EC2F  F00B         	call	_Read_b_eep	;wreg free
   722  0001B2  6E55               	movwf	main@hundreds,c
   723                           
   724                           ;CO2.c: 36: _delay(50);
   725  0001B4  0E0A               	movlw	10
   726  0001B6                     u1227:
   727  0001B6  F000               	nop	
   728  0001B8  2EE8               	decfsz	wreg,f,c
   729  0001BA  D7FD               	goto	u1227
   730                           
   731                           ;CO2.c: 37: real_volume = 100 * hundreds;
   732  0001BC  5055               	movf	main@hundreds,w,c
   733  0001BE  0D64               	mullw	100
   734  0001C0  CFF3 F017          	movff	prodl,___awtoft@c
   735  0001C4  CFF4 F018          	movff	prodh,___awtoft@c+1
   736  0001C8  EC75  F00A         	call	___awtoft	;wreg free
   737  0001CC  C017  F050         	movff	?___awtoft,main@real_volume
   738  0001D0  C018  F051         	movff	?___awtoft+1,main@real_volume+1
   739  0001D4  C019  F052         	movff	?___awtoft+2,main@real_volume+2
   740                           
   741                           ;CO2.c: 38: hundreds = hundreds << 4;
   742  0001D8  3855               	swapf	main@hundreds,w,c
   743  0001DA  0BF0               	andlw	240
   744  0001DC  6E55               	movwf	main@hundreds,c
   745                           
   746                           ;CO2.c: 39: values[8] = hundreds;
   747  0001DE  C055  F063         	movff	main@hundreds,_values+8	;volatile
   748                           
   749                           ;CO2.c: 41: tens = Read_b_eep( 0x04 );
   750  0001E2  0E00               	movlw	0
   751  0001E4  6E10               	movwf	Read_b_eep@badd+1,c
   752  0001E6  0E04               	movlw	4
   753  0001E8  6E0F               	movwf	Read_b_eep@badd,c
   754  0001EA  EC2F  F00B         	call	_Read_b_eep	;wreg free
   755  0001EE  6E5A               	movwf	main@tens,c
   756                           
   757                           ;CO2.c: 42: _delay(50);
   758  0001F0  0E0A               	movlw	10
   759  0001F2                     u1237:
   760  0001F2  F000               	nop	
   761  0001F4  2EE8               	decfsz	wreg,f,c
   762  0001F6  D7FD               	goto	u1237
   763                           
   764                           ;CO2.c: 43: real_volume = real_volume + (10 * tens);
   765  0001F8  505A               	movf	main@tens,w,c
   766  0001FA  0D0A               	mullw	10
   767  0001FC  CFF3 F017          	movff	prodl,___awtoft@c
   768  000200  CFF4 F018          	movff	prodh,___awtoft@c+1
   769  000204  EC75  F00A         	call	___awtoft	;wreg free
   770  000208  C017  F01B         	movff	?___awtoft,___ftadd@f1
   771  00020C  C018  F01C         	movff	?___awtoft+1,___ftadd@f1+1
   772  000210  C019  F01D         	movff	?___awtoft+2,___ftadd@f1+2
   773  000214  C050  F01E         	movff	main@real_volume,___ftadd@f2
   774  000218  C051  F01F         	movff	main@real_volume+1,___ftadd@f2+1
   775  00021C  C052  F020         	movff	main@real_volume+2,___ftadd@f2+2
   776  000220  ECE7  F006         	call	___ftadd	;wreg free
   777  000224  C01B  F050         	movff	?___ftadd,main@real_volume
   778  000228  C01C  F051         	movff	?___ftadd+1,main@real_volume+1
   779  00022C  C01D  F052         	movff	?___ftadd+2,main@real_volume+2
   780                           
   781                           ;CO2.c: 44: tens = tens << 4;
   782  000230  385A               	swapf	main@tens,w,c
   783  000232  0BF0               	andlw	240
   784  000234  6E5A               	movwf	main@tens,c
   785                           
   786                           ;CO2.c: 45: values[9] = tens;
   787  000236  C05A  F064         	movff	main@tens,_values+9	;volatile
   788                           
   789                           ;CO2.c: 47: units = Read_b_eep( 0x05 );
   790  00023A  0E00               	movlw	0
   791  00023C  6E10               	movwf	Read_b_eep@badd+1,c
   792  00023E  0E05               	movlw	5
   793  000240  6E0F               	movwf	Read_b_eep@badd,c
   794  000242  EC2F  F00B         	call	_Read_b_eep	;wreg free
   795  000246  6E59               	movwf	main@units,c
   796                           
   797                           ;CO2.c: 48: _delay(50);
   798  000248  0E0A               	movlw	10
   799  00024A                     u1247:
   800  00024A  F000               	nop	
   801  00024C  2EE8               	decfsz	wreg,f,c
   802  00024E  D7FD               	goto	u1247
   803                           
   804                           ;CO2.c: 49: real_volume = real_volume + units;
   805  000250  5059               	movf	main@units,w,c
   806  000252  EC0F  F00B         	call	___lbtoft
   807  000256  C017  F01B         	movff	?___lbtoft,___ftadd@f1
   808  00025A  C018  F01C         	movff	?___lbtoft+1,___ftadd@f1+1
   809  00025E  C019  F01D         	movff	?___lbtoft+2,___ftadd@f1+2
   810  000262  C050  F01E         	movff	main@real_volume,___ftadd@f2
   811  000266  C051  F01F         	movff	main@real_volume+1,___ftadd@f2+1
   812  00026A  C052  F020         	movff	main@real_volume+2,___ftadd@f2+2
   813  00026E  ECE7  F006         	call	___ftadd	;wreg free
   814  000272  C01B  F050         	movff	?___ftadd,main@real_volume
   815  000276  C01C  F051         	movff	?___ftadd+1,main@real_volume+1
   816  00027A  C01D  F052         	movff	?___ftadd+2,main@real_volume+2
   817                           
   818                           ;CO2.c: 50: units = units << 4;
   819  00027E  3859               	swapf	main@units,w,c
   820  000280  0BF0               	andlw	240
   821  000282  6E59               	movwf	main@units,c
   822                           
   823                           ;CO2.c: 51: values[10] = units;
   824  000284  C059  F065         	movff	main@units,_values+10	;volatile
   825                           
   826                           ;CO2.c: 54: units = 0x00;
   827  000288  0E00               	movlw	0
   828  00028A  6E59               	movwf	main@units,c
   829                           
   830                           ;CO2.c: 55: units = set_pressure % 10;
   831  00028C  C058  F00F         	movff	main@set_pressure,___awmod@dividend
   832  000290  6A10               	clrf	___awmod@dividend+1,c
   833  000292  0E00               	movlw	0
   834  000294  6E12               	movwf	___awmod@divisor+1,c
   835  000296  0E0A               	movlw	10
   836  000298  6E11               	movwf	___awmod@divisor,c
   837  00029A  EC00  F00A         	call	___awmod	;wreg free
   838  00029E  500F               	movf	?___awmod,w,c
   839  0002A0  6E59               	movwf	main@units,c
   840                           
   841                           ;CO2.c: 56: units = units << 4;
   842  0002A2  3859               	swapf	main@units,w,c
   843  0002A4  0BF0               	andlw	240
   844  0002A6  6E59               	movwf	main@units,c
   845                           
   846                           ;CO2.c: 57: values[3] = units;
   847  0002A8  C059  F05E         	movff	main@units,_values+3	;volatile
   848                           
   849                           ;CO2.c: 58: tens = 0x00;
   850  0002AC  0E00               	movlw	0
   851  0002AE  6E5A               	movwf	main@tens,c
   852                           
   853                           ;CO2.c: 59: tens = set_pressure / 10;
   854  0002B0  C058  F00F         	movff	main@set_pressure,___awdiv@dividend
   855  0002B4  6A10               	clrf	___awdiv@dividend+1,c
   856  0002B6  0E00               	movlw	0
   857  0002B8  6E12               	movwf	___awdiv@divisor+1,c
   858  0002BA  0E0A               	movlw	10
   859  0002BC  6E11               	movwf	___awdiv@divisor,c
   860  0002BE  EC62  F009         	call	___awdiv	;wreg free
   861  0002C2  500F               	movf	?___awdiv,w,c
   862  0002C4  6E5A               	movwf	main@tens,c
   863                           
   864                           ;CO2.c: 60: tens = tens << 4;
   865  0002C6  385A               	swapf	main@tens,w,c
   866  0002C8  0BF0               	andlw	240
   867  0002CA  6E5A               	movwf	main@tens,c
   868                           
   869                           ;CO2.c: 61: values[2] = tens;
   870  0002CC  C05A  F05D         	movff	main@tens,_values+2	;volatile
   871                           
   872                           ;CO2.c: 64: units = 0x00;
   873  0002D0  0E00               	movlw	0
   874  0002D2  6E59               	movwf	main@units,c
   875                           
   876                           ;CO2.c: 65: units = set_flow % 10;
   877  0002D4  C056  F00F         	movff	main@set_flow,___awmod@dividend
   878  0002D8  6A10               	clrf	___awmod@dividend+1,c
   879  0002DA  0E00               	movlw	0
   880  0002DC  6E12               	movwf	___awmod@divisor+1,c
   881  0002DE  0E0A               	movlw	10
   882  0002E0  6E11               	movwf	___awmod@divisor,c
   883  0002E2  EC00  F00A         	call	___awmod	;wreg free
   884  0002E6  500F               	movf	?___awmod,w,c
   885  0002E8  6E59               	movwf	main@units,c
   886                           
   887                           ;CO2.c: 66: units = units << 4;
   888  0002EA  3859               	swapf	main@units,w,c
   889  0002EC  0BF0               	andlw	240
   890  0002EE  6E59               	movwf	main@units,c
   891                           
   892                           ;CO2.c: 67: values[5] = units;
   893  0002F0  C059  F060         	movff	main@units,_values+5	;volatile
   894                           
   895                           ;CO2.c: 68: tens = 0x00;
   896  0002F4  0E00               	movlw	0
   897  0002F6  6E5A               	movwf	main@tens,c
   898                           
   899                           ;CO2.c: 69: tens = set_flow / 10;
   900  0002F8  C056  F00F         	movff	main@set_flow,___awdiv@dividend
   901  0002FC  6A10               	clrf	___awdiv@dividend+1,c
   902  0002FE  0E00               	movlw	0
   903  000300  6E12               	movwf	___awdiv@divisor+1,c
   904  000302  0E0A               	movlw	10
   905  000304  6E11               	movwf	___awdiv@divisor,c
   906  000306  EC62  F009         	call	___awdiv	;wreg free
   907  00030A  500F               	movf	?___awdiv,w,c
   908  00030C  6E5A               	movwf	main@tens,c
   909                           
   910                           ;CO2.c: 70: tens = tens << 4;
   911  00030E  385A               	swapf	main@tens,w,c
   912  000310  0BF0               	andlw	240
   913  000312  6E5A               	movwf	main@tens,c
   914                           
   915                           ;CO2.c: 71: values[4] = tens;
   916  000314  C05A  F05F         	movff	main@tens,_values+4	;volatile
   917                           
   918                           ;CO2.c: 74: RB0 = 0;
   919  000318  9081               	bcf	3969,0,c	;volatile
   920                           
   921                           ;CO2.c: 75: RB1 = 0;
   922  00031A  9281               	bcf	3969,1,c	;volatile
   923                           
   924                           ;CO2.c: 78: RC2 = 0;
   925  00031C  9482               	bcf	3970,2,c	;volatile
   926                           
   927                           ;CO2.c: 79: RC3 = 0;
   928  00031E  9682               	bcf	3970,3,c	;volatile
   929                           
   930                           ;CO2.c: 81: RC0 = 1;
   931  000320  8082               	bsf	3970,0,c	;volatile
   932                           
   933                           ;CO2.c: 83: RC7 = 0;
   934  000322  9E82               	bcf	3970,7,c	;volatile
   935                           
   936                           ;CO2.c: 84: RB2 = 1;
   937  000324  8481               	bsf	3969,2,c	;volatile
   938                           
   939                           ;CO2.c: 86: RC1 = 1;
   940  000326  8282               	bsf	3970,1,c	;volatile
   941                           
   942                           ;CO2.c: 87: RA4 = 1;
   943  000328  8880               	bsf	3968,4,c	;volatile
   944                           
   945                           ;CO2.c: 89: RC6 = 1;
   946  00032A  8C82               	bsf	3970,6,c	;volatile
   947                           
   948                           ;CO2.c: 91: OpenADC( 0b11011111 & 0b11111111 & 0b11110100, 0b10000111 & 0b01111111 );
   949  00032C  0E07               	movlw	7
   950  00032E  6E0F               	movwf	OpenADC@config2,c
   951  000330  0ED4               	movlw	212
   952  000332  ECF7  F00A         	call	_OpenADC
   953                           
   954                           ;CO2.c: 92: _delay( 50 );
   955  000336  0E0A               	movlw	10
   956  000338                     u1257:
   957  000338  F000               	nop	
   958  00033A  2EE8               	decfsz	wreg,f,c
   959  00033C  D7FD               	goto	u1257
   960  00033E                     l1370:
   961                           
   962                           ;CO2.c: 95: {
   963                           ;CO2.c: 96: if( control == 1 )
   964  00033E  044B               	decf	main@control,w,c
   965  000340  A4D8               	btfss	status,2,c
   966  000342  D275               	goto	l1564
   967                           
   968                           ;CO2.c: 97: {
   969                           ;CO2.c: 98: if( timer <= 0 )
   970  000344  5070               	movf	_timer+1,w,c	;volatile
   971  000346  0A80               	xorlw	128
   972  000348  6EF3               	movwf	prodl,c
   973  00034A  0E80               	movlw	128
   974  00034C  5CF3               	subwf	prodl,w,c
   975  00034E  0E01               	movlw	1
   976  000350  B4D8               	btfsc	status,2,c
   977  000352  5C6F               	subwf	_timer,w,c	;volatile
   978  000354  B0D8               	btfsc	status,0,c
   979  000356  D2F0               	goto	l1610
   980                           
   981                           ;CO2.c: 99: {
   982                           ;CO2.c: 100: if( volve == 0 )
   983  000358  6647               	tstfsz	main@volve,c
   984  00035A  D1C8               	goto	l82
   985                           
   986                           ;CO2.c: 101: {
   987                           ;CO2.c: 102: SetChanADC( 0b10000111 );
   988  00035C  0E87               	movlw	135
   989  00035E  EC23  F00B         	call	_SetChanADC
   990                           
   991                           ;CO2.c: 103: ConvertADC();
   992  000362  EC51  F00B         	call	_ConvertADC	;wreg free
   993  000366                     l1380:
   994  000366  EC42  F00B         	call	_BusyADC	;wreg free
   995  00036A  0900               	iorlw	0
   996  00036C  A4D8               	btfss	status,2,c
   997  00036E  D7FB               	goto	l1380
   998                           
   999                           ;CO2.c: 107: }
  1000                           ;CO2.c: 108: analog_result = ReadADC();
  1001  000370  EC4A  F00B         	call	_ReadADC	;wreg free
  1002  000374  C00F  F06B         	movff	?_ReadADC,_analog_result
  1003  000378  C010  F06C         	movff	?_ReadADC+1,_analog_result+1
  1004                           
  1005                           ;CO2.c: 110: analog_result = analog_result - 512;
  1006  00037C  0E00               	movlw	0
  1007  00037E  246B               	addwf	_analog_result,w,c
  1008  000380  6E6B               	movwf	_analog_result,c
  1009  000382  0EFE               	movlw	254
  1010  000384  206C               	addwfc	_analog_result+1,w,c
  1011  000386  6E6C               	movwf	_analog_result+1,c
  1012                           
  1013                           ;CO2.c: 113: analog_result = analog_result >> 1;
  1014  000388  346C               	rlcf	_analog_result+1,w,c
  1015  00038A  306C               	rrcf	_analog_result+1,w,c
  1016  00038C  6E6C               	movwf	_analog_result+1,c
  1017  00038E  306B               	rrcf	_analog_result,w,c
  1018  000390  6E6B               	movwf	_analog_result,c
  1019                           
  1020                           ;CO2.c: 114: real_pressure = analog_result / 2.78;
  1021  000392  0EEC               	movlw	236
  1022  000394  6E1E               	movwf	___ftdiv@f2,c
  1023  000396  0E31               	movlw	49
  1024  000398  6E1F               	movwf	___ftdiv@f2+1,c
  1025  00039A  0E40               	movlw	64
  1026  00039C  6E20               	movwf	___ftdiv@f2+2,c
  1027  00039E  C06B  F017         	movff	_analog_result,___awtoft@c
  1028  0003A2  C06C  F018         	movff	_analog_result+1,___awtoft@c+1
  1029  0003A6  EC75  F00A         	call	___awtoft	;wreg free
  1030  0003AA  C017  F01B         	movff	?___awtoft,___ftdiv@f1
  1031  0003AE  C018  F01C         	movff	?___awtoft+1,___ftdiv@f1+1
  1032  0003B2  C019  F01D         	movff	?___awtoft+2,___ftdiv@f1+2
  1033  0003B6  EC33  F008         	call	___ftdiv	;wreg free
  1034  0003BA  C01B  F02A         	movff	?___ftdiv,___fttol@f1
  1035  0003BE  C01C  F02B         	movff	?___ftdiv+1,___fttol@f1+1
  1036  0003C2  C01D  F02C         	movff	?___ftdiv+2,___fttol@f1+2
  1037  0003C6  ECA0  F008         	call	___fttol	;wreg free
  1038  0003CA  C02A  F039         	movff	?___fttol,??_main
  1039  0003CE  C02B  F03A         	movff	?___fttol+1,??_main+1
  1040  0003D2  C02C  F03B         	movff	?___fttol+2,??_main+2
  1041  0003D6  C02D  F03C         	movff	?___fttol+3,??_main+3
  1042  0003DA  5039               	movf	??_main,w,c
  1043  0003DC  6E53               	movwf	main@real_pressure,c
  1044                           
  1045                           ;CO2.c: 116: if(real_pressure < 90)
  1046  0003DE  0E5A               	movlw	90
  1047  0003E0  5C53               	subwf	main@real_pressure,w,c
  1048  0003E2  A0D8               	btfss	status,0,c
  1049                           
  1050                           ;CO2.c: 117: {
  1051                           ;CO2.c: 118: actual_pressure = real_pressure;
  1052  0003E4  C053  F057         	movff	main@real_pressure,main@actual_pressure
  1053                           
  1054                           ;CO2.c: 119: }
  1055                           ;CO2.c: 121: if( actual_pressure > 30 )
  1056  0003E8  0E1E               	movlw	30
  1057  0003EA  6457               	cpfsgt	main@actual_pressure,c
  1058  0003EC  D001               	goto	l1398
  1059                           
  1060                           ;CO2.c: 122: {
  1061                           ;CO2.c: 123: RC6 = 0;
  1062  0003EE  9C82               	bcf	3970,6,c	;volatile
  1063  0003F0                     l1398:
  1064                           
  1065                           ;CO2.c: 124: }
  1066                           ;CO2.c: 125: if( actual_pressure < 14 )
  1067  0003F0  0E0E               	movlw	14
  1068  0003F2  5C57               	subwf	main@actual_pressure,w,c
  1069  0003F4  B0D8               	btfsc	status,0,c
  1070  0003F6  D003               	goto	l1404
  1071                           
  1072                           ;CO2.c: 126: {
  1073                           ;CO2.c: 128: if(PORTD == 0xFF)
  1074  0003F8  2883               	incf	3971,w,c	;volatile
  1075  0003FA  B4D8               	btfsc	status,2,c
  1076                           
  1077                           ;CO2.c: 129: {
  1078                           ;CO2.c: 130: RC6 = 1;
  1079  0003FC  8C82               	bsf	3970,6,c	;volatile
  1080  0003FE                     l1404:
  1081                           
  1082                           ;CO2.c: 131: }
  1083                           ;CO2.c: 132: }
  1084                           ;CO2.c: 134: if( (actual_pressure <= (set_pressure - 1)) && air == 1 )
  1085  0003FE  5057               	movf	main@actual_pressure,w,c
  1086  000400  6E39               	movwf	??_main& (0+255),c
  1087  000402  6A3A               	clrf	(??_main+1)& (0+255),c
  1088  000404  0EFF               	movlw	255
  1089  000406  6E3B               	movwf	(??_main+2)& (0+255),c
  1090  000408  0EFF               	movlw	255
  1091  00040A  6E3C               	movwf	(??_main+3)& (0+255),c
  1092  00040C  5058               	movf	main@set_pressure,w,c
  1093  00040E  6E3D               	movwf	(??_main+4)& (0+255),c
  1094  000410  6A3E               	clrf	(??_main+5)& (0+255),c
  1095  000412  503B               	movf	??_main+2,w,c
  1096  000414  263D               	addwf	??_main+4,f,c
  1097  000416  503C               	movf	??_main+3,w,c
  1098  000418  223E               	addwfc	??_main+5,f,c
  1099  00041A  503E               	movf	??_main+5,w,c
  1100  00041C  0A80               	xorlw	128
  1101  00041E  6E3F               	movwf	(??_main+6)& (0+255),c
  1102  000420  5039               	movf	??_main,w,c
  1103  000422  5C3D               	subwf	??_main+4,w,c
  1104  000424  503A               	movf	??_main+1,w,c
  1105  000426  0A80               	xorlw	128
  1106  000428  583F               	subwfb	(??_main+6)& (0+255),w,c
  1107  00042A  A0D8               	btfss	status,0,c
  1108  00042C  D02D               	goto	l1418
  1109  00042E  0454               	decf	main@air,w,c
  1110  000430  A4D8               	btfss	status,2,c
  1111  000432  D02A               	goto	l1418
  1112                           
  1113                           ;CO2.c: 135: {
  1114                           ;CO2.c: 136: if((set_pressure - actual_pressure) <= 3)
  1115  000434  5057               	movf	main@actual_pressure,w,c
  1116  000436  6E39               	movwf	??_main& (0+255),c
  1117  000438  6A3A               	clrf	(??_main+1)& (0+255),c
  1118  00043A  1E39               	comf	??_main,f,c
  1119  00043C  1E3A               	comf	??_main+1,f,c
  1120  00043E  4A39               	infsnz	??_main,f,c
  1121  000440  2A3A               	incf	??_main+1,f,c
  1122  000442  5058               	movf	main@set_pressure,w,c
  1123  000444  6E3B               	movwf	(??_main+2)& (0+255),c
  1124  000446  6A3C               	clrf	(??_main+3)& (0+255),c
  1125  000448  5039               	movf	??_main,w,c
  1126  00044A  263B               	addwf	??_main+2,f,c
  1127  00044C  503A               	movf	??_main+1,w,c
  1128  00044E  223C               	addwfc	??_main+3,f,c
  1129  000450  503C               	movf	??_main+3,w,c
  1130  000452  0A80               	xorlw	128
  1131  000454  6EF3               	movwf	prodl,c
  1132  000456  0E80               	movlw	128
  1133  000458  5CF3               	subwf	prodl,w,c
  1134  00045A  0E04               	movlw	4
  1135  00045C  B4D8               	btfsc	status,2,c
  1136  00045E  5C3B               	subwf	??_main+2,w,c
  1137  000460  B0D8               	btfsc	status,0,c
  1138  000462  D004               	goto	l1412
  1139                           
  1140                           ;CO2.c: 137: {
  1141                           ;CO2.c: 138: timer = 100;
  1142  000464  0E00               	movlw	0
  1143  000466  6E70               	movwf	_timer+1,c	;volatile
  1144  000468  0E64               	movlw	100
  1145  00046A  D003               	goto	L1
  1146  00046C                     l1412:
  1147                           
  1148                           ;CO2.c: 140: else
  1149                           ;CO2.c: 141: {
  1150                           ;CO2.c: 142: timer = 1000;
  1151  00046C  0E03               	movlw	3
  1152  00046E  6E70               	movwf	_timer+1,c	;volatile
  1153  000470  0EE8               	movlw	232
  1154  000472                     L1:
  1155  000472  6E6F               	movwf	_timer,c	;volatile
  1156                           
  1157                           ;CO2.c: 143: }
  1158                           ;CO2.c: 144: RC2 = 0;
  1159  000474  9482               	bcf	3970,2,c	;volatile
  1160                           
  1161                           ;CO2.c: 145: RC7 = 1;
  1162  000476  8E82               	bsf	3970,7,c	;volatile
  1163                           
  1164                           ;CO2.c: 146: volve = 1;
  1165  000478  0E01               	movlw	1
  1166  00047A  6E47               	movwf	main@volve,c
  1167                           
  1168                           ;CO2.c: 147: hand_flag = 0;
  1169  00047C  0E00               	movlw	0
  1170  00047E  6E4D               	movwf	main@hand_flag,c
  1171                           
  1172                           ;CO2.c: 150: values[7] = 0x50;
  1173  000480  0E50               	movlw	80
  1174  000482  6E62               	movwf	_values+7,c	;volatile
  1175                           
  1176                           ;CO2.c: 151: values[6] = 0x00;
  1177  000484  0E00               	movlw	0
  1178  000486  6E61               	movwf	_values+6,c	;volatile
  1179  000488                     l1418:
  1180                           
  1181                           ;CO2.c: 152: }
  1182                           ;CO2.c: 155: if( (actual_pressure <= (set_pressure - 1)) && air == 0 )
  1183  000488  5057               	movf	main@actual_pressure,w,c
  1184  00048A  6E39               	movwf	??_main& (0+255),c
  1185  00048C  6A3A               	clrf	(??_main+1)& (0+255),c
  1186  00048E  0EFF               	movlw	255
  1187  000490  6E3B               	movwf	(??_main+2)& (0+255),c
  1188  000492  0EFF               	movlw	255
  1189  000494  6E3C               	movwf	(??_main+3)& (0+255),c
  1190  000496  5058               	movf	main@set_pressure,w,c
  1191  000498  6E3D               	movwf	(??_main+4)& (0+255),c
  1192  00049A  6A3E               	clrf	(??_main+5)& (0+255),c
  1193  00049C  503B               	movf	??_main+2,w,c
  1194  00049E  263D               	addwf	??_main+4,f,c
  1195  0004A0  503C               	movf	??_main+3,w,c
  1196  0004A2  223E               	addwfc	??_main+5,f,c
  1197  0004A4  503E               	movf	??_main+5,w,c
  1198  0004A6  0A80               	xorlw	128
  1199  0004A8  6E3F               	movwf	(??_main+6)& (0+255),c
  1200  0004AA  5039               	movf	??_main,w,c
  1201  0004AC  5C3D               	subwf	??_main+4,w,c
  1202  0004AE  503A               	movf	??_main+1,w,c
  1203  0004B0  0A80               	xorlw	128
  1204  0004B2  583F               	subwfb	(??_main+6)& (0+255),w,c
  1205  0004B4  A0D8               	btfss	status,0,c
  1206  0004B6  D053               	goto	l1454
  1207  0004B8  6654               	tstfsz	main@air,c
  1208  0004BA  D051               	goto	l1454
  1209                           
  1210                           ;CO2.c: 156: {
  1211                           ;CO2.c: 157: if(( set_pressure - actual_pressure ) <= 6 )
  1212  0004BC  5057               	movf	main@actual_pressure,w,c
  1213  0004BE  6E39               	movwf	??_main& (0+255),c
  1214  0004C0  6A3A               	clrf	(??_main+1)& (0+255),c
  1215  0004C2  1E39               	comf	??_main,f,c
  1216  0004C4  1E3A               	comf	??_main+1,f,c
  1217  0004C6  4A39               	infsnz	??_main,f,c
  1218  0004C8  2A3A               	incf	??_main+1,f,c
  1219  0004CA  5058               	movf	main@set_pressure,w,c
  1220  0004CC  6E3B               	movwf	(??_main+2)& (0+255),c
  1221  0004CE  6A3C               	clrf	(??_main+3)& (0+255),c
  1222  0004D0  5039               	movf	??_main,w,c
  1223  0004D2  263B               	addwf	??_main+2,f,c
  1224  0004D4  503A               	movf	??_main+1,w,c
  1225  0004D6  223C               	addwfc	??_main+3,f,c
  1226  0004D8  503C               	movf	??_main+3,w,c
  1227  0004DA  0A80               	xorlw	128
  1228  0004DC  6EF3               	movwf	prodl,c
  1229  0004DE  0E80               	movlw	128
  1230  0004E0  5CF3               	subwf	prodl,w,c
  1231  0004E2  0E07               	movlw	7
  1232  0004E4  B4D8               	btfsc	status,2,c
  1233  0004E6  5C3B               	subwf	??_main+2,w,c
  1234  0004E8  B0D8               	btfsc	status,0,c
  1235  0004EA  D007               	goto	l1426
  1236                           
  1237                           ;CO2.c: 158: {
  1238                           ;CO2.c: 159: timer = 18;
  1239  0004EC  0E00               	movlw	0
  1240  0004EE  6E70               	movwf	_timer+1,c	;volatile
  1241  0004F0  0E12               	movlw	18
  1242  0004F2  6E6F               	movwf	_timer,c	;volatile
  1243                           
  1244                           ;CO2.c: 160: actual_flow = 2;
  1245  0004F4  0E02               	movlw	2
  1246  0004F6  6E4A               	movwf	main@actual_flow,c
  1247                           
  1248                           ;CO2.c: 161: }
  1249  0004F8  D008               	goto	l1430
  1250  0004FA                     l1426:
  1251                           
  1252                           ;CO2.c: 162: else
  1253                           ;CO2.c: 163: {
  1254                           ;CO2.c: 165: timer = set_flow * 9;
  1255  0004FA  5056               	movf	main@set_flow,w,c
  1256  0004FC  0D09               	mullw	9
  1257  0004FE  CFF3 F06F          	movff	prodl,_timer	;volatile
  1258  000502  CFF4 F070          	movff	prodh,_timer+1	;volatile
  1259                           
  1260                           ;CO2.c: 166: actual_flow = set_flow;
  1261  000506  C056  F04A         	movff	main@set_flow,main@actual_flow
  1262  00050A                     l1430:
  1263                           
  1264                           ;CO2.c: 167: }
  1265                           ;CO2.c: 169: RC2 = 0;
  1266  00050A  9482               	bcf	3970,2,c	;volatile
  1267                           
  1268                           ;CO2.c: 170: RC3 = 1;
  1269  00050C  8682               	bsf	3970,3,c	;volatile
  1270                           
  1271                           ;CO2.c: 171: volve = 1;
  1272  00050E  0E01               	movlw	1
  1273  000510  6E47               	movwf	main@volve,c
  1274                           
  1275                           ;CO2.c: 172: hand_flag = 0;
  1276  000512  0E00               	movlw	0
  1277  000514  6E4D               	movwf	main@hand_flag,c
  1278                           
  1279                           ;CO2.c: 174: units = 0x00;
  1280  000516  0E00               	movlw	0
  1281  000518  6E59               	movwf	main@units,c
  1282                           
  1283                           ;CO2.c: 175: units = actual_flow % 10;
  1284  00051A  C04A  F00F         	movff	main@actual_flow,___awmod@dividend
  1285  00051E  6A10               	clrf	___awmod@dividend+1,c
  1286  000520  0E00               	movlw	0
  1287  000522  6E12               	movwf	___awmod@divisor+1,c
  1288  000524  0E0A               	movlw	10
  1289  000526  6E11               	movwf	___awmod@divisor,c
  1290  000528  EC00  F00A         	call	___awmod	;wreg free
  1291  00052C  500F               	movf	?___awmod,w,c
  1292  00052E  6E59               	movwf	main@units,c
  1293                           
  1294                           ;CO2.c: 176: units = units << 4;
  1295  000530  3859               	swapf	main@units,w,c
  1296  000532  0BF0               	andlw	240
  1297  000534  6E59               	movwf	main@units,c
  1298                           
  1299                           ;CO2.c: 177: values[7] = units;
  1300  000536  C059  F062         	movff	main@units,_values+7	;volatile
  1301                           
  1302                           ;CO2.c: 178: tens = 0x00;
  1303  00053A  0E00               	movlw	0
  1304  00053C  6E5A               	movwf	main@tens,c
  1305                           
  1306                           ;CO2.c: 179: tens = actual_flow / 10;
  1307  00053E  C04A  F00F         	movff	main@actual_flow,___awdiv@dividend
  1308  000542  6A10               	clrf	___awdiv@dividend+1,c
  1309  000544  0E00               	movlw	0
  1310  000546  6E12               	movwf	___awdiv@divisor+1,c
  1311  000548  0E0A               	movlw	10
  1312  00054A  6E11               	movwf	___awdiv@divisor,c
  1313  00054C  EC62  F009         	call	___awdiv	;wreg free
  1314  000550  500F               	movf	?___awdiv,w,c
  1315  000552  6E5A               	movwf	main@tens,c
  1316                           
  1317                           ;CO2.c: 180: tens = tens << 4;
  1318  000554  385A               	swapf	main@tens,w,c
  1319  000556  0BF0               	andlw	240
  1320  000558  6E5A               	movwf	main@tens,c
  1321                           
  1322                           ;CO2.c: 181: values[6] = tens;
  1323  00055A  C05A  F061         	movff	main@tens,_values+6	;volatile
  1324  00055E                     l1454:
  1325                           
  1326                           ;CO2.c: 182: }
  1327                           ;CO2.c: 185: if( actual_pressure >= (set_pressure + 3) )
  1328  00055E  5058               	movf	main@set_pressure,w,c
  1329  000560  6E39               	movwf	??_main& (0+255),c
  1330  000562  6A3A               	clrf	(??_main+1)& (0+255),c
  1331  000564  0E03               	movlw	3
  1332  000566  2639               	addwf	??_main,f,c
  1333  000568  0E00               	movlw	0
  1334  00056A  223A               	addwfc	??_main+1,f,c
  1335  00056C  5057               	movf	main@actual_pressure,w,c
  1336  00056E  6E3B               	movwf	(??_main+2)& (0+255),c
  1337  000570  6A3C               	clrf	(??_main+3)& (0+255),c
  1338  000572  503C               	movf	??_main+3,w,c
  1339  000574  0A80               	xorlw	128
  1340  000576  6E3D               	movwf	(??_main+4)& (0+255),c
  1341  000578  5039               	movf	??_main,w,c
  1342  00057A  5C3B               	subwf	??_main+2,w,c
  1343  00057C  503A               	movf	??_main+1,w,c
  1344  00057E  0A80               	xorlw	128
  1345  000580  583D               	subwfb	(??_main+4)& (0+255),w,c
  1346  000582  A0D8               	btfss	status,0,c
  1347  000584  D00E               	goto	l1462
  1348                           
  1349                           ;CO2.c: 186: {
  1350                           ;CO2.c: 187: if(hand_flag < 5)
  1351  000586  0E05               	movlw	5
  1352  000588  5C4D               	subwf	main@hand_flag,w,c
  1353  00058A  A0D8               	btfss	status,0,c
  1354                           
  1355                           ;CO2.c: 188: {
  1356                           ;CO2.c: 189: RC2 = 1;
  1357  00058C  8482               	bsf	3970,2,c	;volatile
  1358                           
  1359                           ;CO2.c: 190: }
  1360                           ;CO2.c: 192: timer = 100;
  1361  00058E  0E00               	movlw	0
  1362  000590  6E70               	movwf	_timer+1,c	;volatile
  1363  000592  0E64               	movlw	100
  1364  000594  6E6F               	movwf	_timer,c	;volatile
  1365                           
  1366                           ;CO2.c: 193: hand_flag = 0;
  1367  000596  0E00               	movlw	0
  1368  000598  6E4D               	movwf	main@hand_flag,c
  1369                           
  1370                           ;CO2.c: 195: values[7] = 0x00;
  1371  00059A  0E00               	movlw	0
  1372  00059C  6E62               	movwf	_values+7,c	;volatile
  1373                           
  1374                           ;CO2.c: 196: values[6] = 0x00;
  1375  00059E  0E00               	movlw	0
  1376  0005A0  6E61               	movwf	_values+6,c	;volatile
  1377  0005A2                     l1462:
  1378                           
  1379                           ;CO2.c: 197: }
  1380                           ;CO2.c: 200: if( actual_pressure >= set_pressure && actual_pressure <= (set_pressure + 2
      +                          ) )
  1381  0005A2  5058               	movf	main@set_pressure,w,c
  1382  0005A4  5C57               	subwf	main@actual_pressure,w,c
  1383  0005A6  A0D8               	btfss	status,0,c
  1384  0005A8  D026               	goto	l1476
  1385  0005AA  5057               	movf	main@actual_pressure,w,c
  1386  0005AC  6E39               	movwf	??_main& (0+255),c
  1387  0005AE  6A3A               	clrf	(??_main+1)& (0+255),c
  1388  0005B0  5058               	movf	main@set_pressure,w,c
  1389  0005B2  6E3B               	movwf	(??_main+2)& (0+255),c
  1390  0005B4  6A3C               	clrf	(??_main+3)& (0+255),c
  1391  0005B6  0E02               	movlw	2
  1392  0005B8  263B               	addwf	??_main+2,f,c
  1393  0005BA  0E00               	movlw	0
  1394  0005BC  223C               	addwfc	??_main+3,f,c
  1395  0005BE  503C               	movf	??_main+3,w,c
  1396  0005C0  0A80               	xorlw	128
  1397  0005C2  6E3D               	movwf	(??_main+4)& (0+255),c
  1398  0005C4  5039               	movf	??_main,w,c
  1399  0005C6  5C3B               	subwf	??_main+2,w,c
  1400  0005C8  503A               	movf	??_main+1,w,c
  1401  0005CA  0A80               	xorlw	128
  1402  0005CC  583D               	subwfb	(??_main+4)& (0+255),w,c
  1403  0005CE  A0D8               	btfss	status,0,c
  1404  0005D0  D012               	goto	l1476
  1405                           
  1406                           ;CO2.c: 201: {
  1407                           ;CO2.c: 202: timer = 500;
  1408  0005D2  0E01               	movlw	1
  1409  0005D4  6E70               	movwf	_timer+1,c	;volatile
  1410  0005D6  0EF4               	movlw	244
  1411  0005D8  6E6F               	movwf	_timer,c	;volatile
  1412                           
  1413                           ;CO2.c: 204: hand_flag = hand_flag + 1;
  1414  0005DA  284D               	incf	main@hand_flag,w,c
  1415  0005DC  6E4D               	movwf	main@hand_flag,c
  1416                           
  1417                           ;CO2.c: 205: if(hand_flag >= 5)
  1418  0005DE  0E04               	movlw	4
  1419  0005E0  644D               	cpfsgt	main@hand_flag,c
  1420  0005E2  D002               	goto	l1474
  1421                           
  1422                           ;CO2.c: 206: {
  1423                           ;CO2.c: 207: hand_flag = 5;
  1424  0005E4  0E05               	movlw	5
  1425  0005E6  6E4D               	movwf	main@hand_flag,c
  1426  0005E8                     l1474:
  1427                           
  1428                           ;CO2.c: 208: }
  1429                           ;CO2.c: 210: RC2 = 0;
  1430  0005E8  9482               	bcf	3970,2,c	;volatile
  1431                           
  1432                           ;CO2.c: 211: actual_flow = 0;
  1433  0005EA  0E00               	movlw	0
  1434  0005EC  6E4A               	movwf	main@actual_flow,c
  1435                           
  1436                           ;CO2.c: 214: values[7] = 0x00;
  1437  0005EE  0E00               	movlw	0
  1438  0005F0  6E62               	movwf	_values+7,c	;volatile
  1439                           
  1440                           ;CO2.c: 215: values[6] = 0x00;
  1441  0005F2  0E00               	movlw	0
  1442  0005F4  6E61               	movwf	_values+6,c	;volatile
  1443  0005F6                     l1476:
  1444                           
  1445                           ;CO2.c: 216: }
  1446                           ;CO2.c: 218: if(actual_pressure > set_pressure)
  1447  0005F6  5057               	movf	main@actual_pressure,w,c
  1448  0005F8  5C58               	subwf	main@set_pressure,w,c
  1449  0005FA  B0D8               	btfsc	status,0,c
  1450  0005FC  D052               	goto	l1508
  1451                           
  1452                           ;CO2.c: 219: {
  1453                           ;CO2.c: 221: if((actual_pressure - set_pressure) > 2 )
  1454  0005FE  5058               	movf	main@set_pressure,w,c
  1455  000600  6E39               	movwf	??_main& (0+255),c
  1456  000602  6A3A               	clrf	(??_main+1)& (0+255),c
  1457  000604  1E39               	comf	??_main,f,c
  1458  000606  1E3A               	comf	??_main+1,f,c
  1459  000608  4A39               	infsnz	??_main,f,c
  1460  00060A  2A3A               	incf	??_main+1,f,c
  1461  00060C  5057               	movf	main@actual_pressure,w,c
  1462  00060E  6E3B               	movwf	(??_main+2)& (0+255),c
  1463  000610  6A3C               	clrf	(??_main+3)& (0+255),c
  1464  000612  5039               	movf	??_main,w,c
  1465  000614  263B               	addwf	??_main+2,f,c
  1466  000616  503A               	movf	??_main+1,w,c
  1467  000618  223C               	addwfc	??_main+3,f,c
  1468  00061A  503C               	movf	??_main+3,w,c
  1469  00061C  0A80               	xorlw	128
  1470  00061E  0F80               	addlw	-128
  1471  000620  0E03               	movlw	3
  1472  000622  B4D8               	btfsc	status,2,c
  1473  000624  5C3B               	subwf	??_main+2,w,c
  1474  000626  A0D8               	btfss	status,0,c
  1475  000628  D01E               	goto	l1494
  1476                           
  1477                           ;CO2.c: 222: {
  1478                           ;CO2.c: 225: units = 0x00;
  1479  00062A  0E00               	movlw	0
  1480  00062C  6E59               	movwf	main@units,c
  1481                           
  1482                           ;CO2.c: 226: units = actual_pressure % 10;
  1483  00062E  C057  F00F         	movff	main@actual_pressure,___awmod@dividend
  1484  000632  6A10               	clrf	___awmod@dividend+1,c
  1485  000634  0E00               	movlw	0
  1486  000636  6E12               	movwf	___awmod@divisor+1,c
  1487  000638  0E0A               	movlw	10
  1488  00063A  6E11               	movwf	___awmod@divisor,c
  1489  00063C  EC00  F00A         	call	___awmod	;wreg free
  1490  000640  500F               	movf	?___awmod,w,c
  1491  000642  6E59               	movwf	main@units,c
  1492                           
  1493                           ;CO2.c: 227: units = units << 4;
  1494  000644  3859               	swapf	main@units,w,c
  1495  000646  0BF0               	andlw	240
  1496  000648  6E59               	movwf	main@units,c
  1497                           
  1498                           ;CO2.c: 228: values[1] = units;
  1499  00064A  C059  F05C         	movff	main@units,_values+1	;volatile
  1500                           
  1501                           ;CO2.c: 229: tens = 0x00;
  1502  00064E  0E00               	movlw	0
  1503  000650  6E5A               	movwf	main@tens,c
  1504                           
  1505                           ;CO2.c: 230: tens = actual_pressure / 10;
  1506  000652  C057  F00F         	movff	main@actual_pressure,___awdiv@dividend
  1507  000656  6A10               	clrf	___awdiv@dividend+1,c
  1508  000658  0E00               	movlw	0
  1509  00065A  6E12               	movwf	___awdiv@divisor+1,c
  1510  00065C  0E0A               	movlw	10
  1511  00065E  6E11               	movwf	___awdiv@divisor,c
  1512  000660  EC62  F009         	call	___awdiv	;wreg free
  1513  000664  D03B               	goto	L3
  1514  000666                     l1494:
  1515                           
  1516                           ;CO2.c: 234: else
  1517                           ;CO2.c: 235: {
  1518                           ;CO2.c: 238: units = 0x00;
  1519  000666  0E00               	movlw	0
  1520  000668  6E59               	movwf	main@units,c
  1521                           
  1522                           ;CO2.c: 239: units = set_pressure % 10;
  1523  00066A  C058  F00F         	movff	main@set_pressure,___awmod@dividend
  1524  00066E  6A10               	clrf	___awmod@dividend+1,c
  1525  000670  0E00               	movlw	0
  1526  000672  6E12               	movwf	___awmod@divisor+1,c
  1527  000674  0E0A               	movlw	10
  1528  000676  6E11               	movwf	___awmod@divisor,c
  1529  000678  EC00  F00A         	call	___awmod	;wreg free
  1530  00067C  500F               	movf	?___awmod,w,c
  1531  00067E  6E59               	movwf	main@units,c
  1532                           
  1533                           ;CO2.c: 240: units = units << 4;
  1534  000680  3859               	swapf	main@units,w,c
  1535  000682  0BF0               	andlw	240
  1536  000684  6E59               	movwf	main@units,c
  1537                           
  1538                           ;CO2.c: 241: values[1] = units;
  1539  000686  C059  F05C         	movff	main@units,_values+1	;volatile
  1540                           
  1541                           ;CO2.c: 242: tens = 0x00;
  1542  00068A  0E00               	movlw	0
  1543  00068C  6E5A               	movwf	main@tens,c
  1544                           
  1545                           ;CO2.c: 243: tens = set_pressure / 10;
  1546  00068E  C058  F00F         	movff	main@set_pressure,___awdiv@dividend
  1547  000692  6A10               	clrf	___awdiv@dividend+1,c
  1548  000694  0E00               	movlw	0
  1549  000696  6E12               	movwf	___awdiv@divisor+1,c
  1550  000698  0E0A               	movlw	10
  1551  00069A  6E11               	movwf	___awdiv@divisor,c
  1552  00069C  EC62  F009         	call	___awdiv	;wreg free
  1553  0006A0  D01D               	goto	L3
  1554  0006A2                     l1508:
  1555                           
  1556                           ;CO2.c: 248: else
  1557                           ;CO2.c: 249: {
  1558                           ;CO2.c: 252: units = 0x00;
  1559  0006A2  0E00               	movlw	0
  1560  0006A4  6E59               	movwf	main@units,c
  1561                           
  1562                           ;CO2.c: 253: units = actual_pressure % 10;
  1563  0006A6  C057  F00F         	movff	main@actual_pressure,___awmod@dividend
  1564  0006AA  6A10               	clrf	___awmod@dividend+1,c
  1565  0006AC  0E00               	movlw	0
  1566  0006AE  6E12               	movwf	___awmod@divisor+1,c
  1567  0006B0  0E0A               	movlw	10
  1568  0006B2  6E11               	movwf	___awmod@divisor,c
  1569  0006B4  EC00  F00A         	call	___awmod	;wreg free
  1570  0006B8  500F               	movf	?___awmod,w,c
  1571  0006BA  6E59               	movwf	main@units,c
  1572                           
  1573                           ;CO2.c: 254: units = units << 4;
  1574  0006BC  3859               	swapf	main@units,w,c
  1575  0006BE  0BF0               	andlw	240
  1576  0006C0  6E59               	movwf	main@units,c
  1577                           
  1578                           ;CO2.c: 255: values[1] = units;
  1579  0006C2  C059  F05C         	movff	main@units,_values+1	;volatile
  1580                           
  1581                           ;CO2.c: 256: tens = 0x00;
  1582  0006C6  0E00               	movlw	0
  1583  0006C8  6E5A               	movwf	main@tens,c
  1584                           
  1585                           ;CO2.c: 257: tens = actual_pressure / 10;
  1586  0006CA  C057  F00F         	movff	main@actual_pressure,___awdiv@dividend
  1587  0006CE  6A10               	clrf	___awdiv@dividend+1,c
  1588  0006D0  0E00               	movlw	0
  1589  0006D2  6E12               	movwf	___awdiv@divisor+1,c
  1590  0006D4  0E0A               	movlw	10
  1591  0006D6  6E11               	movwf	___awdiv@divisor,c
  1592  0006D8  EC62  F009         	call	___awdiv	;wreg free
  1593  0006DC                     L3:
  1594  0006DC  500F               	movf	?___awdiv,w,c
  1595  0006DE  6E5A               	movwf	main@tens,c
  1596                           
  1597                           ;CO2.c: 258: tens = tens << 4;
  1598  0006E0  385A               	swapf	main@tens,w,c
  1599  0006E2  0BF0               	andlw	240
  1600  0006E4  6E5A               	movwf	main@tens,c
  1601                           
  1602                           ;CO2.c: 259: values[0] = tens;
  1603  0006E6  C05A  F05B         	movff	main@tens,_values	;volatile
  1604  0006EA  D126               	goto	l1610
  1605  0006EC                     l82:
  1606                           
  1607                           ;CO2.c: 262: else
  1608                           ;CO2.c: 263: {
  1609                           ;CO2.c: 264: if( air == 0 )
  1610  0006EC  6654               	tstfsz	main@air,c
  1611  0006EE  D098               	goto	l105
  1612                           
  1613                           ;CO2.c: 265: {
  1614                           ;CO2.c: 267: RC3 = 0;
  1615  0006F0  9682               	bcf	3970,3,c	;volatile
  1616                           
  1617                           ;CO2.c: 268: volve = 0;
  1618  0006F2  0E00               	movlw	0
  1619  0006F4  6E47               	movwf	main@volve,c
  1620                           
  1621                           ;CO2.c: 271: temp_time = 0;
  1622  0006F6  0E00               	movlw	0
  1623  0006F8  6E4C               	movwf	main@temp_time,c
  1624                           
  1625                           ;CO2.c: 272: temp_time = set_flow * 9;
  1626  0006FA  5056               	movf	main@set_flow,w,c
  1627  0006FC  0D09               	mullw	9
  1628  0006FE  CFF3 F04C          	movff	prodl,main@temp_time
  1629                           
  1630                           ;CO2.c: 274: temp_volume = 0.0005 * temp_time;
  1631  000702  504C               	movf	main@temp_time,w,c
  1632  000704  EC0F  F00B         	call	___lbtoft
  1633  000708  C017  F01B         	movff	?___lbtoft,___ftmul@f1
  1634  00070C  C018  F01C         	movff	?___lbtoft+1,___ftmul@f1+1
  1635  000710  C019  F01D         	movff	?___lbtoft+2,___ftmul@f1+2
  1636  000714  0E12               	movlw	18
  1637  000716  6E1E               	movwf	___ftmul@f2,c
  1638  000718  0E03               	movlw	3
  1639  00071A  6E1F               	movwf	___ftmul@f2+1,c
  1640  00071C  0E3A               	movlw	58
  1641  00071E  6E20               	movwf	___ftmul@f2+2,c
  1642  000720  ECBF  F007         	call	___ftmul	;wreg free
  1643  000724  C01B  F040         	movff	?___ftmul,main@temp_volume
  1644  000728  C01C  F041         	movff	?___ftmul+1,main@temp_volume+1
  1645  00072C  C01D  F042         	movff	?___ftmul+2,main@temp_volume+2
  1646                           
  1647                           ;CO2.c: 275: real_volume = real_volume + temp_volume;
  1648  000730  C050  F01B         	movff	main@real_volume,___ftadd@f1
  1649  000734  C051  F01C         	movff	main@real_volume+1,___ftadd@f1+1
  1650  000738  C052  F01D         	movff	main@real_volume+2,___ftadd@f1+2
  1651  00073C  C040  F01E         	movff	main@temp_volume,___ftadd@f2
  1652  000740  C041  F01F         	movff	main@temp_volume+1,___ftadd@f2+1
  1653  000744  C042  F020         	movff	main@temp_volume+2,___ftadd@f2+2
  1654  000748  ECE7  F006         	call	___ftadd	;wreg free
  1655  00074C  C01B  F050         	movff	?___ftadd,main@real_volume
  1656  000750  C01C  F051         	movff	?___ftadd+1,main@real_volume+1
  1657  000754  C01D  F052         	movff	?___ftadd+2,main@real_volume+2
  1658                           
  1659                           ;CO2.c: 276: volume = real_volume;
  1660  000758  C050  F02A         	movff	main@real_volume,___fttol@f1
  1661  00075C  C051  F02B         	movff	main@real_volume+1,___fttol@f1+1
  1662  000760  C052  F02C         	movff	main@real_volume+2,___fttol@f1+2
  1663  000764  ECA0  F008         	call	___fttol	;wreg free
  1664  000768  C02A  F039         	movff	?___fttol,??_main
  1665  00076C  C02B  F03A         	movff	?___fttol+1,??_main+1
  1666  000770  C02C  F03B         	movff	?___fttol+2,??_main+2
  1667  000774  C02D  F03C         	movff	?___fttol+3,??_main+3
  1668  000778  C039  F04E         	movff	??_main,main@volume
  1669  00077C  C03A  F04F         	movff	??_main+1,main@volume+1
  1670                           
  1671                           ;CO2.c: 278: hundreds = 0x00;
  1672  000780  0E00               	movlw	0
  1673  000782  6E55               	movwf	main@hundreds,c
  1674                           
  1675                           ;CO2.c: 279: hundreds = volume / 100;
  1676  000784  C04E  F00F         	movff	main@volume,___lwdiv@dividend
  1677  000788  C04F  F010         	movff	main@volume+1,___lwdiv@dividend+1
  1678  00078C  0E00               	movlw	0
  1679  00078E  6E12               	movwf	___lwdiv@divisor+1,c
  1680  000790  0E64               	movlw	100
  1681  000792  6E11               	movwf	___lwdiv@divisor,c
  1682  000794  EC4A  F00A         	call	___lwdiv	;wreg free
  1683  000798  500F               	movf	?___lwdiv,w,c
  1684  00079A  6E55               	movwf	main@hundreds,c
  1685                           
  1686                           ;CO2.c: 280: volume = volume - ( 100*hundreds );
  1687  00079C  5055               	movf	main@hundreds,w,c
  1688  00079E  0D64               	mullw	100
  1689  0007A0  1EF3               	comf	prodl,f,c
  1690  0007A2  1EF4               	comf	prodh,f,c
  1691  0007A4  4AF3               	infsnz	prodl,f,c
  1692  0007A6  2AF4               	incf	prodh,f,c
  1693  0007A8  504E               	movf	main@volume,w,c
  1694  0007AA  24F3               	addwf	prodl,w,c
  1695  0007AC  6E4E               	movwf	main@volume,c
  1696  0007AE  504F               	movf	main@volume+1,w,c
  1697  0007B0  20F4               	addwfc	prodh,w,c
  1698  0007B2  6E4F               	movwf	main@volume+1,c
  1699                           
  1700                           ;CO2.c: 281: hundreds = hundreds << 4;
  1701  0007B4  3855               	swapf	main@hundreds,w,c
  1702  0007B6  0BF0               	andlw	240
  1703  0007B8  6E55               	movwf	main@hundreds,c
  1704                           
  1705                           ;CO2.c: 282: values[8] = hundreds;
  1706  0007BA  C055  F063         	movff	main@hundreds,_values+8	;volatile
  1707                           
  1708                           ;CO2.c: 284: units = 0x00;
  1709  0007BE  0E00               	movlw	0
  1710  0007C0  6E59               	movwf	main@units,c
  1711                           
  1712                           ;CO2.c: 285: units = volume % 10;
  1713  0007C2  C04E  F00F         	movff	main@volume,___lwmod@dividend
  1714  0007C6  C04F  F010         	movff	main@volume+1,___lwmod@dividend+1
  1715  0007CA  0E00               	movlw	0
  1716  0007CC  6E12               	movwf	___lwmod@divisor+1,c
  1717  0007CE  0E0A               	movlw	10
  1718  0007D0  6E11               	movwf	___lwmod@divisor,c
  1719  0007D2  EC9B  F00A         	call	___lwmod	;wreg free
  1720  0007D6  500F               	movf	?___lwmod,w,c
  1721  0007D8  6E59               	movwf	main@units,c
  1722                           
  1723                           ;CO2.c: 286: units = units << 4;
  1724  0007DA  3859               	swapf	main@units,w,c
  1725  0007DC  0BF0               	andlw	240
  1726  0007DE  6E59               	movwf	main@units,c
  1727                           
  1728                           ;CO2.c: 287: values[10] = units;
  1729  0007E0  C059  F065         	movff	main@units,_values+10	;volatile
  1730                           
  1731                           ;CO2.c: 289: tens = 0x00;
  1732  0007E4  0E00               	movlw	0
  1733  0007E6  6E5A               	movwf	main@tens,c
  1734                           
  1735                           ;CO2.c: 290: tens = volume / 10;
  1736  0007E8  C04E  F00F         	movff	main@volume,___lwdiv@dividend
  1737  0007EC  C04F  F010         	movff	main@volume+1,___lwdiv@dividend+1
  1738  0007F0  0E00               	movlw	0
  1739  0007F2  6E12               	movwf	___lwdiv@divisor+1,c
  1740  0007F4  0E0A               	movlw	10
  1741  0007F6  6E11               	movwf	___lwdiv@divisor,c
  1742  0007F8  EC4A  F00A         	call	___lwdiv	;wreg free
  1743  0007FC  500F               	movf	?___lwdiv,w,c
  1744  0007FE  6E5A               	movwf	main@tens,c
  1745                           
  1746                           ;CO2.c: 291: tens = tens << 4;
  1747  000800  385A               	swapf	main@tens,w,c
  1748  000802  0BF0               	andlw	240
  1749  000804  6E5A               	movwf	main@tens,c
  1750                           
  1751                           ;CO2.c: 292: values[9] = tens;
  1752  000806  C05A  F064         	movff	main@tens,_values+9	;volatile
  1753                           
  1754                           ;CO2.c: 294: temp_time = 270 - temp_time;
  1755  00080A  504C               	movf	main@temp_time,w,c
  1756  00080C  0800               	sublw	0
  1757  00080E  0F0E               	addlw	14
  1758  000810  6E4C               	movwf	main@temp_time,c
  1759                           
  1760                           ;CO2.c: 295: timer = 500 + temp_time;
  1761  000812  0EF4               	movlw	244
  1762  000814  244C               	addwf	main@temp_time,w,c
  1763  000816  6E6F               	movwf	_timer,c	;volatile
  1764  000818  6A70               	clrf	_timer+1,c	;volatile
  1765  00081A  0E01               	movlw	1
  1766  00081C  2270               	addwfc	_timer+1,f,c	;volatile
  1767                           
  1768                           ;CO2.c: 296: }
  1769  00081E  D08C               	goto	l1610
  1770  000820                     l105:
  1771                           
  1772                           ;CO2.c: 297: else
  1773                           ;CO2.c: 298: {
  1774                           ;CO2.c: 299: RC7 = 0;
  1775  000820  9E82               	bcf	3970,7,c	;volatile
  1776                           
  1777                           ;CO2.c: 300: volve = 0;
  1778  000822  0E00               	movlw	0
  1779  000824  6E47               	movwf	main@volve,c
  1780                           
  1781                           ;CO2.c: 301: timer = 500;
  1782  000826  0E01               	movlw	1
  1783  000828  6E70               	movwf	_timer+1,c	;volatile
  1784  00082A  0EF4               	movlw	244
  1785  00082C  D084               	goto	L4
  1786  00082E                     l1564:
  1787                           
  1788                           ;CO2.c: 306: else
  1789                           ;CO2.c: 307: {
  1790                           ;CO2.c: 308: if(timer <= 0)
  1791  00082E  5070               	movf	_timer+1,w,c	;volatile
  1792  000830  0A80               	xorlw	128
  1793  000832  6EF3               	movwf	prodl,c
  1794  000834  0E80               	movlw	128
  1795  000836  5CF3               	subwf	prodl,w,c
  1796  000838  0E01               	movlw	1
  1797  00083A  B4D8               	btfsc	status,2,c
  1798  00083C  5C6F               	subwf	_timer,w,c	;volatile
  1799  00083E  B0D8               	btfsc	status,0,c
  1800  000840  D07B               	goto	l1610
  1801                           
  1802                           ;CO2.c: 309: {
  1803                           ;CO2.c: 310: SetChanADC( 0b10000111 );
  1804  000842  0E87               	movlw	135
  1805  000844  EC23  F00B         	call	_SetChanADC
  1806                           
  1807                           ;CO2.c: 311: ConvertADC();
  1808  000848  EC51  F00B         	call	_ConvertADC	;wreg free
  1809  00084C                     l1570:
  1810  00084C  EC42  F00B         	call	_BusyADC	;wreg free
  1811  000850  0900               	iorlw	0
  1812  000852  A4D8               	btfss	status,2,c
  1813  000854  D7FB               	goto	l1570
  1814                           
  1815                           ;CO2.c: 315: }
  1816                           ;CO2.c: 316: analog_result = ReadADC();
  1817  000856  EC4A  F00B         	call	_ReadADC	;wreg free
  1818  00085A  C00F  F06B         	movff	?_ReadADC,_analog_result
  1819  00085E  C010  F06C         	movff	?_ReadADC+1,_analog_result+1
  1820                           
  1821                           ;CO2.c: 318: analog_result = analog_result - 512;
  1822  000862  0E00               	movlw	0
  1823  000864  246B               	addwf	_analog_result,w,c
  1824  000866  6E6B               	movwf	_analog_result,c
  1825  000868  0EFE               	movlw	254
  1826  00086A  206C               	addwfc	_analog_result+1,w,c
  1827  00086C  6E6C               	movwf	_analog_result+1,c
  1828                           
  1829                           ;CO2.c: 320: analog_result = analog_result >> 1;
  1830  00086E  346C               	rlcf	_analog_result+1,w,c
  1831  000870  306C               	rrcf	_analog_result+1,w,c
  1832  000872  6E6C               	movwf	_analog_result+1,c
  1833  000874  306B               	rrcf	_analog_result,w,c
  1834  000876  6E6B               	movwf	_analog_result,c
  1835                           
  1836                           ;CO2.c: 321: real_pressure = analog_result / 2.78;
  1837  000878  0EEC               	movlw	236
  1838  00087A  6E1E               	movwf	___ftdiv@f2,c
  1839  00087C  0E31               	movlw	49
  1840  00087E  6E1F               	movwf	___ftdiv@f2+1,c
  1841  000880  0E40               	movlw	64
  1842  000882  6E20               	movwf	___ftdiv@f2+2,c
  1843  000884  C06B  F017         	movff	_analog_result,___awtoft@c
  1844  000888  C06C  F018         	movff	_analog_result+1,___awtoft@c+1
  1845  00088C  EC75  F00A         	call	___awtoft	;wreg free
  1846  000890  C017  F01B         	movff	?___awtoft,___ftdiv@f1
  1847  000894  C018  F01C         	movff	?___awtoft+1,___ftdiv@f1+1
  1848  000898  C019  F01D         	movff	?___awtoft+2,___ftdiv@f1+2
  1849  00089C  EC33  F008         	call	___ftdiv	;wreg free
  1850  0008A0  C01B  F02A         	movff	?___ftdiv,___fttol@f1
  1851  0008A4  C01C  F02B         	movff	?___ftdiv+1,___fttol@f1+1
  1852  0008A8  C01D  F02C         	movff	?___ftdiv+2,___fttol@f1+2
  1853  0008AC  ECA0  F008         	call	___fttol	;wreg free
  1854  0008B0  C02A  F039         	movff	?___fttol,??_main
  1855  0008B4  C02B  F03A         	movff	?___fttol+1,??_main+1
  1856  0008B8  C02C  F03B         	movff	?___fttol+2,??_main+2
  1857  0008BC  C02D  F03C         	movff	?___fttol+3,??_main+3
  1858  0008C0  5039               	movf	??_main,w,c
  1859  0008C2  6E53               	movwf	main@real_pressure,c
  1860                           
  1861                           ;CO2.c: 323: if(real_pressure < 90)
  1862  0008C4  0E5A               	movlw	90
  1863  0008C6  5C53               	subwf	main@real_pressure,w,c
  1864  0008C8  A0D8               	btfss	status,0,c
  1865                           
  1866                           ;CO2.c: 324: {
  1867                           ;CO2.c: 325: actual_pressure = real_pressure;
  1868  0008CA  C053  F057         	movff	main@real_pressure,main@actual_pressure
  1869                           
  1870                           ;CO2.c: 326: }
  1871                           ;CO2.c: 328: if( actual_pressure > 30 )
  1872  0008CE  0E1E               	movlw	30
  1873  0008D0  6457               	cpfsgt	main@actual_pressure,c
  1874  0008D2  D002               	goto	l1588
  1875                           
  1876                           ;CO2.c: 329: {
  1877                           ;CO2.c: 330: RC6 = 0;
  1878  0008D4  9C82               	bcf	3970,6,c	;volatile
  1879                           
  1880                           ;CO2.c: 331: RC2 = 1;
  1881  0008D6  8482               	bsf	3970,2,c	;volatile
  1882  0008D8                     l1588:
  1883                           
  1884                           ;CO2.c: 332: }
  1885                           ;CO2.c: 333: if( actual_pressure < 14 )
  1886  0008D8  0E0E               	movlw	14
  1887  0008DA  5C57               	subwf	main@actual_pressure,w,c
  1888  0008DC  B0D8               	btfsc	status,0,c
  1889  0008DE  D004               	goto	l1594
  1890                           
  1891                           ;CO2.c: 334: {
  1892                           ;CO2.c: 336: if(PORTD == 0xFF)
  1893  0008E0  2883               	incf	3971,w,c	;volatile
  1894  0008E2  B4D8               	btfsc	status,2,c
  1895                           
  1896                           ;CO2.c: 337: {
  1897                           ;CO2.c: 338: RC6 = 1;
  1898  0008E4  8C82               	bsf	3970,6,c	;volatile
  1899                           
  1900                           ;CO2.c: 339: }
  1901                           ;CO2.c: 340: RC2 = 0;
  1902  0008E6  9482               	bcf	3970,2,c	;volatile
  1903  0008E8                     l1594:
  1904                           
  1905                           ;CO2.c: 341: }
  1906                           ;CO2.c: 343: units = 0x00;
  1907  0008E8  0E00               	movlw	0
  1908  0008EA  6E59               	movwf	main@units,c
  1909                           
  1910                           ;CO2.c: 344: units = actual_pressure % 10;
  1911  0008EC  C057  F00F         	movff	main@actual_pressure,___awmod@dividend
  1912  0008F0  6A10               	clrf	___awmod@dividend+1,c
  1913  0008F2  0E00               	movlw	0
  1914  0008F4  6E12               	movwf	___awmod@divisor+1,c
  1915  0008F6  0E0A               	movlw	10
  1916  0008F8  6E11               	movwf	___awmod@divisor,c
  1917  0008FA  EC00  F00A         	call	___awmod	;wreg free
  1918  0008FE  500F               	movf	?___awmod,w,c
  1919  000900  6E59               	movwf	main@units,c
  1920                           
  1921                           ;CO2.c: 345: units = units << 4;
  1922  000902  3859               	swapf	main@units,w,c
  1923  000904  0BF0               	andlw	240
  1924  000906  6E59               	movwf	main@units,c
  1925                           
  1926                           ;CO2.c: 346: values[1] = units;
  1927  000908  C059  F05C         	movff	main@units,_values+1	;volatile
  1928                           
  1929                           ;CO2.c: 347: tens = 0x00;
  1930  00090C  0E00               	movlw	0
  1931  00090E  6E5A               	movwf	main@tens,c
  1932                           
  1933                           ;CO2.c: 348: tens = actual_pressure / 10;
  1934  000910  C057  F00F         	movff	main@actual_pressure,___awdiv@dividend
  1935  000914  6A10               	clrf	___awdiv@dividend+1,c
  1936  000916  0E00               	movlw	0
  1937  000918  6E12               	movwf	___awdiv@divisor+1,c
  1938  00091A  0E0A               	movlw	10
  1939  00091C  6E11               	movwf	___awdiv@divisor,c
  1940  00091E  EC62  F009         	call	___awdiv	;wreg free
  1941  000922  500F               	movf	?___awdiv,w,c
  1942  000924  6E5A               	movwf	main@tens,c
  1943                           
  1944                           ;CO2.c: 349: tens = tens << 4;
  1945  000926  385A               	swapf	main@tens,w,c
  1946  000928  0BF0               	andlw	240
  1947  00092A  6E5A               	movwf	main@tens,c
  1948                           
  1949                           ;CO2.c: 350: values[0] = tens;
  1950  00092C  C05A  F05B         	movff	main@tens,_values	;volatile
  1951                           
  1952                           ;CO2.c: 351: timer = 10;
  1953  000930  0E00               	movlw	0
  1954  000932  6E70               	movwf	_timer+1,c	;volatile
  1955  000934  0E0A               	movlw	10
  1956  000936                     L4:
  1957  000936  6E6F               	movwf	_timer,c	;volatile
  1958  000938                     l1610:
  1959                           
  1960                           ;CO2.c: 352: }
  1961                           ;CO2.c: 353: }
  1962                           ;CO2.c: 356: if( air == 0 )
  1963  000938  6654               	tstfsz	main@air,c
  1964  00093A  D08E               	goto	l1652
  1965                           
  1966                           ;CO2.c: 357: {
  1967                           ;CO2.c: 358: if( temperature_timer <= 0)
  1968  00093C  506A               	movf	_temperature_timer+1,w,c	;volatile
  1969  00093E  0A80               	xorlw	128
  1970  000940  6EF3               	movwf	prodl,c
  1971  000942  0E80               	movlw	128
  1972  000944  5CF3               	subwf	prodl,w,c
  1973  000946  0E01               	movlw	1
  1974  000948  B4D8               	btfsc	status,2,c
  1975  00094A  5C69               	subwf	_temperature_timer,w,c	;volatile
  1976  00094C  B0D8               	btfsc	status,0,c
  1977  00094E  D088               	goto	l124
  1978                           
  1979                           ;CO2.c: 359: {
  1980                           ;CO2.c: 361: SetChanADC( 0b10001111 );
  1981  000950  0E8F               	movlw	143
  1982  000952  EC23  F00B         	call	_SetChanADC
  1983                           
  1984                           ;CO2.c: 362: ConvertADC();
  1985  000956  EC51  F00B         	call	_ConvertADC	;wreg free
  1986  00095A                     l1618:
  1987  00095A  EC42  F00B         	call	_BusyADC	;wreg free
  1988  00095E  0900               	iorlw	0
  1989  000960  A4D8               	btfss	status,2,c
  1990  000962  D7FB               	goto	l1618
  1991                           
  1992                           ;CO2.c: 366: }
  1993                           ;CO2.c: 367: analog_temp_result = ReadADC();
  1994  000964  EC4A  F00B         	call	_ReadADC	;wreg free
  1995  000968  C00F  F06D         	movff	?_ReadADC,_analog_temp_result
  1996  00096C  C010  F06E         	movff	?_ReadADC+1,_analog_temp_result+1
  1997                           
  1998                           ;CO2.c: 369: temp = analog_temp_result >> 3;
  1999  000970  C06D  F039         	movff	_analog_temp_result,??_main
  2000  000974  C06E  F03A         	movff	_analog_temp_result+1,??_main+1
  2001  000978  343A               	rlcf	??_main+1,w,c
  2002  00097A  323A               	rrcf	??_main+1,f,c
  2003  00097C  3239               	rrcf	??_main,f,c
  2004  00097E  343A               	rlcf	??_main+1,w,c
  2005  000980  323A               	rrcf	??_main+1,f,c
  2006  000982  3239               	rrcf	??_main,f,c
  2007  000984  343A               	rlcf	??_main+1,w,c
  2008  000986  323A               	rrcf	??_main+1,f,c
  2009  000988  3239               	rrcf	??_main,f,c
  2010  00098A  5039               	movf	??_main,w,c
  2011  00098C  6E48               	movwf	main@temp,c
  2012                           
  2013                           ;CO2.c: 371: if(control == 1)
  2014  00098E  044B               	decf	main@control,w,c
  2015  000990  A4D8               	btfss	status,2,c
  2016  000992  D03A               	goto	l1636
  2017                           
  2018                           ;CO2.c: 372: {
  2019                           ;CO2.c: 373: real_temp = analog_temp_result / 8;
  2020  000994  0E00               	movlw	0
  2021  000996  6E12               	movwf	___awdiv@divisor+1,c
  2022  000998  0E08               	movlw	8
  2023  00099A  6E11               	movwf	___awdiv@divisor,c
  2024  00099C  C06D  F00F         	movff	_analog_temp_result,___awdiv@dividend
  2025  0009A0  C06E  F010         	movff	_analog_temp_result+1,___awdiv@dividend+1
  2026  0009A4  EC62  F009         	call	___awdiv	;wreg free
  2027  0009A8  C00F  F017         	movff	?___awdiv,___awtoft@c
  2028  0009AC  C010  F018         	movff	?___awdiv+1,___awtoft@c+1
  2029  0009B0  EC75  F00A         	call	___awtoft	;wreg free
  2030  0009B4  C017  F043         	movff	?___awtoft,main@real_temp
  2031  0009B8  C018  F044         	movff	?___awtoft+1,main@real_temp+1
  2032  0009BC  C019  F045         	movff	?___awtoft+2,main@real_temp+2
  2033                           
  2034                           ;CO2.c: 374: if(real_temp >= 35.0)
  2035  0009C0  C043  F00F         	movff	main@real_temp,___ftge@ff1
  2036  0009C4  C044  F010         	movff	main@real_temp+1,___ftge@ff1+1
  2037  0009C8  C045  F011         	movff	main@real_temp+2,___ftge@ff1+2
  2038  0009CC  0E00               	movlw	0
  2039  0009CE  6E12               	movwf	___ftge@ff2,c
  2040  0009D0  0E0C               	movlw	12
  2041  0009D2  6E13               	movwf	___ftge@ff2+1,c
  2042  0009D4  0E42               	movlw	66
  2043  0009D6  6E14               	movwf	___ftge@ff2+2,c
  2044  0009D8  ECB6  F009         	call	___ftge	;wreg free
  2045  0009DC  A0D8               	btfss	status,0,c
  2046  0009DE  D002               	goto	l1632
  2047                           
  2048                           ;CO2.c: 375: {
  2049                           ;CO2.c: 376: RA4 = 1;
  2050  0009E0  8880               	bsf	3968,4,c	;volatile
  2051                           
  2052                           ;CO2.c: 377: RC1 = 1;
  2053  0009E2  8282               	bsf	3970,1,c	;volatile
  2054  0009E4                     l1632:
  2055                           
  2056                           ;CO2.c: 378: }
  2057                           ;CO2.c: 379: if(real_temp <= 34.8)
  2058  0009E4  0E33               	movlw	51
  2059  0009E6  6E0F               	movwf	___ftge@ff1,c
  2060  0009E8  0E0B               	movlw	11
  2061  0009EA  6E10               	movwf	___ftge@ff1+1,c
  2062  0009EC  0E42               	movlw	66
  2063  0009EE  6E11               	movwf	___ftge@ff1+2,c
  2064  0009F0  C043  F012         	movff	main@real_temp,___ftge@ff2
  2065  0009F4  C044  F013         	movff	main@real_temp+1,___ftge@ff2+1
  2066  0009F8  C045  F014         	movff	main@real_temp+2,___ftge@ff2+2
  2067  0009FC  ECB6  F009         	call	___ftge	;wreg free
  2068  000A00  A0D8               	btfss	status,0,c
  2069  000A02  D002               	goto	l1636
  2070                           
  2071                           ;CO2.c: 380: {
  2072                           ;CO2.c: 381: RA4 = 0;
  2073  000A04  9880               	bcf	3968,4,c	;volatile
  2074                           
  2075                           ;CO2.c: 382: RC1 = 0;
  2076  000A06  9282               	bcf	3970,1,c	;volatile
  2077  000A08                     l1636:
  2078                           
  2079                           ;CO2.c: 383: }
  2080                           ;CO2.c: 384: }
  2081                           ;CO2.c: 387: units = 0x00;
  2082  000A08  0E00               	movlw	0
  2083  000A0A  6E59               	movwf	main@units,c
  2084                           
  2085                           ;CO2.c: 388: units = temp % 10;
  2086  000A0C  C048  F00F         	movff	main@temp,___awmod@dividend
  2087  000A10  6A10               	clrf	___awmod@dividend+1,c
  2088  000A12  0E00               	movlw	0
  2089  000A14  6E12               	movwf	___awmod@divisor+1,c
  2090  000A16  0E0A               	movlw	10
  2091  000A18  6E11               	movwf	___awmod@divisor,c
  2092  000A1A  EC00  F00A         	call	___awmod	;wreg free
  2093  000A1E  500F               	movf	?___awmod,w,c
  2094  000A20  6E59               	movwf	main@units,c
  2095                           
  2096                           ;CO2.c: 389: units = units << 4;
  2097  000A22  3859               	swapf	main@units,w,c
  2098  000A24  0BF0               	andlw	240
  2099  000A26  6E59               	movwf	main@units,c
  2100                           
  2101                           ;CO2.c: 390: values[12] = units;
  2102  000A28  C059  F067         	movff	main@units,_values+12	;volatile
  2103                           
  2104                           ;CO2.c: 391: tens = 0x00;
  2105  000A2C  0E00               	movlw	0
  2106  000A2E  6E5A               	movwf	main@tens,c
  2107                           
  2108                           ;CO2.c: 392: tens = temp / 10;
  2109  000A30  C048  F00F         	movff	main@temp,___awdiv@dividend
  2110  000A34  6A10               	clrf	___awdiv@dividend+1,c
  2111  000A36  0E00               	movlw	0
  2112  000A38  6E12               	movwf	___awdiv@divisor+1,c
  2113  000A3A  0E0A               	movlw	10
  2114  000A3C  6E11               	movwf	___awdiv@divisor,c
  2115  000A3E  EC62  F009         	call	___awdiv	;wreg free
  2116  000A42  500F               	movf	?___awdiv,w,c
  2117  000A44  6E5A               	movwf	main@tens,c
  2118                           
  2119                           ;CO2.c: 393: tens = tens << 4;
  2120  000A46  385A               	swapf	main@tens,w,c
  2121  000A48  0BF0               	andlw	240
  2122  000A4A  6E5A               	movwf	main@tens,c
  2123                           
  2124                           ;CO2.c: 394: values[11] = tens;
  2125  000A4C  C05A  F066         	movff	main@tens,_values+11	;volatile
  2126                           
  2127                           ;CO2.c: 395: temperature_timer = 10127;
  2128  000A50  0E27               	movlw	39
  2129  000A52  6E6A               	movwf	_temperature_timer+1,c	;volatile
  2130  000A54  0E8F               	movlw	143
  2131  000A56  D003               	goto	L5
  2132  000A58                     l1652:
  2133                           
  2134                           ;CO2.c: 398: else
  2135                           ;CO2.c: 399: {
  2136                           ;CO2.c: 400: temperature_timer = 0;
  2137  000A58  0E00               	movlw	0
  2138  000A5A  6E6A               	movwf	_temperature_timer+1,c	;volatile
  2139  000A5C  0E00               	movlw	0
  2140  000A5E                     L5:
  2141  000A5E  6E69               	movwf	_temperature_timer,c	;volatile
  2142  000A60                     l124:
  2143                           
  2144                           ;CO2.c: 401: }
  2145                           ;CO2.c: 403: if( portd_old_status != PORTD )
  2146  000A60  5046               	movf	main@portd_old_status,w,c
  2147  000A62  1883               	xorwf	3971,w,c	;volatile
  2148  000A64  B4D8               	btfsc	status,2,c
  2149  000A66  D46B               	goto	l1370
  2150                           
  2151                           ;CO2.c: 404: {
  2152                           ;CO2.c: 406: for (debounce = 0; debounce <= 99; debounce ++)
  2153  000A68  0E00               	movlw	0
  2154  000A6A  6E49               	movwf	main@debounce,c
  2155  000A6C  D005               	goto	L9
  2156  000A6E                     l1660:
  2157                           
  2158                           ;CO2.c: 407: {
  2159                           ;CO2.c: 408: _delay(250);
  2160  000A6E  0E32               	movlw	50
  2161  000A70                     u1267:
  2162  000A70  F000               	nop	
  2163  000A72  2EE8               	decfsz	wreg,f,c
  2164  000A74  D7FD               	goto	u1267
  2165  000A76  2A49               	incf	main@debounce,f,c
  2166  000A78                     L9:
  2167  000A78  0E63               	movlw	99
  2168  000A7A  6449               	cpfsgt	main@debounce,c
  2169  000A7C  D7F8               	goto	l1660
  2170                           
  2171                           ;CO2.c: 409: }
  2172                           ;CO2.c: 411: if( portd_old_status != PORTD )
  2173  000A7E  5046               	movf	main@portd_old_status,w,c
  2174  000A80  1883               	xorwf	3971,w,c	;volatile
  2175  000A82  B4D8               	btfsc	status,2,c
  2176  000A84  D45C               	goto	l1370
  2177                           
  2178                           ;CO2.c: 412: {
  2179                           ;CO2.c: 413: portd_old_status = PORTD;
  2180  000A86  CF83 F046          	movff	3971,main@portd_old_status	;volatile
  2181                           
  2182                           ;CO2.c: 414: switch( PORTD )
  2183  000A8A  D186               	goto	l1842
  2184  000A8C                     l130:
  2185                           
  2186                           ;CO2.c: 417: RC6 = 1;
  2187  000A8C  8C82               	bsf	3970,6,c	;volatile
  2188                           
  2189                           ;CO2.c: 418: break;
  2190  000A8E  D457               	goto	l1370
  2191  000A90                     l132:
  2192                           
  2193                           ;CO2.c: 421: RC6 = 0;
  2194  000A90  9C82               	bcf	3970,6,c	;volatile
  2195                           
  2196                           ;CO2.c: 423: if( set_flow < 30 )
  2197  000A92  0E1E               	movlw	30
  2198  000A94  5C56               	subwf	main@set_flow,w,c
  2199  000A96  B0D8               	btfsc	status,0,c
  2200  000A98  D452               	goto	l1370
  2201                           
  2202                           ;CO2.c: 424: {
  2203                           ;CO2.c: 425: set_flow = set_flow + 1;
  2204  000A9A  2856               	incf	main@set_flow,w,c
  2205  000A9C  6E56               	movwf	main@set_flow,c
  2206                           
  2207                           ;CO2.c: 426: units = 0x00;
  2208  000A9E  0E00               	movlw	0
  2209  000AA0  6E59               	movwf	main@units,c
  2210                           
  2211                           ;CO2.c: 427: units = set_flow % 10;
  2212  000AA2  C056  F00F         	movff	main@set_flow,___awmod@dividend
  2213  000AA6  6A10               	clrf	___awmod@dividend+1,c
  2214  000AA8  0E00               	movlw	0
  2215  000AAA  6E12               	movwf	___awmod@divisor+1,c
  2216  000AAC  0E0A               	movlw	10
  2217  000AAE  6E11               	movwf	___awmod@divisor,c
  2218  000AB0  EC00  F00A         	call	___awmod	;wreg free
  2219  000AB4  500F               	movf	?___awmod,w,c
  2220  000AB6  6E59               	movwf	main@units,c
  2221                           
  2222                           ;CO2.c: 428: units = units << 4;
  2223  000AB8  3859               	swapf	main@units,w,c
  2224  000ABA  0BF0               	andlw	240
  2225  000ABC  6E59               	movwf	main@units,c
  2226                           
  2227                           ;CO2.c: 429: values[5] = units;
  2228  000ABE  C059  F060         	movff	main@units,_values+5	;volatile
  2229                           
  2230                           ;CO2.c: 430: tens = 0x00;
  2231  000AC2  0E00               	movlw	0
  2232  000AC4  6E5A               	movwf	main@tens,c
  2233                           
  2234                           ;CO2.c: 431: tens = set_flow / 10;
  2235  000AC6  C056  F00F         	movff	main@set_flow,___awdiv@dividend
  2236  000ACA  6A10               	clrf	___awdiv@dividend+1,c
  2237  000ACC  0E00               	movlw	0
  2238  000ACE  6E12               	movwf	___awdiv@divisor+1,c
  2239  000AD0  0E0A               	movlw	10
  2240  000AD2  6E11               	movwf	___awdiv@divisor,c
  2241  000AD4  EC62  F009         	call	___awdiv	;wreg free
  2242  000AD8  500F               	movf	?___awdiv,w,c
  2243  000ADA  6E5A               	movwf	main@tens,c
  2244                           
  2245                           ;CO2.c: 432: tens = tens << 4;
  2246  000ADC  385A               	swapf	main@tens,w,c
  2247  000ADE  0BF0               	andlw	240
  2248  000AE0  6E5A               	movwf	main@tens,c
  2249                           
  2250                           ;CO2.c: 433: values[4] = tens;
  2251  000AE2  C05A  F05F         	movff	main@tens,_values+4	;volatile
  2252                           
  2253                           ;CO2.c: 435: TMR0 = 0;
  2254  000AE6  0E00               	movlw	0
  2255  000AE8  6ED7               	movwf	4055,c	;volatile
  2256  000AEA  0E00               	movlw	0
  2257  000AEC  6ED6               	movwf	4054,c	;volatile
  2258                           
  2259                           ;CO2.c: 437: Write_b_eep( 0x02, set_flow );
  2260  000AEE  0E00               	movlw	0
  2261  000AF0  6E10               	movwf	Write_b_eep@badd+1,c
  2262  000AF2  0E02               	movlw	2
  2263  000AF4  6E0F               	movwf	Write_b_eep@badd,c
  2264  000AF6  C056  F011         	movff	main@set_flow,Write_b_eep@bdat
  2265  000AFA  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2266                           
  2267                           ;CO2.c: 438: _delay(50);
  2268  000AFE  0E0A               	movlw	10
  2269  000B00                     u1277:
  2270  000B00  F000               	nop	
  2271  000B02  2EE8               	decfsz	wreg,f,c
  2272  000B04  D7FD               	goto	u1277
  2273  000B06  D41B               	goto	l1370
  2274  000B08                     l134:
  2275                           
  2276                           ;CO2.c: 443: RC6 = 0;
  2277  000B08  9C82               	bcf	3970,6,c	;volatile
  2278                           
  2279                           ;CO2.c: 445: if( set_flow > 0 )
  2280  000B0A  5056               	movf	main@set_flow,w,c
  2281  000B0C  B4D8               	btfsc	status,2,c
  2282  000B0E  D417               	goto	l1370
  2283                           
  2284                           ;CO2.c: 446: {
  2285                           ;CO2.c: 447: set_flow = set_flow - 1;
  2286  000B10  0456               	decf	main@set_flow,w,c
  2287  000B12  6E56               	movwf	main@set_flow,c
  2288                           
  2289                           ;CO2.c: 448: units = 0x00;
  2290  000B14  0E00               	movlw	0
  2291  000B16  6E59               	movwf	main@units,c
  2292                           
  2293                           ;CO2.c: 449: units = set_flow % 10;
  2294  000B18  C056  F00F         	movff	main@set_flow,___awmod@dividend
  2295  000B1C  6A10               	clrf	___awmod@dividend+1,c
  2296  000B1E  0E00               	movlw	0
  2297  000B20  6E12               	movwf	___awmod@divisor+1,c
  2298  000B22  0E0A               	movlw	10
  2299  000B24  6E11               	movwf	___awmod@divisor,c
  2300  000B26  EC00  F00A         	call	___awmod	;wreg free
  2301  000B2A  500F               	movf	?___awmod,w,c
  2302  000B2C  6E59               	movwf	main@units,c
  2303                           
  2304                           ;CO2.c: 450: units = units << 4;
  2305  000B2E  3859               	swapf	main@units,w,c
  2306  000B30  0BF0               	andlw	240
  2307  000B32  6E59               	movwf	main@units,c
  2308                           
  2309                           ;CO2.c: 451: values[5] = units;
  2310  000B34  C059  F060         	movff	main@units,_values+5	;volatile
  2311                           
  2312                           ;CO2.c: 452: tens = 0x00;
  2313  000B38  0E00               	movlw	0
  2314  000B3A  6E5A               	movwf	main@tens,c
  2315                           
  2316                           ;CO2.c: 453: tens = set_flow / 10;
  2317  000B3C  C056  F00F         	movff	main@set_flow,___awdiv@dividend
  2318  000B40  6A10               	clrf	___awdiv@dividend+1,c
  2319  000B42  0E00               	movlw	0
  2320  000B44  6E12               	movwf	___awdiv@divisor+1,c
  2321  000B46  0E0A               	movlw	10
  2322  000B48  6E11               	movwf	___awdiv@divisor,c
  2323  000B4A  EC62  F009         	call	___awdiv	;wreg free
  2324  000B4E  500F               	movf	?___awdiv,w,c
  2325  000B50  6E5A               	movwf	main@tens,c
  2326                           
  2327                           ;CO2.c: 454: tens = tens << 4;
  2328  000B52  385A               	swapf	main@tens,w,c
  2329  000B54  0BF0               	andlw	240
  2330  000B56  6E5A               	movwf	main@tens,c
  2331                           
  2332                           ;CO2.c: 455: values[4] = tens;
  2333  000B58  C05A  F05F         	movff	main@tens,_values+4	;volatile
  2334                           
  2335                           ;CO2.c: 457: TMR0 = 0;
  2336  000B5C  0E00               	movlw	0
  2337  000B5E  6ED7               	movwf	4055,c	;volatile
  2338  000B60  0E00               	movlw	0
  2339  000B62  6ED6               	movwf	4054,c	;volatile
  2340                           
  2341                           ;CO2.c: 459: Write_b_eep( 0x02, set_flow );
  2342  000B64  0E00               	movlw	0
  2343  000B66  6E10               	movwf	Write_b_eep@badd+1,c
  2344  000B68  0E02               	movlw	2
  2345  000B6A  6E0F               	movwf	Write_b_eep@badd,c
  2346  000B6C  C056  F011         	movff	main@set_flow,Write_b_eep@bdat
  2347  000B70  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2348                           
  2349                           ;CO2.c: 460: _delay(50);
  2350  000B74  0E0A               	movlw	10
  2351  000B76                     u1287:
  2352  000B76  F000               	nop	
  2353  000B78  2EE8               	decfsz	wreg,f,c
  2354  000B7A  D7FD               	goto	u1287
  2355  000B7C  EF9F  F001         	goto	l1370
  2356  000B80                     l136:
  2357                           
  2358                           ;CO2.c: 465: RC6 = 0;
  2359  000B80  9C82               	bcf	3970,6,c	;volatile
  2360                           
  2361                           ;CO2.c: 467: if( set_pressure > 0 )
  2362  000B82  5058               	movf	main@set_pressure,w,c
  2363  000B84  B4D8               	btfsc	status,2,c
  2364  000B86  EF9F  F001         	goto	l1370
  2365                           
  2366                           ;CO2.c: 468: {
  2367                           ;CO2.c: 469: set_pressure = set_pressure - 1;
  2368  000B8A  0458               	decf	main@set_pressure,w,c
  2369  000B8C  6E58               	movwf	main@set_pressure,c
  2370                           
  2371                           ;CO2.c: 470: units = 0x00;
  2372  000B8E  0E00               	movlw	0
  2373  000B90  6E59               	movwf	main@units,c
  2374                           
  2375                           ;CO2.c: 471: units = set_pressure % 10;
  2376  000B92  C058  F00F         	movff	main@set_pressure,___awmod@dividend
  2377  000B96  6A10               	clrf	___awmod@dividend+1,c
  2378  000B98  0E00               	movlw	0
  2379  000B9A  6E12               	movwf	___awmod@divisor+1,c
  2380  000B9C  0E0A               	movlw	10
  2381  000B9E  6E11               	movwf	___awmod@divisor,c
  2382  000BA0  EC00  F00A         	call	___awmod	;wreg free
  2383  000BA4  500F               	movf	?___awmod,w,c
  2384  000BA6  6E59               	movwf	main@units,c
  2385                           
  2386                           ;CO2.c: 472: units = units << 4;
  2387  000BA8  3859               	swapf	main@units,w,c
  2388  000BAA  0BF0               	andlw	240
  2389  000BAC  6E59               	movwf	main@units,c
  2390                           
  2391                           ;CO2.c: 473: values[3] = units;
  2392  000BAE  C059  F05E         	movff	main@units,_values+3	;volatile
  2393                           
  2394                           ;CO2.c: 474: tens = 0x00;
  2395  000BB2  0E00               	movlw	0
  2396  000BB4  6E5A               	movwf	main@tens,c
  2397                           
  2398                           ;CO2.c: 475: tens = set_pressure / 10;
  2399  000BB6  C058  F00F         	movff	main@set_pressure,___awdiv@dividend
  2400  000BBA  6A10               	clrf	___awdiv@dividend+1,c
  2401  000BBC  0E00               	movlw	0
  2402  000BBE  6E12               	movwf	___awdiv@divisor+1,c
  2403  000BC0  0E0A               	movlw	10
  2404  000BC2  6E11               	movwf	___awdiv@divisor,c
  2405  000BC4  EC62  F009         	call	___awdiv	;wreg free
  2406  000BC8  500F               	movf	?___awdiv,w,c
  2407  000BCA  6E5A               	movwf	main@tens,c
  2408                           
  2409                           ;CO2.c: 476: tens = tens << 4;
  2410  000BCC  385A               	swapf	main@tens,w,c
  2411  000BCE  0BF0               	andlw	240
  2412  000BD0  6E5A               	movwf	main@tens,c
  2413                           
  2414                           ;CO2.c: 477: values[2] = tens;
  2415  000BD2  C05A  F05D         	movff	main@tens,_values+2	;volatile
  2416                           
  2417                           ;CO2.c: 479: TMR0 = 0;
  2418  000BD6  0E00               	movlw	0
  2419  000BD8  6ED7               	movwf	4055,c	;volatile
  2420  000BDA  0E00               	movlw	0
  2421  000BDC  6ED6               	movwf	4054,c	;volatile
  2422                           
  2423                           ;CO2.c: 481: Write_b_eep( 0x01, set_pressure );
  2424  000BDE  0E00               	movlw	0
  2425  000BE0  6E10               	movwf	Write_b_eep@badd+1,c
  2426  000BE2  0E01               	movlw	1
  2427  000BE4  6E0F               	movwf	Write_b_eep@badd,c
  2428  000BE6  C058  F011         	movff	main@set_pressure,Write_b_eep@bdat
  2429  000BEA  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2430                           
  2431                           ;CO2.c: 482: _delay(50);
  2432  000BEE  0E0A               	movlw	10
  2433  000BF0                     u1297:
  2434  000BF0  F000               	nop	
  2435  000BF2  2EE8               	decfsz	wreg,f,c
  2436  000BF4  D7FD               	goto	u1297
  2437  000BF6  EF9F  F001         	goto	l1370
  2438  000BFA                     l138:
  2439                           
  2440                           ;CO2.c: 487: RC6 = 0;
  2441  000BFA  9C82               	bcf	3970,6,c	;volatile
  2442                           
  2443                           ;CO2.c: 488: if( air == 0 )
  2444  000BFC  6654               	tstfsz	main@air,c
  2445  000BFE  D007               	goto	l1752
  2446                           
  2447                           ;CO2.c: 489: {
  2448                           ;CO2.c: 490: air = 1;
  2449  000C00  0E01               	movlw	1
  2450  000C02  6E54               	movwf	main@air,c
  2451                           
  2452                           ;CO2.c: 491: RB2 = 0;
  2453  000C04  9481               	bcf	3969,2,c	;volatile
  2454                           
  2455                           ;CO2.c: 492: RC3 = 0;
  2456  000C06  9682               	bcf	3970,3,c	;volatile
  2457                           
  2458                           ;CO2.c: 493: RA4 = 1;
  2459  000C08  8880               	bsf	3968,4,c	;volatile
  2460                           
  2461                           ;CO2.c: 494: RC1 = 1;
  2462  000C0A  8282               	bsf	3970,1,c	;volatile
  2463  000C0C  D004               	goto	L6
  2464  000C0E                     l1752:
  2465                           
  2466                           ;CO2.c: 498: else
  2467                           ;CO2.c: 499: {
  2468                           ;CO2.c: 500: air = 0;
  2469  000C0E  0E00               	movlw	0
  2470  000C10  6E54               	movwf	main@air,c
  2471                           
  2472                           ;CO2.c: 501: RB2 = 1;
  2473  000C12  8481               	bsf	3969,2,c	;volatile
  2474                           
  2475                           ;CO2.c: 502: RC7 = 0;
  2476  000C14  9E82               	bcf	3970,7,c	;volatile
  2477  000C16                     L6:
  2478                           
  2479                           ;CO2.c: 503: volve = 0;
  2480  000C16  0E00               	movlw	0
  2481  000C18  6E47               	movwf	main@volve,c
  2482  000C1A  D044               	goto	L7
  2483  000C1C                     l141:
  2484                           
  2485                           ;CO2.c: 509: RC6 = 0;
  2486  000C1C  9C82               	bcf	3970,6,c	;volatile
  2487                           
  2488                           ;CO2.c: 511: if( set_pressure < 30 )
  2489  000C1E  0E1E               	movlw	30
  2490  000C20  5C58               	subwf	main@set_pressure,w,c
  2491  000C22  B0D8               	btfsc	status,0,c
  2492  000C24  EF9F  F001         	goto	l1370
  2493                           
  2494                           ;CO2.c: 512: {
  2495                           ;CO2.c: 513: set_pressure = set_pressure + 1;
  2496  000C28  2858               	incf	main@set_pressure,w,c
  2497  000C2A  6E58               	movwf	main@set_pressure,c
  2498                           
  2499                           ;CO2.c: 514: units = 0x00;
  2500  000C2C  0E00               	movlw	0
  2501  000C2E  6E59               	movwf	main@units,c
  2502                           
  2503                           ;CO2.c: 515: units = set_pressure % 10;
  2504  000C30  C058  F00F         	movff	main@set_pressure,___awmod@dividend
  2505  000C34  6A10               	clrf	___awmod@dividend+1,c
  2506  000C36  0E00               	movlw	0
  2507  000C38  6E12               	movwf	___awmod@divisor+1,c
  2508  000C3A  0E0A               	movlw	10
  2509  000C3C  6E11               	movwf	___awmod@divisor,c
  2510  000C3E  EC00  F00A         	call	___awmod	;wreg free
  2511  000C42  500F               	movf	?___awmod,w,c
  2512  000C44  6E59               	movwf	main@units,c
  2513                           
  2514                           ;CO2.c: 516: units = units << 4;
  2515  000C46  3859               	swapf	main@units,w,c
  2516  000C48  0BF0               	andlw	240
  2517  000C4A  6E59               	movwf	main@units,c
  2518                           
  2519                           ;CO2.c: 517: values[3] = units;
  2520  000C4C  C059  F05E         	movff	main@units,_values+3	;volatile
  2521                           
  2522                           ;CO2.c: 518: tens = 0x00;
  2523  000C50  0E00               	movlw	0
  2524  000C52  6E5A               	movwf	main@tens,c
  2525                           
  2526                           ;CO2.c: 519: tens = set_pressure / 10;
  2527  000C54  C058  F00F         	movff	main@set_pressure,___awdiv@dividend
  2528  000C58  6A10               	clrf	___awdiv@dividend+1,c
  2529  000C5A  0E00               	movlw	0
  2530  000C5C  6E12               	movwf	___awdiv@divisor+1,c
  2531  000C5E  0E0A               	movlw	10
  2532  000C60  6E11               	movwf	___awdiv@divisor,c
  2533  000C62  EC62  F009         	call	___awdiv	;wreg free
  2534  000C66  500F               	movf	?___awdiv,w,c
  2535  000C68  6E5A               	movwf	main@tens,c
  2536                           
  2537                           ;CO2.c: 520: tens = tens << 4;
  2538  000C6A  385A               	swapf	main@tens,w,c
  2539  000C6C  0BF0               	andlw	240
  2540  000C6E  6E5A               	movwf	main@tens,c
  2541                           
  2542                           ;CO2.c: 521: values[2] = tens;
  2543  000C70  C05A  F05D         	movff	main@tens,_values+2	;volatile
  2544                           
  2545                           ;CO2.c: 523: TMR0 = 0;
  2546  000C74  0E00               	movlw	0
  2547  000C76  6ED7               	movwf	4055,c	;volatile
  2548  000C78  0E00               	movlw	0
  2549  000C7A  6ED6               	movwf	4054,c	;volatile
  2550                           
  2551                           ;CO2.c: 525: Write_b_eep( 0x01, set_pressure );
  2552  000C7C  0E00               	movlw	0
  2553  000C7E  6E10               	movwf	Write_b_eep@badd+1,c
  2554  000C80  0E01               	movlw	1
  2555  000C82  6E0F               	movwf	Write_b_eep@badd,c
  2556  000C84  C058  F011         	movff	main@set_pressure,Write_b_eep@bdat
  2557  000C88  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2558                           
  2559                           ;CO2.c: 526: _delay(50);
  2560  000C8C  0E0A               	movlw	10
  2561  000C8E                     u1307:
  2562  000C8E  F000               	nop	
  2563  000C90  2EE8               	decfsz	wreg,f,c
  2564  000C92  D7FD               	goto	u1307
  2565  000C94  EF9F  F001         	goto	l1370
  2566  000C98                     l143:
  2567                           
  2568                           ;CO2.c: 531: RC6 = 0;
  2569  000C98  9C82               	bcf	3970,6,c	;volatile
  2570                           
  2571                           ;CO2.c: 532: if( control == 0 )
  2572  000C9A  664B               	tstfsz	main@control,c
  2573  000C9C  D007               	goto	l1786
  2574                           
  2575                           ;CO2.c: 533: {
  2576                           ;CO2.c: 534: control = 1;
  2577  000C9E  0E01               	movlw	1
  2578  000CA0  6E4B               	movwf	main@control,c
  2579                           
  2580                           ;CO2.c: 535: RC0 = 0;
  2581  000CA2  9082               	bcf	3970,0,c	;volatile
  2582  000CA4                     L7:
  2583                           
  2584                           ;CO2.c: 536: timer = 0;
  2585  000CA4  0E00               	movlw	0
  2586  000CA6  6E70               	movwf	_timer+1,c	;volatile
  2587  000CA8  0E00               	movlw	0
  2588  000CAA  D040               	goto	L8
  2589  000CAC                     l1786:
  2590                           
  2591                           ;CO2.c: 538: else
  2592                           ;CO2.c: 539: {
  2593                           ;CO2.c: 540: control = 0;
  2594  000CAC  0E00               	movlw	0
  2595  000CAE  6E4B               	movwf	main@control,c
  2596                           
  2597                           ;CO2.c: 541: RC0 = 1;
  2598  000CB0  8082               	bsf	3970,0,c	;volatile
  2599                           
  2600                           ;CO2.c: 543: RC2 = 0;
  2601  000CB2  9482               	bcf	3970,2,c	;volatile
  2602                           
  2603                           ;CO2.c: 544: RC3 = 0;
  2604  000CB4  9682               	bcf	3970,3,c	;volatile
  2605                           
  2606                           ;CO2.c: 546: RC7 = 0;
  2607  000CB6  9E82               	bcf	3970,7,c	;volatile
  2608                           
  2609                           ;CO2.c: 548: RA4 = 1;
  2610  000CB8  8880               	bsf	3968,4,c	;volatile
  2611                           
  2612                           ;CO2.c: 549: RC1 = 1;
  2613  000CBA  8282               	bsf	3970,1,c	;volatile
  2614                           
  2615                           ;CO2.c: 550: volve = 0;
  2616  000CBC  0E00               	movlw	0
  2617  000CBE  6E47               	movwf	main@volve,c
  2618                           
  2619                           ;CO2.c: 553: hundreds = values[8];
  2620  000CC0  C063  F055         	movff	_values+8,main@hundreds	;volatile
  2621                           
  2622                           ;CO2.c: 554: hundreds = hundreds >> 4;
  2623  000CC4  3855               	swapf	main@hundreds,w,c
  2624  000CC6  0B0F               	andlw	15
  2625  000CC8  6E55               	movwf	main@hundreds,c
  2626                           
  2627                           ;CO2.c: 555: Write_b_eep( 0x03, hundreds );
  2628  000CCA  0E00               	movlw	0
  2629  000CCC  6E10               	movwf	Write_b_eep@badd+1,c
  2630  000CCE  0E03               	movlw	3
  2631  000CD0  6E0F               	movwf	Write_b_eep@badd,c
  2632  000CD2  C055  F011         	movff	main@hundreds,Write_b_eep@bdat
  2633  000CD6  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2634                           
  2635                           ;CO2.c: 556: _delay(50);
  2636  000CDA  0E0A               	movlw	10
  2637  000CDC                     u1317:
  2638  000CDC  F000               	nop	
  2639  000CDE  2EE8               	decfsz	wreg,f,c
  2640  000CE0  D7FD               	goto	u1317
  2641                           
  2642                           ;CO2.c: 558: tens = values[9];
  2643  000CE2  C064  F05A         	movff	_values+9,main@tens	;volatile
  2644                           
  2645                           ;CO2.c: 559: tens = tens >> 4;
  2646  000CE6  385A               	swapf	main@tens,w,c
  2647  000CE8  0B0F               	andlw	15
  2648  000CEA  6E5A               	movwf	main@tens,c
  2649                           
  2650                           ;CO2.c: 560: Write_b_eep( 0x04, tens );
  2651  000CEC  0E00               	movlw	0
  2652  000CEE  6E10               	movwf	Write_b_eep@badd+1,c
  2653  000CF0  0E04               	movlw	4
  2654  000CF2  6E0F               	movwf	Write_b_eep@badd,c
  2655  000CF4  C05A  F011         	movff	main@tens,Write_b_eep@bdat
  2656  000CF8  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2657                           
  2658                           ;CO2.c: 561: _delay(50);
  2659  000CFC  0E0A               	movlw	10
  2660  000CFE                     u1327:
  2661  000CFE  F000               	nop	
  2662  000D00  2EE8               	decfsz	wreg,f,c
  2663  000D02  D7FD               	goto	u1327
  2664                           
  2665                           ;CO2.c: 563: units = values[10];
  2666  000D04  C065  F059         	movff	_values+10,main@units	;volatile
  2667                           
  2668                           ;CO2.c: 564: units = units >> 4;
  2669  000D08  3859               	swapf	main@units,w,c
  2670  000D0A  0B0F               	andlw	15
  2671  000D0C  6E59               	movwf	main@units,c
  2672                           
  2673                           ;CO2.c: 565: Write_b_eep( 0x05, units );
  2674  000D0E  0E00               	movlw	0
  2675  000D10  6E10               	movwf	Write_b_eep@badd+1,c
  2676  000D12  0E05               	movlw	5
  2677  000D14  6E0F               	movwf	Write_b_eep@badd,c
  2678  000D16  C059  F011         	movff	main@units,Write_b_eep@bdat
  2679  000D1A  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2680                           
  2681                           ;CO2.c: 566: _delay(50);
  2682  000D1E  0E0A               	movlw	10
  2683  000D20                     u1337:
  2684  000D20  F000               	nop	
  2685  000D22  2EE8               	decfsz	wreg,f,c
  2686  000D24  D7FD               	goto	u1337
  2687                           
  2688                           ;CO2.c: 568: timer = 10;
  2689  000D26  0E00               	movlw	0
  2690  000D28  6E70               	movwf	_timer+1,c	;volatile
  2691  000D2A  0E0A               	movlw	10
  2692  000D2C                     L8:
  2693  000D2C  6E6F               	movwf	_timer,c	;volatile
  2694  000D2E  EF9F  F001         	goto	l1370
  2695  000D32                     l146:
  2696                           
  2697                           ;CO2.c: 573: RC6 = 0;
  2698  000D32  9C82               	bcf	3970,6,c	;volatile
  2699                           
  2700                           ;CO2.c: 574: real_volume = 0;
  2701  000D34  0E00               	movlw	0
  2702  000D36  6E50               	movwf	main@real_volume,c
  2703  000D38  0E00               	movlw	0
  2704  000D3A  6E51               	movwf	main@real_volume+1,c
  2705  000D3C  0E00               	movlw	0
  2706  000D3E  6E52               	movwf	main@real_volume+2,c
  2707                           
  2708                           ;CO2.c: 577: values[8] = 0x00;
  2709  000D40  0E00               	movlw	0
  2710  000D42  6E63               	movwf	_values+8,c	;volatile
  2711                           
  2712                           ;CO2.c: 578: values[9] = 0x00;
  2713  000D44  0E00               	movlw	0
  2714  000D46  6E64               	movwf	_values+9,c	;volatile
  2715                           
  2716                           ;CO2.c: 579: values[10] = 0x00;
  2717  000D48  0E00               	movlw	0
  2718  000D4A  6E65               	movwf	_values+10,c	;volatile
  2719                           
  2720                           ;CO2.c: 582: Write_b_eep( 0x03, 0x00 );
  2721  000D4C  0E00               	movlw	0
  2722  000D4E  6E10               	movwf	Write_b_eep@badd+1,c
  2723  000D50  0E03               	movlw	3
  2724  000D52  6E0F               	movwf	Write_b_eep@badd,c
  2725  000D54  0E00               	movlw	0
  2726  000D56  6E11               	movwf	Write_b_eep@bdat,c
  2727  000D58  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2728                           
  2729                           ;CO2.c: 583: _delay(50);
  2730  000D5C  0E0A               	movlw	10
  2731  000D5E                     u1347:
  2732  000D5E  F000               	nop	
  2733  000D60  2EE8               	decfsz	wreg,f,c
  2734  000D62  D7FD               	goto	u1347
  2735                           
  2736                           ;CO2.c: 585: Write_b_eep( 0x04, 0x00 );
  2737  000D64  0E00               	movlw	0
  2738  000D66  6E10               	movwf	Write_b_eep@badd+1,c
  2739  000D68  0E04               	movlw	4
  2740  000D6A  6E0F               	movwf	Write_b_eep@badd,c
  2741  000D6C  0E00               	movlw	0
  2742  000D6E  6E11               	movwf	Write_b_eep@bdat,c
  2743  000D70  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2744                           
  2745                           ;CO2.c: 586: _delay(50);
  2746  000D74  0E0A               	movlw	10
  2747  000D76                     u1357:
  2748  000D76  F000               	nop	
  2749  000D78  2EE8               	decfsz	wreg,f,c
  2750  000D7A  D7FD               	goto	u1357
  2751                           
  2752                           ;CO2.c: 588: Write_b_eep( 0x05, 0x00 );
  2753  000D7C  0E00               	movlw	0
  2754  000D7E  6E10               	movwf	Write_b_eep@badd+1,c
  2755  000D80  0E05               	movlw	5
  2756  000D82  6E0F               	movwf	Write_b_eep@badd,c
  2757  000D84  0E00               	movlw	0
  2758  000D86  6E11               	movwf	Write_b_eep@bdat,c
  2759  000D88  ECBE  F00A         	call	_Write_b_eep	;wreg free
  2760                           
  2761                           ;CO2.c: 589: _delay(50);
  2762  000D8C  0E0A               	movlw	10
  2763  000D8E                     u1367:
  2764  000D8E  F000               	nop	
  2765  000D90  2EE8               	decfsz	wreg,f,c
  2766  000D92  D7FD               	goto	u1367
  2767                           
  2768                           ;CO2.c: 590: break;
  2769  000D94  EF9F  F001         	goto	l1370
  2770  000D98                     l1842:
  2771  000D98  5083               	movf	3971,w,c	;volatile
  2772                           
  2773                           ; Switch size 1, requested type "space"
  2774                           ; Number of cases is 8, Range of values is 127 to 255
  2775                           ; switch strategies available:
  2776                           ; Name         Instructions Cycles
  2777                           ; simple_byte           25    13 (average)
  2778                           ;	Chosen strategy is simple_byte
  2779  000D9A  0A7F               	xorlw	127	; case 127
  2780  000D9C  B4D8               	btfsc	status,2,c
  2781  000D9E  D7C9               	goto	l146
  2782  000DA0  0AA0               	xorlw	160	; case 223
  2783  000DA2  B4D8               	btfsc	status,2,c
  2784  000DA4  D779               	goto	l143
  2785  000DA6  0A30               	xorlw	48	; case 239
  2786  000DA8  B4D8               	btfsc	status,2,c
  2787  000DAA  D738               	goto	l141
  2788  000DAC  0A18               	xorlw	24	; case 247
  2789  000DAE  B4D8               	btfsc	status,2,c
  2790  000DB0  D724               	goto	l138
  2791  000DB2  0A0C               	xorlw	12	; case 251
  2792  000DB4  B4D8               	btfsc	status,2,c
  2793  000DB6  D6E4               	goto	l136
  2794  000DB8  0A06               	xorlw	6	; case 253
  2795  000DBA  B4D8               	btfsc	status,2,c
  2796  000DBC  D6A5               	goto	l134
  2797  000DBE  0A03               	xorlw	3	; case 254
  2798  000DC0  B4D8               	btfsc	status,2,c
  2799  000DC2  D666               	goto	l132
  2800  000DC4  0A01               	xorlw	1	; case 255
  2801  000DC6  B4D8               	btfsc	status,2,c
  2802  000DC8  D661               	goto	l130
  2803  000DCA  EF9F  F001         	goto	l1370
  2804  000DCE                     __end_of_main:
  2805                           	opt stack 0
  2806                           tblptru	equ	0xFF8
  2807                           tblptrh	equ	0xFF7
  2808                           tblptrl	equ	0xFF6
  2809                           tablat	equ	0xFF5
  2810                           prodh	equ	0xFF4
  2811                           prodl	equ	0xFF3
  2812                           intcon	equ	0xFF2
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           postdec1	equ	0xFE5
  2816                           fsr1l	equ	0xFE1
  2817                           status	equ	0xFD8
  2818                           
  2819 ;; *************** function ___lwmod *****************
  2820 ;; Defined at:
  2821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  dividend        2   14[COMRAM] unsigned int 
  2824 ;;  divisor         2   16[COMRAM] unsigned int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  counter         1   18[COMRAM] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  2   14[COMRAM] unsigned int 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2836 ;;      Params:         4       0       0       0       0       0       0
  2837 ;;      Locals:         1       0       0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0
  2839 ;;      Totals:         5       0       0       0       0       0       0
  2840 ;;Total ram usage:        5 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text1
  2851  001536                     __ptext1:
  2852                           	opt stack 0
  2853  001536                     ___lwmod:
  2854                           	opt stack 29
  2855                           
  2856                           ;incstack = 0
  2857  001536  FFFF               	dw	65535
  2858  001538  5012               	movf	___lwmod@divisor+1,w,c
  2859  00153A  1011               	iorwf	___lwmod@divisor,w,c
  2860  00153C  B4D8               	btfsc	status,2,c
  2861  00153E  D018               	goto	l745
  2862  001540  0E01               	movlw	1
  2863  001542  6E13               	movwf	___lwmod@counter,c
  2864  001544  D004               	goto	l1260
  2865  001546                     l1258:
  2866  001546  90D8               	bcf	status,0,c
  2867  001548  3611               	rlcf	___lwmod@divisor,f,c
  2868  00154A  3612               	rlcf	___lwmod@divisor+1,f,c
  2869  00154C  2A13               	incf	___lwmod@counter,f,c
  2870  00154E                     l1260:
  2871  00154E  AE12               	btfss	___lwmod@divisor+1,7,c
  2872  001550  D7FA               	goto	l1258
  2873  001552                     l1262:
  2874  001552  5011               	movf	___lwmod@divisor,w,c
  2875  001554  5C0F               	subwf	___lwmod@dividend,w,c
  2876  001556  5012               	movf	___lwmod@divisor+1,w,c
  2877  001558  5810               	subwfb	___lwmod@dividend+1,w,c
  2878  00155A  A0D8               	btfss	status,0,c
  2879  00155C  D004               	goto	l1266
  2880  00155E  5011               	movf	___lwmod@divisor,w,c
  2881  001560  5E0F               	subwf	___lwmod@dividend,f,c
  2882  001562  5012               	movf	___lwmod@divisor+1,w,c
  2883  001564  5A10               	subwfb	___lwmod@dividend+1,f,c
  2884  001566                     l1266:
  2885  001566  90D8               	bcf	status,0,c
  2886  001568  3212               	rrcf	___lwmod@divisor+1,f,c
  2887  00156A  3211               	rrcf	___lwmod@divisor,f,c
  2888  00156C  2E13               	decfsz	___lwmod@counter,f,c
  2889  00156E  D7F1               	goto	l1262
  2890  001570                     l745:
  2891  001570  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2892  001574  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2893  001578  0012               	return	
  2894  00157A  FFFF               	dw	65535	; errata NOP
  2895  00157C                     __end_of___lwmod:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           postinc0	equ	0xFEE
  2905                           wreg	equ	0xFE8
  2906                           postdec1	equ	0xFE5
  2907                           fsr1l	equ	0xFE1
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function ___lwdiv *****************
  2911 ;; Defined at:
  2912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  dividend        2   14[COMRAM] unsigned int 
  2915 ;;  divisor         2   16[COMRAM] unsigned int 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  quotient        2   18[COMRAM] unsigned int 
  2918 ;;  counter         1   20[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  2   14[COMRAM] unsigned int 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2928 ;;      Params:         4       0       0       0       0       0       0
  2929 ;;      Locals:         3       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0
  2931 ;;      Totals:         7       0       0       0       0       0       0
  2932 ;;Total ram usage:        7 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text2
  2943  001494                     __ptext2:
  2944                           	opt stack 0
  2945  001494                     ___lwdiv:
  2946                           	opt stack 29
  2947                           
  2948                           ;incstack = 0
  2949  001494  FFFF               	dw	65535
  2950  001496  0E00               	movlw	0
  2951  001498  6E14               	movwf	___lwdiv@quotient+1,c
  2952  00149A  0E00               	movlw	0
  2953  00149C  6E13               	movwf	___lwdiv@quotient,c
  2954  00149E  5012               	movf	___lwdiv@divisor+1,w,c
  2955  0014A0  1011               	iorwf	___lwdiv@divisor,w,c
  2956  0014A2  B4D8               	btfsc	status,2,c
  2957  0014A4  D01C               	goto	l735
  2958  0014A6  0E01               	movlw	1
  2959  0014A8  6E15               	movwf	___lwdiv@counter,c
  2960  0014AA  D004               	goto	l1240
  2961  0014AC                     l1238:
  2962  0014AC  90D8               	bcf	status,0,c
  2963  0014AE  3611               	rlcf	___lwdiv@divisor,f,c
  2964  0014B0  3612               	rlcf	___lwdiv@divisor+1,f,c
  2965  0014B2  2A15               	incf	___lwdiv@counter,f,c
  2966  0014B4                     l1240:
  2967  0014B4  AE12               	btfss	___lwdiv@divisor+1,7,c
  2968  0014B6  D7FA               	goto	l1238
  2969  0014B8                     l1242:
  2970  0014B8  90D8               	bcf	status,0,c
  2971  0014BA  3613               	rlcf	___lwdiv@quotient,f,c
  2972  0014BC  3614               	rlcf	___lwdiv@quotient+1,f,c
  2973  0014BE  5011               	movf	___lwdiv@divisor,w,c
  2974  0014C0  5C0F               	subwf	___lwdiv@dividend,w,c
  2975  0014C2  5012               	movf	___lwdiv@divisor+1,w,c
  2976  0014C4  5810               	subwfb	___lwdiv@dividend+1,w,c
  2977  0014C6  A0D8               	btfss	status,0,c
  2978  0014C8  D005               	goto	l1250
  2979  0014CA  5011               	movf	___lwdiv@divisor,w,c
  2980  0014CC  5E0F               	subwf	___lwdiv@dividend,f,c
  2981  0014CE  5012               	movf	___lwdiv@divisor+1,w,c
  2982  0014D0  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2983  0014D2  8013               	bsf	___lwdiv@quotient,0,c
  2984  0014D4                     l1250:
  2985  0014D4  90D8               	bcf	status,0,c
  2986  0014D6  3212               	rrcf	___lwdiv@divisor+1,f,c
  2987  0014D8  3211               	rrcf	___lwdiv@divisor,f,c
  2988  0014DA  2E15               	decfsz	___lwdiv@counter,f,c
  2989  0014DC  D7ED               	goto	l1242
  2990  0014DE                     l735:
  2991  0014DE  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2992  0014E2  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2993  0014E6  0012               	return	
  2994  0014E8  FFFF               	dw	65535	; errata NOP
  2995  0014EA                     __end_of___lwdiv:
  2996                           	opt stack 0
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           prodh	equ	0xFF4
  3002                           prodl	equ	0xFF3
  3003                           intcon	equ	0xFF2
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1l	equ	0xFE1
  3008                           status	equ	0xFD8
  3009                           
  3010 ;; *************** function ___lbtoft *****************
  3011 ;; Defined at:
  3012 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbtoft.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  c               1    wreg     unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  c               1   25[COMRAM] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  3   22[COMRAM] float 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3026 ;;      Params:         3       0       0       0       0       0       0
  3027 ;;      Locals:         1       0       0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0       0
  3029 ;;      Totals:         4       0       0       0       0       0       0
  3030 ;;Total ram usage:        4 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    2
  3033 ;; This function calls:
  3034 ;;		___ftpack
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text3
  3041  00161E                     __ptext3:
  3042                           	opt stack 0
  3043  00161E                     ___lbtoft:
  3044                           	opt stack 28
  3045                           
  3046                           ;incstack = 0
  3047  00161E  FFFF               	dw	65535
  3048                           
  3049                           ;___lbtoft@c stored from wreg
  3050  001620  6E1A               	movwf	___lbtoft@c,c
  3051  001622  501A               	movf	___lbtoft@c,w,c
  3052  001624  6E0F               	movwf	___ftpack@arg,c
  3053  001626  6A10               	clrf	___ftpack@arg+1,c
  3054  001628  6A11               	clrf	___ftpack@arg+2,c
  3055  00162A  0E8E               	movlw	142
  3056  00162C  6E12               	movwf	___ftpack@exp,c
  3057  00162E  0E00               	movlw	0
  3058  001630  6E13               	movwf	___ftpack@sign,c
  3059  001632  EC0C  F009         	call	___ftpack	;wreg free
  3060  001636  C00F  F017         	movff	?___ftpack,?___lbtoft
  3061  00163A  C010  F018         	movff	?___ftpack+1,?___lbtoft+1
  3062  00163E  C011  F019         	movff	?___ftpack+2,?___lbtoft+2
  3063  001642  0012               	return	
  3064  001644  FFFF               	dw	65535	; errata NOP
  3065  001646                     __end_of___lbtoft:
  3066                           	opt stack 0
  3067                           tblptru	equ	0xFF8
  3068                           tblptrh	equ	0xFF7
  3069                           tblptrl	equ	0xFF6
  3070                           tablat	equ	0xFF5
  3071                           prodh	equ	0xFF4
  3072                           prodl	equ	0xFF3
  3073                           intcon	equ	0xFF2
  3074                           postinc0	equ	0xFEE
  3075                           wreg	equ	0xFE8
  3076                           postdec1	equ	0xFE5
  3077                           fsr1l	equ	0xFE1
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function ___fttol *****************
  3081 ;; Defined at:
  3082 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  f1              3   41[COMRAM] float 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  lval            4   51[COMRAM] unsigned long 
  3087 ;;  exp1            1   55[COMRAM] unsigned char 
  3088 ;;  sign1           1   50[COMRAM] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  4   41[COMRAM] long 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3098 ;;      Params:         4       0       0       0       0       0       0
  3099 ;;      Locals:         6       0       0       0       0       0       0
  3100 ;;      Temps:          5       0       0       0       0       0       0
  3101 ;;      Totals:        15       0       0       0       0       0       0
  3102 ;;Total ram usage:       15 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text4
  3113  001140                     __ptext4:
  3114                           	opt stack 0
  3115  001140                     ___fttol:
  3116                           	opt stack 29
  3117                           
  3118                           ;incstack = 0
  3119  001140  FFFF               	dw	65535
  3120  001142  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  3121  001146  6A2F               	clrf	(??___fttol+1)& (0+255),c
  3122  001148  6A30               	clrf	(??___fttol+2)& (0+255),c
  3123  00114A  342B               	rlcf	___fttol@f1+1,w,c
  3124  00114C  362E               	rlcf	??___fttol& (0+255),f,c
  3125  00114E  E301               	bnc	u601
  3126  001150  802F               	bsf	(??___fttol+1)& (0+255),0,c
  3127  001152                     u601:
  3128  001152  502E               	movf	??___fttol,w,c
  3129  001154  6E38               	movwf	___fttol@exp1,c
  3130  001156  6638               	tstfsz	___fttol@exp1& (0+255),c
  3131  001158  D001               	goto	l1188
  3132  00115A  D038               	goto	u650
  3133  00115C                     l1188:
  3134  00115C  0E17               	movlw	23
  3135  00115E  6E2E               	movwf	??___fttol& (0+255),c
  3136  001160  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  3137  001164  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  3138  001168  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  3139  00116C  282E               	incf	??___fttol,w,c
  3140  00116E  6E32               	movwf	(??___fttol+4)& (0+255),c
  3141  001170  D004               	goto	u620
  3142  001172                     u625:
  3143  001172  90D8               	bcf	status,0,c
  3144  001174  3231               	rrcf	??___fttol+3,f,c
  3145  001176  3230               	rrcf	??___fttol+2,f,c
  3146  001178  322F               	rrcf	??___fttol+1,f,c
  3147  00117A                     u620:
  3148  00117A  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
  3149  00117C  D7FA               	goto	u625
  3150  00117E  502F               	movf	??___fttol+1,w,c
  3151  001180  6E33               	movwf	___fttol@sign1,c
  3152  001182  8E2B               	bsf	___fttol@f1+1,7,c
  3153  001184  0EFF               	movlw	255
  3154  001186  162A               	andwf	___fttol@f1,f,c
  3155  001188  0EFF               	movlw	255
  3156  00118A  162B               	andwf	___fttol@f1+1,f,c
  3157  00118C  0E00               	movlw	0
  3158  00118E  162C               	andwf	___fttol@f1+2,f,c
  3159  001190  502A               	movf	___fttol@f1,w,c
  3160  001192  6E34               	movwf	___fttol@lval,c
  3161  001194  502B               	movf	___fttol@f1+1,w,c
  3162  001196  6E35               	movwf	___fttol@lval+1,c
  3163  001198  502C               	movf	___fttol@f1+2,w,c
  3164  00119A  6E36               	movwf	___fttol@lval+2,c
  3165  00119C  6A37               	clrf	___fttol@lval+3,c
  3166  00119E  0E8E               	movlw	142
  3167  0011A0  5E38               	subwf	___fttol@exp1,f,c
  3168  0011A2  AE38               	btfss	___fttol@exp1,7,c
  3169  0011A4  D010               	goto	l1210
  3170  0011A6  5038               	movf	___fttol@exp1,w,c
  3171  0011A8  0A80               	xorlw	128
  3172  0011AA  6E2E               	movwf	??___fttol& (0+255),c
  3173  0011AC  0EF1               	movlw	241
  3174  0011AE  0A80               	xorlw	128
  3175  0011B0  5C2E               	subwf	??___fttol,w,c
  3176  0011B2  A0D8               	btfss	status,0,c
  3177  0011B4  D00B               	goto	u650
  3178  0011B6                     l1206:
  3179  0011B6  90D8               	bcf	status,0,c
  3180  0011B8  3237               	rrcf	___fttol@lval+3,f,c
  3181  0011BA  3236               	rrcf	___fttol@lval+2,f,c
  3182  0011BC  3235               	rrcf	___fttol@lval+1,f,c
  3183  0011BE  3234               	rrcf	___fttol@lval,f,c
  3184  0011C0  3E38               	incfsz	___fttol@exp1,f,c
  3185  0011C2  D7F9               	goto	l1206
  3186  0011C4  D014               	goto	l1220
  3187  0011C6                     l1210:
  3188  0011C6  0E17               	movlw	23
  3189  0011C8  6438               	cpfsgt	___fttol@exp1,c
  3190  0011CA  D00F               	goto	l1218
  3191  0011CC                     u650:
  3192  0011CC  0E00               	movlw	0
  3193  0011CE  6E2A               	movwf	?___fttol,c
  3194  0011D0  0E00               	movlw	0
  3195  0011D2  6E2B               	movwf	?___fttol+1,c
  3196  0011D4  0E00               	movlw	0
  3197  0011D6  6E2C               	movwf	?___fttol+2,c
  3198  0011D8  0E00               	movlw	0
  3199  0011DA  6E2D               	movwf	?___fttol+3,c
  3200  0011DC  D01B               	goto	l633
  3201  0011DE                     l1216:
  3202  0011DE  90D8               	bcf	status,0,c
  3203  0011E0  3634               	rlcf	___fttol@lval,f,c
  3204  0011E2  3635               	rlcf	___fttol@lval+1,f,c
  3205  0011E4  3636               	rlcf	___fttol@lval+2,f,c
  3206  0011E6  3637               	rlcf	___fttol@lval+3,f,c
  3207  0011E8  0638               	decf	___fttol@exp1,f,c
  3208  0011EA                     l1218:
  3209  0011EA  6638               	tstfsz	___fttol@exp1,c
  3210  0011EC  D7F8               	goto	l1216
  3211  0011EE                     l1220:
  3212  0011EE  5033               	movf	___fttol@sign1,w,c
  3213  0011F0  B4D8               	btfsc	status,2,c
  3214  0011F2  D008               	goto	l1224
  3215  0011F4  1E37               	comf	___fttol@lval+3,f,c
  3216  0011F6  1E36               	comf	___fttol@lval+2,f,c
  3217  0011F8  1E35               	comf	___fttol@lval+1,f,c
  3218  0011FA  6C34               	negf	___fttol@lval,c
  3219  0011FC  0E00               	movlw	0
  3220  0011FE  2235               	addwfc	___fttol@lval+1,f,c
  3221  001200  2236               	addwfc	___fttol@lval+2,f,c
  3222  001202  2237               	addwfc	___fttol@lval+3,f,c
  3223  001204                     l1224:
  3224  001204  C034  F02A         	movff	___fttol@lval,?___fttol
  3225  001208  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  3226  00120C  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  3227  001210  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  3228  001214                     l633:
  3229  001214  0012               	return	
  3230  001216  FFFF               	dw	65535	; errata NOP
  3231  001218                     __end_of___fttol:
  3232                           	opt stack 0
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           intcon	equ	0xFF2
  3240                           postinc0	equ	0xFEE
  3241                           wreg	equ	0xFE8
  3242                           postdec1	equ	0xFE5
  3243                           fsr1l	equ	0xFE1
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function ___ftmul *****************
  3247 ;; Defined at:
  3248 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  f1              3   26[COMRAM] float 
  3251 ;;  f2              3   29[COMRAM] float 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  3254 ;;  sign            1   40[COMRAM] unsigned char 
  3255 ;;  cntr            1   39[COMRAM] unsigned char 
  3256 ;;  exp             1   38[COMRAM] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  3   26[COMRAM] float 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3266 ;;      Params:         6       0       0       0       0       0       0
  3267 ;;      Locals:         6       0       0       0       0       0       0
  3268 ;;      Temps:          3       0       0       0       0       0       0
  3269 ;;      Totals:        15       0       0       0       0       0       0
  3270 ;;Total ram usage:       15 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    2
  3273 ;; This function calls:
  3274 ;;		___ftpack
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text5
  3281  000F7E                     __ptext5:
  3282                           	opt stack 0
  3283  000F7E                     ___ftmul:
  3284                           	opt stack 28
  3285                           
  3286                           ;incstack = 0
  3287  000F7E  FFFF               	dw	65535
  3288  000F80  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  3289  000F84  6A22               	clrf	(??___ftmul+1)& (0+255),c
  3290  000F86  6A23               	clrf	(??___ftmul+2)& (0+255),c
  3291  000F88  341C               	rlcf	___ftmul@f1+1,w,c
  3292  000F8A  3621               	rlcf	??___ftmul& (0+255),f,c
  3293  000F8C  E301               	bnc	u381
  3294  000F8E  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  3295  000F90                     u381:
  3296  000F90  5021               	movf	??___ftmul,w,c
  3297  000F92  6E27               	movwf	___ftmul@exp,c
  3298  000F94  6627               	tstfsz	___ftmul@exp& (0+255),c
  3299  000F96  D001               	goto	l1030
  3300  000F98  D00C               	goto	u410
  3301  000F9A                     l1030:
  3302  000F9A  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  3303  000F9E  6A22               	clrf	(??___ftmul+1)& (0+255),c
  3304  000FA0  6A23               	clrf	(??___ftmul+2)& (0+255),c
  3305  000FA2  341F               	rlcf	___ftmul@f2+1,w,c
  3306  000FA4  3621               	rlcf	??___ftmul& (0+255),f,c
  3307  000FA6  E301               	bnc	u401
  3308  000FA8  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  3309  000FAA                     u401:
  3310  000FAA  5021               	movf	??___ftmul,w,c
  3311  000FAC  6E29               	movwf	___ftmul@sign,c
  3312  000FAE  6629               	tstfsz	___ftmul@sign& (0+255),c
  3313  000FB0  D007               	goto	l1036
  3314  000FB2                     u410:
  3315  000FB2  0E00               	movlw	0
  3316  000FB4  6E1B               	movwf	?___ftmul,c
  3317  000FB6  0E00               	movlw	0
  3318  000FB8  6E1C               	movwf	?___ftmul+1,c
  3319  000FBA  0E00               	movlw	0
  3320  000FBC  6E1D               	movwf	?___ftmul+2,c
  3321  000FBE  D051               	goto	l613
  3322  000FC0                     l1036:
  3323  000FC0  5029               	movf	___ftmul@sign,w,c
  3324  000FC2  0F7B               	addlw	123
  3325  000FC4  2627               	addwf	___ftmul@exp,f,c
  3326  000FC6  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  3327  000FCA  5020               	movf	___ftmul@f2+2,w,c
  3328  000FCC  1A29               	xorwf	___ftmul@sign,f,c
  3329  000FCE  0E80               	movlw	128
  3330  000FD0  1629               	andwf	___ftmul@sign,f,c
  3331  000FD2  8E1C               	bsf	___ftmul@f1+1,7,c
  3332  000FD4  8E1F               	bsf	___ftmul@f2+1,7,c
  3333  000FD6  0EFF               	movlw	255
  3334  000FD8  161E               	andwf	___ftmul@f2,f,c
  3335  000FDA  0EFF               	movlw	255
  3336  000FDC  161F               	andwf	___ftmul@f2+1,f,c
  3337  000FDE  0E00               	movlw	0
  3338  000FE0  1620               	andwf	___ftmul@f2+2,f,c
  3339  000FE2  0E00               	movlw	0
  3340  000FE4  6E24               	movwf	___ftmul@f3_as_product,c
  3341  000FE6  0E00               	movlw	0
  3342  000FE8  6E25               	movwf	___ftmul@f3_as_product+1,c
  3343  000FEA  0E00               	movlw	0
  3344  000FEC  6E26               	movwf	___ftmul@f3_as_product+2,c
  3345  000FEE  0E07               	movlw	7
  3346  000FF0  6E28               	movwf	___ftmul@cntr,c
  3347  000FF2                     l1050:
  3348  000FF2  A01B               	btfss	___ftmul@f1,0,c
  3349  000FF4  D006               	goto	l1054
  3350  000FF6  501E               	movf	___ftmul@f2,w,c
  3351  000FF8  2624               	addwf	___ftmul@f3_as_product,f,c
  3352  000FFA  501F               	movf	___ftmul@f2+1,w,c
  3353  000FFC  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  3354  000FFE  5020               	movf	___ftmul@f2+2,w,c
  3355  001000  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  3356  001002                     l1054:
  3357  001002  90D8               	bcf	status,0,c
  3358  001004  321D               	rrcf	___ftmul@f1+2,f,c
  3359  001006  321C               	rrcf	___ftmul@f1+1,f,c
  3360  001008  321B               	rrcf	___ftmul@f1,f,c
  3361  00100A  90D8               	bcf	status,0,c
  3362  00100C  361E               	rlcf	___ftmul@f2,f,c
  3363  00100E  361F               	rlcf	___ftmul@f2+1,f,c
  3364  001010  3620               	rlcf	___ftmul@f2+2,f,c
  3365  001012  2E28               	decfsz	___ftmul@cntr,f,c
  3366  001014  D7EE               	goto	l1050
  3367  001016  0E09               	movlw	9
  3368  001018  6E28               	movwf	___ftmul@cntr,c
  3369  00101A                     l1060:
  3370  00101A  A01B               	btfss	___ftmul@f1,0,c
  3371  00101C  D006               	goto	l1064
  3372  00101E  501E               	movf	___ftmul@f2,w,c
  3373  001020  2624               	addwf	___ftmul@f3_as_product,f,c
  3374  001022  501F               	movf	___ftmul@f2+1,w,c
  3375  001024  2225               	addwfc	___ftmul@f3_as_product+1,f,c
  3376  001026  5020               	movf	___ftmul@f2+2,w,c
  3377  001028  2226               	addwfc	___ftmul@f3_as_product+2,f,c
  3378  00102A                     l1064:
  3379  00102A  90D8               	bcf	status,0,c
  3380  00102C  321D               	rrcf	___ftmul@f1+2,f,c
  3381  00102E  321C               	rrcf	___ftmul@f1+1,f,c
  3382  001030  321B               	rrcf	___ftmul@f1,f,c
  3383  001032  90D8               	bcf	status,0,c
  3384  001034  3226               	rrcf	___ftmul@f3_as_product+2,f,c
  3385  001036  3225               	rrcf	___ftmul@f3_as_product+1,f,c
  3386  001038  3224               	rrcf	___ftmul@f3_as_product,f,c
  3387  00103A  2E28               	decfsz	___ftmul@cntr,f,c
  3388  00103C  D7EE               	goto	l1060
  3389  00103E  C024  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  3390  001042  C025  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3391  001046  C026  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3392  00104A  C027  F012         	movff	___ftmul@exp,___ftpack@exp
  3393  00104E  C029  F013         	movff	___ftmul@sign,___ftpack@sign
  3394  001052  EC0C  F009         	call	___ftpack	;wreg free
  3395  001056  C00F  F01B         	movff	?___ftpack,?___ftmul
  3396  00105A  C010  F01C         	movff	?___ftpack+1,?___ftmul+1
  3397  00105E  C011  F01D         	movff	?___ftpack+2,?___ftmul+2
  3398  001062                     l613:
  3399  001062  0012               	return	
  3400  001064  FFFF               	dw	65535	; errata NOP
  3401  001066                     __end_of___ftmul:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           intcon	equ	0xFF2
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           postdec1	equ	0xFE5
  3413                           fsr1l	equ	0xFE1
  3414                           status	equ	0xFD8
  3415                           
  3416 ;; *************** function ___ftge *****************
  3417 ;; Defined at:
  3418 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftge.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  ff1             3   14[COMRAM] float 
  3421 ;;  ff2             3   17[COMRAM] float 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;		None               void
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3433 ;;      Params:         6       0       0       0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0
  3435 ;;      Temps:          3       0       0       0       0       0       0
  3436 ;;      Totals:         9       0       0       0       0       0       0
  3437 ;;Total ram usage:        9 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text6
  3448  00136C                     __ptext6:
  3449                           	opt stack 0
  3450  00136C                     ___ftge:
  3451                           	opt stack 29
  3452                           
  3453                           ;incstack = 0
  3454  00136C  FFFF               	dw	65535
  3455  00136E  AE11               	btfss	___ftge@ff1+2,7,c
  3456  001370  D016               	goto	l1168
  3457  001372  C00F  F015         	movff	___ftge@ff1,??___ftge
  3458  001376  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  3459  00137A  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  3460  00137E  1E15               	comf	??___ftge,f,c
  3461  001380  1E16               	comf	??___ftge+1,f,c
  3462  001382  1E17               	comf	??___ftge+2,f,c
  3463  001384  2A15               	incf	??___ftge,f,c
  3464  001386  0E00               	movlw	0
  3465  001388  2216               	addwfc	??___ftge+1,f,c
  3466  00138A  2217               	addwfc	??___ftge+2,f,c
  3467  00138C  0E00               	movlw	0
  3468  00138E  2415               	addwf	??___ftge,w,c
  3469  001390  6E0F               	movwf	___ftge@ff1,c
  3470  001392  0E00               	movlw	0
  3471  001394  2016               	addwfc	??___ftge+1,w,c
  3472  001396  6E10               	movwf	___ftge@ff1+1,c
  3473  001398  0E80               	movlw	128
  3474  00139A  2017               	addwfc	??___ftge+2,w,c
  3475  00139C  6E11               	movwf	___ftge@ff1+2,c
  3476  00139E                     l1168:
  3477  00139E  AE14               	btfss	___ftge@ff2+2,7,c
  3478  0013A0  D016               	goto	l1172
  3479  0013A2  C012  F015         	movff	___ftge@ff2,??___ftge
  3480  0013A6  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  3481  0013AA  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  3482  0013AE  1E15               	comf	??___ftge,f,c
  3483  0013B0  1E16               	comf	??___ftge+1,f,c
  3484  0013B2  1E17               	comf	??___ftge+2,f,c
  3485  0013B4  2A15               	incf	??___ftge,f,c
  3486  0013B6  0E00               	movlw	0
  3487  0013B8  2216               	addwfc	??___ftge+1,f,c
  3488  0013BA  2217               	addwfc	??___ftge+2,f,c
  3489  0013BC  0E00               	movlw	0
  3490  0013BE  2415               	addwf	??___ftge,w,c
  3491  0013C0  6E12               	movwf	___ftge@ff2,c
  3492  0013C2  0E00               	movlw	0
  3493  0013C4  2016               	addwfc	??___ftge+1,w,c
  3494  0013C6  6E13               	movwf	___ftge@ff2+1,c
  3495  0013C8  0E80               	movlw	128
  3496  0013CA  2017               	addwfc	??___ftge+2,w,c
  3497  0013CC  6E14               	movwf	___ftge@ff2+2,c
  3498  0013CE                     l1172:
  3499  0013CE  0E00               	movlw	0
  3500  0013D0  1A0F               	xorwf	___ftge@ff1,f,c
  3501  0013D2  0E00               	movlw	0
  3502  0013D4  1A10               	xorwf	___ftge@ff1+1,f,c
  3503  0013D6  0E80               	movlw	128
  3504  0013D8  1A11               	xorwf	___ftge@ff1+2,f,c
  3505  0013DA  0E00               	movlw	0
  3506  0013DC  1A12               	xorwf	___ftge@ff2,f,c
  3507  0013DE  0E00               	movlw	0
  3508  0013E0  1A13               	xorwf	___ftge@ff2+1,f,c
  3509  0013E2  0E80               	movlw	128
  3510  0013E4  1A14               	xorwf	___ftge@ff2+2,f,c
  3511  0013E6  5012               	movf	___ftge@ff2,w,c
  3512  0013E8  5C0F               	subwf	___ftge@ff1,w,c
  3513  0013EA  5013               	movf	___ftge@ff2+1,w,c
  3514  0013EC  5810               	subwfb	___ftge@ff1+1,w,c
  3515  0013EE  5014               	movf	___ftge@ff2+2,w,c
  3516  0013F0  5811               	subwfb	___ftge@ff1+2,w,c
  3517  0013F2  B0D8               	btfsc	status,0,c
  3518  0013F4  D002               	goto	l1178
  3519  0013F6  90D8               	bcf	status,0,c
  3520  0013F8  D001               	goto	l607
  3521  0013FA                     l1178:
  3522  0013FA  80D8               	bsf	status,0,c
  3523  0013FC                     l607:
  3524  0013FC  0012               	return	
  3525  0013FE  FFFF               	dw	65535	; errata NOP
  3526  001400                     __end_of___ftge:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           prodh	equ	0xFF4
  3533                           prodl	equ	0xFF3
  3534                           intcon	equ	0xFF2
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           postdec1	equ	0xFE5
  3538                           fsr1l	equ	0xFE1
  3539                           status	equ	0xFD8
  3540                           
  3541 ;; *************** function ___ftdiv *****************
  3542 ;; Defined at:
  3543 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftdiv.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  f1              3   26[COMRAM] float 
  3546 ;;  f2              3   29[COMRAM] float 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  f3              3   35[COMRAM] float 
  3549 ;;  sign            1   40[COMRAM] unsigned char 
  3550 ;;  exp             1   39[COMRAM] unsigned char 
  3551 ;;  cntr            1   38[COMRAM] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  3   26[COMRAM] float 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3561 ;;      Params:         6       0       0       0       0       0       0
  3562 ;;      Locals:         6       0       0       0       0       0       0
  3563 ;;      Temps:          3       0       0       0       0       0       0
  3564 ;;      Totals:        15       0       0       0       0       0       0
  3565 ;;Total ram usage:       15 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		___ftpack
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text7
  3576  001066                     __ptext7:
  3577                           	opt stack 0
  3578  001066                     ___ftdiv:
  3579                           	opt stack 28
  3580                           
  3581                           ;incstack = 0
  3582  001066  FFFF               	dw	65535
  3583  001068  C01D  F021         	movff	___ftdiv@f1+2,??___ftdiv
  3584  00106C  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  3585  00106E  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  3586  001070  341C               	rlcf	___ftdiv@f1+1,w,c
  3587  001072  3621               	rlcf	??___ftdiv& (0+255),f,c
  3588  001074  E301               	bnc	u331
  3589  001076  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  3590  001078                     u331:
  3591  001078  5021               	movf	??___ftdiv,w,c
  3592  00107A  6E28               	movwf	___ftdiv@exp,c
  3593  00107C  6628               	tstfsz	___ftdiv@exp& (0+255),c
  3594  00107E  D001               	goto	l984
  3595  001080  D00C               	goto	u360
  3596  001082                     l984:
  3597  001082  C020  F021         	movff	___ftdiv@f2+2,??___ftdiv
  3598  001086  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  3599  001088  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  3600  00108A  341F               	rlcf	___ftdiv@f2+1,w,c
  3601  00108C  3621               	rlcf	??___ftdiv& (0+255),f,c
  3602  00108E  E301               	bnc	u351
  3603  001090  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  3604  001092                     u351:
  3605  001092  5021               	movf	??___ftdiv,w,c
  3606  001094  6E29               	movwf	___ftdiv@sign,c
  3607  001096  6629               	tstfsz	___ftdiv@sign& (0+255),c
  3608  001098  D007               	goto	l990
  3609  00109A                     u360:
  3610  00109A  0E00               	movlw	0
  3611  00109C  6E1B               	movwf	?___ftdiv,c
  3612  00109E  0E00               	movlw	0
  3613  0010A0  6E1C               	movwf	?___ftdiv+1,c
  3614  0010A2  0E00               	movlw	0
  3615  0010A4  6E1D               	movwf	?___ftdiv+2,c
  3616  0010A6  D04A               	goto	l598
  3617  0010A8                     l990:
  3618  0010A8  0E00               	movlw	0
  3619  0010AA  6E24               	movwf	___ftdiv@f3,c
  3620  0010AC  0E00               	movlw	0
  3621  0010AE  6E25               	movwf	___ftdiv@f3+1,c
  3622  0010B0  0E00               	movlw	0
  3623  0010B2  6E26               	movwf	___ftdiv@f3+2,c
  3624  0010B4  5029               	movf	___ftdiv@sign,w,c
  3625  0010B6  0F89               	addlw	137
  3626  0010B8  5E28               	subwf	___ftdiv@exp,f,c
  3627  0010BA  C01D  F029         	movff	___ftdiv@f1+2,___ftdiv@sign
  3628  0010BE  5020               	movf	___ftdiv@f2+2,w,c
  3629  0010C0  1A29               	xorwf	___ftdiv@sign,f,c
  3630  0010C2  0E80               	movlw	128
  3631  0010C4  1629               	andwf	___ftdiv@sign,f,c
  3632  0010C6  8E1C               	bsf	___ftdiv@f1+1,7,c
  3633  0010C8  0EFF               	movlw	255
  3634  0010CA  161B               	andwf	___ftdiv@f1,f,c
  3635  0010CC  0EFF               	movlw	255
  3636  0010CE  161C               	andwf	___ftdiv@f1+1,f,c
  3637  0010D0  0E00               	movlw	0
  3638  0010D2  161D               	andwf	___ftdiv@f1+2,f,c
  3639  0010D4  8E1F               	bsf	___ftdiv@f2+1,7,c
  3640  0010D6  0EFF               	movlw	255
  3641  0010D8  161E               	andwf	___ftdiv@f2,f,c
  3642  0010DA  0EFF               	movlw	255
  3643  0010DC  161F               	andwf	___ftdiv@f2+1,f,c
  3644  0010DE  0E00               	movlw	0
  3645  0010E0  1620               	andwf	___ftdiv@f2+2,f,c
  3646  0010E2  0E18               	movlw	24
  3647  0010E4  6E27               	movwf	___ftdiv@cntr,c
  3648  0010E6                     l1010:
  3649  0010E6  90D8               	bcf	status,0,c
  3650  0010E8  3624               	rlcf	___ftdiv@f3,f,c
  3651  0010EA  3625               	rlcf	___ftdiv@f3+1,f,c
  3652  0010EC  3626               	rlcf	___ftdiv@f3+2,f,c
  3653  0010EE  501E               	movf	___ftdiv@f2,w,c
  3654  0010F0  5C1B               	subwf	___ftdiv@f1,w,c
  3655  0010F2  501F               	movf	___ftdiv@f2+1,w,c
  3656  0010F4  581C               	subwfb	___ftdiv@f1+1,w,c
  3657  0010F6  5020               	movf	___ftdiv@f2+2,w,c
  3658  0010F8  581D               	subwfb	___ftdiv@f1+2,w,c
  3659  0010FA  A0D8               	btfss	status,0,c
  3660  0010FC  D007               	goto	l601
  3661  0010FE  501E               	movf	___ftdiv@f2,w,c
  3662  001100  5E1B               	subwf	___ftdiv@f1,f,c
  3663  001102  501F               	movf	___ftdiv@f2+1,w,c
  3664  001104  5A1C               	subwfb	___ftdiv@f1+1,f,c
  3665  001106  5020               	movf	___ftdiv@f2+2,w,c
  3666  001108  5A1D               	subwfb	___ftdiv@f1+2,f,c
  3667  00110A  8024               	bsf	___ftdiv@f3,0,c
  3668  00110C                     l601:
  3669  00110C  90D8               	bcf	status,0,c
  3670  00110E  361B               	rlcf	___ftdiv@f1,f,c
  3671  001110  361C               	rlcf	___ftdiv@f1+1,f,c
  3672  001112  361D               	rlcf	___ftdiv@f1+2,f,c
  3673  001114  2E27               	decfsz	___ftdiv@cntr,f,c
  3674  001116  D7E7               	goto	l1010
  3675  001118  C024  F00F         	movff	___ftdiv@f3,___ftpack@arg
  3676  00111C  C025  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3677  001120  C026  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3678  001124  C028  F012         	movff	___ftdiv@exp,___ftpack@exp
  3679  001128  C029  F013         	movff	___ftdiv@sign,___ftpack@sign
  3680  00112C  EC0C  F009         	call	___ftpack	;wreg free
  3681  001130  C00F  F01B         	movff	?___ftpack,?___ftdiv
  3682  001134  C010  F01C         	movff	?___ftpack+1,?___ftdiv+1
  3683  001138  C011  F01D         	movff	?___ftpack+2,?___ftdiv+2
  3684  00113C                     l598:
  3685  00113C  0012               	return	
  3686  00113E  FFFF               	dw	65535	; errata NOP
  3687  001140                     __end_of___ftdiv:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           tblptrh	equ	0xFF7
  3691                           tblptrl	equ	0xFF6
  3692                           tablat	equ	0xFF5
  3693                           prodh	equ	0xFF4
  3694                           prodl	equ	0xFF3
  3695                           intcon	equ	0xFF2
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           postdec1	equ	0xFE5
  3699                           fsr1l	equ	0xFE1
  3700                           status	equ	0xFD8
  3701                           
  3702 ;; *************** function ___ftadd *****************
  3703 ;; Defined at:
  3704 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  f1              3   26[COMRAM] float 
  3707 ;;  f2              3   29[COMRAM] float 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  exp1            1   37[COMRAM] unsigned char 
  3710 ;;  exp2            1   36[COMRAM] unsigned char 
  3711 ;;  sign            1   35[COMRAM] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  3   26[COMRAM] float 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3721 ;;      Params:         6       0       0       0       0       0       0
  3722 ;;      Locals:         3       0       0       0       0       0       0
  3723 ;;      Temps:          3       0       0       0       0       0       0
  3724 ;;      Totals:        12       0       0       0       0       0       0
  3725 ;;Total ram usage:       12 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    2
  3728 ;; This function calls:
  3729 ;;		___ftpack
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text8
  3736  000DCE                     __ptext8:
  3737                           	opt stack 0
  3738  000DCE                     ___ftadd:
  3739                           	opt stack 28
  3740                           
  3741                           ;incstack = 0
  3742  000DCE  FFFF               	dw	65535
  3743  000DD0  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
  3744  000DD4  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3745  000DD6  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3746  000DD8  341C               	rlcf	___ftadd@f1+1,w,c
  3747  000DDA  3621               	rlcf	??___ftadd& (0+255),f,c
  3748  000DDC  E301               	bnc	u121
  3749  000DDE  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3750  000DE0                     u121:
  3751  000DE0  5021               	movf	??___ftadd,w,c
  3752  000DE2  6E26               	movwf	___ftadd@exp1,c
  3753  000DE4  C020  F021         	movff	___ftadd@f2+2,??___ftadd
  3754  000DE8  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3755  000DEA  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3756  000DEC  341F               	rlcf	___ftadd@f2+1,w,c
  3757  000DEE  3621               	rlcf	??___ftadd& (0+255),f,c
  3758  000DF0  E301               	bnc	u131
  3759  000DF2  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3760  000DF4                     u131:
  3761  000DF4  5021               	movf	??___ftadd,w,c
  3762  000DF6  6E25               	movwf	___ftadd@exp2,c
  3763  000DF8  5026               	movf	___ftadd@exp1,w,c
  3764  000DFA  B4D8               	btfsc	status,2,c
  3765  000DFC  D00C               	goto	l566
  3766  000DFE  5025               	movf	___ftadd@exp2,w,c
  3767  000E00  5C26               	subwf	___ftadd@exp1,w,c
  3768  000E02  B0D8               	btfsc	status,0,c
  3769  000E04  D00F               	goto	l916
  3770  000E06  5026               	movf	___ftadd@exp1,w,c
  3771  000E08  0800               	sublw	0
  3772  000E0A  2425               	addwf	___ftadd@exp2,w,c
  3773  000E0C  6E21               	movwf	??___ftadd& (0+255),c
  3774  000E0E  0E19               	movlw	25
  3775  000E10  5C21               	subwf	??___ftadd,w,c
  3776  000E12  A0D8               	btfss	status,0,c
  3777  000E14  D007               	goto	l916
  3778  000E16                     l566:
  3779  000E16  C01E  F01B         	movff	___ftadd@f2,?___ftadd
  3780  000E1A  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
  3781  000E1E  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
  3782  000E22  D0AB               	goto	l567
  3783  000E24                     l916:
  3784  000E24  5025               	movf	___ftadd@exp2,w,c
  3785  000E26  B4D8               	btfsc	status,2,c
  3786  000E28  D00C               	goto	l570
  3787  000E2A  5026               	movf	___ftadd@exp1,w,c
  3788  000E2C  5C25               	subwf	___ftadd@exp2,w,c
  3789  000E2E  B0D8               	btfsc	status,0,c
  3790  000E30  D00F               	goto	l922
  3791  000E32  5025               	movf	___ftadd@exp2,w,c
  3792  000E34  0800               	sublw	0
  3793  000E36  2426               	addwf	___ftadd@exp1,w,c
  3794  000E38  6E21               	movwf	??___ftadd& (0+255),c
  3795  000E3A  0E19               	movlw	25
  3796  000E3C  5C21               	subwf	??___ftadd,w,c
  3797  000E3E  A0D8               	btfss	status,0,c
  3798  000E40  D007               	goto	l922
  3799  000E42                     l570:
  3800  000E42  C01B  F01B         	movff	___ftadd@f1,?___ftadd
  3801  000E46  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
  3802  000E4A  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
  3803  000E4E  D095               	goto	l567
  3804  000E50                     l922:
  3805  000E50  0E06               	movlw	6
  3806  000E52  6E24               	movwf	___ftadd@sign,c
  3807  000E54  BE1D               	btfsc	___ftadd@f1+2,7,c
  3808  000E56  8E24               	bsf	___ftadd@sign,7,c
  3809  000E58  BE20               	btfsc	___ftadd@f2+2,7,c
  3810  000E5A  8C24               	bsf	___ftadd@sign,6,c
  3811  000E5C  8E1C               	bsf	___ftadd@f1+1,7,c
  3812  000E5E  0EFF               	movlw	255
  3813  000E60  161B               	andwf	___ftadd@f1,f,c
  3814  000E62  0EFF               	movlw	255
  3815  000E64  161C               	andwf	___ftadd@f1+1,f,c
  3816  000E66  0E00               	movlw	0
  3817  000E68  161D               	andwf	___ftadd@f1+2,f,c
  3818  000E6A  8E1F               	bsf	___ftadd@f2+1,7,c
  3819  000E6C  0EFF               	movlw	255
  3820  000E6E  161E               	andwf	___ftadd@f2,f,c
  3821  000E70  0EFF               	movlw	255
  3822  000E72  161F               	andwf	___ftadd@f2+1,f,c
  3823  000E74  0E00               	movlw	0
  3824  000E76  1620               	andwf	___ftadd@f2+2,f,c
  3825  000E78  5025               	movf	___ftadd@exp2,w,c
  3826  000E7A  5C26               	subwf	___ftadd@exp1,w,c
  3827  000E7C  B0D8               	btfsc	status,0,c
  3828  000E7E  D01A               	goto	l948
  3829  000E80                     l938:
  3830  000E80  90D8               	bcf	status,0,c
  3831  000E82  361E               	rlcf	___ftadd@f2,f,c
  3832  000E84  361F               	rlcf	___ftadd@f2+1,f,c
  3833  000E86  3620               	rlcf	___ftadd@f2+2,f,c
  3834  000E88  0625               	decf	___ftadd@exp2,f,c
  3835  000E8A  5025               	movf	___ftadd@exp2,w,c
  3836  000E8C  1826               	xorwf	___ftadd@exp1,w,c
  3837  000E8E  B4D8               	btfsc	status,2,c
  3838  000E90  D00D               	goto	l946
  3839  000E92  0624               	decf	___ftadd@sign,f,c
  3840  000E94  C024  F021         	movff	___ftadd@sign,??___ftadd
  3841  000E98  0E07               	movlw	7
  3842  000E9A  1621               	andwf	??___ftadd,f,c
  3843  000E9C  B4D8               	btfsc	status,2,c
  3844  000E9E  D006               	goto	l946
  3845  000EA0  D7EF               	goto	l938
  3846  000EA2                     l944:
  3847  000EA2  90D8               	bcf	status,0,c
  3848  000EA4  321D               	rrcf	___ftadd@f1+2,f,c
  3849  000EA6  321C               	rrcf	___ftadd@f1+1,f,c
  3850  000EA8  321B               	rrcf	___ftadd@f1,f,c
  3851  000EAA  2A26               	incf	___ftadd@exp1,f,c
  3852  000EAC                     l946:
  3853  000EAC  5025               	movf	___ftadd@exp2,w,c
  3854  000EAE  6226               	cpfseq	___ftadd@exp1,c
  3855  000EB0  D7F8               	goto	l944
  3856  000EB2  D01D               	goto	l581
  3857  000EB4                     l948:
  3858  000EB4  5026               	movf	___ftadd@exp1,w,c
  3859  000EB6  5C25               	subwf	___ftadd@exp2,w,c
  3860  000EB8  B0D8               	btfsc	status,0,c
  3861  000EBA  D019               	goto	l581
  3862  000EBC                     l950:
  3863  000EBC  90D8               	bcf	status,0,c
  3864  000EBE  361B               	rlcf	___ftadd@f1,f,c
  3865  000EC0  361C               	rlcf	___ftadd@f1+1,f,c
  3866  000EC2  361D               	rlcf	___ftadd@f1+2,f,c
  3867  000EC4  0626               	decf	___ftadd@exp1,f,c
  3868  000EC6  5025               	movf	___ftadd@exp2,w,c
  3869  000EC8  1826               	xorwf	___ftadd@exp1,w,c
  3870  000ECA  B4D8               	btfsc	status,2,c
  3871  000ECC  D00D               	goto	l958
  3872  000ECE  0624               	decf	___ftadd@sign,f,c
  3873  000ED0  C024  F021         	movff	___ftadd@sign,??___ftadd
  3874  000ED4  0E07               	movlw	7
  3875  000ED6  1621               	andwf	??___ftadd,f,c
  3876  000ED8  B4D8               	btfsc	status,2,c
  3877  000EDA  D006               	goto	l958
  3878  000EDC  D7EF               	goto	l950
  3879  000EDE                     l956:
  3880  000EDE  90D8               	bcf	status,0,c
  3881  000EE0  3220               	rrcf	___ftadd@f2+2,f,c
  3882  000EE2  321F               	rrcf	___ftadd@f2+1,f,c
  3883  000EE4  321E               	rrcf	___ftadd@f2,f,c
  3884  000EE6  2A25               	incf	___ftadd@exp2,f,c
  3885  000EE8                     l958:
  3886  000EE8  5025               	movf	___ftadd@exp2,w,c
  3887  000EEA  6226               	cpfseq	___ftadd@exp1,c
  3888  000EEC  D7F8               	goto	l956
  3889  000EEE                     l581:
  3890  000EEE  AE24               	btfss	___ftadd@sign,7,c
  3891  000EF0  D00C               	goto	l590
  3892  000EF2  0EFF               	movlw	255
  3893  000EF4  1A1B               	xorwf	___ftadd@f1,f,c
  3894  000EF6  0EFF               	movlw	255
  3895  000EF8  1A1C               	xorwf	___ftadd@f1+1,f,c
  3896  000EFA  0EFF               	movlw	255
  3897  000EFC  1A1D               	xorwf	___ftadd@f1+2,f,c
  3898  000EFE  0E01               	movlw	1
  3899  000F00  261B               	addwf	___ftadd@f1,f,c
  3900  000F02  0E00               	movlw	0
  3901  000F04  221C               	addwfc	___ftadd@f1+1,f,c
  3902  000F06  0E00               	movlw	0
  3903  000F08  221D               	addwfc	___ftadd@f1+2,f,c
  3904  000F0A                     l590:
  3905  000F0A  AC24               	btfss	___ftadd@sign,6,c
  3906  000F0C  D00C               	goto	l964
  3907  000F0E  0EFF               	movlw	255
  3908  000F10  1A1E               	xorwf	___ftadd@f2,f,c
  3909  000F12  0EFF               	movlw	255
  3910  000F14  1A1F               	xorwf	___ftadd@f2+1,f,c
  3911  000F16  0EFF               	movlw	255
  3912  000F18  1A20               	xorwf	___ftadd@f2+2,f,c
  3913  000F1A  0E01               	movlw	1
  3914  000F1C  261E               	addwf	___ftadd@f2,f,c
  3915  000F1E  0E00               	movlw	0
  3916  000F20  221F               	addwfc	___ftadd@f2+1,f,c
  3917  000F22  0E00               	movlw	0
  3918  000F24  2220               	addwfc	___ftadd@f2+2,f,c
  3919  000F26                     l964:
  3920  000F26  0E00               	movlw	0
  3921  000F28  6E24               	movwf	___ftadd@sign,c
  3922  000F2A  501B               	movf	___ftadd@f1,w,c
  3923  000F2C  261E               	addwf	___ftadd@f2,f,c
  3924  000F2E  501C               	movf	___ftadd@f1+1,w,c
  3925  000F30  221F               	addwfc	___ftadd@f2+1,f,c
  3926  000F32  501D               	movf	___ftadd@f1+2,w,c
  3927  000F34  2220               	addwfc	___ftadd@f2+2,f,c
  3928  000F36  AE20               	btfss	___ftadd@f2+2,7,c
  3929  000F38  D00E               	goto	l974
  3930  000F3A  0EFF               	movlw	255
  3931  000F3C  1A1E               	xorwf	___ftadd@f2,f,c
  3932  000F3E  0EFF               	movlw	255
  3933  000F40  1A1F               	xorwf	___ftadd@f2+1,f,c
  3934  000F42  0EFF               	movlw	255
  3935  000F44  1A20               	xorwf	___ftadd@f2+2,f,c
  3936  000F46  0E01               	movlw	1
  3937  000F48  261E               	addwf	___ftadd@f2,f,c
  3938  000F4A  0E00               	movlw	0
  3939  000F4C  221F               	addwfc	___ftadd@f2+1,f,c
  3940  000F4E  0E00               	movlw	0
  3941  000F50  2220               	addwfc	___ftadd@f2+2,f,c
  3942  000F52  0E01               	movlw	1
  3943  000F54  6E24               	movwf	___ftadd@sign,c
  3944  000F56                     l974:
  3945  000F56  C01E  F00F         	movff	___ftadd@f2,___ftpack@arg
  3946  000F5A  C01F  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  3947  000F5E  C020  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  3948  000F62  C026  F012         	movff	___ftadd@exp1,___ftpack@exp
  3949  000F66  C024  F013         	movff	___ftadd@sign,___ftpack@sign
  3950  000F6A  EC0C  F009         	call	___ftpack	;wreg free
  3951  000F6E  C00F  F01B         	movff	?___ftpack,?___ftadd
  3952  000F72  C010  F01C         	movff	?___ftpack+1,?___ftadd+1
  3953  000F76  C011  F01D         	movff	?___ftpack+2,?___ftadd+2
  3954  000F7A                     l567:
  3955  000F7A  0012               	return	
  3956  000F7C  FFFF               	dw	65535	; errata NOP
  3957  000F7E                     __end_of___ftadd:
  3958                           	opt stack 0
  3959                           tblptru	equ	0xFF8
  3960                           tblptrh	equ	0xFF7
  3961                           tblptrl	equ	0xFF6
  3962                           tablat	equ	0xFF5
  3963                           prodh	equ	0xFF4
  3964                           prodl	equ	0xFF3
  3965                           intcon	equ	0xFF2
  3966                           postinc0	equ	0xFEE
  3967                           wreg	equ	0xFE8
  3968                           postdec1	equ	0xFE5
  3969                           fsr1l	equ	0xFE1
  3970                           status	equ	0xFD8
  3971                           
  3972 ;; *************** function ___awtoft *****************
  3973 ;; Defined at:
  3974 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  c               2   22[COMRAM] int 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  sign            1   25[COMRAM] unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  3   22[COMRAM] float 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, prodl, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3988 ;;      Params:         3       0       0       0       0       0       0
  3989 ;;      Locals:         1       0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0
  3991 ;;      Totals:         4       0       0       0       0       0       0
  3992 ;;Total ram usage:        4 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    2
  3995 ;; This function calls:
  3996 ;;		___ftpack
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text9
  4003  0014EA                     __ptext9:
  4004                           	opt stack 0
  4005  0014EA                     ___awtoft:
  4006                           	opt stack 28
  4007                           
  4008                           ;incstack = 0
  4009  0014EA  FFFF               	dw	65535
  4010  0014EC  0E00               	movlw	0
  4011  0014EE  6E1A               	movwf	___awtoft@sign,c
  4012  0014F0  5018               	movf	___awtoft@c+1,w,c
  4013  0014F2  0A80               	xorlw	128
  4014  0014F4  6EF3               	movwf	prodl,c
  4015  0014F6  0E80               	movlw	128
  4016  0014F8  5CF3               	subwf	prodl,w,c
  4017  0014FA  0E00               	movlw	0
  4018  0014FC  B4D8               	btfsc	status,2,c
  4019  0014FE  5C17               	subwf	___awtoft@c,w,c
  4020  001500  B0D8               	btfsc	status,0,c
  4021  001502  D006               	goto	l1160
  4022  001504  6C17               	negf	___awtoft@c,c
  4023  001506  1E18               	comf	___awtoft@c+1,f,c
  4024  001508  B0D8               	btfsc	status,0,c
  4025  00150A  2A18               	incf	___awtoft@c+1,f,c
  4026  00150C  0E01               	movlw	1
  4027  00150E  6E1A               	movwf	___awtoft@sign,c
  4028  001510                     l1160:
  4029  001510  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  4030  001514  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  4031  001518  6A11               	clrf	___ftpack@arg+2,c
  4032  00151A  0E8E               	movlw	142
  4033  00151C  6E12               	movwf	___ftpack@exp,c
  4034  00151E  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  4035  001522  EC0C  F009         	call	___ftpack	;wreg free
  4036  001526  C00F  F017         	movff	?___ftpack,?___awtoft
  4037  00152A  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  4038  00152E  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  4039  001532  0012               	return	
  4040  001534  FFFF               	dw	65535	; errata NOP
  4041  001536                     __end_of___awtoft:
  4042                           	opt stack 0
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           prodh	equ	0xFF4
  4048                           prodl	equ	0xFF3
  4049                           intcon	equ	0xFF2
  4050                           postinc0	equ	0xFEE
  4051                           wreg	equ	0xFE8
  4052                           postdec1	equ	0xFE5
  4053                           fsr1l	equ	0xFE1
  4054                           status	equ	0xFD8
  4055                           
  4056 ;; *************** function ___ftpack *****************
  4057 ;; Defined at:
  4058 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  arg             3   14[COMRAM] unsigned um
  4061 ;;  exp             1   17[COMRAM] unsigned char 
  4062 ;;  sign            1   18[COMRAM] unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  3   14[COMRAM] float 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4074 ;;      Params:         5       0       0       0       0       0       0
  4075 ;;      Locals:         0       0       0       0       0       0       0
  4076 ;;      Temps:          3       0       0       0       0       0       0
  4077 ;;      Totals:         8       0       0       0       0       0       0
  4078 ;;Total ram usage:        8 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		___awtoft
  4085 ;;		___ftadd
  4086 ;;		___ftdiv
  4087 ;;		___ftmul
  4088 ;;		___lbtoft
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text10
  4093  001218                     __ptext10:
  4094                           	opt stack 0
  4095  001218                     ___ftpack:
  4096                           	opt stack 28
  4097                           
  4098                           ;incstack = 0
  4099  001218  FFFF               	dw	65535
  4100  00121A  5012               	movf	___ftpack@exp,w,c
  4101  00121C  B4D8               	btfsc	status,2,c
  4102  00121E  D005               	goto	l828
  4103  001220  500F               	movf	___ftpack@arg,w,c
  4104  001222  1010               	iorwf	___ftpack@arg+1,w,c
  4105  001224  1011               	iorwf	___ftpack@arg+2,w,c
  4106  001226  A4D8               	btfss	status,2,c
  4107  001228  D00C               	goto	l834
  4108  00122A                     l828:
  4109  00122A  0E00               	movlw	0
  4110  00122C  6E0F               	movwf	?___ftpack,c
  4111  00122E  0E00               	movlw	0
  4112  001230  6E10               	movwf	?___ftpack+1,c
  4113  001232  0E00               	movlw	0
  4114  001234  6E11               	movwf	?___ftpack+2,c
  4115  001236  D044               	goto	l529
  4116  001238                     l832:
  4117  001238  2A12               	incf	___ftpack@exp,f,c
  4118  00123A  90D8               	bcf	status,0,c
  4119  00123C  3211               	rrcf	___ftpack@arg+2,f,c
  4120  00123E  3210               	rrcf	___ftpack@arg+1,f,c
  4121  001240  320F               	rrcf	___ftpack@arg,f,c
  4122  001242                     l834:
  4123  001242  0E00               	movlw	0
  4124  001244  140F               	andwf	___ftpack@arg,w,c
  4125  001246  6E14               	movwf	??___ftpack& (0+255),c
  4126  001248  0E00               	movlw	0
  4127  00124A  1410               	andwf	___ftpack@arg+1,w,c
  4128  00124C  6E15               	movwf	(??___ftpack+1)& (0+255),c
  4129  00124E  0EFE               	movlw	254
  4130  001250  1411               	andwf	___ftpack@arg+2,w,c
  4131  001252  6E16               	movwf	(??___ftpack+2)& (0+255),c
  4132  001254  5014               	movf	??___ftpack,w,c
  4133  001256  1015               	iorwf	??___ftpack+1,w,c
  4134  001258  1016               	iorwf	??___ftpack+2,w,c
  4135  00125A  B4D8               	btfsc	status,2,c
  4136  00125C  D00C               	goto	l840
  4137  00125E  D7EC               	goto	l832
  4138  001260                     l836:
  4139  001260  2A12               	incf	___ftpack@exp,f,c
  4140  001262  0E01               	movlw	1
  4141  001264  260F               	addwf	___ftpack@arg,f,c
  4142  001266  0E00               	movlw	0
  4143  001268  2210               	addwfc	___ftpack@arg+1,f,c
  4144  00126A  0E00               	movlw	0
  4145  00126C  2211               	addwfc	___ftpack@arg+2,f,c
  4146  00126E  90D8               	bcf	status,0,c
  4147  001270  3211               	rrcf	___ftpack@arg+2,f,c
  4148  001272  3210               	rrcf	___ftpack@arg+1,f,c
  4149  001274  320F               	rrcf	___ftpack@arg,f,c
  4150  001276                     l840:
  4151  001276  0E00               	movlw	0
  4152  001278  140F               	andwf	___ftpack@arg,w,c
  4153  00127A  6E14               	movwf	??___ftpack& (0+255),c
  4154  00127C  0E00               	movlw	0
  4155  00127E  1410               	andwf	___ftpack@arg+1,w,c
  4156  001280  6E15               	movwf	(??___ftpack+1)& (0+255),c
  4157  001282  0EFF               	movlw	255
  4158  001284  1411               	andwf	___ftpack@arg+2,w,c
  4159  001286  6E16               	movwf	(??___ftpack+2)& (0+255),c
  4160  001288  5014               	movf	??___ftpack,w,c
  4161  00128A  1015               	iorwf	??___ftpack+1,w,c
  4162  00128C  1016               	iorwf	??___ftpack+2,w,c
  4163  00128E  B4D8               	btfsc	status,2,c
  4164  001290  D006               	goto	l844
  4165  001292  D7E6               	goto	l836
  4166  001294                     l842:
  4167  001294  0612               	decf	___ftpack@exp,f,c
  4168  001296  90D8               	bcf	status,0,c
  4169  001298  360F               	rlcf	___ftpack@arg,f,c
  4170  00129A  3610               	rlcf	___ftpack@arg+1,f,c
  4171  00129C  3611               	rlcf	___ftpack@arg+2,f,c
  4172  00129E                     l844:
  4173  00129E  AE10               	btfss	___ftpack@arg+1,7,c
  4174  0012A0  D7F9               	goto	l842
  4175  0012A2  A012               	btfss	___ftpack@exp,0,c
  4176  0012A4  9E10               	bcf	___ftpack@arg+1,7,c
  4177  0012A6  90D8               	bcf	status,0,c
  4178  0012A8  3212               	rrcf	___ftpack@exp,f,c
  4179  0012AA  5012               	movf	___ftpack@exp,w,c
  4180  0012AC  1211               	iorwf	___ftpack@arg+2,f,c
  4181  0012AE  5013               	movf	___ftpack@sign,w,c
  4182  0012B0  A4D8               	btfss	status,2,c
  4183  0012B2  8E11               	bsf	___ftpack@arg+2,7,c
  4184  0012B4  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  4185  0012B8  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  4186  0012BC  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  4187  0012C0                     l529:
  4188  0012C0  0012               	return	
  4189  0012C2  FFFF               	dw	65535	; errata NOP
  4190  0012C4                     __end_of___ftpack:
  4191                           	opt stack 0
  4192                           tblptru	equ	0xFF8
  4193                           tblptrh	equ	0xFF7
  4194                           tblptrl	equ	0xFF6
  4195                           tablat	equ	0xFF5
  4196                           prodh	equ	0xFF4
  4197                           prodl	equ	0xFF3
  4198                           intcon	equ	0xFF2
  4199                           postinc0	equ	0xFEE
  4200                           wreg	equ	0xFE8
  4201                           postdec1	equ	0xFE5
  4202                           fsr1l	equ	0xFE1
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function ___awmod *****************
  4206 ;; Defined at:
  4207 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  dividend        2   14[COMRAM] int 
  4210 ;;  divisor         2   16[COMRAM] int 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  sign            1   19[COMRAM] unsigned char 
  4213 ;;  counter         1   18[COMRAM] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2   14[COMRAM] int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0, prodl
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4223 ;;      Params:         4       0       0       0       0       0       0
  4224 ;;      Locals:         2       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0
  4226 ;;      Totals:         6       0       0       0       0       0       0
  4227 ;;Total ram usage:        6 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text11
  4238  001400                     __ptext11:
  4239                           	opt stack 0
  4240  001400                     ___awmod:
  4241                           	opt stack 29
  4242                           
  4243                           ;incstack = 0
  4244  001400  FFFF               	dw	65535
  4245  001402  0E00               	movlw	0
  4246  001404  6E14               	movwf	___awmod@sign,c
  4247  001406  5010               	movf	___awmod@dividend+1,w,c
  4248  001408  0A80               	xorlw	128
  4249  00140A  6EF3               	movwf	prodl,c
  4250  00140C  0E80               	movlw	128
  4251  00140E  5CF3               	subwf	prodl,w,c
  4252  001410  0E00               	movlw	0
  4253  001412  B4D8               	btfsc	status,2,c
  4254  001414  5C0F               	subwf	___awmod@dividend,w,c
  4255  001416  B0D8               	btfsc	status,0,c
  4256  001418  D006               	goto	l1124
  4257  00141A  6C0F               	negf	___awmod@dividend,c
  4258  00141C  1E10               	comf	___awmod@dividend+1,f,c
  4259  00141E  B0D8               	btfsc	status,0,c
  4260  001420  2A10               	incf	___awmod@dividend+1,f,c
  4261  001422  0E01               	movlw	1
  4262  001424  6E14               	movwf	___awmod@sign,c
  4263  001426                     l1124:
  4264  001426  5012               	movf	___awmod@divisor+1,w,c
  4265  001428  0A80               	xorlw	128
  4266  00142A  6EF3               	movwf	prodl,c
  4267  00142C  0E80               	movlw	128
  4268  00142E  5CF3               	subwf	prodl,w,c
  4269  001430  0E00               	movlw	0
  4270  001432  B4D8               	btfsc	status,2,c
  4271  001434  5C11               	subwf	___awmod@divisor,w,c
  4272  001436  B0D8               	btfsc	status,0,c
  4273  001438  D004               	goto	l1128
  4274  00143A  6C11               	negf	___awmod@divisor,c
  4275  00143C  1E12               	comf	___awmod@divisor+1,f,c
  4276  00143E  B0D8               	btfsc	status,0,c
  4277  001440  2A12               	incf	___awmod@divisor+1,f,c
  4278  001442                     l1128:
  4279  001442  5012               	movf	___awmod@divisor+1,w,c
  4280  001444  1011               	iorwf	___awmod@divisor,w,c
  4281  001446  B4D8               	btfsc	status,2,c
  4282  001448  D018               	goto	l1144
  4283  00144A  0E01               	movlw	1
  4284  00144C  6E13               	movwf	___awmod@counter,c
  4285  00144E  D004               	goto	l1134
  4286  001450                     l1132:
  4287  001450  90D8               	bcf	status,0,c
  4288  001452  3611               	rlcf	___awmod@divisor,f,c
  4289  001454  3612               	rlcf	___awmod@divisor+1,f,c
  4290  001456  2A13               	incf	___awmod@counter,f,c
  4291  001458                     l1134:
  4292  001458  AE12               	btfss	___awmod@divisor+1,7,c
  4293  00145A  D7FA               	goto	l1132
  4294  00145C                     l1136:
  4295  00145C  5011               	movf	___awmod@divisor,w,c
  4296  00145E  5C0F               	subwf	___awmod@dividend,w,c
  4297  001460  5012               	movf	___awmod@divisor+1,w,c
  4298  001462  5810               	subwfb	___awmod@dividend+1,w,c
  4299  001464  A0D8               	btfss	status,0,c
  4300  001466  D004               	goto	l1140
  4301  001468  5011               	movf	___awmod@divisor,w,c
  4302  00146A  5E0F               	subwf	___awmod@dividend,f,c
  4303  00146C  5012               	movf	___awmod@divisor+1,w,c
  4304  00146E  5A10               	subwfb	___awmod@dividend+1,f,c
  4305  001470                     l1140:
  4306  001470  90D8               	bcf	status,0,c
  4307  001472  3212               	rrcf	___awmod@divisor+1,f,c
  4308  001474  3211               	rrcf	___awmod@divisor,f,c
  4309  001476  2E13               	decfsz	___awmod@counter,f,c
  4310  001478  D7F1               	goto	l1136
  4311  00147A                     l1144:
  4312  00147A  5014               	movf	___awmod@sign,w,c
  4313  00147C  B4D8               	btfsc	status,2,c
  4314  00147E  D004               	goto	l1148
  4315  001480  6C0F               	negf	___awmod@dividend,c
  4316  001482  1E10               	comf	___awmod@dividend+1,f,c
  4317  001484  B0D8               	btfsc	status,0,c
  4318  001486  2A10               	incf	___awmod@dividend+1,f,c
  4319  001488                     l1148:
  4320  001488  C00F  F00F         	movff	___awmod@dividend,?___awmod
  4321  00148C  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  4322  001490  0012               	return	
  4323  001492  FFFF               	dw	65535	; errata NOP
  4324  001494                     __end_of___awmod:
  4325                           	opt stack 0
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           prodh	equ	0xFF4
  4331                           prodl	equ	0xFF3
  4332                           intcon	equ	0xFF2
  4333                           postinc0	equ	0xFEE
  4334                           wreg	equ	0xFE8
  4335                           postdec1	equ	0xFE5
  4336                           fsr1l	equ	0xFE1
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function ___awdiv *****************
  4340 ;; Defined at:
  4341 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  dividend        2   14[COMRAM] int 
  4344 ;;  divisor         2   16[COMRAM] int 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  quotient        2   20[COMRAM] int 
  4347 ;;  sign            1   19[COMRAM] unsigned char 
  4348 ;;  counter         1   18[COMRAM] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2   14[COMRAM] int 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, prodl
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4358 ;;      Params:         4       0       0       0       0       0       0
  4359 ;;      Locals:         4       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0
  4361 ;;      Totals:         8       0       0       0       0       0       0
  4362 ;;Total ram usage:        8 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text12
  4373  0012C4                     __ptext12:
  4374                           	opt stack 0
  4375  0012C4                     ___awdiv:
  4376                           	opt stack 29
  4377                           
  4378                           ;incstack = 0
  4379  0012C4  FFFF               	dw	65535
  4380  0012C6  0E00               	movlw	0
  4381  0012C8  6E14               	movwf	___awdiv@sign,c
  4382  0012CA  5012               	movf	___awdiv@divisor+1,w,c
  4383  0012CC  0A80               	xorlw	128
  4384  0012CE  6EF3               	movwf	prodl,c
  4385  0012D0  0E80               	movlw	128
  4386  0012D2  5CF3               	subwf	prodl,w,c
  4387  0012D4  0E00               	movlw	0
  4388  0012D6  B4D8               	btfsc	status,2,c
  4389  0012D8  5C11               	subwf	___awdiv@divisor,w,c
  4390  0012DA  B0D8               	btfsc	status,0,c
  4391  0012DC  D006               	goto	l1080
  4392  0012DE  6C11               	negf	___awdiv@divisor,c
  4393  0012E0  1E12               	comf	___awdiv@divisor+1,f,c
  4394  0012E2  B0D8               	btfsc	status,0,c
  4395  0012E4  2A12               	incf	___awdiv@divisor+1,f,c
  4396  0012E6  0E01               	movlw	1
  4397  0012E8  6E14               	movwf	___awdiv@sign,c
  4398  0012EA                     l1080:
  4399  0012EA  5010               	movf	___awdiv@dividend+1,w,c
  4400  0012EC  0A80               	xorlw	128
  4401  0012EE  6EF3               	movwf	prodl,c
  4402  0012F0  0E80               	movlw	128
  4403  0012F2  5CF3               	subwf	prodl,w,c
  4404  0012F4  0E00               	movlw	0
  4405  0012F6  B4D8               	btfsc	status,2,c
  4406  0012F8  5C0F               	subwf	___awdiv@dividend,w,c
  4407  0012FA  B0D8               	btfsc	status,0,c
  4408  0012FC  D006               	goto	l1086
  4409  0012FE  6C0F               	negf	___awdiv@dividend,c
  4410  001300  1E10               	comf	___awdiv@dividend+1,f,c
  4411  001302  B0D8               	btfsc	status,0,c
  4412  001304  2A10               	incf	___awdiv@dividend+1,f,c
  4413  001306  0E01               	movlw	1
  4414  001308  1A14               	xorwf	___awdiv@sign,f,c
  4415  00130A                     l1086:
  4416  00130A  0E00               	movlw	0
  4417  00130C  6E16               	movwf	___awdiv@quotient+1,c
  4418  00130E  0E00               	movlw	0
  4419  001310  6E15               	movwf	___awdiv@quotient,c
  4420  001312  5012               	movf	___awdiv@divisor+1,w,c
  4421  001314  1011               	iorwf	___awdiv@divisor,w,c
  4422  001316  B4D8               	btfsc	status,2,c
  4423  001318  D01C               	goto	l1108
  4424  00131A  0E01               	movlw	1
  4425  00131C  6E13               	movwf	___awdiv@counter,c
  4426  00131E  D004               	goto	l1094
  4427  001320                     l1092:
  4428  001320  90D8               	bcf	status,0,c
  4429  001322  3611               	rlcf	___awdiv@divisor,f,c
  4430  001324  3612               	rlcf	___awdiv@divisor+1,f,c
  4431  001326  2A13               	incf	___awdiv@counter,f,c
  4432  001328                     l1094:
  4433  001328  AE12               	btfss	___awdiv@divisor+1,7,c
  4434  00132A  D7FA               	goto	l1092
  4435  00132C                     l1096:
  4436  00132C  90D8               	bcf	status,0,c
  4437  00132E  3615               	rlcf	___awdiv@quotient,f,c
  4438  001330  3616               	rlcf	___awdiv@quotient+1,f,c
  4439  001332  5011               	movf	___awdiv@divisor,w,c
  4440  001334  5C0F               	subwf	___awdiv@dividend,w,c
  4441  001336  5012               	movf	___awdiv@divisor+1,w,c
  4442  001338  5810               	subwfb	___awdiv@dividend+1,w,c
  4443  00133A  A0D8               	btfss	status,0,c
  4444  00133C  D005               	goto	l1104
  4445  00133E  5011               	movf	___awdiv@divisor,w,c
  4446  001340  5E0F               	subwf	___awdiv@dividend,f,c
  4447  001342  5012               	movf	___awdiv@divisor+1,w,c
  4448  001344  5A10               	subwfb	___awdiv@dividend+1,f,c
  4449  001346  8015               	bsf	___awdiv@quotient,0,c
  4450  001348                     l1104:
  4451  001348  90D8               	bcf	status,0,c
  4452  00134A  3212               	rrcf	___awdiv@divisor+1,f,c
  4453  00134C  3211               	rrcf	___awdiv@divisor,f,c
  4454  00134E  2E13               	decfsz	___awdiv@counter,f,c
  4455  001350  D7ED               	goto	l1096
  4456  001352                     l1108:
  4457  001352  5014               	movf	___awdiv@sign,w,c
  4458  001354  B4D8               	btfsc	status,2,c
  4459  001356  D004               	goto	l1112
  4460  001358  6C15               	negf	___awdiv@quotient,c
  4461  00135A  1E16               	comf	___awdiv@quotient+1,f,c
  4462  00135C  B0D8               	btfsc	status,0,c
  4463  00135E  2A16               	incf	___awdiv@quotient+1,f,c
  4464  001360                     l1112:
  4465  001360  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  4466  001364  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  4467  001368  0012               	return	
  4468  00136A  FFFF               	dw	65535	; errata NOP
  4469  00136C                     __end_of___awdiv:
  4470                           	opt stack 0
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           prodh	equ	0xFF4
  4476                           prodl	equ	0xFF3
  4477                           intcon	equ	0xFF2
  4478                           postinc0	equ	0xFEE
  4479                           wreg	equ	0xFE8
  4480                           postdec1	equ	0xFE5
  4481                           fsr1l	equ	0xFE1
  4482                           status	equ	0xFD8
  4483                           
  4484 ;; *************** function _Write_b_eep *****************
  4485 ;; Defined at:
  4486 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\EEP\write_B.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  badd            2   14[COMRAM] unsigned int 
  4489 ;;  bdat            1   16[COMRAM] unsigned char 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  GIE_BIT_VAL     1   17[COMRAM] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg, status,2
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4501 ;;      Params:         3       0       0       0       0       0       0
  4502 ;;      Locals:         1       0       0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0
  4504 ;;      Totals:         4       0       0       0       0       0       0
  4505 ;;Total ram usage:        4 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text13
  4516  00157C                     __ptext13:
  4517                           	opt stack 0
  4518  00157C                     _Write_b_eep:
  4519                           	opt stack 29
  4520                           
  4521                           ;incstack = 0
  4522  00157C  FFFF               	dw	65535
  4523  00157E  0E00               	movlw	0
  4524  001580  6E12               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4525  001582  C00F  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  4526  001586  C011  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  4527  00158A  9EA6               	bcf	4006,7,c	;volatile
  4528  00158C  9CA6               	bcf	4006,6,c	;volatile
  4529  00158E  84A6               	bsf	4006,2,c	;volatile
  4530  001590  0E00               	movlw	0
  4531  001592  BEF2               	btfsc	intcon,7,c	;volatile
  4532  001594  0E01               	movlw	1
  4533  001596  6E12               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4534  001598  9EF2               	bcf	intcon,7,c	;volatile
  4535  00159A  0E55               	movlw	85
  4536  00159C  6EA7               	movwf	4007,c	;volatile
  4537  00159E  0EAA               	movlw	170
  4538  0015A0  6EA7               	movwf	4007,c	;volatile
  4539  0015A2  82A6               	bsf	4006,1,c	;volatile
  4540  0015A4                     l217:
  4541  0015A4  B2A6               	btfsc	4006,1,c	;volatile
  4542  0015A6  D7FE               	goto	l217
  4543  0015A8  B012               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  4544  0015AA  D002               	bra	u115
  4545  0015AC  9EF2               	bcf	intcon,7,c	;volatile
  4546  0015AE  D001               	bra	u116
  4547  0015B0                     u115:
  4548  0015B0  8EF2               	bsf	intcon,7,c	;volatile
  4549  0015B2                     u116:
  4550  0015B2  94A6               	bcf	4006,2,c	;volatile
  4551  0015B4  0012               	return	
  4552  0015B6  FFFF               	dw	65535	; errata NOP
  4553  0015B8                     __end_of_Write_b_eep:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           prodh	equ	0xFF4
  4560                           prodl	equ	0xFF3
  4561                           intcon	equ	0xFF2
  4562                           postinc0	equ	0xFEE
  4563                           wreg	equ	0xFE8
  4564                           postdec1	equ	0xFE5
  4565                           fsr1l	equ	0xFE1
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function _SetChanADC *****************
  4569 ;; Defined at:
  4570 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcsetch.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  channel         1    wreg     unsigned char 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  channel         1   15[COMRAM] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4584 ;;      Params:         0       0       0       0       0       0       0
  4585 ;;      Locals:         1       0       0       0       0       0       0
  4586 ;;      Temps:          1       0       0       0       0       0       0
  4587 ;;      Totals:         2       0       0       0       0       0       0
  4588 ;;Total ram usage:        2 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_main
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text14
  4599  001646                     __ptext14:
  4600                           	opt stack 0
  4601  001646                     _SetChanADC:
  4602                           	opt stack 29
  4603                           
  4604                           ;incstack = 0
  4605  001646  FFFF               	dw	65535
  4606                           
  4607                           ;SetChanADC@channel stored from wreg
  4608  001648  6E10               	movwf	SetChanADC@channel,c
  4609  00164A  CFC2 F00F          	movff	4034,??_SetChanADC	;volatile
  4610  00164E  0EC7               	movlw	199
  4611  001650  160F               	andwf	??_SetChanADC,f,c
  4612  001652  5010               	movf	SetChanADC@channel,w,c
  4613  001654  0B38               	andlw	56
  4614  001656  100F               	iorwf	??_SetChanADC,w,c
  4615  001658  6EC2               	movwf	4034,c	;volatile
  4616  00165A  0012               	return	
  4617  00165C  FFFF               	dw	65535	; errata NOP
  4618  00165E                     __end_of_SetChanADC:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           postinc0	equ	0xFEE
  4628                           wreg	equ	0xFE8
  4629                           postdec1	equ	0xFE5
  4630                           fsr1l	equ	0xFE1
  4631                           status	equ	0xFD8
  4632                           
  4633 ;; *************** function _Read_b_eep *****************
  4634 ;; Defined at:
  4635 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\EEP\read_B.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  badd            2   14[COMRAM] unsigned int 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      unsigned char 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4649 ;;      Params:         2       0       0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0
  4652 ;;      Totals:         2       0       0       0       0       0       0
  4653 ;;Total ram usage:        2 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_main
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text15
  4664  00165E                     __ptext15:
  4665                           	opt stack 0
  4666  00165E                     _Read_b_eep:
  4667                           	opt stack 29
  4668                           
  4669                           ;incstack = 0
  4670  00165E  FFFF               	dw	65535
  4671  001660  C00F  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  4672  001664  9CA6               	bcf	4006,6,c	;volatile
  4673  001666  9EA6               	bcf	4006,7,c	;volatile
  4674  001668  80A6               	bsf	4006,0,c	;volatile
  4675  00166A  F000               	nop	
  4676  00166C  F000               	nop	
  4677  00166E  50A8               	movf	4008,w,c	;volatile
  4678  001670  0012               	return	
  4679  001672  FFFF               	dw	65535	; errata NOP
  4680  001674                     __end_of_Read_b_eep:
  4681                           	opt stack 0
  4682                           tblptru	equ	0xFF8
  4683                           tblptrh	equ	0xFF7
  4684                           tblptrl	equ	0xFF6
  4685                           tablat	equ	0xFF5
  4686                           prodh	equ	0xFF4
  4687                           prodl	equ	0xFF3
  4688                           intcon	equ	0xFF2
  4689                           postinc0	equ	0xFEE
  4690                           wreg	equ	0xFE8
  4691                           postdec1	equ	0xFE5
  4692                           fsr1l	equ	0xFE1
  4693                           status	equ	0xFD8
  4694                           
  4695 ;; *************** function _ReadADC *****************
  4696 ;; Defined at:
  4697 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcread.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2   14[COMRAM] int 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4711 ;;      Params:         2       0       0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0
  4714 ;;      Totals:         2       0       0       0       0       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    1
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text16
  4726  001694                     __ptext16:
  4727                           	opt stack 0
  4728  001694                     _ReadADC:
  4729                           	opt stack 29
  4730                           
  4731                           ;incstack = 0
  4732  001694  FFFF               	dw	65535
  4733  001696  50C4               	movf	4036,w,c	;volatile
  4734  001698  6E10               	movwf	?_ReadADC+1,c
  4735  00169A  50C3               	movf	4035,w,c	;volatile
  4736  00169C  6E0F               	movwf	?_ReadADC,c
  4737  00169E  0012               	return	
  4738  0016A0  FFFF               	dw	65535	; errata NOP
  4739  0016A2                     __end_of_ReadADC:
  4740                           	opt stack 0
  4741                           tblptru	equ	0xFF8
  4742                           tblptrh	equ	0xFF7
  4743                           tblptrl	equ	0xFF6
  4744                           tablat	equ	0xFF5
  4745                           prodh	equ	0xFF4
  4746                           prodl	equ	0xFF3
  4747                           intcon	equ	0xFF2
  4748                           postinc0	equ	0xFEE
  4749                           wreg	equ	0xFE8
  4750                           postdec1	equ	0xFE5
  4751                           fsr1l	equ	0xFE1
  4752                           status	equ	0xFD8
  4753                           
  4754 ;; *************** function _OpenADC *****************
  4755 ;; Defined at:
  4756 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcopen.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  config          1    wreg     unsigned char 
  4759 ;;  config2         1   14[COMRAM] unsigned char 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  config          1   16[COMRAM] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;		None               void
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4771 ;;      Params:         1       0       0       0       0       0       0
  4772 ;;      Locals:         1       0       0       0       0       0       0
  4773 ;;      Temps:          1       0       0       0       0       0       0
  4774 ;;      Totals:         3       0       0       0       0       0       0
  4775 ;;Total ram usage:        3 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    1
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text17
  4786  0015EE                     __ptext17:
  4787                           	opt stack 0
  4788  0015EE                     _OpenADC:
  4789                           	opt stack 29
  4790                           
  4791                           ;incstack = 0
  4792  0015EE  FFFF               	dw	65535
  4793                           
  4794                           ;OpenADC@config stored from wreg
  4795  0015F0  6E11               	movwf	OpenADC@config,c
  4796  0015F2  0E00               	movlw	0
  4797  0015F4  6EC2               	movwf	4034,c	;volatile
  4798  0015F6  C011  FFC1         	movff	OpenADC@config,4033	;volatile
  4799  0015FA  C00F  F010         	movff	OpenADC@config2,??_OpenADC
  4800  0015FE  0E38               	movlw	56
  4801  001600  1610               	andwf	??_OpenADC,f,c
  4802  001602  4411               	rlncf	OpenADC@config,w,c
  4803  001604  46E8               	rlncf	wreg,f,c
  4804  001606  0BFC               	andlw	252
  4805  001608  0BC0               	andlw	192
  4806  00160A  1010               	iorwf	??_OpenADC,w,c
  4807  00160C  6EC2               	movwf	4034,c	;volatile
  4808  00160E  AE0F               	btfss	OpenADC@config2,7,c
  4809  001610  D003               	goto	l180
  4810  001612  9C9E               	bcf	3998,6,c	;volatile
  4811  001614  8C9D               	bsf	3997,6,c	;volatile
  4812  001616  8CF2               	bsf	intcon,6,c	;volatile
  4813  001618                     l180:
  4814  001618  80C2               	bsf	4034,0,c	;volatile
  4815  00161A  0012               	return	
  4816  00161C  FFFF               	dw	65535	; errata NOP
  4817  00161E                     __end_of_OpenADC:
  4818                           	opt stack 0
  4819                           tblptru	equ	0xFF8
  4820                           tblptrh	equ	0xFF7
  4821                           tblptrl	equ	0xFF6
  4822                           tablat	equ	0xFF5
  4823                           prodh	equ	0xFF4
  4824                           prodl	equ	0xFF3
  4825                           intcon	equ	0xFF2
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           postdec1	equ	0xFE5
  4829                           fsr1l	equ	0xFE1
  4830                           status	equ	0xFD8
  4831                           
  4832 ;; *************** function _ConvertADC *****************
  4833 ;; Defined at:
  4834 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcconv.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;		None
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;		None               void
  4841 ;; Registers used:
  4842 ;;		None
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4848 ;;      Params:         0       0       0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0
  4851 ;;      Totals:         0       0       0       0       0       0       0
  4852 ;;Total ram usage:        0 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    1
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text18
  4863  0016A2                     __ptext18:
  4864                           	opt stack 0
  4865  0016A2                     _ConvertADC:
  4866                           	opt stack 29
  4867                           
  4868                           ;incstack = 0
  4869  0016A2  FFFF               	dw	65535
  4870  0016A4  84C2               	bsf	4034,2,c	;volatile
  4871  0016A6  0012               	return	
  4872  0016A8  FFFF               	dw	65535	; errata NOP
  4873  0016AA                     __end_of_ConvertADC:
  4874                           	opt stack 0
  4875                           tblptru	equ	0xFF8
  4876                           tblptrh	equ	0xFF7
  4877                           tblptrl	equ	0xFF6
  4878                           tablat	equ	0xFF5
  4879                           prodh	equ	0xFF4
  4880                           prodl	equ	0xFF3
  4881                           intcon	equ	0xFF2
  4882                           postinc0	equ	0xFEE
  4883                           wreg	equ	0xFE8
  4884                           postdec1	equ	0xFE5
  4885                           fsr1l	equ	0xFE1
  4886                           status	equ	0xFD8
  4887                           
  4888 ;; *************** function _BusyADC *****************
  4889 ;; Defined at:
  4890 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\ADC\adcbusy.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      unsigned char 
  4897 ;; Registers used:
  4898 ;;		wreg
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4904 ;;      Params:         0       0       0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0       0       0
  4907 ;;      Totals:         0       0       0       0       0       0       0
  4908 ;;Total ram usage:        0 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    1
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_main
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text19
  4919  001684                     __ptext19:
  4920                           	opt stack 0
  4921  001684                     _BusyADC:
  4922                           	opt stack 29
  4923                           
  4924                           ;incstack = 0
  4925  001684  FFFF               	dw	65535
  4926  001686  A4C2               	btfss	4034,2,c	;volatile
  4927  001688  D002               	goto	u90
  4928  00168A  0E01               	movlw	1
  4929  00168C  D001               	goto	l160
  4930  00168E                     u90:
  4931  00168E  0E00               	movlw	0
  4932  001690                     l160:
  4933  001690  0012               	return	
  4934  001692  FFFF               	dw	65535	; errata NOP
  4935  001694                     __end_of_BusyADC:
  4936                           	opt stack 0
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           postdec1	equ	0xFE5
  4947                           fsr1l	equ	0xFE1
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function _tmr_int *****************
  4951 ;; Defined at:
  4952 ;;		line 600 in file "E:\Study Material\XC8 PROJECTS\Analog\CO2.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;		None               void
  4959 ;; Registers used:
  4960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4966 ;;      Params:         0       0       0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0       0
  4968 ;;      Temps:         14       0       0       0       0       0       0
  4969 ;;      Totals:        14       0       0       0       0       0       0
  4970 ;;Total ram usage:       14 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		Interrupt level 2
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	intcode
  4980  000008                     __pintcode:
  4981                           	opt stack 0
  4982  000008                     _tmr_int:
  4983                           	opt stack 28
  4984                           
  4985                           ;incstack = 0
  4986  000008  FFFF               	dw	65535	; errata NOP
  4987  00000A  CFFA F001          	movff	pclath,??_tmr_int
  4988  00000E  CFFB F002          	movff	pclatu,??_tmr_int+1
  4989  000012  CFE9 F003          	movff	fsr0l,??_tmr_int+2
  4990  000016  CFEA F004          	movff	fsr0h,??_tmr_int+3
  4991  00001A  CFE1 F005          	movff	fsr1l,??_tmr_int+4
  4992  00001E  CFE2 F006          	movff	fsr1h,??_tmr_int+5
  4993  000022  CFD9 F007          	movff	fsr2l,??_tmr_int+6
  4994  000026  CFDA F008          	movff	fsr2h,??_tmr_int+7
  4995  00002A  CFF3 F009          	movff	prodl,??_tmr_int+8
  4996  00002E  CFF4 F00A          	movff	prodh,??_tmr_int+9
  4997  000032  CFF6 F00B          	movff	tblptrl,??_tmr_int+10
  4998  000036  CFF7 F00C          	movff	tblptrh,??_tmr_int+11
  4999  00003A  CFF8 F00D          	movff	tblptru,??_tmr_int+12
  5000  00003E  CFF5 F00E          	movff	tablat,??_tmr_int+13
  5001                           
  5002                           ;CO2.c: 602: if(adr == 7)
  5003  000042  5071               	movf	_adr,w,c	;volatile
  5004  000044  0A07               	xorlw	7
  5005  000046  A4D8               	btfss	status,2,c
  5006  000048  D003               	goto	i2l1850
  5007                           
  5008                           ;CO2.c: 603: {
  5009                           ;CO2.c: 604: RB0 = ~(RB0);
  5010  00004A  7081               	btg	3969,0,c	;volatile
  5011                           
  5012                           ;CO2.c: 605: adr = 0;
  5013  00004C  0E00               	movlw	0
  5014  00004E  6E71               	movwf	_adr,c	;volatile
  5015  000050                     i2l1850:
  5016                           
  5017                           ;CO2.c: 606: }
  5018                           ;CO2.c: 607: PORTE = adr;
  5019  000050  C071  FF84         	movff	_adr,3972	;volatile
  5020                           
  5021                           ;CO2.c: 608: PORTB = PORTB & 0x0F;
  5022  000054  5081               	movf	3969,w,c	;volatile
  5023  000056  0B0F               	andlw	15
  5024  000058  6E81               	movwf	3969,c	;volatile
  5025                           
  5026                           ;CO2.c: 609: PORTB = PORTB | values[count];
  5027  00005A  5072               	movf	_count,w,c	;volatile
  5028  00005C  0D01               	mullw	1
  5029  00005E  0E5B               	movlw	low _values	;volatile
  5030  000060  24F3               	addwf	prodl,w,c
  5031  000062  6ED9               	movwf	fsr2l,c
  5032  000064  0E00               	movlw	high _values	;volatile
  5033  000066  20F4               	addwfc	prodh,w,c
  5034  000068  6EDA               	movwf	fsr2h,c
  5035  00006A  50DF               	movf	indf2,w,c
  5036  00006C  1081               	iorwf	3969,w,c	;volatile
  5037  00006E  6E81               	movwf	3969,c	;volatile
  5038                           
  5039                           ;CO2.c: 610: adr = adr + 1;
  5040  000070  2871               	incf	_adr,w,c	;volatile
  5041  000072  6E71               	movwf	_adr,c	;volatile
  5042                           
  5043                           ;CO2.c: 611: count = count + 1;
  5044  000074  2872               	incf	_count,w,c	;volatile
  5045  000076  6E72               	movwf	_count,c	;volatile
  5046                           
  5047                           ;CO2.c: 612: if(count == 14)
  5048  000078  5072               	movf	_count,w,c	;volatile
  5049  00007A  0A0E               	xorlw	14
  5050  00007C  A4D8               	btfss	status,2,c
  5051  00007E  D002               	goto	i2l1864
  5052                           
  5053                           ;CO2.c: 613: {
  5054                           ;CO2.c: 614: count = 0;
  5055  000080  0E00               	movlw	0
  5056  000082  6E72               	movwf	_count,c	;volatile
  5057  000084                     i2l1864:
  5058                           
  5059                           ;CO2.c: 615: }
  5060                           ;CO2.c: 616: timer = timer - 1;
  5061  000084  0EFF               	movlw	255
  5062  000086  246F               	addwf	_timer,w,c	;volatile
  5063  000088  6E6F               	movwf	_timer,c	;volatile
  5064  00008A  0EFF               	movlw	255
  5065  00008C  2070               	addwfc	_timer+1,w,c	;volatile
  5066  00008E  6E70               	movwf	_timer+1,c	;volatile
  5067                           
  5068                           ;CO2.c: 617: temperature_timer = temperature_timer - 1;
  5069  000090  0EFF               	movlw	255
  5070  000092  2469               	addwf	_temperature_timer,w,c	;volatile
  5071  000094  6E69               	movwf	_temperature_timer,c	;volatile
  5072  000096  0EFF               	movlw	255
  5073  000098  206A               	addwfc	_temperature_timer+1,w,c	;volatile
  5074  00009A  6E6A               	movwf	_temperature_timer+1,c	;volatile
  5075                           
  5076                           ;CO2.c: 618: T0IF = 0;
  5077  00009C  94F2               	bcf	intcon,2,c	;volatile
  5078                           
  5079                           ;CO2.c: 619: TMR0 = 0;
  5080  00009E  0E00               	movlw	0
  5081  0000A0  6ED7               	movwf	4055,c	;volatile
  5082  0000A2  0E00               	movlw	0
  5083  0000A4  6ED6               	movwf	4054,c	;volatile
  5084                           
  5085                           ;CO2.c: 620: return;
  5086  0000A6  C00E  FFF5         	movff	??_tmr_int+13,tablat
  5087  0000AA  C00D  FFF8         	movff	??_tmr_int+12,tblptru
  5088  0000AE  C00C  FFF7         	movff	??_tmr_int+11,tblptrh
  5089  0000B2  C00B  FFF6         	movff	??_tmr_int+10,tblptrl
  5090  0000B6  C00A  FFF4         	movff	??_tmr_int+9,prodh
  5091  0000BA  C009  FFF3         	movff	??_tmr_int+8,prodl
  5092  0000BE  C008  FFDA         	movff	??_tmr_int+7,fsr2h
  5093  0000C2  C007  FFD9         	movff	??_tmr_int+6,fsr2l
  5094  0000C6  C006  FFE2         	movff	??_tmr_int+5,fsr1h
  5095  0000CA  C005  FFE1         	movff	??_tmr_int+4,fsr1l
  5096  0000CE  C004  FFEA         	movff	??_tmr_int+3,fsr0h
  5097  0000D2  C003  FFE9         	movff	??_tmr_int+2,fsr0l
  5098  0000D6  C002  FFFB         	movff	??_tmr_int+1,pclatu
  5099  0000DA  C001  FFFA         	movff	??_tmr_int,pclath
  5100  0000DE  0011               	retfie		f
  5101  0000E0  FFFF               	dw	65535	; errata NOP
  5102  0000E2                     __end_of_tmr_int:
  5103                           	opt stack 0
  5104  0000E2  FFFF               	dw	65535	; assembler added errata NOP
  5105                           pclatu	equ	0xFFB
  5106                           pclath	equ	0xFFA
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           prodh	equ	0xFF4
  5112                           prodl	equ	0xFF3
  5113                           intcon	equ	0xFF2
  5114                           postinc0	equ	0xFEE
  5115                           fsr0h	equ	0xFEA
  5116                           fsr0l	equ	0xFE9
  5117                           wreg	equ	0xFE8
  5118                           postdec1	equ	0xFE5
  5119                           fsr1h	equ	0xFE2
  5120                           fsr1l	equ	0xFE1
  5121                           indf2	equ	0xFDF
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           status	equ	0xFD8
  5125                           pclatu	equ	0xFFB
  5126                           pclath	equ	0xFFA
  5127                           tblptru	equ	0xFF8
  5128                           tblptrh	equ	0xFF7
  5129                           tblptrl	equ	0xFF6
  5130                           tablat	equ	0xFF5
  5131                           prodh	equ	0xFF4
  5132                           prodl	equ	0xFF3
  5133                           intcon	equ	0xFF2
  5134                           postinc0	equ	0xFEE
  5135                           fsr0h	equ	0xFEA
  5136                           fsr0l	equ	0xFE9
  5137                           wreg	equ	0xFE8
  5138                           postdec1	equ	0xFE5
  5139                           fsr1h	equ	0xFE2
  5140                           fsr1l	equ	0xFE1
  5141                           indf2	equ	0xFDF
  5142                           fsr2h	equ	0xFDA
  5143                           fsr2l	equ	0xFD9
  5144                           status	equ	0xFD8
  5145                           
  5146                           	psect	rparam
  5147  0000                     pclatu	equ	0xFFB
  5148                           pclath	equ	0xFFA
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           postinc0	equ	0xFEE
  5157                           fsr0h	equ	0xFEA
  5158                           fsr0l	equ	0xFE9
  5159                           wreg	equ	0xFE8
  5160                           postdec1	equ	0xFE5
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           indf2	equ	0xFDF
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     90     114
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___lbtoft
    ___ftdiv->___awtoft
    ___ftadd->___awtoft
    ___ftadd->___lbtoft
    ___awtoft->___awdiv
    ___awtoft->___ftpack

Critical Paths under _tmr_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tmr_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tmr_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tmr_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tmr_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   19163
                                             56 COMRAM    34    34      0
                            _BusyADC
                         _ConvertADC
                            _OpenADC
                            _ReadADC
                         _Read_b_eep
                         _SetChanADC
                        _Write_b_eep
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     211
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     317
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    1755
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     324
                                             41 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2146
                                             26 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     302
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2222
                                             26 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    2793
                                             26 COMRAM    12     6      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2065
                                             22 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1740
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1467
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1573
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Write_b_eep                                          4     1      3    1105
                                             14 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_b_eep                                           2     0      2     280
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              3     2      1     113
                                             14 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _tmr_int                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _OpenADC
   _ReadADC
   _Read_b_eep
   _SetChanADC
   _Write_b_eep
   ___awdiv
   ___awmod
   ___awtoft
     ___awdiv (ARG)
     ___ftpack (ARG)
   ___ftadd
     ___awtoft (ARG)
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___awtoft (ARG)
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
   ___lbtoft
     ___ftpack
   ___lwdiv
   ___lwmod

 _tmr_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5A      72       1       89.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      15        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Jun 04 13:56:02 2015

                      l82 06EC                        u90 168E              ___awdiv@sign 0014  
            ___ftadd@exp1 0026              ___ftadd@exp2 0025              ___ftadd@sign 0024  
                     l105 0820                       l130 0A8C                       l132 0A90  
                     l124 0A60                       l141 0C1C                       l134 0B08  
                     l143 0C98                       l160 1690                       l136 0B80  
                     l217 15A4                       l146 0D32                       l138 0BFA  
                     l180 1618                       l601 110C                       l613 1062  
                     l607 13FC                       l529 12C0                       l633 1214  
                     l570 0E42                       l581 0EEE                       l590 0F0A  
                     l566 0E16                       l567 0F7A                       l735 14DE  
                     l840 1276                       l832 1238                       l745 1570  
                     l842 1294                       l834 1242                       l922 0E50  
                     l844 129E                       l836 1260                       l828 122A  
                     l916 0E24                       l950 0EBC                       l598 113C  
                     l944 0EA2                       l946 0EAC                       l938 0E80  
                     l964 0F26                       l956 0EDE                       l948 0EB4  
                     l974 0F56                       l958 0EE8                       l990 10A8  
                     l984 1082                       _RB0 007C08                       _RB1 007C09  
                     _RC0 007C10                       _RB2 007C0A                       _RA4 007C04  
                     _RC1 007C11                       _RC2 007C12                       _RC3 007C13  
                     _RC6 007C16                       _RC7 007C17                       u121 0DE0  
                     u115 15B0                       u131 0DF4                       u116 15B2  
                     u401 0FAA                       u410 0FB2                       u331 1078  
                     u351 1092                       u360 109A                       u601 1152  
                     u620 117A                       u381 0F90                       u625 1172  
                     u650 11CC                       _adr 0071      __size_of_Write_b_eep 003C  
            ___awmod@sign 0014                       prod 000FF3                       wreg 000FE8  
            ___ftdiv@cntr 0027              ___ftdiv@sign 0029                      l1010 10E6  
                    l1030 0F9A                      l1112 1360                      l1104 1348  
                    l1050 0FF2                      l1210 11C6                      l1108 1352  
                    l1140 1470                      l1132 1450                      l1124 1426  
                    l1060 101A                      l1036 0FC0                      l1220 11EE  
                    l1134 1458                      l1054 1002                      l1206 11B6  
                    l1080 12EA                      l1136 145C                      l1144 147A  
                    l1128 1442                      l1160 1510                      l1064 102A  
                    l1224 1204                      l1216 11DE                      l1240 14B4  
                    l1218 11EA                      l1250 14D4                      l1242 14B8  
                    l1092 1320                      l1148 1488                      l1172 13CE  
                    l1260 154E                      l1412 046C                      l1404 03FE  
                    l1094 1328                      l1086 130A                      l1238 14AC  
                    l1262 1552                      l1430 050A                      l1096 132C  
                    l1168 139E                      l1178 13FA                      l1266 1566  
                    l1258 1546                      l1426 04FA                      l1418 0488  
                    l1610 0938                      l1370 033E                      l1188 115C  
                    l1508 06A2                      l1380 0366                      l1462 05A2  
                    l1454 055E                      l1632 09E4                      l1618 095A  
                    l1570 084C                      l1474 05E8                      l1660 0A6E  
                    l1636 0A08                      l1652 0A58                      l1476 05F6  
                    l1564 082E                      l1494 0666                      l1398 03F0  
                    l1752 0C0E                      l1842 0D98                      l1594 08E8  
                    l1588 08D8                      l1786 0CAC               main@control 004B  
                    _T0IF 007F92                      u1207 018A                      u1217 01A0  
                    u1307 0C8E                      u1227 01B6                      u1317 0CDC  
                    u1237 01F2                      u1327 0CFE                      u1247 024A  
                    u1337 0D20                      u1257 0338                      u1347 0D5E  
                    u1267 0A70                      u1357 0D76                      u1277 0B00  
                    u1367 0D8E                      u1287 0B76                      u1297 0BF0  
                    _RCON 000FD0                      _TMR0 000FD6                      _main 00E8  
            ___ftpack@arg 000F              ___ftpack@exp 0012                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr0l 000FE9                      fsr2h 000FDA  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
                    pclat 000FFA                      prodh 000FF4                      prodl 000FF3  
                    start 00E4              ___ftmul@cntr 0028              ___ftmul@sign 0029  
         __end_of_BusyADC 1694           __end_of_ReadADC 16A2              main@debounce 0049  
         __end_of_OpenADC 161E              ___fttol@exp1 0038              ___fttol@lval 0034  
                   ?_main 0001           __end_of___awdiv 136C                     _EEADR 000FA9  
         __end_of___ftadd 0F7E           __end_of___awmod 1494           __end_of___ftdiv 1140  
         __end_of___ftmul 1066                     _T0CON 000FD5           ___awdiv@divisor 0011  
         __end_of___fttol 1218           __end_of___lwdiv 14EA           __end_of___lwmod 157C  
         ___awdiv@counter 0013                     _PORTB 000F81                     _PORTD 000F83  
                   _PORTE 000F84                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISC 000F94                     _TRISD 000F95                     _TRISE 000F96  
            main@hundreds 0055            Read_b_eep@badd 000F             ___awtoft@sign 001A  
  Write_b_eep@GIE_BIT_VAL 0012                     _count 0072              main@set_flow 0056  
           ___ftpack@sign 0013                     _timer 006F                _ConvertADC 16A2  
                   tablat 000FF5           __end_of_tmr_int 00E2                     status 000FD8  
         __initialization 15B8              __end_of_main 0DCE                _Read_b_eep 165E  
                  ??_main 0039             ___fttol@sign1 0033             main@hand_flag 004D  
           __activetblptr 000002                _SetChanADC 1646         main@real_pressure 0053  
                  _ADCON0 000FC2                    _ADCON1 000FC1                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    _EEDATA 000FA8                    _EECON2 000FA7  
        ___awdiv@dividend 000F          __end_of___awtoft 1536          __end_of___ftpack 12C4  
        __end_of___lbtoft 1646                    i2l1850 0050                    i2l1864 0084  
                  _INTCON 000FF2         _temperature_timer 0069                 ??_BusyADC 000F  
               ??_ReadADC 0011                 ??_OpenADC 0010             main@real_temp 0043  
                  ___ftge 136C                 ??___awdiv 0013                 ??___ftadd 0021  
               ??___awmod 0013                 ??___ftdiv 0021                 ??___ftmul 0021  
               ??___fttol 002E                 ??___lwdiv 0013                 ??___lwmod 0013  
                  clear_0 15BE          ___awdiv@quotient 0015           ___awmod@divisor 0011  
                  _values 005B           ___awmod@counter 0013             main@temp_time 004C  
   ___ftmul@f3_as_product 0024              __pdataCOMRAM 005B                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                 ??_tmr_int 0001  
             ?_ConvertADC 0001                __accesstop 0080   __end_of__initialization 15E4  
              ___ftadd@f1 001B                ___ftadd@f2 001E                ___ftge@ff1 000F  
              ___ftge@ff2 0012                ___ftdiv@f1 001B                ___ftdiv@f2 001E  
              ___ftdiv@f3 0024                ___awtoft@c 0017                ___lbtoft@c 001A  
              ___ftmul@f1 001B                ___ftmul@f2 001E                ___fttol@f1 002A  
          __pcstackCOMRAM 0001               ?_Read_b_eep 000F               ?_SetChanADC 0001  
     main@actual_pressure 0057                   ?___ftge 000F       __size_of_ConvertADC 0008  
               ?___awtoft 0017                 ?___ftpack 000F                 ?___lbtoft 0017  
           ??_Write_b_eep 0012       __size_of_Read_b_eep 0016                   _BusyADC 1684  
                 _ReadADC 1694                   _OpenADC 15EE                   __Hparam 0000  
     __size_of_SetChanADC 0018                   __Lparam 0000           __size_of___ftge 0094  
                 ___awdiv 12C4                   ___ftadd 0DCE                   ___awmod 1400  
                 ___ftdiv 1066                   ___ftmul 0F7E                   ___fttol 1140  
                 ___lwdiv 1494                   ___lwmod 1536                   __pcinit 15B8  
              ??___awtoft 001A                ??___ftpack 0014                ??___lbtoft 001A  
                 __ramtop 0600                   __ptext0 00E8                   __ptext1 1536  
                 __ptext2 1494                   __ptext3 161E                   __ptext4 1140  
                 __ptext5 0F7E                   __ptext6 136C                   __ptext7 1066  
                 __ptext8 0DCE                   __ptext9 14EA          ___awmod@dividend 000F  
     __end_of_Write_b_eep 15B8                   _tmr_int 0008                   main@air 0054  
          OpenADC@config2 000F      end_of_initialization 15E4             __Lmediumconst 0000  
                 postdec1 000FE5                   postinc0 000FEE              ??_ConvertADC 000F  
             ___ftdiv@exp 0028                main@volume 004E               ___ftmul@exp 0027  
            ??_Read_b_eep 0011            __end_of___ftge 1400             __pidataCOMRAM 1674  
      __end_of_ConvertADC 16AA               _Write_b_eep 157C              ??_SetChanADC 000F  
     start_initialization 15B8           main@actual_flow 004A        __end_of_Read_b_eep 1674  
      __end_of_SetChanADC 165E                  ??___ftge 0015      main@portd_old_status 0046  
           _analog_result 006B         __size_of___awtoft 004C         __size_of___ftpack 00AC  
       __size_of___lbtoft 0028               __pbssCOMRAM 006B                  ?_BusyADC 0001  
                ?_ReadADC 000F                  ?_OpenADC 000F          ___lwdiv@dividend 000F  
               __pintcode 0008                  ?___awdiv 000F                  ?___ftadd 001B  
                ?___awmod 000F                  ?___ftdiv 001B                  ?___ftmul 001B  
                ?___fttol 002A                  ?___lwdiv 000F                  ?___lwmod 000F  
                ?_tmr_int 0001          ___lwdiv@quotient 0013             OpenADC@config 0011  
                _PIE1bits 000F9D                  _PIR1bits 000F9E                _ADCON0bits 000FC2  
        main@set_pressure 0058           Write_b_eep@badd 000F           Write_b_eep@bdat 0011  
               main@units 0059                 main@volve 0047        _analog_temp_result 006D  
               copy_data0 15D8                _EECON1bits 000FA6          __size_of_BusyADC 0010  
         main@real_volume 0050          __size_of_ReadADC 000E                  __Hrparam 0000  
        __size_of_OpenADC 0030                  __Lrparam 0000          __size_of___awdiv 00A8  
        __size_of___ftadd 01B0          __size_of___awmod 0094          __size_of___ftdiv 00DA  
        __size_of___ftmul 00E8          __size_of___fttol 00D8          __size_of___lwdiv 0056  
        __size_of___lwmod 0046                  ___awtoft 14EA                  ___ftpack 1218  
                ___lbtoft 161E              ?_Write_b_eep 000F           ___lwdiv@divisor 0011  
         ___lwdiv@counter 0015                  __ptext10 1218                  __ptext11 1400  
                __ptext12 12C4                  __ptext13 157C                  __ptext14 1646  
                __ptext15 165E                  __ptext16 1694                  __ptext17 15EE  
                __ptext18 16A2                  __ptext19 1684          __size_of_tmr_int 00DA  
           __size_of_main 0CE6                  main@temp 0048                  main@tens 005A  
         main@temp_volume 0040                _INTCONbits 000FF2                  intlevel2 16AA  
        ___lwmod@dividend 000F         SetChanADC@channel 0010           ___lwmod@divisor 0011  
         ___lwmod@counter 0013  
