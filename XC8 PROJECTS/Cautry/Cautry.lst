

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Sep 19 20:30:19 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	idataCOMRAM
    20  0002DC                     __pidataCOMRAM:
    21                           	opt stack 0
    22                           
    23                           ;initializer for _Display_Values
    24  0002DC  30                 	db	48
    25  0002DD  31                 	db	49
    26  0002DE  32                 	db	50
    27  0002DF  33                 	db	51
    28  0002E0  34                 	db	52
    29  0002E1  35                 	db	53
    30  0002E2  36                 	db	54
    31  0002E3  37                 	db	55
    32  0002E4  38                 	db	56
    33  0002E5  39                 	db	57
    34  0002E6  3A                 	db	58
    35  0002E7  3B                 	db	59
    36  0002E8  30                 	db	48
    37  0002E9  30                 	db	48
    38                           
    39                           ;initializer for _Command
    40  0002EA  02                 	db	2
    41  0000                     _ADCON1	set	4033
    42  0000                     _INTCONbits	set	4082
    43  0000                     _PIE1	set	3997
    44  0000                     _PIE1bits	set	3997
    45  0000                     _PIR1bits	set	3998
    46  0000                     _PORTB	set	3969
    47  0000                     _PORTC	set	3970
    48  0000                     _PORTD	set	3971
    49  0000                     _RCREG	set	4014
    50  0000                     _RCSTA	set	4011
    51  0000                     _RCSTAbits	set	4011
    52  0000                     _SPBRG	set	4015
    53  0000                     _TRISA	set	3986
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISC	set	3988
    56  0000                     _TRISCbits	set	3988
    57  0000                     _TRISD	set	3989
    58  0000                     _TRISE	set	3990
    59  0000                     _TXREG	set	4013
    60  0000                     _TXSTAbits	set	4012
    61  0000                     _RA0	set	31744
    62  0000                     _RBIE	set	32659
    63  0000                     _RBIF	set	32656
    64  0000                     _RC2	set	31762
    65  0000                     _RCIE	set	31981
    66  0000                     _RCIF	set	31989
    67  0000                     _RD0	set	31768
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  000212                     __pcinit:
    73                           	opt stack 0
    74  000212                     start_initialization:
    75                           	opt stack 0
    76  000212                     __initialization:
    77                           	opt stack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (6 bytes)
    80  000212  6A2A               	clrf	(__pbssCOMRAM+5)& (0+255),c
    81  000214  6A29               	clrf	(__pbssCOMRAM+4)& (0+255),c
    82  000216  6A28               	clrf	(__pbssCOMRAM+3)& (0+255),c
    83  000218  6A27               	clrf	(__pbssCOMRAM+2)& (0+255),c
    84  00021A  6A26               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85  00021C  6A25               	clrf	__pbssCOMRAM& (0+255),c
    86                           
    87                           ; Initialize objects allocated to COMRAM (15 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  00021E  0EDC               	movlw	low __pidataCOMRAM
    90  000220  6EF6               	movwf	tblptrl,c
    91  000222  0E02               	movlw	high __pidataCOMRAM
    92  000224  6EF7               	movwf	tblptrh,c
    93  000226  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  000228  6EF8               	movwf	tblptru,c
    95  00022A  EE00  F016         	lfsr	0,__pdataCOMRAM
    96  00022E  EE10 F00F          	lfsr	1,15
    97  000232                     copy_data0:
    98  000232  0009               	tblrd		*+
    99  000234  CFF5 FFEE          	movff	tablat,postinc0
   100  000238  50E5               	movf	postdec1,w,c
   101  00023A  50E1               	movf	fsr1l,w,c
   102  00023C  E1FA               	bnz	copy_data0
   103  00023E                     end_of_initialization:
   104                           	opt stack 0
   105  00023E                     __end_of__initialization:
   106                           	opt stack 0
   107  00023E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  000240  6EF8               	movwf	tblptru,c
   109  000242  0100               	movlb	0
   110  000244  EF93  F000         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           postdec1	equ	0xFE5
   117                           fsr1l	equ	0xFE1
   118                           
   119                           	psect	bssCOMRAM
   120  000025                     __pbssCOMRAM:
   121                           	opt stack 0
   122  000025                     _Send_Value:
   123                           	opt stack 0
   124  000025                     	ds	1
   125  000026                     _USART_Status:
   126                           	opt stack 0
   127  000026                     	ds	1
   128  000027                     _ch:
   129                           	opt stack 0
   130  000027                     	ds	1
   131  000028                     _count:
   132                           	opt stack 0
   133  000028                     	ds	1
   134  000029                     _data:
   135                           	opt stack 0
   136  000029                     	ds	1
   137  00002A                     _rx:
   138                           	opt stack 0
   139  00002A                     	ds	1
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           postinc0	equ	0xFEE
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	dataCOMRAM
   149  000016                     __pdataCOMRAM:
   150                           	opt stack 0
   151  000016                     _Display_Values:
   152                           	opt stack 0
   153  000016                     	ds	14
   154  000024                     _Command:
   155                           	opt stack 0
   156  000024                     	ds	1
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           postinc0	equ	0xFEE
   162                           postdec1	equ	0xFE5
   163                           fsr1l	equ	0xFE1
   164                           
   165                           	psect	cstackCOMRAM
   166  000001                     __pcstackCOMRAM:
   167                           	opt stack 0
   168  000001                     ReadUSART@data:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x0
   172  000001                     	ds	1
   173  000002                     ??_SerialRx:
   174                           
   175                           ; 0 bytes @ 0x1
   176  000002                     	ds	14
   177  000010                     SerialRx@value:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0xF
   181  000010                     	ds	1
   182  000011                     SerialRx@index:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x10
   186  000011                     	ds	1
   187  000012                     MY_DELAY@ms:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x11
   191  000012                     	ds	2
   192  000014                     ??_MY_DELAY:
   193                           
   194                           ; 0 bytes @ 0x13
   195  000014                     	ds	1
   196  000015                     USARTWriteChar@ch:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x14
   200  000015                     	ds	1
   201  000016                     tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           ; 0 bytes @ 0x15
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 30 in file "E:\Study Material\XC8 PROJECTS\Cautry\cut_test.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;		None               void
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, prodl, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   229 ;;      Params:         0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called:    4
   235 ;; This function calls:
   236 ;;		_MY_DELAY
   237 ;;		_USARTWriteChar
   238 ;;		_USART_initialize
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245  000126                     __ptext0:
   246                           	opt stack 0
   247  000126                     _main:
   248                           	opt stack 27
   249                           
   250                           ;incstack = 0
   251  000126  FFFF               	dw	65535
   252                           
   253                           ;cut_test.c: 32: TRISA = 0xFF;
   254  000128  6892               	setf	3986,c	;volatile
   255                           
   256                           ;cut_test.c: 33: TRISB = 0xFF;
   257  00012A  6893               	setf	3987,c	;volatile
   258                           
   259                           ;cut_test.c: 34: TRISC = 0x80;
   260  00012C  0E80               	movlw	128
   261  00012E  6E94               	movwf	3988,c	;volatile
   262                           
   263                           ;cut_test.c: 35: TRISD = 0x00;
   264  000130  0E00               	movlw	0
   265  000132  6E95               	movwf	3989,c	;volatile
   266                           
   267                           ;cut_test.c: 36: TRISE = 0x00;
   268  000134  0E00               	movlw	0
   269  000136  6E96               	movwf	3990,c	;volatile
   270                           
   271                           ;cut_test.c: 37: ADCON1 = 0x06;
   272  000138  0E06               	movlw	6
   273  00013A  6EC1               	movwf	4033,c	;volatile
   274                           
   275                           ;cut_test.c: 38: PORTD = 0xFF;
   276  00013C  6883               	setf	3971,c	;volatile
   277                           
   278                           ;cut_test.c: 39: PORTC = 0x00;
   279  00013E  0E00               	movlw	0
   280  000140  6E82               	movwf	3970,c	;volatile
   281                           
   282                           ;cut_test.c: 50: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   283  000142  0E4F               	movlw	79
   284  000144  16AB               	andwf	4011,f,c	;volatile
   285  000146  9AAC               	bcf	4012,5,c	;volatile
   286  000148  0ECF               	movlw	207
   287  00014A  169D               	andwf	3997,f,c	;volatile
   288                           
   289                           ;cut_test.c: 52: USART_initialize();
   290  00014C  EC4F  F001         	call	_USART_initialize	;wreg free
   291                           
   292                           ;cut_test.c: 64: RC2 = 1;
   293  000150  8482               	bsf	3970,2,c	;volatile
   294                           
   295                           ;cut_test.c: 65: RD0 = 1;
   296  000152  8083               	bsf	3971,0,c	;volatile
   297                           
   298                           ;cut_test.c: 67: INTCONbits.RBIE = 1;
   299  000154  86F2               	bsf	intcon,3,c	;volatile
   300  000156                     l778:
   301                           
   302                           ;cut_test.c: 70: {
   303                           ;cut_test.c: 71: if(Send_Value == 1)
   304  000156  0425               	decf	_Send_Value,w,c
   305  000158  A4D8               	btfss	status,2,c
   306  00015A  D047               	goto	l814
   307                           
   308                           ;cut_test.c: 72: {
   309                           ;cut_test.c: 74: USARTWriteChar('A');
   310  00015C  0E41               	movlw	65
   311  00015E  EC60  F001         	call	_USARTWriteChar
   312                           
   313                           ;cut_test.c: 75: USARTWriteChar(Display_Values[2]);
   314  000162  5018               	movf	_Display_Values+2,w,c
   315  000164  EC60  F001         	call	_USARTWriteChar
   316                           
   317                           ;cut_test.c: 76: USARTWriteChar('B');
   318  000168  0E42               	movlw	66
   319  00016A  EC60  F001         	call	_USARTWriteChar
   320                           
   321                           ;cut_test.c: 77: USARTWriteChar(Display_Values[3]);
   322  00016E  5019               	movf	_Display_Values+3,w,c
   323  000170  EC60  F001         	call	_USARTWriteChar
   324                           
   325                           ;cut_test.c: 78: USARTWriteChar('C');
   326  000174  0E43               	movlw	67
   327  000176  EC60  F001         	call	_USARTWriteChar
   328                           
   329                           ;cut_test.c: 79: USARTWriteChar(Display_Values[8]);
   330  00017A  501E               	movf	_Display_Values+8,w,c
   331  00017C  EC60  F001         	call	_USARTWriteChar
   332                           
   333                           ;cut_test.c: 80: Send_Value = 0;
   334  000180  0E00               	movlw	0
   335  000182  6E25               	movwf	_Send_Value,c
   336  000184  D032               	goto	l814
   337  000186                     l82:
   338                           
   339                           ;cut_test.c: 86: RC2 = 0;
   340  000186  9482               	bcf	3970,2,c	;volatile
   341                           
   342                           ;cut_test.c: 87: MY_DELAY(175);
   343  000188  0E00               	movlw	0
   344  00018A  6E13               	movwf	MY_DELAY@ms+1,c
   345  00018C  0EAF               	movlw	175
   346  00018E  6E12               	movwf	MY_DELAY@ms,c
   347  000190  EC24  F001         	call	_MY_DELAY	;wreg free
   348                           
   349                           ;cut_test.c: 88: RC2 = 1;
   350  000194  8482               	bsf	3970,2,c	;volatile
   351  000196  D008               	goto	L1
   352  000198                     l84:
   353                           
   354                           ;cut_test.c: 94: RD0 = 0;
   355  000198  9083               	bcf	3971,0,c	;volatile
   356                           
   357                           ;cut_test.c: 95: MY_DELAY(175);
   358  00019A  0E00               	movlw	0
   359  00019C  6E13               	movwf	MY_DELAY@ms+1,c
   360  00019E  0EAF               	movlw	175
   361  0001A0  6E12               	movwf	MY_DELAY@ms,c
   362  0001A2  EC24  F001         	call	_MY_DELAY	;wreg free
   363                           
   364                           ;cut_test.c: 96: RD0 = 1;
   365  0001A6  8083               	bsf	3971,0,c	;volatile
   366  0001A8                     L1:
   367                           
   368                           ;cut_test.c: 97: Send_Value = 1;
   369  0001A8  0E01               	movlw	1
   370  0001AA  6E25               	movwf	_Send_Value,c
   371  0001AC  D018               	goto	l810
   372  0001AE                     l85:
   373                           
   374                           ;cut_test.c: 102: if(RC2 != 0)
   375  0001AE  A482               	btfss	3970,2,c	;volatile
   376  0001B0  D7D2               	goto	l778
   377                           
   378                           ;cut_test.c: 103: RC2 = 0;
   379  0001B2  9482               	bcf	3970,2,c	;volatile
   380  0001B4  D7D0               	goto	l778
   381  0001B6                     l87:
   382                           
   383                           ;cut_test.c: 107: if(RD0 != 0)
   384  0001B6  A083               	btfss	3971,0,c	;volatile
   385  0001B8  D7CE               	goto	l778
   386                           
   387                           ;cut_test.c: 108: RD0 = 0;
   388  0001BA  9083               	bcf	3971,0,c	;volatile
   389  0001BC  D7CC               	goto	l778
   390  0001BE                     l89:
   391                           
   392                           ;cut_test.c: 112: if(RA0 == 1)
   393  0001BE  A080               	btfss	3968,0,c	;volatile
   394  0001C0  D006               	goto	l806
   395                           
   396                           ;cut_test.c: 113: {
   397                           ;cut_test.c: 114: USARTWriteChar('F');
   398  0001C2  0E46               	movlw	70
   399  0001C4  EC60  F001         	call	_USARTWriteChar
   400                           
   401                           ;cut_test.c: 115: USARTWriteChar('1');
   402  0001C8  0E31               	movlw	49
   403  0001CA  EC60  F001         	call	_USARTWriteChar
   404  0001CE                     l806:
   405                           
   406                           ;cut_test.c: 116: }
   407                           ;cut_test.c: 117: if(RA0 == 0)
   408  0001CE  B080               	btfsc	3968,0,c	;volatile
   409  0001D0  D006               	goto	l810
   410                           
   411                           ;cut_test.c: 118: {
   412                           ;cut_test.c: 119: USARTWriteChar('R');
   413  0001D2  0E52               	movlw	82
   414  0001D4  EC60  F001         	call	_USARTWriteChar
   415                           
   416                           ;cut_test.c: 120: USARTWriteChar('1');
   417  0001D8  0E31               	movlw	49
   418  0001DA  EC60  F001         	call	_USARTWriteChar
   419  0001DE                     l810:
   420                           
   421                           ;cut_test.c: 121: }
   422                           ;cut_test.c: 122: Command = Stop;
   423  0001DE  0E02               	movlw	2
   424  0001E0  6E24               	movwf	_Command,c
   425                           
   426                           ;cut_test.c: 123: break;
   427  0001E2  D7B9               	goto	l778
   428  0001E4                     l92:
   429                           
   430                           ;cut_test.c: 127: RC2 = 1;
   431  0001E4  8482               	bsf	3970,2,c	;volatile
   432                           
   433                           ;cut_test.c: 128: RD0 = 1;
   434  0001E6  8083               	bsf	3971,0,c	;volatile
   435                           
   436                           ;cut_test.c: 129: break;
   437  0001E8  D7B6               	goto	l778
   438  0001EA                     l814:
   439  0001EA  5024               	movf	_Command,w,c
   440                           
   441                           ; Switch size 1, requested type "space"
   442                           ; Number of cases is 6, Range of values is 0 to 5
   443                           ; switch strategies available:
   444                           ; Name         Instructions Cycles
   445                           ; simple_byte           19    10 (average)
   446                           ;	Chosen strategy is simple_byte
   447  0001EC  0A00               	xorlw	0	; case 0
   448  0001EE  B4D8               	btfsc	status,2,c
   449  0001F0  D7CA               	goto	l82
   450  0001F2  0A01               	xorlw	1	; case 1
   451  0001F4  B4D8               	btfsc	status,2,c
   452  0001F6  D7DB               	goto	l85
   453  0001F8  0A03               	xorlw	3	; case 2
   454  0001FA  B4D8               	btfsc	status,2,c
   455  0001FC  D7F3               	goto	l92
   456  0001FE  0A01               	xorlw	1	; case 3
   457  000200  B4D8               	btfsc	status,2,c
   458  000202  D7CA               	goto	l84
   459  000204  0A07               	xorlw	7	; case 4
   460  000206  B4D8               	btfsc	status,2,c
   461  000208  D7D6               	goto	l87
   462  00020A  0A01               	xorlw	1	; case 5
   463  00020C  B4D8               	btfsc	status,2,c
   464  00020E  D7D7               	goto	l89
   465  000210  D7A2               	goto	l778
   466  000212                     __end_of_main:
   467                           	opt stack 0
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           intcon	equ	0xFF2
   473                           postinc0	equ	0xFEE
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           status	equ	0xFD8
   477                           
   478 ;; *************** function _USART_initialize *****************
   479 ;; Defined at:
   480 ;;		line 197 in file "E:\Study Material\XC8 PROJECTS\Cautry\cut_test.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;		None               void
   487 ;; Registers used:
   488 ;;		wreg, status,2
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   494 ;;      Params:         0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    2
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text1
   509  00029E                     __ptext1:
   510                           	opt stack 0
   511  00029E                     _USART_initialize:
   512                           	opt stack 28
   513                           
   514                           ;incstack = 0
   515  00029E  FFFF               	dw	65535
   516                           
   517                           ;cut_test.c: 200: TRISCbits.RC6 = 0;
   518  0002A0  9C94               	bcf	3988,6,c	;volatile
   519                           
   520                           ;cut_test.c: 201: TRISCbits.RC7 = 1;
   521  0002A2  8E94               	bsf	3988,7,c	;volatile
   522                           
   523                           ;cut_test.c: 204: TXSTAbits.SYNC = 0;
   524  0002A4  98AC               	bcf	4012,4,c	;volatile
   525                           
   526                           ;cut_test.c: 205: TXSTAbits.TX9 = 0;
   527  0002A6  9CAC               	bcf	4012,6,c	;volatile
   528                           
   529                           ;cut_test.c: 206: TXSTAbits.BRGH = 1;
   530  0002A8  84AC               	bsf	4012,2,c	;volatile
   531                           
   532                           ;cut_test.c: 207: TXSTAbits.TXEN = 1;
   533  0002AA  8AAC               	bsf	4012,5,c	;volatile
   534                           
   535                           ;cut_test.c: 210: RCSTAbits.SPEN = 1;
   536  0002AC  8EAB               	bsf	4011,7,c	;volatile
   537                           
   538                           ;cut_test.c: 211: RCSTAbits.RX9 = 0;
   539  0002AE  9CAB               	bcf	4011,6,c	;volatile
   540                           
   541                           ;cut_test.c: 212: RCSTAbits.CREN = 1;
   542  0002B0  88AB               	bsf	4011,4,c	;volatile
   543                           
   544                           ;cut_test.c: 214: SPBRG = 64;
   545  0002B2  0E40               	movlw	64
   546  0002B4  6EAF               	movwf	4015,c	;volatile
   547                           
   548                           ;cut_test.c: 217: INTCONbits.GIE = 1;
   549  0002B6  8EF2               	bsf	intcon,7,c	;volatile
   550                           
   551                           ;cut_test.c: 218: INTCONbits.PEIE = 1;
   552  0002B8  8CF2               	bsf	intcon,6,c	;volatile
   553                           
   554                           ;cut_test.c: 219: PIE1bits.RCIE = 1;
   555  0002BA  8A9D               	bsf	3997,5,c	;volatile
   556  0002BC  0012               	return	
   557  0002BE  FFFF               	dw	65535	; errata NOP
   558  0002C0                     __end_of_USART_initialize:
   559                           	opt stack 0
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           intcon	equ	0xFF2
   565                           postinc0	equ	0xFEE
   566                           postdec1	equ	0xFE5
   567                           fsr1l	equ	0xFE1
   568                           status	equ	0xFD8
   569                           
   570 ;; *************** function _USARTWriteChar *****************
   571 ;; Defined at:
   572 ;;		line 223 in file "E:\Study Material\XC8 PROJECTS\Cautry\cut_test.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  ch              1    wreg     unsigned char 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  ch              1   20[COMRAM] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;		None               void
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, prodl, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   586 ;;      Params:         0       0       0       0       0       0       0
   587 ;;      Locals:         1       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0
   589 ;;      Totals:         1       0       0       0       0       0       0
   590 ;;Total ram usage:        1 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    3
   593 ;; This function calls:
   594 ;;		_MY_DELAY
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text2
   601  0002C0                     __ptext2:
   602                           	opt stack 0
   603  0002C0                     _USARTWriteChar:
   604                           	opt stack 27
   605                           
   606                           ;incstack = 0
   607  0002C0  FFFF               	dw	65535
   608                           
   609                           ;USARTWriteChar@ch stored from wreg
   610  0002C2  6E15               	movwf	USARTWriteChar@ch,c
   611  0002C4                     l124:
   612  0002C4  A89E               	btfss	3998,4,c	;volatile
   613  0002C6  D7FE               	goto	l124
   614                           
   615                           ;cut_test.c: 226: TXREG=ch;
   616  0002C8  C015  FFAD         	movff	USARTWriteChar@ch,4013	;volatile
   617                           
   618                           ;cut_test.c: 227: MY_DELAY(10);
   619  0002CC  0E00               	movlw	0
   620  0002CE  6E13               	movwf	MY_DELAY@ms+1,c
   621  0002D0  0E0A               	movlw	10
   622  0002D2  6E12               	movwf	MY_DELAY@ms,c
   623  0002D4  EC24  F001         	call	_MY_DELAY	;wreg free
   624  0002D8  0012               	return	
   625  0002DA  FFFF               	dw	65535	; errata NOP
   626  0002DC                     __end_of_USARTWriteChar:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           intcon	equ	0xFF2
   633                           postinc0	equ	0xFEE
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _MY_DELAY *****************
   639 ;; Defined at:
   640 ;;		line 187 in file "E:\Study Material\XC8 PROJECTS\Cautry\cut_test.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  ms              2   17[COMRAM] int 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;		None               void
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, prodl
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   654 ;;      Params:         2       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0
   656 ;;      Temps:          1       0       0       0       0       0       0
   657 ;;      Totals:         3       0       0       0       0       0       0
   658 ;;Total ram usage:        3 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    2
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;;		_USARTWriteChar
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text3
   670  000248                     __ptext3:
   671                           	opt stack 0
   672  000248                     _MY_DELAY:
   673                           	opt stack 27
   674                           
   675                           ;incstack = 0
   676  000248  FFFF               	dw	65535
   677                           
   678                           ;cut_test.c: 189: while(ms > 0)
   679  00024A  D00A               	goto	l724
   680  00024C                     l720:
   681                           
   682                           ;cut_test.c: 190: {
   683                           ;cut_test.c: 191: _delay((unsigned long)((1)*(10000000/4000.0)));
   684  00024C  0E03               	movlw	3
   685  00024E  6E14               	movwf	??_MY_DELAY& (0+255),c
   686  000250  0E6F               	movlw	111
   687  000252                     u177:
   688  000252  2EE8               	decfsz	wreg,f,c
   689  000254  D7FE               	goto	u177
   690  000256  2E14               	decfsz	??_MY_DELAY& (0+255),f,c
   691  000258  D7FC               	goto	u177
   692                           
   693                           ;cut_test.c: 192: ms--;
   694  00025A  0612               	decf	MY_DELAY@ms,f,c
   695  00025C  A0D8               	btfss	status,0,c
   696  00025E  0613               	decf	MY_DELAY@ms+1,f,c
   697  000260                     l724:
   698  000260  5013               	movf	MY_DELAY@ms+1,w,c
   699  000262  0A80               	xorlw	128
   700  000264  6EF3               	movwf	prodl,c
   701  000266  0E80               	movlw	128
   702  000268  5CF3               	subwf	prodl,w,c
   703  00026A  0E01               	movlw	1
   704  00026C  B4D8               	btfsc	status,2,c
   705  00026E  5C12               	subwf	MY_DELAY@ms,w,c
   706  000270  A0D8               	btfss	status,0,c
   707                           
   708                           ;cut_test.c: 193: }
   709                           ;cut_test.c: 194: return;
   710  000272  0012               	return	
   711  000274  FFFF               	dw	65535	; assembler added errata NOP
   712  000276  D7EA               	goto	l720
   713  000278  FFFF               	dw	65535	; errata NOP
   714  00027A                     __end_of_MY_DELAY:
   715                           	opt stack 0
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           prodl	equ	0xFF3
   721                           intcon	equ	0xFF2
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           postdec1	equ	0xFE5
   725                           fsr1l	equ	0xFE1
   726                           status	equ	0xFD8
   727                           
   728 ;; *************** function _SerialRx *****************
   729 ;; Defined at:
   730 ;;		line 137 in file "E:\Study Material\XC8 PROJECTS\Cautry\cut_test.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  index           1   16[COMRAM] unsigned char 
   735 ;;  value           1   15[COMRAM] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;		None               void
   738 ;; Registers used:
   739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   745 ;;      Params:         0       0       0       0       0       0       0
   746 ;;      Locals:         2       0       0       0       0       0       0
   747 ;;      Temps:         14       0       0       0       0       0       0
   748 ;;      Totals:        16       0       0       0       0       0       0
   749 ;;Total ram usage:       16 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    1
   752 ;; This function calls:
   753 ;;		_ReadUSART
   754 ;; This function is called by:
   755 ;;		Interrupt level 2
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	intcode
   760  000008                     __pintcode:
   761                           	opt stack 0
   762  000008                     _SerialRx:
   763                           	opt stack 27
   764                           
   765                           ;incstack = 0
   766  000008  FFFF               	dw	65535	; errata NOP
   767  00000A  CFFA F002          	movff	pclath,??_SerialRx
   768  00000E  CFFB F003          	movff	pclatu,??_SerialRx+1
   769  000012  CFE9 F004          	movff	fsr0l,??_SerialRx+2
   770  000016  CFEA F005          	movff	fsr0h,??_SerialRx+3
   771  00001A  CFE1 F006          	movff	fsr1l,??_SerialRx+4
   772  00001E  CFE2 F007          	movff	fsr1h,??_SerialRx+5
   773  000022  CFD9 F008          	movff	fsr2l,??_SerialRx+6
   774  000026  CFDA F009          	movff	fsr2h,??_SerialRx+7
   775  00002A  CFF3 F00A          	movff	prodl,??_SerialRx+8
   776  00002E  CFF4 F00B          	movff	prodh,??_SerialRx+9
   777  000032  CFF6 F00C          	movff	tblptrl,??_SerialRx+10
   778  000036  CFF7 F00D          	movff	tblptrh,??_SerialRx+11
   779  00003A  CFF8 F00E          	movff	tblptru,??_SerialRx+12
   780  00003E  CFF5 F00F          	movff	tablat,??_SerialRx+13
   781                           
   782                           ;cut_test.c: 140: if(RCIE && RCIF)
   783  000042  BA9D               	btfsc	3997,5,c	;volatile
   784  000044  AA9E               	btfss	3998,5,c	;volatile
   785  000046  D02C               	goto	i2l99
   786                           
   787                           ;cut_test.c: 141: {
   788                           ;cut_test.c: 142: rx = ReadUSART();
   789  000048  EC3D  F001         	call	_ReadUSART	;wreg free
   790  00004C  6E2A               	movwf	_rx,c
   791                           
   792                           ;cut_test.c: 144: switch(rx)
   793  00004E  D010               	goto	i2l840
   794  000050                     i2l822:
   795                           
   796                           ;cut_test.c: 147: Command = Increase;
   797  000050  0E00               	movlw	0
   798  000052  D00C               	goto	L7
   799  000054                     i2l824:
   800                           
   801                           ;cut_test.c: 150: Command = FastIncrease;
   802  000054  0E01               	movlw	1
   803  000056  D00A               	goto	L7
   804  000058                     i2l828:
   805                           
   806                           ;cut_test.c: 156: Command = Decrease;
   807  000058  0E03               	movlw	3
   808  00005A  D008               	goto	L7
   809  00005C                     i2l830:
   810                           
   811                           ;cut_test.c: 159: Command = FastDecrease;
   812  00005C  0E04               	movlw	4
   813  00005E  D006               	goto	L7
   814  000060                     i2l832:
   815                           
   816                           ;cut_test.c: 162: Command = Switch_Value;
   817  000060  0E05               	movlw	5
   818  000062  D004               	goto	L7
   819  000064                     i2l834:
   820                           
   821                           ;cut_test.c: 165: Send_Value = 1;
   822  000064  0E01               	movlw	1
   823  000066  6E25               	movwf	_Send_Value,c
   824                           
   825                           ;cut_test.c: 166: break;
   826  000068  D01A               	goto	i2l102
   827  00006A                     i2l836:
   828                           
   829                           ;cut_test.c: 168: Command = Stop;
   830  00006A  0E02               	movlw	2
   831  00006C                     L7:
   832  00006C  6E24               	movwf	_Command,c
   833                           
   834                           ;cut_test.c: 169: break;
   835  00006E  D017               	goto	i2l102
   836  000070                     i2l840:
   837  000070  502A               	movf	_rx,w,c
   838                           
   839                           ; Switch size 1, requested type "space"
   840                           ; Number of cases is 7, Range of values is 49 to 55
   841                           ; switch strategies available:
   842                           ; Name         Instructions Cycles
   843                           ; simple_byte           22    12 (average)
   844                           ;	Chosen strategy is simple_byte
   845  000072  0A31               	xorlw	49	; case 49
   846  000074  B4D8               	btfsc	status,2,c
   847  000076  D7EC               	goto	i2l822
   848  000078  0A03               	xorlw	3	; case 50
   849  00007A  B4D8               	btfsc	status,2,c
   850  00007C  D7EB               	goto	i2l824
   851  00007E  0A01               	xorlw	1	; case 51
   852  000080  B4D8               	btfsc	status,2,c
   853  000082  D7F3               	goto	i2l836
   854  000084  0A07               	xorlw	7	; case 52
   855  000086  B4D8               	btfsc	status,2,c
   856  000088  D7E7               	goto	i2l828
   857  00008A  0A01               	xorlw	1	; case 53
   858  00008C  B4D8               	btfsc	status,2,c
   859  00008E  D7E6               	goto	i2l830
   860  000090  0A03               	xorlw	3	; case 54
   861  000092  B4D8               	btfsc	status,2,c
   862  000094  D7E5               	goto	i2l832
   863  000096  0A01               	xorlw	1	; case 55
   864  000098  B4D8               	btfsc	status,2,c
   865  00009A  D7E4               	goto	i2l834
   866  00009C  D7E6               	goto	i2l836
   867  00009E                     i2l102:
   868                           
   869                           ;cut_test.c: 171: RCIF = 0;
   870  00009E  9A9E               	bcf	3998,5,c	;volatile
   871  0000A0                     i2l99:
   872                           
   873                           ;cut_test.c: 172: }
   874                           ;cut_test.c: 173: if(RBIE && RBIF)
   875  0000A0  B6F2               	btfsc	intcon,3,c	;volatile
   876  0000A2  A0F2               	btfss	intcon,0,c	;volatile
   877  0000A4  D020               	goto	i2l112
   878                           
   879                           ;cut_test.c: 174: {
   880                           ;cut_test.c: 175: char index = 0, value = 0;
   881  0000A6  0E00               	movlw	0
   882  0000A8  6E11               	movwf	SerialRx@index,c
   883  0000AA  0E00               	movlw	0
   884  0000AC  6E10               	movwf	SerialRx@value,c
   885                           
   886                           ;cut_test.c: 176: index = PORTB & 0xF0;
   887  0000AE  5081               	movf	3969,w,c	;volatile
   888  0000B0  0BF0               	andlw	240
   889  0000B2  6E11               	movwf	SerialRx@index,c
   890                           
   891                           ;cut_test.c: 177: index = index >> 4;
   892  0000B4  3811               	swapf	SerialRx@index,w,c
   893  0000B6  0B0F               	andlw	15
   894  0000B8  6E11               	movwf	SerialRx@index,c
   895                           
   896                           ;cut_test.c: 178: if(index >= 8)
   897  0000BA  0E07               	movlw	7
   898  0000BC  6411               	cpfsgt	SerialRx@index,c
   899  0000BE  D002               	goto	i2l111
   900                           
   901                           ;cut_test.c: 179: index = index - 1;
   902  0000C0  0411               	decf	SerialRx@index,w,c
   903  0000C2  6E11               	movwf	SerialRx@index,c
   904  0000C4                     i2l111:
   905                           
   906                           ;cut_test.c: 180: value = PORTB & 0x0F;
   907  0000C4  5081               	movf	3969,w,c	;volatile
   908  0000C6  0B0F               	andlw	15
   909  0000C8  6E10               	movwf	SerialRx@value,c
   910                           
   911                           ;cut_test.c: 181: value = value + 48;
   912  0000CA  5010               	movf	SerialRx@value,w,c
   913  0000CC  0F30               	addlw	48
   914  0000CE  6E10               	movwf	SerialRx@value,c
   915                           
   916                           ;cut_test.c: 182: Display_Values[index] = value;
   917  0000D0  5011               	movf	SerialRx@index,w,c
   918  0000D2  0D01               	mullw	1
   919  0000D4  0E16               	movlw	low _Display_Values
   920  0000D6  24F3               	addwf	prodl,w,c
   921  0000D8  6ED9               	movwf	fsr2l,c
   922  0000DA  0E00               	movlw	high _Display_Values
   923  0000DC  20F4               	addwfc	prodh,w,c
   924  0000DE  6EDA               	movwf	fsr2h,c
   925  0000E0  C010  FFDF         	movff	SerialRx@value,indf2
   926                           
   927                           ;cut_test.c: 183: RBIF = 0;
   928  0000E4  90F2               	bcf	intcon,0,c	;volatile
   929  0000E6                     i2l112:
   930  0000E6  C00F  FFF5         	movff	??_SerialRx+13,tablat
   931  0000EA  C00E  FFF8         	movff	??_SerialRx+12,tblptru
   932  0000EE  C00D  FFF7         	movff	??_SerialRx+11,tblptrh
   933  0000F2  C00C  FFF6         	movff	??_SerialRx+10,tblptrl
   934  0000F6  C00B  FFF4         	movff	??_SerialRx+9,prodh
   935  0000FA  C00A  FFF3         	movff	??_SerialRx+8,prodl
   936  0000FE  C009  FFDA         	movff	??_SerialRx+7,fsr2h
   937  000102  C008  FFD9         	movff	??_SerialRx+6,fsr2l
   938  000106  C007  FFE2         	movff	??_SerialRx+5,fsr1h
   939  00010A  C006  FFE1         	movff	??_SerialRx+4,fsr1l
   940  00010E  C005  FFEA         	movff	??_SerialRx+3,fsr0h
   941  000112  C004  FFE9         	movff	??_SerialRx+2,fsr0l
   942  000116  C003  FFFB         	movff	??_SerialRx+1,pclatu
   943  00011A  C002  FFFA         	movff	??_SerialRx,pclath
   944  00011E  0011               	retfie		f
   945  000120  FFFF               	dw	65535	; errata NOP
   946  000122                     __end_of_SerialRx:
   947                           	opt stack 0
   948                           pclatu	equ	0xFFB
   949                           pclath	equ	0xFFA
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           prodh	equ	0xFF4
   955                           prodl	equ	0xFF3
   956                           intcon	equ	0xFF2
   957                           postinc0	equ	0xFEE
   958                           fsr0h	equ	0xFEA
   959                           fsr0l	equ	0xFE9
   960                           wreg	equ	0xFE8
   961                           postdec1	equ	0xFE5
   962                           fsr1h	equ	0xFE2
   963                           fsr1l	equ	0xFE1
   964                           indf2	equ	0xFDF
   965                           fsr2h	equ	0xFDA
   966                           fsr2l	equ	0xFD9
   967                           status	equ	0xFD8
   968                           
   969 ;; *************** function _ReadUSART *****************
   970 ;; Defined at:
   971 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  data            1    0[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      unsigned char 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   985 ;;      Params:         0       0       0       0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0
   988 ;;      Totals:         1       0       0       0       0       0       0
   989 ;;Total ram usage:        1 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_SerialRx
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text5
   999  00027A                     __ptext5:
  1000                           	opt stack 0
  1001  00027A                     _ReadUSART:
  1002                           	opt stack 27
  1003                           
  1004                           ;incstack = 0
  1005  00027A  FFFF               	dw	65535
  1006  00027C  0EF2               	movlw	242
  1007  00027E  1626               	andwf	_USART_Status,f,c
  1008  000280  ACAB               	btfss	4011,6,c	;volatile
  1009  000282  D003               	goto	i2l136
  1010  000284  9026               	bcf	_USART_Status,0,c
  1011  000286  B0AB               	btfsc	4011,0,c	;volatile
  1012  000288  8026               	bsf	_USART_Status,0,c
  1013  00028A                     i2l136:
  1014  00028A  B4AB               	btfsc	4011,2,c	;volatile
  1015  00028C  8426               	bsf	_USART_Status,2,c
  1016  00028E  B2AB               	btfsc	4011,1,c	;volatile
  1017  000290  8626               	bsf	_USART_Status,3,c
  1018  000292  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  1019  000296  5001               	movf	ReadUSART@data,w,c
  1020  000298  0012               	return	
  1021  00029A  FFFF               	dw	65535	; errata NOP
  1022  00029C                     __end_of_ReadUSART:
  1023                           	opt stack 0
  1024  00029C  FFFF               	dw	65535	; assembler added errata NOP
  1025                           pclatu	equ	0xFFB
  1026                           pclath	equ	0xFFA
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           prodh	equ	0xFF4
  1032                           prodl	equ	0xFF3
  1033                           intcon	equ	0xFF2
  1034                           postinc0	equ	0xFEE
  1035                           fsr0h	equ	0xFEA
  1036                           fsr0l	equ	0xFE9
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1h	equ	0xFE2
  1040                           fsr1l	equ	0xFE1
  1041                           indf2	equ	0xFDF
  1042                           fsr2h	equ	0xFDA
  1043                           fsr2l	equ	0xFD9
  1044                           status	equ	0xFD8
  1045                           pclatu	equ	0xFFB
  1046                           pclath	equ	0xFFA
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           prodh	equ	0xFF4
  1052                           prodl	equ	0xFF3
  1053                           intcon	equ	0xFF2
  1054                           postinc0	equ	0xFEE
  1055                           fsr0h	equ	0xFEA
  1056                           fsr0l	equ	0xFE9
  1057                           wreg	equ	0xFE8
  1058                           postdec1	equ	0xFE5
  1059                           fsr1h	equ	0xFE2
  1060                           fsr1l	equ	0xFE1
  1061                           indf2	equ	0xFDF
  1062                           fsr2h	equ	0xFDA
  1063                           fsr2l	equ	0xFD9
  1064                           status	equ	0xFD8
  1065                           
  1066                           	psect	rparam
  1067  0000                     pclatu	equ	0xFFB
  1068                           pclath	equ	0xFFA
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           prodh	equ	0xFF4
  1074                           prodl	equ	0xFF3
  1075                           intcon	equ	0xFF2
  1076                           postinc0	equ	0xFEE
  1077                           fsr0h	equ	0xFEA
  1078                           fsr0l	equ	0xFE9
  1079                           wreg	equ	0xFE8
  1080                           postdec1	equ	0xFE5
  1081                           fsr1h	equ	0xFE2
  1082                           fsr1l	equ	0xFE1
  1083                           indf2	equ	0xFDF
  1084                           fsr2h	equ	0xFDA
  1085                           fsr2l	equ	0xFD9
  1086                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      42
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USARTWriteChar
    _USARTWriteChar->_MY_DELAY

Critical Paths under _SerialRx in COMRAM

    _SerialRx->_ReadUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _SerialRx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRx in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     249
                           _MY_DELAY
                     _USARTWriteChar
                   _USART_initialize
 ---------------------------------------------------------------------------------
 (1) _USART_initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USARTWriteChar                                       1     1      0     132
                                             20 COMRAM     1     1      0
                           _MY_DELAY
 ---------------------------------------------------------------------------------
 (2) _MY_DELAY                                             3     1      2     117
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _SerialRx                                            16    16      0     105
                                              1 COMRAM    16    16      0
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (4) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MY_DELAY
   _USARTWriteChar
     _MY_DELAY
   _USART_initialize

 _SerialRx (ROOT)
   _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      2A       1       33.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A      15        0.0%
DATA                 0      0      2A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Sep 19 20:30:19 2015

                       l82 0186                         l92 01E4                         l84 0198  
                       l85 01AE                         l87 01B6                         l89 01BE  
                       _ch 0027                         _rx 002A                __CFG_OSC$HS 000000  
                      l124 02C4                        l720 024C                        l810 01DE  
                      l724 0260                        l806 01CE                        l814 01EA  
                      l778 0156                        _RA0 007C00                        _RD0 007C18  
                      _RC2 007C12                        u177 0252               __CFG_BOR$OFF 000000  
                      prod 000FF3                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_OSCS$ON 000000               __CFG_WDT$OFF 000000                       _PIE1 000F9D  
                     _RBIE 007F93                       _RBIF 007F90                       _RCIE 007CED  
                     _RCIF 007CF5                       i2l99 00A0               __CFG_PWRT$ON 000000  
   __end_of_USARTWriteChar 02DC                       _data 0029                       _main 0126  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       pclat 000FFA           _USART_initialize 029E  
                     prodh 000FF4                       prodl 000FF3                       start 0122  
                    ?_main 0001           USARTWriteChar@ch 0015                      i2l102 009E  
                    i2l111 00C4                      i2l112 00E6                      i2l136 028A  
                    i2l830 005C                      i2l822 0050                      i2l832 0060  
                    i2l824 0054                      i2l840 0070                      i2l834 0064  
                    i2l836 006A                      i2l828 0058                      _RCREG 000FAE  
                    _RCSTA 000FAB                      _SPBRG 000FAF                      _PORTB 000F81  
                    _PORTC 000F82                      _PORTD 000F83                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96                      _TXREG 000FAD                      _count 0028  
         __end_of_MY_DELAY 027A                      tablat 000FF5            ?_USARTWriteChar 0001  
                    status 000FD8            __initialization 0212               __end_of_main 0212  
                   ??_main 0016              __activetblptr 000002           __end_of_SerialRx 0122  
                   _ADCON1 000FC1                 _Send_Value 0025         __size_of_ReadUSART 0022  
             __pdataCOMRAM 0016                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                 __accesstop 0080    __end_of__initialization 023E  
           __pcstackCOMRAM 0001                  ?_MY_DELAY 0012          __end_of_ReadUSART 029C  
 __end_of_USART_initialize 02C0              ReadUSART@data 0001                  ?_SerialRx 0001  
               ??_MY_DELAY 0014           ??_USARTWriteChar 0015              SerialRx@index 0011  
            SerialRx@value 0010                    _Command 0024                    __Hparam 0000  
                  __Lparam 0000                 ??_SerialRx 0002                    __pcinit 0212  
                  __ramtop 0600                    __ptext0 0126                    __ptext1 029E  
                  __ptext2 02C0                    __ptext3 0248                    __ptext5 027A  
     end_of_initialization 023E              __Lmediumconst 0000                  _RCSTAbits 000FAB  
                  postdec1 000FE5                    postinc0 000FEE                  _TRISCbits 000F94  
                _TXSTAbits 000FAC              __pidataCOMRAM 02DC          __size_of_MY_DELAY 0032  
        ?_USART_initialize 0001        start_initialization 0212                  _ReadUSART 027A  
       ??_USART_initialize 0012          __size_of_SerialRx 011A             _Display_Values 0016  
              __pbssCOMRAM 0025                 ?_ReadUSART 0001                  __pintcode 0008  
                 _PIE1bits 000F9D                   _PIR1bits 000F9E                   _MY_DELAY 0248  
               MY_DELAY@ms 0012                ??_ReadUSART 0001                  copy_data0 0232  
  __size_of_USARTWriteChar 001C                   __Hrparam 0000                   _SerialRx 0008  
                 __Lrparam 0000              __size_of_main 00EC  __size_of_USART_initialize 0022  
               _INTCONbits 000FF2                   intlevel2 02EC             _USARTWriteChar 02C0  
             _USART_Status 0026  
