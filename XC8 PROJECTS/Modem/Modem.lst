

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Dec 07 16:46:40 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  0087                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010F                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269                           
   270                           	psect	idataBANK0
   271  0F17                     __pidataBANK0:	
   272                           
   273                           ;initializer for _REQUIRED_RING_COUNT
   274  0F17  3402               	retlw	2
   275                           
   276                           ;initializer for _phone_number
   277  0F18  3441               	retlw	65
   278  0F19  3454               	retlw	84
   279  0F1A  3444               	retlw	68
   280  0F1B  3400               	retlw	0
   281  0F1C  3400               	retlw	0
   282  0F1D  3400               	retlw	0
   283  0F1E  3400               	retlw	0
   284  0F1F  3400               	retlw	0
   285  0F20  3400               	retlw	0
   286  0F21  3400               	retlw	0
   287  0F22  3400               	retlw	0
   288  0F23  3400               	retlw	0
   289  0F24  3400               	retlw	0
   290  0F25  3400               	retlw	0
   291  0F26  3400               	retlw	0
   292  0F27  3400               	retlw	0
   293  0F28  3400               	retlw	0
   294  0F29  3400               	retlw	0
   295  0F2A  3400               	retlw	0
   296  0F2B  3400               	retlw	0
   297                           
   298                           	psect	strings
   299  0300                     __pstrings:	
   300  0300                     stringtab:	
   301  0300                     __stringtab:	
   302                           
   303                           ;	String table - string pointers are 1 byte each
   304  0300  1BFF               	btfsc	btemp+1,7
   305  0301  2B0A               	ljmp	stringcode
   306  0302  1383               	bcf	3,7
   307  0303  187F               	btfsc	btemp+1,0
   308  0304  1783               	bsf	3,7
   309  0305  0800               	movf	0,w
   310  0306  0A84               	incf	4,f
   311  0307  1903               	skipnz
   312  0308  0AFF               	incf	btemp+1,f
   313  0309  0008               	return
   314  030A                     stringcode:	
   315  030A                     stringdir:	
   316  030A  3003               	movlw	high stringdir
   317  030B  008A               	movwf	10
   318  030C  0804               	movf	4,w
   319  030D  0A84               	incf	4,f
   320  030E  0782               	addwf	2,f
   321  030F                     __stringbase:	
   322  030F  3400               	retlw	0
   323  0310                     __end_of__stringtab:	
   324  0310                     _dpowers:	
   325  0310  3401               	retlw	1
   326  0311  3400               	retlw	0
   327  0312  340A               	retlw	10
   328  0313  3400               	retlw	0
   329  0314  3464               	retlw	100
   330  0315  3400               	retlw	0
   331  0316  34E8               	retlw	232
   332  0317  3403               	retlw	3
   333  0318  3410               	retlw	16
   334  0319  3427               	retlw	39
   335  031A                     __end_of_dpowers:	
   336  000C                     _PIR1bits	set	12
   337  001A                     _RCREG	set	26
   338  0018                     _RCSTAbits	set	24
   339  0019                     _TXREG	set	25
   340  0018                     _CARRY	set	24
   341  005F                     _GIE	set	95
   342  005E                     _PEIE	set	94
   343  002D                     _RA5	set	45
   344  0031                     _RB1	set	49
   345  0037                     _RB7	set	55
   346  0038                     _RC0	set	56
   347  0039                     _RC1	set	57
   348  003A                     _RC2	set	58
   349  003B                     _RC3	set	59
   350  003C                     _RC4	set	60
   351  003D                     _RC5	set	61
   352  0065                     _RCIF	set	101
   353  009F                     _ADCON1	set	159
   354  0099                     _SPBRG	set	153
   355  0085                     _TRISA	set	133
   356  0086                     _TRISB	set	134
   357  0087                     _TRISC	set	135
   358  0098                     _TXSTAbits	set	152
   359  0465                     _RCIE	set	1125
   360  010D                     _EEADR	set	269
   361  010C                     _EEDATA	set	268
   362  018C                     _EECON1	set	396
   363  018D                     _EECON2	set	397
   364  0C60                     _RD	set	3168
   365  0C61                     _WR	set	3169
   366  0C62                     _WREN	set	3170
   367  031A                     __stringdata:	
   368  031A                     STR_13:	
   369  031A  342B               	retlw	43	;'+'
   370  031B  3443               	retlw	67	;'C'
   371  031C  344D               	retlw	77	;'M'
   372  031D  3453               	retlw	83	;'S'
   373  031E  3420               	retlw	32	;' '
   374  031F  3445               	retlw	69	;'E'
   375  0320  3452               	retlw	82	;'R'
   376  0321  3452               	retlw	82	;'R'
   377  0322  344F               	retlw	79	;'O'
   378  0323  3452               	retlw	82	;'R'
   379  0324  343A               	retlw	58	;':'
   380  0325  3420               	retlw	32	;' '
   381  0326  3435               	retlw	53	;'5'
   382  0327  3431               	retlw	49	;'1'
   383  0328  3437               	retlw	55	;'7'
   384  0329  3400               	retlw	0
   385  032A                     STR_15:	
   386  032A  3441               	retlw	65	;'A'
   387  032B  3454               	retlw	84	;'T'
   388  032C  342B               	retlw	43	;'+'
   389  032D  3443               	retlw	67	;'C'
   390  032E  344D               	retlw	77	;'M'
   391  032F  3447               	retlw	71	;'G'
   392  0330  3453               	retlw	83	;'S'
   393  0331  343D               	retlw	61	;'='
   394  0332  3420               	retlw	32	;' '
   395  0333  3425               	retlw	37	;'%'
   396  0334  3473               	retlw	115	;'s'
   397  0335  3400               	retlw	0
   398  0336                     STR_4:	
   399  0336  3441               	retlw	65	;'A'
   400  0337  3454               	retlw	84	;'T'
   401  0338  342B               	retlw	43	;'+'
   402  0339  3443               	retlw	67	;'C'
   403  033A  3453               	retlw	83	;'S'
   404  033B  344D               	retlw	77	;'M'
   405  033C  3449               	retlw	73	;'I'
   406  033D  344E               	retlw	78	;'N'
   407  033E  3453               	retlw	83	;'S'
   408  033F  343F               	retlw	63	;'?'
   409  0340  3400               	retlw	0
   410  0341                     STR_9:	
   411  0341  3441               	retlw	65	;'A'
   412  0342  3454               	retlw	84	;'T'
   413  0343  342B               	retlw	43	;'+'
   414  0344  3443               	retlw	67	;'C'
   415  0345  344D               	retlw	77	;'M'
   416  0346  3447               	retlw	71	;'G'
   417  0347  3444               	retlw	68	;'D'
   418  0348  343D               	retlw	61	;'='
   419  0349  3425               	retlw	37	;'%'
   420  034A  3464               	retlw	100	;'d'
   421  034B  3400               	retlw	0
   422  034C                     STR_12:	
   423  034C  3441               	retlw	65	;'A'
   424  034D  3454               	retlw	84	;'T'
   425  034E  342B               	retlw	43	;'+'
   426  034F  3443               	retlw	67	;'C'
   427  0350  344D               	retlw	77	;'M'
   428  0351  3447               	retlw	71	;'G'
   429  0352  3452               	retlw	82	;'R'
   430  0353  343D               	retlw	61	;'='
   431  0354  3425               	retlw	37	;'%'
   432  0355  3464               	retlw	100	;'d'
   433  0356  3400               	retlw	0
   434  0357                     STR_17:	
   435  0357  3441               	retlw	65	;'A'
   436  0358  3454               	retlw	84	;'T'
   437  0359  342B               	retlw	43	;'+'
   438  035A  3443               	retlw	67	;'C'
   439  035B  344C               	retlw	76	;'L'
   440  035C  3449               	retlw	73	;'I'
   441  035D  3450               	retlw	80	;'P'
   442  035E  343D               	retlw	61	;'='
   443  035F  3431               	retlw	49	;'1'
   444  0360  3400               	retlw	0
   445  0361                     STR_3:	
   446  0361  3441               	retlw	65	;'A'
   447  0362  3454               	retlw	84	;'T'
   448  0363  342B               	retlw	43	;'+'
   449  0364  3443               	retlw	67	;'C'
   450  0365  3452               	retlw	82	;'R'
   451  0366  3445               	retlw	69	;'E'
   452  0367  3447               	retlw	71	;'G'
   453  0368  343F               	retlw	63	;'?'
   454  0369  3400               	retlw	0
   455  036A                     STR_5:	
   456  036A  3441               	retlw	65	;'A'
   457  036B  3454               	retlw	84	;'T'
   458  036C  342B               	retlw	43	;'+'
   459  036D  3443               	retlw	67	;'C'
   460  036E  3453               	retlw	83	;'S'
   461  036F  3450               	retlw	80	;'P'
   462  0370  344E               	retlw	78	;'N'
   463  0371  343F               	retlw	63	;'?'
   464  0372  3400               	retlw	0
   465  0373                     STR_25:	
   466  0373  3428               	retlw	40	;'('
   467  0374  346E               	retlw	110	;'n'
   468  0375  3475               	retlw	117	;'u'
   469  0376  346C               	retlw	108	;'l'
   470  0377  346C               	retlw	108	;'l'
   471  0378  3429               	retlw	41	;')'
   472  0379  3400               	retlw	0
   473  037A                     STR_24:	
   474  037A  342B               	retlw	43	;'+'
   475  037B  3443               	retlw	67	;'C'
   476  037C  344C               	retlw	76	;'L'
   477  037D  3449               	retlw	73	;'I'
   478  037E  3450               	retlw	80	;'P'
   479  037F  343A               	retlw	58	;':'
   480  0380  3400               	retlw	0
   481  0381                     STR_11:	
   482  0381  342B               	retlw	43	;'+'
   483  0382  3443               	retlw	67	;'C'
   484  0383  344D               	retlw	77	;'M'
   485  0384  3454               	retlw	84	;'T'
   486  0385  3449               	retlw	73	;'I'
   487  0386  343A               	retlw	58	;':'
   488  0387  3400               	retlw	0
   489  0388                     STR_7:	
   490  0388  3441               	retlw	65	;'A'
   491  0389  3454               	retlw	84	;'T'
   492  038A  342B               	retlw	43	;'+'
   493  038B  3447               	retlw	71	;'G'
   494  038C  344D               	retlw	77	;'M'
   495  038D  3449               	retlw	73	;'I'
   496  038E  3400               	retlw	0
   497  038F                     STR_8:	
   498  038F  3441               	retlw	65	;'A'
   499  0390  3454               	retlw	84	;'T'
   500  0391  342B               	retlw	43	;'+'
   501  0392  3447               	retlw	71	;'G'
   502  0393  344D               	retlw	77	;'M'
   503  0394  344D               	retlw	77	;'M'
   504  0395  3400               	retlw	0
   505  0396                     STR_6:	
   506  0396  3441               	retlw	65	;'A'
   507  0397  3454               	retlw	84	;'T'
   508  0398  342B               	retlw	43	;'+'
   509  0399  3447               	retlw	71	;'G'
   510  039A  3453               	retlw	83	;'S'
   511  039B  344E               	retlw	78	;'N'
   512  039C  3400               	retlw	0
   513  039D                     STR_16:	
   514  039D  3443               	retlw	67	;'C'
   515  039E  344D               	retlw	77	;'M'
   516  039F  3447               	retlw	71	;'G'
   517  03A0  3453               	retlw	83	;'S'
   518  03A1  343A               	retlw	58	;':'
   519  03A2  3400               	retlw	0
   520  03A3                     STR_18:	
   521  03A3  3441               	retlw	65	;'A'
   522  03A4  3454               	retlw	84	;'T'
   523  03A5  3448               	retlw	72	;'H'
   524  03A6  3400               	retlw	0
   525  03A7                     STR_2:	
   526  03A7  344F               	retlw	79	;'O'
   527  03A8  344B               	retlw	75	;'K'
   528  03A9  3400               	retlw	0
   529  03AA                     STR_1:	
   530  03AA  3441               	retlw	65	;'A'
   531  03AB  3454               	retlw	84	;'T'
   532  03AC  3400               	retlw	0
   533  03AD                     __end_of__stringdata:	
   534                           
   535                           	psect	cinit
   536  0015                     start_initialization:	
   537                           ; #config settings
   538                           
   539  0015                     __initialization:	
   540                           
   541                           ; Clear objects allocated to COMMON
   542  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   543  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   544  0017  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   545                           
   546                           ; Clear objects allocated to BANK0
   547  0018  1383               	bcf	3,7	;select IRP bank0
   548  0019  3050               	movlw	low __pbssBANK0
   549  001A  0084               	movwf	4
   550  001B  305A               	movlw	low (__pbssBANK0+10)
   551  001C  120A  158A  26D4  120A  118A  	fcall	clear_ram0
   552                           
   553                           ; Clear objects allocated to BANK1
   554  0021  30A0               	movlw	low __pbssBANK1
   555  0022  0084               	movwf	4
   556  0023  30E0               	movlw	low (__pbssBANK1+64)
   557  0024  120A  158A  26D4  120A  118A  	fcall	clear_ram0
   558                           
   559                           ; Clear objects allocated to BANK3
   560  0029  1783               	bsf	3,7	;select IRP bank2
   561  002A  3090               	movlw	low __pbssBANK3
   562  002B  0084               	movwf	4
   563  002C  30F0               	movlw	low (__pbssBANK3+96)
   564  002D  120A  158A  26D4  120A  118A  	fcall	clear_ram0
   565                           
   566                           ; Initialize objects allocated to BANK0
   567  0032  1383               	bcf	3,7	;select IRP bank0
   568  0033  3050               	movlw	low (__pdataBANK0+21)
   569  0034  00FD               	movwf	btemp+-1
   570  0035  300F               	movlw	high __pidataBANK0
   571  0036  00FE               	movwf	btemp
   572  0037  3017               	movlw	low __pidataBANK0
   573  0038  00FF               	movwf	btemp+1
   574  0039  303B               	movlw	low __pdataBANK0
   575  003A  0084               	movwf	4
   576  003B  120A  158A  270A   	fcall	init_ram0
   577  003E                     end_of_initialization:	
   578                           ;End of C runtime variable initialization code
   579                           
   580  003E                     __end_of__initialization:	
   581  003E  0183               	clrf	3
   582  003F  120A  118A  2842   	ljmp	_main	;jump to C main() function
   583                           
   584                           	psect	bssCOMMON
   585  0079                     __pbssCOMMON:	
   586  0079                     _CALL_FLAG:	
   587  0079                     	ds	1
   588  007A                     _UQEnd:	
   589  007A                     	ds	1
   590  007B                     _UQFront:	
   591  007B                     	ds	1
   592                           
   593                           	psect	bssBANK0
   594  0050                     __pbssBANK0:	
   595  0050                     USARTWriteInt@F1040:	
   596  0050                     	ds	5
   597  0055                     _LP_FLAG:	
   598  0055                     	ds	1
   599  0056                     _MOTOR_FLAG:	
   600  0056                     	ds	1
   601  0057                     _RING_COUNT:	
   602  0057                     	ds	1
   603  0058                     _RING_TIMER:	
   604  0058                     	ds	1
   605  0059                     _WRONG_NUMBER:	
   606  0059                     	ds	1
   607                           
   608                           	psect	dataBANK0
   609  003B                     __pdataBANK0:	
   610  003B                     _REQUIRED_RING_COUNT:	
   611  003B                     	ds	1
   612  003C                     _phone_number:	
   613  003C                     	ds	20
   614                           
   615                           	psect	bssBANK1
   616  00A0                     __pbssBANK1:	
   617  00A0                     _URBuff:	
   618  00A0                     	ds	64
   619                           
   620                           	psect	bssBANK3
   621  0190                     __pbssBANK3:	
   622  0190                     _sim300_buffer:	
   623  0190                     	ds	96
   624                           
   625                           	psect	clrtext
   626  0ED4                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  0ED4  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  0ED5                     clrloop0:	
   632  0ED5  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  0ED6  0A84               	incf	4,f	;increment pointer
   634  0ED7  0604               	xorwf	4,w	;XOR with final address
   635  0ED8  1903               	btfsc	3,2	;have we reached the end yet?
   636  0ED9  3400               	retlw	0	;all done for this memory range, return
   637  0EDA  0604               	xorwf	4,w	;XOR again to restore value
   638  0EDB  2ED5               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	inittext
   641  0F06                     init_fetch0:	
   642                           ;	Called with low address in FSR and high address in W
   643                           
   644  0F06  087E               	movf	126,w
   645  0F07  008A               	movwf	10
   646  0F08  087F               	movf	127,w
   647  0F09  0082               	movwf	2
   648  0F0A                     init_ram0:	
   649                           ;Called with:
   650                           ;	high address of idata address in btemp 
   651                           ;	low address of idata address in btemp+1 
   652                           ;	low address of data in FSR
   653                           ;	high address + 1 of data in btemp-1
   654                           
   655  0F0A  2706  120A  158A   	fcall	init_fetch0
   656  0F0D  0080               	movwf	0
   657  0F0E  0A84               	incf	4,f
   658  0F0F  0804               	movf	4,w
   659  0F10  067D               	xorwf	125,w
   660  0F11  1903               	btfsc	3,2
   661  0F12  3400               	retlw	0
   662  0F13  0AFF               	incf	127,f
   663  0F14  1903               	btfsc	3,2
   664  0F15  0AFE               	incf	126,f
   665  0F16  2F0A               	goto	init_ram0
   666                           
   667                           	psect	cstackCOMMON
   668  0070                     __pcstackCOMMON:	
   669  0070                     ?_USARTHandleRxInt:	
   670  0070                     ??_USARTHandleRxInt:	
   671                           ; 0 bytes @ 0x0
   672                           
   673  0070                     ?_start:	
   674                           ; 0 bytes @ 0x0
   675                           
   676  0070                     ?_stop:	
   677                           ; 0 bytes @ 0x0
   678                           
   679  0070                     ?_ISR:	
   680                           ; 0 bytes @ 0x0
   681                           
   682  0070                     ?_USARTWriteChar:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_USARTFlushBuffer:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_main:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_eeprom_read:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_phase_check:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_SIM300WaitForValidCall:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_toupper:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_USARTReadData:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_USARTDataAvailable:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_SIM300Init:	
   710                           ; 1 bytes @ 0x0
   711                           
   712                           
   713                           ; 1 bytes @ 0x0
   714  0070                     	ds	4
   715  0074                     USARTHandleRxInt@data:	
   716                           
   717                           ; 1 bytes @ 0x4
   718  0074                     	ds	1
   719  0075                     ??_ISR:	
   720                           
   721                           ; 0 bytes @ 0x5
   722  0075                     	ds	4
   723                           
   724                           	psect	cstackBANK0
   725  0020                     __pcstackBANK0:	
   726  0020                     ??_eeprom_read:	
   727  0020                     ??_phase_check:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0020                     ??_start:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0020                     ??_stop:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0020                     ?_eeprom_write:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0020                     ??_toupper:	
   740                           ; 0 bytes @ 0x0
   741                           
   742  0020                     ?_USARTInit:	
   743                           ; 0 bytes @ 0x0
   744                           
   745  0020                     ??_USARTWriteChar:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0020                     ??_USARTReadData:	
   749                           ; 0 bytes @ 0x0
   750                           
   751  0020                     ??_USARTDataAvailable:	
   752                           ; 0 bytes @ 0x0
   753                           
   754  0020                     ?_SIM300CheckResponse:	
   755                           ; 0 bytes @ 0x0
   756                           
   757  0020                     ?_strlen:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     ?___wmul:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0020                     ?___awmod:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0020                     USARTWriteChar@ch:	
   767                           ; 2 bytes @ 0x0
   768                           
   769  0020                     SIM300CheckResponse@check:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0020                     eeprom_write@value:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0020                     USARTInit@baud_rate:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0020                     ___wmul@multiplier:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0020                     ___awmod@divisor:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0020                     strlen@s:	
   785                           ; 2 bytes @ 0x0
   786                           
   787                           
   788                           ; 2 bytes @ 0x0
   789  0020                     	ds	1
   790  0021                     ??_eeprom_write:	
   791  0021                     ?_USARTWriteString:	
   792                           ; 0 bytes @ 0x1
   793                           
   794  0021                     USARTReadData@data:	
   795                           ; 0 bytes @ 0x1
   796                           
   797  0021                     SIM300CheckResponse@len:	
   798                           ; 1 bytes @ 0x1
   799                           
   800  0021                     eeprom_read@addr:	
   801                           ; 1 bytes @ 0x1
   802                           
   803  0021                     toupper@c:	
   804                           ; 1 bytes @ 0x1
   805                           
   806  0021                     USARTWriteString@str:	
   807                           ; 1 bytes @ 0x1
   808                           
   809                           
   810                           ; 2 bytes @ 0x1
   811  0021                     	ds	1
   812  0022                     ??_SIM300CheckResponse:	
   813  0022                     ??_strlen:	
   814                           ; 0 bytes @ 0x2
   815                           
   816  0022                     ??_USARTInit:	
   817                           ; 0 bytes @ 0x2
   818                           
   819  0022                     ?_USARTReadBuffer:	
   820                           ; 0 bytes @ 0x2
   821                           
   822  0022                     ??_USARTFlushBuffer:	
   823                           ; 0 bytes @ 0x2
   824                           
   825  0022                     ?_strrichr:	
   826                           ; 0 bytes @ 0x2
   827                           
   828  0022                     ?_strichr:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0022                     ?_SIM300RingResponse:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0022                     ?_strnicmp:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0022                     eeprom_write@addr:	
   838                           ; 2 bytes @ 0x2
   839                           
   840  0022                     strnicmp@s2:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0022                     USARTReadBuffer@len:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0022                     SIM300RingResponse@timeout:	
   847                           ; 2 bytes @ 0x2
   848                           
   849  0022                     ___wmul@multiplicand:	
   850                           ; 2 bytes @ 0x2
   851                           
   852  0022                     ___awmod@dividend:	
   853                           ; 2 bytes @ 0x2
   854                           
   855  0022                     strichr@chr:	
   856                           ; 2 bytes @ 0x2
   857                           
   858  0022                     strrichr@chr:	
   859                           ; 2 bytes @ 0x2
   860                           
   861                           
   862                           ; 2 bytes @ 0x2
   863  0022                     	ds	1
   864  0023                     ??_USARTWriteString:	
   865  0023                     strnicmp@len:	
   866                           ; 0 bytes @ 0x3
   867                           
   868                           
   869                           ; 2 bytes @ 0x3
   870  0023                     	ds	1
   871  0024                     ??_strrichr:	
   872  0024                     ??_strichr:	
   873                           ; 0 bytes @ 0x4
   874                           
   875  0024                     ??_USARTReadBuffer:	
   876                           ; 0 bytes @ 0x4
   877                           
   878  0024                     ??_SIM300RingResponse:	
   879                           ; 0 bytes @ 0x4
   880                           
   881  0024                     ??___wmul:	
   882                           ; 0 bytes @ 0x4
   883                           
   884  0024                     ??___awmod:	
   885                           ; 0 bytes @ 0x4
   886                           
   887  0024                     SIM300CheckResponse@i:	
   888                           ; 0 bytes @ 0x4
   889                           
   890  0024                     ___wmul@product:	
   891                           ; 1 bytes @ 0x4
   892                           
   893  0024                     strlen@cp:	
   894                           ; 2 bytes @ 0x4
   895                           
   896                           
   897                           ; 2 bytes @ 0x4
   898  0024                     	ds	1
   899  0025                     ??_strnicmp:	
   900  0025                     SIM300CheckResponse@response:	
   901                           ; 0 bytes @ 0x5
   902                           
   903  0025                     ___awmod@counter:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0025                     SIM300RingResponse@n:	
   907                           ; 1 bytes @ 0x5
   908                           
   909                           
   910                           ; 2 bytes @ 0x5
   911  0025                     	ds	1
   912  0026                     ___awmod@sign:	
   913  0026                     strichr@ptr:	
   914                           ; 1 bytes @ 0x6
   915                           
   916  0026                     strrichr@cp:	
   917                           ; 1 bytes @ 0x6
   918                           
   919  0026                     USARTReadBuffer@i:	
   920                           ; 1 bytes @ 0x6
   921                           
   922                           
   923                           ; 2 bytes @ 0x6
   924  0026                     	ds	1
   925  0027                     SIM300RingResponse@i:	
   926  0027                     strnicmp@r:	
   927                           ; 1 bytes @ 0x7
   928                           
   929  0027                     strrichr@ptr:	
   930                           ; 1 bytes @ 0x7
   931                           
   932                           
   933                           ; 1 bytes @ 0x7
   934  0027                     	ds	1
   935  0028                     USARTReadBuffer@buff:	
   936  0028                     strnicmp@s1:	
   937                           ; 1 bytes @ 0x8
   938                           
   939                           
   940                           ; 1 bytes @ 0x8
   941  0028                     	ds	1
   942  0029                     ??_SIM300WaitForValidCall:	
   943  0029                     ?_SIM300Cmd:	
   944                           ; 0 bytes @ 0x9
   945                           
   946  0029                     SIM300Cmd@cmd:	
   947                           ; 1 bytes @ 0x9
   948                           
   949                           
   950                           ; 2 bytes @ 0x9
   951  0029                     	ds	1
   952  002A                     SIM300WaitForValidCall@len:	
   953                           
   954                           ; 1 bytes @ 0xA
   955  002A                     	ds	1
   956  002B                     ??_SIM300Cmd:	
   957  002B                     SIM300WaitForValidCall@start:	
   958                           ; 0 bytes @ 0xB
   959                           
   960                           
   961                           ; 1 bytes @ 0xB
   962  002B                     	ds	1
   963  002C                     SIM300WaitForValidCall@i:	
   964                           
   965                           ; 1 bytes @ 0xC
   966  002C                     	ds	1
   967  002D                     SIM300Cmd@i:	
   968                           
   969                           ; 2 bytes @ 0xD
   970  002D                     	ds	2
   971  002F                     SIM300Cmd@len:	
   972                           
   973                           ; 1 bytes @ 0xF
   974  002F                     	ds	1
   975  0030                     ??_SIM300Init:	
   976                           
   977                           ; 0 bytes @ 0x10
   978  0030                     	ds	2
   979  0032                     SIM300Init@i:	
   980                           
   981                           ; 2 bytes @ 0x12
   982  0032                     	ds	2
   983  0034                     ??_main:	
   984                           
   985                           ; 0 bytes @ 0x14
   986  0034                     	ds	3
   987  0037                     main@r:	
   988                           
   989                           ; 1 bytes @ 0x17
   990  0037                     	ds	1
   991  0038                     main@ten_seconds:	
   992                           
   993                           ; 1 bytes @ 0x18
   994  0038                     	ds	1
   995  0039                     main@count:	
   996                           
   997                           ; 1 bytes @ 0x19
   998  0039                     	ds	1
   999  003A                     main@timer:	
  1000                           
  1001                           ; 1 bytes @ 0x1A
  1002  003A                     	ds	1
  1003                           
  1004                           	psect	maintext
  1005  0042                     __pmaintext:	
  1006 ;;
  1007 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1008 ;;
  1009 ;; *************** function _main *****************
  1010 ;; Defined at:
  1011 ;;		line 30 in file "E:\Study Material\XC8 PROJECTS\Modem\Mobile.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  ten_seconds     1   24[BANK0 ] unsigned char 
  1016 ;;  timer           1   26[BANK0 ] unsigned char 
  1017 ;;  count           1   25[BANK0 ] unsigned char 
  1018 ;;  r               1   23[BANK0 ] char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;		None               void
  1021 ;; Registers used:
  1022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 17F/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         0       4       0       0       0
  1030 ;;      Temps:          0       3       0       0       0
  1031 ;;      Totals:         0       7       0       0       0
  1032 ;;Total ram usage:        7 bytes
  1033 ;; Hardware stack levels required when called:    6
  1034 ;; This function calls:
  1035 ;;		_SIM300Cmd
  1036 ;;		_SIM300Init
  1037 ;;		_SIM300WaitForValidCall
  1038 ;;		_USARTFlushBuffer
  1039 ;;		___awmod
  1040 ;;		_eeprom_read
  1041 ;;		_eeprom_write
  1042 ;;		_phase_check
  1043 ;;		_start
  1044 ;;		_stop
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _main
  1052  0042                     _main:	
  1053                           
  1054                           ;Mobile.c: 32: TRISA = 0xFE;
  1055                           
  1056                           ;incstack = 0
  1057                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1058  0042  30FE               	movlw	254
  1059  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1060  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1061  0045  0085               	movwf	5	;volatile
  1062                           
  1063                           ;Mobile.c: 33: TRISB = 0x00;
  1064  0046  0186               	clrf	6	;volatile
  1065                           
  1066                           ;Mobile.c: 34: TRISC = 0xC7;
  1067  0047  30C7               	movlw	199
  1068  0048  0087               	movwf	7	;volatile
  1069                           
  1070                           ;Mobile.c: 35: ADCON1 = 0x06;
  1071  0049  3006               	movlw	6
  1072  004A  009F               	movwf	31	;volatile
  1073                           
  1074                           ;Mobile.c: 37: char count = 0, timer = 0;
  1075  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1076  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1077  004D  01B9               	clrf	main@count
  1078  004E  01BA               	clrf	main@timer
  1079                           
  1080                           ;Mobile.c: 38: RC3 = 0;
  1081  004F  1187               	bcf	7,3	;volatile
  1082                           
  1083                           ;Mobile.c: 39: RC4 = 0;
  1084  0050  1207               	bcf	7,4	;volatile
  1085                           
  1086                           ;Mobile.c: 40: RC5 = 0;
  1087  0051  1287               	bcf	7,5	;volatile
  1088                           
  1089                           ;Mobile.c: 43: for(count = 0; count <= 10; count++)
  1090  0052  01B9               	clrf	main@count
  1091  0053  300B               	movlw	11
  1092  0054  0239               	subwf	main@count,w
  1093  0055  1803               	btfsc	3,0
  1094  0056  287F               	goto	l3018
  1095  0057                     l370:	
  1096                           
  1097                           ;Mobile.c: 44: {
  1098                           ;Mobile.c: 45: RB7 = 1;
  1099  0057  1786               	bsf	6,7	;volatile
  1100                           
  1101                           ;Mobile.c: 46: _delay(1000000);
  1102  0058  3006               	movlw	6
  1103  0059  00B6               	movwf	??_main+2
  1104  005A  3013               	movlw	19
  1105  005B  00B5               	movwf	??_main+1
  1106  005C  30B1               	movlw	177
  1107  005D  00B4               	movwf	??_main
  1108  005E                     u2637:	
  1109  005E  0BB4               	decfsz	??_main,f
  1110  005F  285E               	goto	u2637
  1111  0060  0BB5               	decfsz	??_main+1,f
  1112  0061  285E               	goto	u2637
  1113  0062  0BB6               	decfsz	??_main+2,f
  1114  0063  285E               	goto	u2637
  1115  0064  2865               	nop2
  1116                           
  1117                           ;Mobile.c: 47: RB7 = 0;
  1118  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0067  1386               	bcf	6,7	;volatile
  1121                           
  1122                           ;Mobile.c: 48: _delay(1000000);
  1123  0068  3006               	movlw	6
  1124  0069  00B6               	movwf	??_main+2
  1125  006A  3013               	movlw	19
  1126  006B  00B5               	movwf	??_main+1
  1127  006C  30B1               	movlw	177
  1128  006D  00B4               	movwf	??_main
  1129  006E                     u2647:	
  1130  006E  0BB4               	decfsz	??_main,f
  1131  006F  286E               	goto	u2647
  1132  0070  0BB5               	decfsz	??_main+1,f
  1133  0071  286E               	goto	u2647
  1134  0072  0BB6               	decfsz	??_main+2,f
  1135  0073  286E               	goto	u2647
  1136  0074  2875               	nop2
  1137  0075  3001               	movlw	1
  1138  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0078  00B4               	movwf	??_main
  1141  0079  0834               	movf	??_main,w
  1142  007A  07B9               	addwf	main@count,f
  1143  007B  300B               	movlw	11
  1144  007C  0239               	subwf	main@count,w
  1145  007D  1C03               	skipc
  1146  007E  2857               	goto	l370
  1147  007F                     l3018:	
  1148                           
  1149                           ;Mobile.c: 49: }
  1150                           ;Mobile.c: 52: MOTOR_FLAG = (char)eeprom_read(0x01);
  1151  007F  3001               	movlw	1
  1152  0080  120A  158A  27DC  120A  118A  	fcall	_eeprom_read
  1153  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0087  00B4               	movwf	??_main
  1156  0088  0834               	movf	??_main,w
  1157  0089  00D6               	movwf	_MOTOR_FLAG
  1158                           
  1159                           ;Mobile.c: 53: if(MOTOR_FLAG != 0 && MOTOR_FLAG != 1)
  1160  008A  0856               	movf	_MOTOR_FLAG,w
  1161  008B  1903               	btfsc	3,2
  1162  008C  2892               	goto	l3026
  1163  008D  0856               	movf	_MOTOR_FLAG,w
  1164  008E  3A01               	xorlw	1
  1165  008F  1903               	skipnz
  1166  0090  2892               	goto	l3026
  1167                           
  1168                           ;Mobile.c: 54: MOTOR_FLAG = 0;
  1169  0091  01D6               	clrf	_MOTOR_FLAG
  1170  0092                     l3026:	
  1171                           
  1172                           ;Mobile.c: 56: if(MOTOR_FLAG == 1)
  1173  0092  0856               	movf	_MOTOR_FLAG,w
  1174  0093  3A01               	xorlw	1
  1175  0094  1D03               	skipz
  1176  0095  2898               	goto	l3030
  1177                           
  1178                           ;Mobile.c: 57: REQUIRED_RING_COUNT = 3;
  1179  0096  3003               	movlw	3
  1180  0097  2899               	goto	L1
  1181  0098                     l3030:	
  1182                           
  1183                           ;Mobile.c: 58: else
  1184                           ;Mobile.c: 59: REQUIRED_RING_COUNT = 2;
  1185  0098  3002               	movlw	2
  1186  0099                     L1:	
  1187  0099  00B4               	movwf	??_main
  1188  009A  0834               	movf	??_main,w
  1189  009B  00BB               	movwf	_REQUIRED_RING_COUNT
  1190                           
  1191                           ;Mobile.c: 61: int8_t r= SIM300Init();
  1192  009C  120A  118A  24C4  120A  118A  	fcall	_SIM300Init
  1193  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00A3  00B4               	movwf	??_main
  1196  00A4  0834               	movf	??_main,w
  1197  00A5  00B7               	movwf	main@r
  1198                           
  1199                           ;Mobile.c: 62: _delay(1000000);
  1200  00A6  3006               	movlw	6
  1201  00A7  00B6               	movwf	??_main+2
  1202  00A8  3013               	movlw	19
  1203  00A9  00B5               	movwf	??_main+1
  1204  00AA  30B1               	movlw	177
  1205  00AB  00B4               	movwf	??_main
  1206  00AC                     u2657:	
  1207  00AC  0BB4               	decfsz	??_main,f
  1208  00AD  28AC               	goto	u2657
  1209  00AE  0BB5               	decfsz	??_main+1,f
  1210  00AF  28AC               	goto	u2657
  1211  00B0  0BB6               	decfsz	??_main+2,f
  1212  00B1  28AC               	goto	u2657
  1213  00B2  28B3               	nop2
  1214                           
  1215                           ;Mobile.c: 64: if(r == 1)
  1216  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1217  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1218  00B5  0837               	movf	main@r,w
  1219  00B6  3A01               	xorlw	1
  1220  00B7  1D03               	skipz
  1221  00B8  28E7               	goto	l377
  1222                           
  1223                           ;Mobile.c: 65: {
  1224                           ;Mobile.c: 67: SIM300Cmd("AT+CLIP=1");
  1225  00B9  3048               	movlw	low (STR_17-__stringbase)
  1226  00BA  00A9               	movwf	SIM300Cmd@cmd
  1227  00BB  3080               	movlw	128
  1228  00BC  00AA               	movwf	SIM300Cmd@cmd+1
  1229  00BD  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1230                           
  1231                           ;Mobile.c: 68: _delay(1000000);
  1232  00C2  3006               	movlw	6
  1233  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1234  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1235  00C5  00B6               	movwf	??_main+2
  1236  00C6  3013               	movlw	19
  1237  00C7  00B5               	movwf	??_main+1
  1238  00C8  30B1               	movlw	177
  1239  00C9  00B4               	movwf	??_main
  1240  00CA                     u2667:	
  1241  00CA  0BB4               	decfsz	??_main,f
  1242  00CB  28CA               	goto	u2667
  1243  00CC  0BB5               	decfsz	??_main+1,f
  1244  00CD  28CA               	goto	u2667
  1245  00CE  0BB6               	decfsz	??_main+2,f
  1246  00CF  28CA               	goto	u2667
  1247  00D0  28D1               	nop2
  1248                           
  1249                           ;Mobile.c: 70: USARTFlushBuffer();
  1250  00D1  120A  158A  26E7  120A  118A  	fcall	_USARTFlushBuffer
  1251                           
  1252                           ;Mobile.c: 72: RB7 = 1;
  1253  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1254  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1255  00D8  1786               	bsf	6,7	;volatile
  1256                           
  1257                           ;Mobile.c: 73: _delay(1000000);
  1258  00D9  3006               	movlw	6
  1259  00DA  00B6               	movwf	??_main+2
  1260  00DB  3013               	movlw	19
  1261  00DC  00B5               	movwf	??_main+1
  1262  00DD  30B1               	movlw	177
  1263  00DE  00B4               	movwf	??_main
  1264  00DF                     u2677:	
  1265  00DF  0BB4               	decfsz	??_main,f
  1266  00E0  28DF               	goto	u2677
  1267  00E1  0BB5               	decfsz	??_main+1,f
  1268  00E2  28DF               	goto	u2677
  1269  00E3  0BB6               	decfsz	??_main+2,f
  1270  00E4  28DF               	goto	u2677
  1271  00E5  28E6               	nop2
  1272                           
  1273                           ;Mobile.c: 74: }
  1274  00E6  2990               	goto	l3102
  1275  00E7                     l377:	
  1276                           ;Mobile.c: 75: else
  1277                           ;Mobile.c: 76: {
  1278                           ;Mobile.c: 78: while(1)
  1279                           
  1280                           
  1281                           ;Mobile.c: 79: {
  1282                           ;Mobile.c: 80: RB7 = 1;
  1283  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1284  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1285  00E9  1786               	bsf	6,7	;volatile
  1286                           
  1287                           ;Mobile.c: 81: _delay(100000);
  1288  00EA  3082               	movlw	130
  1289  00EB  00B5               	movwf	??_main+1
  1290  00EC  30DD               	movlw	221
  1291  00ED  00B4               	movwf	??_main
  1292  00EE                     u2687:	
  1293  00EE  0BB4               	decfsz	??_main,f
  1294  00EF  28EE               	goto	u2687
  1295  00F0  0BB5               	decfsz	??_main+1,f
  1296  00F1  28EE               	goto	u2687
  1297  00F2  28F3               	nop2
  1298                           
  1299                           ;Mobile.c: 82: RB7 = 0;
  1300  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1301  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1302  00F5  1386               	bcf	6,7	;volatile
  1303                           
  1304                           ;Mobile.c: 83: _delay(100000);
  1305  00F6  3082               	movlw	130
  1306  00F7  00B5               	movwf	??_main+1
  1307  00F8  30DD               	movlw	221
  1308  00F9  00B4               	movwf	??_main
  1309  00FA                     u2697:	
  1310  00FA  0BB4               	decfsz	??_main,f
  1311  00FB  28FA               	goto	u2697
  1312  00FC  0BB5               	decfsz	??_main+1,f
  1313  00FD  28FA               	goto	u2697
  1314  00FE  28FF               	nop2
  1315  00FF  28E7               	goto	l377
  1316  0100                     l3052:	
  1317                           ;Mobile.c: 90: {
  1318                           ;Mobile.c: 92: while(SIM300WaitForValidCall() != 1)
  1319                           
  1320                           ;Mobile.c: 84: }
  1321                           ;Mobile.c: 85: }
  1322                           ;Mobile.c: 89: while(1)
  1323                           
  1324                           
  1325                           ;Mobile.c: 93: {
  1326                           ;Mobile.c: 95: if(MOTOR_FLAG == 1)
  1327  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0102  0856               	movf	_MOTOR_FLAG,w
  1330  0103  3A01               	xorlw	1
  1331  0104  1D03               	skipz
  1332  0105  2950               	goto	l3082
  1333                           
  1334                           ;Mobile.c: 96: {
  1335                           ;Mobile.c: 97: if((timer % 15) == 0)
  1336  0106  300F               	movlw	15
  1337  0107  00A0               	movwf	___awmod@divisor
  1338  0108  3000               	movlw	0
  1339  0109  00A1               	movwf	___awmod@divisor+1
  1340  010A  083A               	movf	main@timer,w
  1341  010B  00B4               	movwf	??_main
  1342  010C  01B5               	clrf	??_main+1
  1343  010D  0834               	movf	??_main,w
  1344  010E  00A2               	movwf	___awmod@dividend
  1345  010F  0835               	movf	??_main+1,w
  1346  0110  00A3               	movwf	___awmod@dividend+1
  1347  0111  120A  118A  2578  120A  118A  	fcall	___awmod
  1348  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0118  0821               	movf	?___awmod+1,w
  1351  0119  0420               	iorwf	?___awmod,w
  1352  011A  1D03               	skipz
  1353  011B  2941               	goto	l3070
  1354                           
  1355                           ;Mobile.c: 98: {
  1356                           ;Mobile.c: 99: if(phase_check() == 1)
  1357  011C  120A  158A  26DC  120A  118A  	fcall	_phase_check
  1358  0121  3A01               	xorlw	1
  1359  0122  1D03               	skipz
  1360  0123  2933               	goto	l3064
  1361                           
  1362                           ;Mobile.c: 100: {
  1363                           ;Mobile.c: 101: if(LP_FLAG == 0)
  1364  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0126  08D5               	movf	_LP_FLAG,f
  1367  0127  1D03               	skipz
  1368  0128  2941               	goto	l3070
  1369                           
  1370                           ;Mobile.c: 102: {
  1371                           ;Mobile.c: 103: start();
  1372  0129  120A  158A  272C  120A  118A  	fcall	_start
  1373                           
  1374                           ;Mobile.c: 104: LP_FLAG = 1;
  1375  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1376  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0130  01D5               	clrf	_LP_FLAG
  1378  0131  0AD5               	incf	_LP_FLAG,f
  1379                           
  1380                           ;Mobile.c: 105: }
  1381                           ;Mobile.c: 106: }
  1382  0132  2941               	goto	l3070
  1383  0133                     l3064:	
  1384                           
  1385                           ;Mobile.c: 107: else
  1386                           ;Mobile.c: 108: {
  1387                           ;Mobile.c: 109: if(LP_FLAG == 1)
  1388  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0135  0855               	movf	_LP_FLAG,w
  1391  0136  3A01               	xorlw	1
  1392  0137  1D03               	skipz
  1393  0138  2941               	goto	l3070
  1394                           
  1395                           ;Mobile.c: 110: {
  1396                           ;Mobile.c: 111: stop();
  1397  0139  120A  158A  274E  120A  118A  	fcall	_stop
  1398                           
  1399                           ;Mobile.c: 112: LP_FLAG = 0;
  1400  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1401  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0140  01D5               	clrf	_LP_FLAG
  1403  0141                     l3070:	
  1404                           
  1405                           ;Mobile.c: 113: }
  1406                           ;Mobile.c: 114: }
  1407                           ;Mobile.c: 115: }
  1408                           ;Mobile.c: 117: if(timer == 60)
  1409  0141  083A               	movf	main@timer,w
  1410  0142  3A3C               	xorlw	60
  1411  0143  1903               	btfsc	3,2
  1412                           
  1413                           ;Mobile.c: 118: {
  1414                           ;Mobile.c: 119: if(RA5 == 0)
  1415  0144  1A85               	btfsc	5,5	;volatile
  1416  0145  2950               	goto	l3082
  1417                           
  1418                           ;Mobile.c: 120: {
  1419                           ;Mobile.c: 121: stop();
  1420  0146  120A  158A  274E  120A  118A  	fcall	_stop
  1421                           
  1422                           ;Mobile.c: 122: LP_FLAG = 0;
  1423  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1424  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1425  014D  01D5               	clrf	_LP_FLAG
  1426                           
  1427                           ;Mobile.c: 123: MOTOR_FLAG = 0;
  1428  014E  01D6               	clrf	_MOTOR_FLAG
  1429                           
  1430                           ;Mobile.c: 124: timer = 0;
  1431  014F  01BA               	clrf	main@timer
  1432  0150                     l3082:	
  1433                           
  1434                           ;Mobile.c: 125: }
  1435                           ;Mobile.c: 126: }
  1436                           ;Mobile.c: 127: }
  1437                           ;Mobile.c: 129: if(RING_COUNT != 0)
  1438  0150  0857               	movf	_RING_COUNT,w
  1439  0151  1903               	btfsc	3,2
  1440  0152  295E               	goto	l3090
  1441                           
  1442                           ;Mobile.c: 130: {
  1443                           ;Mobile.c: 131: if(RING_TIMER > 6)
  1444  0153  3007               	movlw	7
  1445  0154  0258               	subwf	_RING_TIMER,w
  1446  0155  1C03               	skipc
  1447  0156  295A               	goto	l3088
  1448                           
  1449                           ;Mobile.c: 132: {
  1450                           ;Mobile.c: 133: RING_COUNT = 0;
  1451  0157  01D7               	clrf	_RING_COUNT
  1452                           
  1453                           ;Mobile.c: 134: RING_TIMER = 0;
  1454  0158  01D8               	clrf	_RING_TIMER
  1455                           
  1456                           ;Mobile.c: 135: }
  1457  0159  295E               	goto	l3090
  1458  015A                     l3088:	
  1459                           
  1460                           ;Mobile.c: 136: else
  1461                           ;Mobile.c: 137: {
  1462                           ;Mobile.c: 138: RING_TIMER++;
  1463  015A  3001               	movlw	1
  1464  015B  00B4               	movwf	??_main
  1465  015C  0834               	movf	??_main,w
  1466  015D  07D8               	addwf	_RING_TIMER,f
  1467  015E                     l3090:	
  1468                           
  1469                           ;Mobile.c: 139: }
  1470                           ;Mobile.c: 140: }
  1471                           ;Mobile.c: 142: if(WRONG_NUMBER == 1)
  1472  015E  0859               	movf	_WRONG_NUMBER,w
  1473  015F  3A01               	xorlw	1
  1474  0160  1D03               	skipz
  1475  0161  298C               	goto	l3100
  1476                           
  1477                           ;Mobile.c: 143: {
  1478                           ;Mobile.c: 145: _delay(1000000);
  1479  0162  3006               	movlw	6
  1480  0163  00B6               	movwf	??_main+2
  1481  0164  3013               	movlw	19
  1482  0165  00B5               	movwf	??_main+1
  1483  0166  30B1               	movlw	177
  1484  0167  00B4               	movwf	??_main
  1485  0168                     u2707:	
  1486  0168  0BB4               	decfsz	??_main,f
  1487  0169  2968               	goto	u2707
  1488  016A  0BB5               	decfsz	??_main+1,f
  1489  016B  2968               	goto	u2707
  1490  016C  0BB6               	decfsz	??_main+2,f
  1491  016D  2968               	goto	u2707
  1492  016E  296F               	nop2
  1493                           
  1494                           ;Mobile.c: 146: SIM300Cmd("ATH");
  1495  016F  3094               	movlw	low (STR_18-__stringbase)
  1496  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0172  00A9               	movwf	SIM300Cmd@cmd
  1499  0173  3080               	movlw	128
  1500  0174  00AA               	movwf	SIM300Cmd@cmd+1
  1501  0175  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1502                           
  1503                           ;Mobile.c: 147: _delay(1000000);
  1504  017A  3006               	movlw	6
  1505  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1506  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1507  017D  00B6               	movwf	??_main+2
  1508  017E  3013               	movlw	19
  1509  017F  00B5               	movwf	??_main+1
  1510  0180  30B1               	movlw	177
  1511  0181  00B4               	movwf	??_main
  1512  0182                     u2717:	
  1513  0182  0BB4               	decfsz	??_main,f
  1514  0183  2982               	goto	u2717
  1515  0184  0BB5               	decfsz	??_main+1,f
  1516  0185  2982               	goto	u2717
  1517  0186  0BB6               	decfsz	??_main+2,f
  1518  0187  2982               	goto	u2717
  1519  0188  2989               	nop2
  1520                           
  1521                           ;Mobile.c: 148: WRONG_NUMBER = 0;
  1522  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1523  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1524  018B  01D9               	clrf	_WRONG_NUMBER
  1525  018C                     l3100:	
  1526                           
  1527                           ;Mobile.c: 149: }
  1528                           ;Mobile.c: 151: timer++;
  1529  018C  3001               	movlw	1
  1530  018D  00B4               	movwf	??_main
  1531  018E  0834               	movf	??_main,w
  1532  018F  07BA               	addwf	main@timer,f
  1533  0190                     l3102:	
  1534  0190  120A  118A  23AD  120A  118A  	fcall	_SIM300WaitForValidCall
  1535  0195  3A01               	xorlw	1
  1536  0196  1D03               	skipz
  1537  0197  2900               	goto	l3052
  1538                           
  1539                           ;Mobile.c: 152: }
  1540                           ;Mobile.c: 155: if ( MOTOR_FLAG == 0 )
  1541  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1543  019A  08D6               	movf	_MOTOR_FLAG,f
  1544  019B  1D03               	skipz
  1545  019C  2A6A               	goto	l3154
  1546                           
  1547                           ;Mobile.c: 156: {
  1548                           ;Mobile.c: 158: if ( phase_check() == 1 )
  1549  019D  120A  158A  26DC  120A  118A  	fcall	_phase_check
  1550  01A2  3A01               	xorlw	1
  1551  01A3  1D03               	skipz
  1552  01A4  2A40               	goto	l3148
  1553                           
  1554                           ;Mobile.c: 159: {
  1555                           ;Mobile.c: 161: LP_FLAG = 1;
  1556  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1557  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1558  01A7  01D5               	clrf	_LP_FLAG
  1559  01A8  0AD5               	incf	_LP_FLAG,f
  1560                           
  1561                           ;Mobile.c: 162: start();
  1562  01A9  120A  158A  272C  120A  118A  	fcall	_start
  1563                           
  1564                           ;Mobile.c: 163: MOTOR_FLAG = 1;
  1565  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1566  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1567  01B0  01D6               	clrf	_MOTOR_FLAG
  1568  01B1  0AD6               	incf	_MOTOR_FLAG,f
  1569                           
  1570                           ;Mobile.c: 164: REQUIRED_RING_COUNT = 3;
  1571  01B2  3003               	movlw	3
  1572  01B3  00B4               	movwf	??_main
  1573  01B4  0834               	movf	??_main,w
  1574  01B5  00BB               	movwf	_REQUIRED_RING_COUNT
  1575                           
  1576                           ;Mobile.c: 167: SIM300Cmd("ATH");
  1577  01B6  3094               	movlw	low (STR_18-__stringbase)
  1578  01B7  00A9               	movwf	SIM300Cmd@cmd
  1579  01B8  3080               	movlw	128
  1580  01B9  00AA               	movwf	SIM300Cmd@cmd+1
  1581  01BA  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1582                           
  1583                           ;Mobile.c: 168: _delay(1000000);
  1584  01BF  3006               	movlw	6
  1585  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1586  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1587  01C2  00B6               	movwf	??_main+2
  1588  01C3  3013               	movlw	19
  1589  01C4  00B5               	movwf	??_main+1
  1590  01C5  30B1               	movlw	177
  1591  01C6  00B4               	movwf	??_main
  1592  01C7                     u2727:	
  1593  01C7  0BB4               	decfsz	??_main,f
  1594  01C8  29C7               	goto	u2727
  1595  01C9  0BB5               	decfsz	??_main+1,f
  1596  01CA  29C7               	goto	u2727
  1597  01CB  0BB6               	decfsz	??_main+2,f
  1598  01CC  29C7               	goto	u2727
  1599  01CD  29CE               	nop2
  1600                           
  1601                           ;Mobile.c: 169: unsigned char ten_seconds = 0;
  1602  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1603  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1604  01D0  01B8               	clrf	main@ten_seconds
  1605                           
  1606                           ;Mobile.c: 170: while(phase_check() == 1 && ten_seconds < 5)
  1607  01D1  29E4               	goto	l3126
  1608  01D2                     l3122:	
  1609                           
  1610                           ;Mobile.c: 171: {
  1611                           ;Mobile.c: 172: _delay(10000000);
  1612  01D2  3033               	movlw	51
  1613  01D3  00B6               	movwf	??_main+2
  1614  01D4  30BC               	movlw	188
  1615  01D5  00B5               	movwf	??_main+1
  1616  01D6  3010               	movlw	16
  1617  01D7  00B4               	movwf	??_main
  1618  01D8                     u2737:	
  1619  01D8  0BB4               	decfsz	??_main,f
  1620  01D9  29D8               	goto	u2737
  1621  01DA  0BB5               	decfsz	??_main+1,f
  1622  01DB  29D8               	goto	u2737
  1623  01DC  0BB6               	decfsz	??_main+2,f
  1624  01DD  29D8               	goto	u2737
  1625                           
  1626                           ;Mobile.c: 173: ten_seconds++;
  1627  01DE  3001               	movlw	1
  1628  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1629  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1630  01E1  00B4               	movwf	??_main
  1631  01E2  0834               	movf	??_main,w
  1632  01E3  07B8               	addwf	main@ten_seconds,f
  1633  01E4                     l3126:	
  1634  01E4  120A  158A  26DC  120A  118A  	fcall	_phase_check
  1635  01E9  3A01               	xorlw	1
  1636  01EA  1D03               	skipz
  1637  01EB  29F2               	goto	l3130
  1638  01EC  3005               	movlw	5
  1639  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1640  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1641  01EF  0238               	subwf	main@ten_seconds,w
  1642  01F0  1C03               	skipc
  1643  01F1  29D2               	goto	l3122
  1644  01F2                     l3130:	
  1645                           
  1646                           ;Mobile.c: 174: }
  1647                           ;Mobile.c: 175: if(ten_seconds >= 5 && RA5 == 1)
  1648  01F2  3005               	movlw	5
  1649  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1650  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1651  01F5  0238               	subwf	main@ten_seconds,w
  1652  01F6  1803               	btfsc	3,0
  1653  01F7  1E85               	btfss	5,5	;volatile
  1654  01F8  2A36               	goto	l3142
  1655                           
  1656                           ;Mobile.c: 176: {
  1657                           ;Mobile.c: 178: SIM300Cmd(phone_number);
  1658  01F9  303C               	movlw	_phone_number& (0+255)
  1659  01FA  00A9               	movwf	SIM300Cmd@cmd
  1660  01FB  3000               	movlw	0
  1661  01FC  00AA               	movwf	SIM300Cmd@cmd+1
  1662  01FD  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1663                           
  1664                           ;Mobile.c: 179: _delay(30000000);
  1665  0202  3099               	movlw	153
  1666  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0205  00B6               	movwf	??_main+2
  1669  0206  3032               	movlw	50
  1670  0207  00B5               	movwf	??_main+1
  1671  0208  3038               	movlw	56
  1672  0209  00B4               	movwf	??_main
  1673  020A                     u2747:	
  1674  020A  0BB4               	decfsz	??_main,f
  1675  020B  2A0A               	goto	u2747
  1676  020C  0BB5               	decfsz	??_main+1,f
  1677  020D  2A0A               	goto	u2747
  1678  020E  0BB6               	decfsz	??_main+2,f
  1679  020F  2A0A               	goto	u2747
  1680  0210  2A11               	nop2
  1681                           
  1682                           ;Mobile.c: 180: SIM300Cmd("ATH");
  1683  0211  3094               	movlw	low (STR_18-__stringbase)
  1684  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0214  00A9               	movwf	SIM300Cmd@cmd
  1687  0215  3080               	movlw	128
  1688  0216  00AA               	movwf	SIM300Cmd@cmd+1
  1689  0217  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1690                           
  1691                           ;Mobile.c: 181: _delay(1000000);
  1692  021C  3006               	movlw	6
  1693  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1694  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1695  021F  00B6               	movwf	??_main+2
  1696  0220  3013               	movlw	19
  1697  0221  00B5               	movwf	??_main+1
  1698  0222  30B1               	movlw	177
  1699  0223  00B4               	movwf	??_main
  1700  0224                     u2757:	
  1701  0224  0BB4               	decfsz	??_main,f
  1702  0225  2A24               	goto	u2757
  1703  0226  0BB5               	decfsz	??_main+1,f
  1704  0227  2A24               	goto	u2757
  1705  0228  0BB6               	decfsz	??_main+2,f
  1706  0229  2A24               	goto	u2757
  1707  022A  2A2B               	nop2
  1708                           
  1709                           ;Mobile.c: 183: eeprom_write(0x01,1);
  1710  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1711  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1712  022D  01A0               	clrf	eeprom_write@value
  1713  022E  0AA0               	incf	eeprom_write@value,f
  1714  022F  3001               	movlw	1
  1715  0230  120A  118A  2728  120A  118A  	fcall	_eeprom_write
  1716                           
  1717                           ;Mobile.c: 184: }
  1718  0235  2990               	goto	l3102
  1719  0236                     l3142:	
  1720                           
  1721                           ;Mobile.c: 185: else
  1722                           ;Mobile.c: 186: {
  1723                           ;Mobile.c: 187: stop();
  1724  0236  120A  158A  274E  120A  118A  	fcall	_stop
  1725                           
  1726                           ;Mobile.c: 188: MOTOR_FLAG = 0;
  1727  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1728  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1729  023D  01D6               	clrf	_MOTOR_FLAG
  1730                           
  1731                           ;Mobile.c: 189: LP_FLAG = 0;
  1732  023E  01D5               	clrf	_LP_FLAG
  1733                           
  1734                           ;Mobile.c: 190: }
  1735                           ;Mobile.c: 191: }
  1736  023F  2990               	goto	l3102
  1737  0240                     l3148:	
  1738                           
  1739                           ;Mobile.c: 193: else
  1740                           ;Mobile.c: 194: {
  1741                           ;Mobile.c: 196: _delay(25000000);
  1742  0240  307F               	movlw	127
  1743  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0243  00B6               	movwf	??_main+2
  1746  0244  30D4               	movlw	212
  1747  0245  00B5               	movwf	??_main+1
  1748  0246  30AE               	movlw	174
  1749  0247  00B4               	movwf	??_main
  1750  0248                     u2767:	
  1751  0248  0BB4               	decfsz	??_main,f
  1752  0249  2A48               	goto	u2767
  1753  024A  0BB5               	decfsz	??_main+1,f
  1754  024B  2A48               	goto	u2767
  1755  024C  0BB6               	decfsz	??_main+2,f
  1756  024D  2A48               	goto	u2767
  1757  024E  2A4F               	nop2
  1758                           
  1759                           ;Mobile.c: 198: SIM300Cmd("ATH");
  1760  024F  3094               	movlw	low (STR_18-__stringbase)
  1761  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0252  00A9               	movwf	SIM300Cmd@cmd
  1764  0253  3080               	movlw	128
  1765  0254  00AA               	movwf	SIM300Cmd@cmd+1
  1766  0255  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1767                           
  1768                           ;Mobile.c: 199: _delay(1000000);
  1769  025A  3006               	movlw	6
  1770  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1771  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1772  025D  00B6               	movwf	??_main+2
  1773  025E  3013               	movlw	19
  1774  025F  00B5               	movwf	??_main+1
  1775  0260  30B1               	movlw	177
  1776  0261  00B4               	movwf	??_main
  1777  0262                     u2777:	
  1778  0262  0BB4               	decfsz	??_main,f
  1779  0263  2A62               	goto	u2777
  1780  0264  0BB5               	decfsz	??_main+1,f
  1781  0265  2A62               	goto	u2777
  1782  0266  0BB6               	decfsz	??_main+2,f
  1783  0267  2A62               	goto	u2777
  1784  0268  2A69               	nop2
  1785                           
  1786                           ;Mobile.c: 200: }
  1787                           ;Mobile.c: 201: continue;
  1788  0269  2990               	goto	l3102
  1789  026A                     l3154:	
  1790                           
  1791                           ;Mobile.c: 202: }
  1792                           ;Mobile.c: 205: if( MOTOR_FLAG == 1 )
  1793  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1794  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1795  026C  0856               	movf	_MOTOR_FLAG,w
  1796  026D  3A01               	xorlw	1
  1797  026E  1D03               	skipz
  1798  026F  2990               	goto	l3102
  1799                           
  1800                           ;Mobile.c: 206: {
  1801                           ;Mobile.c: 207: stop();
  1802  0270  120A  158A  274E  120A  118A  	fcall	_stop
  1803                           
  1804                           ;Mobile.c: 208: MOTOR_FLAG = 0;
  1805  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0277  01D6               	clrf	_MOTOR_FLAG
  1808                           
  1809                           ;Mobile.c: 209: LP_FLAG = 0;
  1810  0278  01D5               	clrf	_LP_FLAG
  1811                           
  1812                           ;Mobile.c: 210: REQUIRED_RING_COUNT = 2;
  1813  0279  3002               	movlw	2
  1814  027A  00B4               	movwf	??_main
  1815  027B  0834               	movf	??_main,w
  1816  027C  00BB               	movwf	_REQUIRED_RING_COUNT
  1817                           
  1818                           ;Mobile.c: 213: SIM300Cmd("ATH");
  1819  027D  3094               	movlw	low (STR_18-__stringbase)
  1820  027E  00A9               	movwf	SIM300Cmd@cmd
  1821  027F  3080               	movlw	128
  1822  0280  00AA               	movwf	SIM300Cmd@cmd+1
  1823  0281  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1824                           
  1825                           ;Mobile.c: 214: _delay(1000000);
  1826  0286  3006               	movlw	6
  1827  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0289  00B6               	movwf	??_main+2
  1830  028A  3013               	movlw	19
  1831  028B  00B5               	movwf	??_main+1
  1832  028C  30B1               	movlw	177
  1833  028D  00B4               	movwf	??_main
  1834  028E                     u2787:	
  1835  028E  0BB4               	decfsz	??_main,f
  1836  028F  2A8E               	goto	u2787
  1837  0290  0BB5               	decfsz	??_main+1,f
  1838  0291  2A8E               	goto	u2787
  1839  0292  0BB6               	decfsz	??_main+2,f
  1840  0293  2A8E               	goto	u2787
  1841  0294  2A95               	nop2
  1842                           
  1843                           ;Mobile.c: 217: _delay(15000000);
  1844  0295  304D               	movlw	77
  1845  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0298  00B6               	movwf	??_main+2
  1848  0299  3019               	movlw	25
  1849  029A  00B5               	movwf	??_main+1
  1850  029B  309A               	movlw	154
  1851  029C  00B4               	movwf	??_main
  1852  029D                     u2797:	
  1853  029D  0BB4               	decfsz	??_main,f
  1854  029E  2A9D               	goto	u2797
  1855  029F  0BB5               	decfsz	??_main+1,f
  1856  02A0  2A9D               	goto	u2797
  1857  02A1  0BB6               	decfsz	??_main+2,f
  1858  02A2  2A9D               	goto	u2797
  1859  02A3  2AA4               	nop2
  1860                           
  1861                           ;Mobile.c: 220: SIM300Cmd(phone_number);
  1862  02A4  303C               	movlw	_phone_number& (0+255)
  1863  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1864  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1865  02A7  00A9               	movwf	SIM300Cmd@cmd
  1866  02A8  3000               	movlw	0
  1867  02A9  00AA               	movwf	SIM300Cmd@cmd+1
  1868  02AA  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1869                           
  1870                           ;Mobile.c: 221: _delay(30000000);
  1871  02AF  3099               	movlw	153
  1872  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1873  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1874  02B2  00B6               	movwf	??_main+2
  1875  02B3  3032               	movlw	50
  1876  02B4  00B5               	movwf	??_main+1
  1877  02B5  3038               	movlw	56
  1878  02B6  00B4               	movwf	??_main
  1879  02B7                     u2807:	
  1880  02B7  0BB4               	decfsz	??_main,f
  1881  02B8  2AB7               	goto	u2807
  1882  02B9  0BB5               	decfsz	??_main+1,f
  1883  02BA  2AB7               	goto	u2807
  1884  02BB  0BB6               	decfsz	??_main+2,f
  1885  02BC  2AB7               	goto	u2807
  1886  02BD  2ABE               	nop2
  1887                           
  1888                           ;Mobile.c: 222: SIM300Cmd("ATH");
  1889  02BE  3094               	movlw	low (STR_18-__stringbase)
  1890  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1891  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1892  02C1  00A9               	movwf	SIM300Cmd@cmd
  1893  02C2  3080               	movlw	128
  1894  02C3  00AA               	movwf	SIM300Cmd@cmd+1
  1895  02C4  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  1896                           
  1897                           ;Mobile.c: 223: _delay(1000000);
  1898  02C9  3006               	movlw	6
  1899  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1900  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1901  02CC  00B6               	movwf	??_main+2
  1902  02CD  3013               	movlw	19
  1903  02CE  00B5               	movwf	??_main+1
  1904  02CF  30B1               	movlw	177
  1905  02D0  00B4               	movwf	??_main
  1906  02D1                     u2817:	
  1907  02D1  0BB4               	decfsz	??_main,f
  1908  02D2  2AD1               	goto	u2817
  1909  02D3  0BB5               	decfsz	??_main+1,f
  1910  02D4  2AD1               	goto	u2817
  1911  02D5  0BB6               	decfsz	??_main+2,f
  1912  02D6  2AD1               	goto	u2817
  1913  02D7  2AD8               	nop2
  1914                           
  1915                           ;Mobile.c: 225: eeprom_write(0x01,0);
  1916  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1917  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1918  02DA  01A0               	clrf	eeprom_write@value
  1919  02DB  3001               	movlw	1
  1920  02DC  120A  118A  2728  120A  118A  	fcall	_eeprom_write
  1921                           
  1922                           ;Mobile.c: 226: continue;
  1923  02E1  2990               	goto	l3102
  1924  02E2                     __end_of_main:	
  1925                           
  1926                           	psect	text1
  1927  0F4E                     __ptext1:	
  1928 ;; *************** function _stop *****************
  1929 ;; Defined at:
  1930 ;;		line 309 in file "E:\Study Material\XC8 PROJECTS\Modem\Mobile.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;		None               void
  1937 ;; Registers used:
  1938 ;;		wreg
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0
  1946 ;;      Temps:          0       3       0       0       0
  1947 ;;      Totals:         0       3       0       0       0
  1948 ;;Total ram usage:        3 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    2
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _stop
  1960  0F4E                     _stop:	
  1961                           
  1962                           ;Mobile.c: 312: RC4 = 1;
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in _stop: [wreg]
  1966  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0F50  1607               	bsf	7,4	;volatile
  1969                           
  1970                           ;Mobile.c: 313: _delay(6000000);
  1971  0F51  301F               	movlw	31
  1972  0F52  00A2               	movwf	??_stop+2
  1973  0F53  3071               	movlw	113
  1974  0F54  00A1               	movwf	??_stop+1
  1975  0F55  303B               	movlw	59
  1976  0F56  00A0               	movwf	??_stop
  1977  0F57                     u2827:	
  1978  0F57  0BA0               	decfsz	??_stop,f
  1979  0F58  2F57               	goto	u2827
  1980  0F59  0BA1               	decfsz	??_stop+1,f
  1981  0F5A  2F57               	goto	u2827
  1982  0F5B  0BA2               	decfsz	??_stop+2,f
  1983  0F5C  2F57               	goto	u2827
  1984  0F5D  0000               	nop
  1985                           
  1986                           ;Mobile.c: 314: RC4 = 0;
  1987  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0F60  1207               	bcf	7,4	;volatile
  1990                           
  1991                           ;Mobile.c: 315: RC5 = 0;
  1992  0F61  1287               	bcf	7,5	;volatile
  1993                           
  1994                           ;Mobile.c: 316: _delay(1000000);
  1995  0F62  3006               	movlw	6
  1996  0F63  00A2               	movwf	??_stop+2
  1997  0F64  3013               	movlw	19
  1998  0F65  00A1               	movwf	??_stop+1
  1999  0F66  30B1               	movlw	177
  2000  0F67  00A0               	movwf	??_stop
  2001  0F68                     u2837:	
  2002  0F68  0BA0               	decfsz	??_stop,f
  2003  0F69  2F68               	goto	u2837
  2004  0F6A  0BA1               	decfsz	??_stop+1,f
  2005  0F6B  2F68               	goto	u2837
  2006  0F6C  0BA2               	decfsz	??_stop+2,f
  2007  0F6D  2F68               	goto	u2837
  2008  0F6E  2F6F               	nop2
  2009  0F6F  0008               	return
  2010  0F70                     __end_of_stop:	
  2011                           ;Mobile.c: 317: return;
  2012                           
  2013                           
  2014                           	psect	text2
  2015  0F2C                     __ptext2:	
  2016 ;; *************** function _start *****************
  2017 ;; Defined at:
  2018 ;;		line 297 in file "E:\Study Material\XC8 PROJECTS\Modem\Mobile.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;		None               void
  2025 ;; Registers used:
  2026 ;;		wreg
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       3       0       0       0
  2035 ;;      Totals:         0       3       0       0       0
  2036 ;;Total ram usage:        3 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    2
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _start
  2048  0F2C                     _start:	
  2049                           
  2050                           ;Mobile.c: 300: RC3 = 1;
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in _start: [wreg]
  2054  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0F2E  1587               	bsf	7,3	;volatile
  2057                           
  2058                           ;Mobile.c: 301: _delay(5000000);
  2059  0F2F  301A               	movlw	26
  2060  0F30  00A2               	movwf	??_start+2
  2061  0F31  305E               	movlw	94
  2062  0F32  00A1               	movwf	??_start+1
  2063  0F33  3086               	movlw	134
  2064  0F34  00A0               	movwf	??_start
  2065  0F35                     u2847:	
  2066  0F35  0BA0               	decfsz	??_start,f
  2067  0F36  2F35               	goto	u2847
  2068  0F37  0BA1               	decfsz	??_start+1,f
  2069  0F38  2F35               	goto	u2847
  2070  0F39  0BA2               	decfsz	??_start+2,f
  2071  0F3A  2F35               	goto	u2847
  2072  0F3B  0000               	nop
  2073                           
  2074                           ;Mobile.c: 302: RC3 = 0;
  2075  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0F3E  1187               	bcf	7,3	;volatile
  2078                           
  2079                           ;Mobile.c: 303: RC5 = 1;
  2080  0F3F  1687               	bsf	7,5	;volatile
  2081                           
  2082                           ;Mobile.c: 304: _delay(1000000);
  2083  0F40  3006               	movlw	6
  2084  0F41  00A2               	movwf	??_start+2
  2085  0F42  3013               	movlw	19
  2086  0F43  00A1               	movwf	??_start+1
  2087  0F44  30B1               	movlw	177
  2088  0F45  00A0               	movwf	??_start
  2089  0F46                     u2857:	
  2090  0F46  0BA0               	decfsz	??_start,f
  2091  0F47  2F46               	goto	u2857
  2092  0F48  0BA1               	decfsz	??_start+1,f
  2093  0F49  2F46               	goto	u2857
  2094  0F4A  0BA2               	decfsz	??_start+2,f
  2095  0F4B  2F46               	goto	u2857
  2096  0F4C  2F4D               	nop2
  2097  0F4D  0008               	return
  2098  0F4E                     __end_of_start:	
  2099                           ;Mobile.c: 305: return;
  2100                           
  2101                           
  2102                           	psect	text3
  2103  0EDC                     __ptext3:	
  2104 ;; *************** function _phase_check *****************
  2105 ;; Defined at:
  2106 ;;		line 321 in file "E:\Study Material\XC8 PROJECTS\Modem\Mobile.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      unsigned char 
  2113 ;; Registers used:
  2114 ;;		wreg
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    2
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _phase_check
  2136  0EDC                     _phase_check:	
  2137                           
  2138                           ;Mobile.c: 324: if( RC0 == 1 && RC1 == 1 && RC2 == 1 )
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _phase_check: [wreg]
  2142  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0EDE  1807               	btfsc	7,0	;volatile
  2145  0EDF  1C87               	btfss	7,1	;volatile
  2146  0EE0  2EE5               	goto	l2522
  2147  0EE1  1D07               	btfss	7,2	;volatile
  2148  0EE2  2EE5               	goto	l2522
  2149                           
  2150                           ;Mobile.c: 325: {
  2151                           ;Mobile.c: 327: return 1;
  2152  0EE3  3001               	movlw	1
  2153                           
  2154                           ;Mobile.c: 328: }
  2155  0EE4  0008               	return
  2156  0EE5                     l2522:	
  2157                           
  2158                           ;Mobile.c: 329: else
  2159                           ;Mobile.c: 330: {
  2160                           ;Mobile.c: 332: return 0;
  2161  0EE5  3000               	movlw	0
  2162  0EE6  0008               	return
  2163  0EE7                     __end_of_phase_check:	
  2164                           
  2165                           	psect	text4
  2166  0728                     __ptext4:	
  2167 ;; *************** function _eeprom_write *****************
  2168 ;; Defined at:
  2169 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\eewrite.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  addr            1    wreg     unsigned char 
  2172 ;;  value           1    0[BANK0 ] unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  addr            1    2[BANK0 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       1       0       0       0
  2185 ;;      Locals:         0       1       0       0       0
  2186 ;;      Temps:          0       1       0       0       0
  2187 ;;      Totals:         0       3       0       0       0
  2188 ;;Total ram usage:        3 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    2
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _eeprom_write
  2200  0728                     _eeprom_write:	
  2201                           
  2202                           ;incstack = 0
  2203                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2204                           ;eeprom_write@addr stored from wreg
  2205  0728  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0729  1303               	bcf	3,6	;RP1=0, select bank0
  2207  072A  00A2               	movwf	eeprom_write@addr
  2208  072B                     l501:	
  2209  072B  1683               	bsf	3,5	;RP0=1, select bank3
  2210  072C  1703               	bsf	3,6	;RP1=1, select bank3
  2211  072D  188C               	btfsc	12,1	;volsfr
  2212  072E  2F2B               	goto	l501
  2213  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0730  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0731  0822               	movf	eeprom_write@addr,w
  2216  0732  1283               	bcf	3,5	;RP0=0, select bank2
  2217  0733  1703               	bsf	3,6	;RP1=1, select bank2
  2218  0734  008D               	movwf	13	;volatile
  2219  0735  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0736  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0737  0820               	movf	eeprom_write@value,w
  2222  0738  1283               	bcf	3,5	;RP0=0, select bank2
  2223  0739  1703               	bsf	3,6	;RP1=1, select bank2
  2224  073A  008C               	movwf	12	;volatile
  2225  073B  303F               	movlw	63
  2226  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2227  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2228  073E  00A1               	movwf	??_eeprom_write
  2229  073F  0821               	movf	??_eeprom_write,w
  2230  0740  1683               	bsf	3,5	;RP0=1, select bank3
  2231  0741  1703               	bsf	3,6	;RP1=1, select bank3
  2232  0742  058C               	andwf	12,f	;volsfr
  2233  0743  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0744  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0745  1003               	bcf	3,0	;volatile
  2236  0746  1B8B               	btfsc	11,7	;volatile
  2237  0747  1403               	bsf	3,0	;volatile
  2238  0748  138B               	bcf	11,7	;volatile
  2239  0749  1683               	bsf	3,5	;RP0=1, select bank3
  2240  074A  1703               	bsf	3,6	;RP1=1, select bank3
  2241  074B  150C               	bsf	12,2	;volsfr
  2242  074C  3055               	movlw	85
  2243  074D  008D               	movwf	13	;volsfr
  2244  074E  30AA               	movlw	170
  2245  074F  008D               	movwf	13	;volsfr
  2246  0750  148C               	bsf	12,1	;volsfr
  2247  0751  110C               	bcf	12,2	;volsfr
  2248  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0754  1C03               	btfss	3,0	;volatile
  2251  0755  0008               	return
  2252  0756  178B               	bsf	11,7	;volatile
  2253  0757  0008               	return
  2254  0758                     __end_of_eeprom_write:	
  2255                           
  2256                           	psect	text5
  2257  0FDC                     __ptext5:	
  2258 ;; *************** function _eeprom_read *****************
  2259 ;; Defined at:
  2260 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\eeread.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  addr            1    wreg     unsigned char 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  addr            1    1[BANK0 ] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       0       0       0       0
  2275 ;;      Locals:         0       1       0       0       0
  2276 ;;      Temps:          0       1       0       0       0
  2277 ;;      Totals:         0       2       0       0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _eeprom_read
  2290  0FDC                     _eeprom_read:	
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  2294                           ;eeprom_read@addr stored from wreg
  2295  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0FDE  00A1               	movwf	eeprom_read@addr
  2298  0FDF  2FE2               	goto	l479
  2299  0FE0                     u1801:	
  2300  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0FE2                     l479:	
  2303  0FE2  0064               	clrwdt	;# 
  2304  0FE3  1683               	bsf	3,5	;RP0=1, select bank3
  2305  0FE4  1703               	bsf	3,6	;RP1=1, select bank3
  2306  0FE5  188C               	btfsc	12,1	;volsfr
  2307  0FE6  2FE0               	goto	u1801
  2308  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0FE9  0821               	movf	eeprom_read@addr,w
  2311  0FEA  1283               	bcf	3,5	;RP0=0, select bank2
  2312  0FEB  1703               	bsf	3,6	;RP1=1, select bank2
  2313  0FEC  008D               	movwf	13	;volatile
  2314  0FED  303F               	movlw	63
  2315  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0FF0  00A0               	movwf	??_eeprom_read
  2318  0FF1  0820               	movf	??_eeprom_read,w
  2319  0FF2  1683               	bsf	3,5	;RP0=1, select bank3
  2320  0FF3  1703               	bsf	3,6	;RP1=1, select bank3
  2321  0FF4  058C               	andwf	12,f	;volsfr
  2322  0FF5  140C               	bsf	12,0	;volsfr
  2323  0FF6  1003               	clrc
  2324  0FF7  180C               	btfsc	12,0	;volsfr
  2325  0FF8  1403               	setc
  2326  0FF9  3000               	movlw	0
  2327  0FFA  1803               	skipnc
  2328  0FFB  3001               	movlw	1
  2329  0FFC  1283               	bcf	3,5	;RP0=0, select bank2
  2330  0FFD  1703               	bsf	3,6	;RP1=1, select bank2
  2331  0FFE  080C               	movf	12,w	;volatile
  2332  0FFF  0008               	return
  2333  1000                     __end_of_eeprom_read:	
  2334                           
  2335                           	psect	text6
  2336  0578                     __ptext6:	
  2337 ;; *************** function ___awmod *****************
  2338 ;; Defined at:
  2339 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  divisor         2    0[BANK0 ] int 
  2342 ;;  dividend        2    2[BANK0 ] int 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  sign            1    6[BANK0 ] unsigned char 
  2345 ;;  counter         1    5[BANK0 ] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  2    0[BANK0 ] int 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         0       4       0       0       0
  2356 ;;      Locals:         0       2       0       0       0
  2357 ;;      Temps:          0       1       0       0       0
  2358 ;;      Totals:         0       7       0       0       0
  2359 ;;Total ram usage:        7 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;;		_USARTWriteInt
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function ___awmod
  2372  0578                     ___awmod:	
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2376  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2378  057A  01A6               	clrf	___awmod@sign
  2379  057B  1FA3               	btfss	___awmod@dividend+1,7
  2380  057C  2D84               	goto	l2644
  2381  057D  09A2               	comf	___awmod@dividend,f
  2382  057E  09A3               	comf	___awmod@dividend+1,f
  2383  057F  0AA2               	incf	___awmod@dividend,f
  2384  0580  1903               	skipnz
  2385  0581  0AA3               	incf	___awmod@dividend+1,f
  2386  0582  01A6               	clrf	___awmod@sign
  2387  0583  0AA6               	incf	___awmod@sign,f
  2388  0584                     l2644:	
  2389  0584  1FA1               	btfss	___awmod@divisor+1,7
  2390  0585  2D8B               	goto	l2648
  2391  0586  09A0               	comf	___awmod@divisor,f
  2392  0587  09A1               	comf	___awmod@divisor+1,f
  2393  0588  0AA0               	incf	___awmod@divisor,f
  2394  0589  1903               	skipnz
  2395  058A  0AA1               	incf	___awmod@divisor+1,f
  2396  058B                     l2648:	
  2397  058B  0821               	movf	___awmod@divisor+1,w
  2398  058C  0420               	iorwf	___awmod@divisor,w
  2399  058D  1903               	skipnz
  2400  058E  2DB8               	goto	l2666
  2401  058F  01A5               	clrf	___awmod@counter
  2402  0590  0AA5               	incf	___awmod@counter,f
  2403  0591                     l2656:	
  2404  0591  1BA1               	btfsc	___awmod@divisor+1,7
  2405  0592  2D9F               	goto	l2658
  2406  0593  3001               	movlw	1
  2407  0594                     u1955:	
  2408  0594  1003               	clrc
  2409  0595  0DA0               	rlf	___awmod@divisor,f
  2410  0596  0DA1               	rlf	___awmod@divisor+1,f
  2411  0597  3EFF               	addlw	-1
  2412  0598  1D03               	skipz
  2413  0599  2D94               	goto	u1955
  2414  059A  3001               	movlw	1
  2415  059B  00A4               	movwf	??___awmod
  2416  059C  0824               	movf	??___awmod,w
  2417  059D  07A5               	addwf	___awmod@counter,f
  2418  059E  2D91               	goto	l2656
  2419  059F                     l2658:	
  2420  059F  0821               	movf	___awmod@divisor+1,w
  2421  05A0  0223               	subwf	___awmod@dividend+1,w
  2422  05A1  1D03               	skipz
  2423  05A2  2DA5               	goto	u1975
  2424  05A3  0820               	movf	___awmod@divisor,w
  2425  05A4  0222               	subwf	___awmod@dividend,w
  2426  05A5                     u1975:	
  2427  05A5  1C03               	skipc
  2428  05A6  2DAD               	goto	l2662
  2429  05A7  0820               	movf	___awmod@divisor,w
  2430  05A8  02A2               	subwf	___awmod@dividend,f
  2431  05A9  0821               	movf	___awmod@divisor+1,w
  2432  05AA  1C03               	skipc
  2433  05AB  03A3               	decf	___awmod@dividend+1,f
  2434  05AC  02A3               	subwf	___awmod@dividend+1,f
  2435  05AD                     l2662:	
  2436  05AD  3001               	movlw	1
  2437  05AE                     u1985:	
  2438  05AE  1003               	clrc
  2439  05AF  0CA1               	rrf	___awmod@divisor+1,f
  2440  05B0  0CA0               	rrf	___awmod@divisor,f
  2441  05B1  3EFF               	addlw	-1
  2442  05B2  1D03               	skipz
  2443  05B3  2DAE               	goto	u1985
  2444  05B4  3001               	movlw	1
  2445  05B5  02A5               	subwf	___awmod@counter,f
  2446  05B6  1D03               	btfss	3,2
  2447  05B7  2D9F               	goto	l2658
  2448  05B8                     l2666:	
  2449  05B8  0826               	movf	___awmod@sign,w
  2450  05B9  1903               	btfsc	3,2
  2451  05BA  2DC0               	goto	l2670
  2452  05BB  09A2               	comf	___awmod@dividend,f
  2453  05BC  09A3               	comf	___awmod@dividend+1,f
  2454  05BD  0AA2               	incf	___awmod@dividend,f
  2455  05BE  1903               	skipnz
  2456  05BF  0AA3               	incf	___awmod@dividend+1,f
  2457  05C0                     l2670:	
  2458  05C0  0823               	movf	___awmod@dividend+1,w
  2459  05C1  01A1               	clrf	?___awmod+1
  2460  05C2  07A1               	addwf	?___awmod+1,f
  2461  05C3  0822               	movf	___awmod@dividend,w
  2462  05C4  01A0               	clrf	?___awmod
  2463  05C5  07A0               	addwf	?___awmod,f
  2464  05C6  0008               	return
  2465  05C7                     __end_of___awmod:	
  2466                           
  2467                           	psect	text7
  2468  03AD                     __ptext7:	
  2469 ;; *************** function _SIM300WaitForValidCall *****************
  2470 ;; Defined at:
  2471 ;;		line 230 in file "E:\Study Material\XC8 PROJECTS\Modem\Mobile.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  i               1   12[BANK0 ] unsigned char 
  2476 ;;  start           1   11[BANK0 ] PTR unsigned char 
  2477 ;;		 -> NULL(0), sim300_buffer(96), 
  2478 ;;  len             1   10[BANK0 ] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      char 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       3       0       0       0
  2490 ;;      Temps:          0       1       0       0       0
  2491 ;;      Totals:         0       4       0       0       0
  2492 ;;Total ram usage:        4 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    5
  2495 ;; This function calls:
  2496 ;;		_SIM300RingResponse
  2497 ;;		_USARTFlushBuffer
  2498 ;;		_strichr
  2499 ;;		_strnicmp
  2500 ;;		_strrichr
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _SIM300WaitForValidCall
  2508  03AD                     _SIM300WaitForValidCall:	
  2509                           
  2510                           ;Mobile.c: 235: uint8_t len=SIM300RingResponse(1000);
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _SIM300WaitForValidCall: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2514  03AD  30E8               	movlw	232
  2515  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2516  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2517  03B0  00A2               	movwf	SIM300RingResponse@timeout
  2518  03B1  3003               	movlw	3
  2519  03B2  00A3               	movwf	SIM300RingResponse@timeout+1
  2520  03B3  120A  118A  2520  120A  118A  	fcall	_SIM300RingResponse
  2521  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2522  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2523  03BA  00A9               	movwf	??_SIM300WaitForValidCall
  2524  03BB  0829               	movf	??_SIM300WaitForValidCall,w
  2525  03BC  00AA               	movwf	SIM300WaitForValidCall@len
  2526                           
  2527                           ;Mobile.c: 236: if(len==0)
  2528  03BD  08AA               	movf	SIM300WaitForValidCall@len,f
  2529  03BE  1D03               	skipz
  2530  03BF  2BC2               	goto	l2554
  2531                           
  2532                           ;Mobile.c: 237: return -3;
  2533  03C0  30FD               	movlw	-3
  2534  03C1  0008               	return
  2535  03C2                     l2554:	
  2536                           
  2537                           ;Mobile.c: 239: sim300_buffer[len-1]='\0';
  2538  03C2  082A               	movf	SIM300WaitForValidCall@len,w
  2539  03C3  3EFF               	addlw	255
  2540  03C4  3E90               	addlw	_sim300_buffer& (0+255)
  2541  03C5  0084               	movwf	4
  2542  03C6  1783               	bsf	3,7	;select IRP bank3
  2543  03C7  0180               	clrf	0
  2544                           
  2545                           ;Mobile.c: 242: if(strnicmp(sim300_buffer+10,"+CLIP:",6)==0)
  2546  03C8  306B               	movlw	(STR_24-__stringbase)& (0+255)
  2547  03C9  00A9               	movwf	??_SIM300WaitForValidCall
  2548  03CA  0829               	movf	??_SIM300WaitForValidCall,w
  2549  03CB  00A2               	movwf	strnicmp@s2
  2550  03CC  3006               	movlw	6
  2551  03CD  00A3               	movwf	strnicmp@len
  2552  03CE  3000               	movlw	0
  2553  03CF  00A4               	movwf	strnicmp@len+1
  2554  03D0  309A               	movlw	(_sim300_buffer+10)& (0+255)
  2555  03D1  120A  118A  2614  120A  118A  	fcall	_strnicmp
  2556  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2557  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2558  03D8  0823               	movf	?_strnicmp+1,w
  2559  03D9  0422               	iorwf	?_strnicmp,w
  2560  03DA  1D03               	skipz
  2561  03DB  2C4D               	goto	l2610
  2562                           
  2563                           ;Mobile.c: 243: {
  2564                           ;Mobile.c: 246: if(strrichr(sim300_buffer,'X') != (0))
  2565  03DC  3058               	movlw	88
  2566  03DD  00A2               	movwf	strrichr@chr
  2567  03DE  3000               	movlw	0
  2568  03DF  00A3               	movwf	strrichr@chr+1
  2569  03E0  3090               	movlw	_sim300_buffer& (0+255)
  2570  03E1  120A  118A  26F0  120A  118A  	fcall	_strrichr
  2571  03E6  3A00               	xorlw	0
  2572  03E7  1903               	skipnz
  2573  03E8  2C44               	goto	l415
  2574                           
  2575                           ;Mobile.c: 247: {
  2576                           ;Mobile.c: 248: if(RING_COUNT == REQUIRED_RING_COUNT)
  2577  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2578  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2579  03EB  0857               	movf	_RING_COUNT,w
  2580  03EC  063B               	xorwf	_REQUIRED_RING_COUNT,w
  2581  03ED  1D03               	skipz
  2582  03EE  2C38               	goto	l2594
  2583                           
  2584                           ;Mobile.c: 249: {
  2585                           ;Mobile.c: 251: char *start;
  2586                           ;Mobile.c: 252: start = strichr(sim300_buffer+10,'"');
  2587  03EF  3022               	movlw	34
  2588  03F0  00A2               	movwf	strichr@chr
  2589  03F1  3000               	movlw	0
  2590  03F2  00A3               	movwf	strichr@chr+1
  2591  03F3  309A               	movlw	(_sim300_buffer+10)& (0+255)
  2592  03F4  120A  118A  2758  120A  118A  	fcall	_strichr
  2593  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2594  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2595  03FB  00A9               	movwf	??_SIM300WaitForValidCall
  2596  03FC  0829               	movf	??_SIM300WaitForValidCall,w
  2597  03FD  00AB               	movwf	SIM300WaitForValidCall@start
  2598                           
  2599                           ;Mobile.c: 253: start++;
  2600  03FE  3001               	movlw	1
  2601  03FF  00A9               	movwf	??_SIM300WaitForValidCall
  2602  0400  0829               	movf	??_SIM300WaitForValidCall,w
  2603  0401  07AB               	addwf	SIM300WaitForValidCall@start,f
  2604                           
  2605                           ;Mobile.c: 254: char i = 3;
  2606  0402  3003               	movlw	3
  2607  0403  00A9               	movwf	??_SIM300WaitForValidCall
  2608  0404  0829               	movf	??_SIM300WaitForValidCall,w
  2609  0405  00AC               	movwf	SIM300WaitForValidCall@i
  2610  0406                     l2574:	
  2611                           ;Mobile.c: 255: while(*start != '"')
  2612                           
  2613  0406  082B               	movf	SIM300WaitForValidCall@start,w
  2614  0407  0084               	movwf	4
  2615  0408  1783               	bsf	3,7	;select IRP bank2
  2616  0409  0800               	movf	0,w
  2617  040A  3A22               	xorlw	34
  2618  040B  1903               	btfsc	3,2
  2619  040C  2C21               	goto	l2576
  2620                           
  2621                           ;Mobile.c: 256: {
  2622                           ;Mobile.c: 257: phone_number[i] = *start;
  2623  040D  082B               	movf	SIM300WaitForValidCall@start,w
  2624  040E  0084               	movwf	4
  2625  040F  1783               	bsf	3,7	;select IRP bank2
  2626  0410  0800               	movf	0,w
  2627  0411  00A9               	movwf	??_SIM300WaitForValidCall
  2628  0412  082C               	movf	SIM300WaitForValidCall@i,w
  2629  0413  3E3C               	addlw	_phone_number& (0+255)
  2630  0414  0084               	movwf	4
  2631  0415  0829               	movf	??_SIM300WaitForValidCall,w
  2632  0416  1383               	bcf	3,7	;select IRP bank0
  2633  0417  0080               	movwf	0
  2634                           
  2635                           ;Mobile.c: 258: start++;
  2636  0418  3001               	movlw	1
  2637  0419  00A9               	movwf	??_SIM300WaitForValidCall
  2638  041A  0829               	movf	??_SIM300WaitForValidCall,w
  2639  041B  07AB               	addwf	SIM300WaitForValidCall@start,f
  2640                           
  2641                           ;Mobile.c: 259: i++;
  2642  041C  3001               	movlw	1
  2643  041D  00A9               	movwf	??_SIM300WaitForValidCall
  2644  041E  0829               	movf	??_SIM300WaitForValidCall,w
  2645  041F  07AC               	addwf	SIM300WaitForValidCall@i,f
  2646  0420  2C06               	goto	l2574
  2647  0421                     l2576:	
  2648                           
  2649                           ;Mobile.c: 260: }
  2650                           ;Mobile.c: 261: phone_number[i] = ';';
  2651  0421  303B               	movlw	59
  2652  0422  00A9               	movwf	??_SIM300WaitForValidCall
  2653  0423  082C               	movf	SIM300WaitForValidCall@i,w
  2654  0424  3E3C               	addlw	_phone_number& (0+255)
  2655  0425  0084               	movwf	4
  2656  0426  0829               	movf	??_SIM300WaitForValidCall,w
  2657  0427  1383               	bcf	3,7	;select IRP bank0
  2658  0428  0080               	movwf	0
  2659                           
  2660                           ;Mobile.c: 262: i++;
  2661  0429  3001               	movlw	1
  2662  042A  00A9               	movwf	??_SIM300WaitForValidCall
  2663  042B  0829               	movf	??_SIM300WaitForValidCall,w
  2664  042C  07AC               	addwf	SIM300WaitForValidCall@i,f
  2665                           
  2666                           ;Mobile.c: 263: phone_number[i] = '\0';
  2667  042D  082C               	movf	SIM300WaitForValidCall@i,w
  2668  042E  3E3C               	addlw	_phone_number& (0+255)
  2669  042F  0084               	movwf	4
  2670  0430  0180               	clrf	0
  2671                           
  2672                           ;Mobile.c: 264: RING_COUNT = 0;
  2673  0431  01D7               	clrf	_RING_COUNT
  2674                           
  2675                           ;Mobile.c: 265: RING_TIMER = 0;
  2676  0432  01D8               	clrf	_RING_TIMER
  2677                           
  2678                           ;Mobile.c: 267: USARTFlushBuffer();
  2679  0433  120A  158A  26E7   	fcall	_USARTFlushBuffer
  2680                           
  2681                           ;Mobile.c: 268: return 1;
  2682  0436  3001               	movlw	1
  2683                           
  2684                           ;Mobile.c: 269: }
  2685  0437  0008               	return
  2686  0438                     l2594:	
  2687                           
  2688                           ;Mobile.c: 270: else
  2689                           ;Mobile.c: 271: {
  2690                           ;Mobile.c: 272: RING_COUNT++;
  2691  0438  3001               	movlw	1
  2692  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2693  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2694  043B  00A9               	movwf	??_SIM300WaitForValidCall
  2695  043C  0829               	movf	??_SIM300WaitForValidCall,w
  2696  043D  07D7               	addwf	_RING_COUNT,f
  2697                           
  2698                           ;Mobile.c: 273: RING_TIMER = 0;
  2699  043E  01D8               	clrf	_RING_TIMER
  2700                           
  2701                           ;Mobile.c: 275: USARTFlushBuffer();
  2702  043F  120A  158A  26E7   	fcall	_USARTFlushBuffer
  2703                           
  2704                           ;Mobile.c: 276: return -2;
  2705  0442  30FE               	movlw	-2
  2706                           
  2707                           ;Mobile.c: 277: }
  2708                           ;Mobile.c: 278: }
  2709  0443  0008               	return
  2710  0444                     l415:	
  2711                           
  2712                           ;Mobile.c: 279: else
  2713                           ;Mobile.c: 280: {
  2714                           ;Mobile.c: 281: WRONG_NUMBER = 1;
  2715  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0446  01D9               	clrf	_WRONG_NUMBER
  2718  0447  0AD9               	incf	_WRONG_NUMBER,f
  2719                           
  2720                           ;Mobile.c: 283: USARTFlushBuffer();
  2721  0448  120A  158A  26E7   	fcall	_USARTFlushBuffer
  2722                           
  2723                           ;Mobile.c: 284: return -2;
  2724  044B  30FE               	movlw	-2
  2725                           
  2726                           ;Mobile.c: 285: }
  2727                           ;Mobile.c: 286: }
  2728  044C  0008               	return
  2729  044D                     l2610:	
  2730                           
  2731                           ;Mobile.c: 288: else
  2732                           ;Mobile.c: 289: {
  2733                           ;Mobile.c: 291: USARTFlushBuffer();
  2734  044D  120A  158A  26E7   	fcall	_USARTFlushBuffer
  2735                           
  2736                           ;Mobile.c: 292: return -2;
  2737  0450  30FE               	movlw	-2
  2738  0451  0008               	return
  2739  0452                     __end_of_SIM300WaitForValidCall:	
  2740                           
  2741                           	psect	text8
  2742  06F0                     __ptext8:	
  2743 ;; *************** function _strrichr *****************
  2744 ;; Defined at:
  2745 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strrichr.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  ptr             1    wreg     PTR const unsigned char 
  2748 ;;		 -> sim300_buffer(96), 
  2749 ;;  chr             2    2[BANK0 ] int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  ptr             1    7[BANK0 ] PTR const unsigned char 
  2752 ;;		 -> sim300_buffer(96), 
  2753 ;;  cp              1    6[BANK0 ] PTR const unsigned char 
  2754 ;;		 -> sim300_buffer(96), 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      PTR unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2764 ;;      Params:         0       2       0       0       0
  2765 ;;      Locals:         0       2       0       0       0
  2766 ;;      Temps:          0       2       0       0       0
  2767 ;;      Totals:         0       6       0       0       0
  2768 ;;Total ram usage:        6 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    3
  2771 ;; This function calls:
  2772 ;;		_toupper
  2773 ;; This function is called by:
  2774 ;;		_SIM300WaitForValidCall
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           
  2779                           ;psect for function _strrichr
  2780  06F0                     _strrichr:	
  2781                           
  2782                           ;incstack = 0
  2783                           ; Regs used in _strrichr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2784                           ;strrichr@ptr stored from wreg
  2785  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2786  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2787  06F2  00A7               	movwf	strrichr@ptr
  2788  06F3  0827               	movf	strrichr@ptr,w
  2789  06F4  00A4               	movwf	??_strrichr
  2790  06F5  0824               	movf	??_strrichr,w
  2791  06F6  00A6               	movwf	strrichr@cp
  2792  06F7                     l2390:	
  2793  06F7  0827               	movf	strrichr@ptr,w
  2794  06F8  0084               	movwf	4
  2795  06F9  1783               	bsf	3,7	;select IRP bank2
  2796  06FA  0880               	movf	0,f
  2797  06FB  1903               	btfsc	3,2
  2798  06FC  2F02               	goto	l2392
  2799  06FD  3001               	movlw	1
  2800  06FE  00A4               	movwf	??_strrichr
  2801  06FF  0824               	movf	??_strrichr,w
  2802  0700  07A7               	addwf	strrichr@ptr,f
  2803  0701  2EF7               	goto	l2390
  2804  0702                     l2392:	
  2805  0702  0822               	movf	strrichr@chr,w
  2806  0703  120A  158A  26F5  120A  118A  	fcall	_toupper
  2807  0708  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0709  1303               	bcf	3,6	;RP1=0, select bank0
  2809  070A  00A4               	movwf	??_strrichr
  2810  070B  01A5               	clrf	??_strrichr+1
  2811  070C  0824               	movf	??_strrichr,w
  2812  070D  00A2               	movwf	strrichr@chr
  2813  070E  0825               	movf	??_strrichr+1,w
  2814  070F  00A3               	movwf	strrichr@chr+1
  2815  0710                     l2402:	
  2816  0710  0827               	movf	strrichr@ptr,w
  2817  0711  0626               	xorwf	strrichr@cp,w
  2818  0712  1903               	btfsc	3,2
  2819  0713  2F26               	goto	l2404
  2820  0714  3001               	movlw	1
  2821  0715  02A7               	subwf	strrichr@ptr,f
  2822  0716  0827               	movf	strrichr@ptr,w
  2823  0717  0084               	movwf	4
  2824  0718  1783               	bsf	3,7	;select IRP bank2
  2825  0719  0800               	movf	0,w
  2826  071A  120A  158A  26F5  120A  118A  	fcall	_toupper
  2827  071F  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0720  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0721  0622               	xorwf	strrichr@chr,w
  2830  0722  1D03               	skipz
  2831  0723  2F10               	goto	l2402
  2832  0724  0827               	movf	strrichr@ptr,w
  2833  0725  0008               	return
  2834  0726                     l2404:	
  2835  0726  3000               	movlw	0
  2836  0727  0008               	return
  2837  0728                     __end_of_strrichr:	
  2838                           
  2839                           	psect	text9
  2840  0614                     __ptext9:	
  2841 ;; *************** function _strnicmp *****************
  2842 ;; Defined at:
  2843 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strnicmp.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  s1              1    wreg     PTR const unsigned char 
  2846 ;;		 -> sim300_buffer(96), 
  2847 ;;  s2              1    2[BANK0 ] PTR const unsigned char 
  2848 ;;		 -> STR_24(7), STR_16(6), STR_14(3), STR_13(16), 
  2849 ;;		 -> STR_11(7), STR_10(3), 
  2850 ;;  len             2    3[BANK0 ] unsigned int 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  s1              1    8[BANK0 ] PTR const unsigned char 
  2853 ;;		 -> sim300_buffer(96), 
  2854 ;;  r               1    7[BANK0 ] char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2    2[BANK0 ] int 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       3       0       0       0
  2865 ;;      Locals:         0       2       0       0       0
  2866 ;;      Temps:          0       2       0       0       0
  2867 ;;      Totals:         0       7       0       0       0
  2868 ;;Total ram usage:        7 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    3
  2871 ;; This function calls:
  2872 ;;		_toupper
  2873 ;; This function is called by:
  2874 ;;		_SIM300WaitForValidCall
  2875 ;;		_SIM300DeleteMsg
  2876 ;;		_SIM300WaitForMsg
  2877 ;;		_SIM300ReadMsg
  2878 ;;		_SIM300SendMsg
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _strnicmp
  2884  0614                     _strnicmp:	
  2885                           
  2886                           ;incstack = 0
  2887                           ; Regs used in _strnicmp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2888                           ;strnicmp@s1 stored from wreg
  2889  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0616  00A8               	movwf	strnicmp@s1
  2892  0617                     l2380:	
  2893  0617  3001               	movlw	1
  2894  0618  02A3               	subwf	strnicmp@len,f
  2895  0619  3000               	movlw	0
  2896  061A  1C03               	skipc
  2897  061B  03A4               	decf	strnicmp@len+1,f
  2898  061C  02A4               	subwf	strnicmp@len+1,f
  2899  061D  30FF               	movlw	255
  2900  061E  0624               	xorwf	strnicmp@len+1,w
  2901  061F  1D03               	skipz
  2902  0620  2E23               	goto	u1595
  2903  0621  30FF               	movlw	255
  2904  0622  0623               	xorwf	strnicmp@len,w
  2905  0623                     u1595:	
  2906  0623  1903               	btfsc	3,2
  2907  0624  2E5D               	goto	l2382
  2908  0625  0822               	movf	strnicmp@s2,w
  2909  0626  0084               	movwf	4
  2910  0627  120A  118A  230A  120A  118A  	fcall	stringdir
  2911  062C  120A  158A  26F5  120A  118A  	fcall	_toupper
  2912  0631  3AFF               	xorlw	255
  2913  0632  3E01               	addlw	1
  2914  0633  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0634  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0635  00A5               	movwf	??_strnicmp
  2917  0636  0828               	movf	strnicmp@s1,w
  2918  0637  0084               	movwf	4
  2919  0638  1783               	bsf	3,7	;select IRP bank2
  2920  0639  0800               	movf	0,w
  2921  063A  120A  158A  26F5  120A  118A  	fcall	_toupper
  2922  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0641  0725               	addwf	??_strnicmp,w
  2925  0642  00A6               	movwf	??_strnicmp+1
  2926  0643  0826               	movf	??_strnicmp+1,w
  2927  0644  00A7               	movwf	strnicmp@r
  2928  0645  08A7               	movf	strnicmp@r,f
  2929  0646  1D03               	skipz
  2930  0647  2E4E               	goto	l2374
  2931  0648  0828               	movf	strnicmp@s1,w
  2932  0649  0084               	movwf	4
  2933  064A  1783               	bsf	3,7	;select IRP bank2
  2934  064B  0880               	movf	0,f
  2935  064C  1D03               	skipz
  2936  064D  2E54               	goto	l2378
  2937  064E                     l2374:	
  2938  064E  0827               	movf	strnicmp@r,w
  2939  064F  00A2               	movwf	?_strnicmp
  2940  0650  01A3               	clrf	?_strnicmp+1
  2941  0651  1BA2               	btfsc	?_strnicmp,7
  2942  0652  03A3               	decf	?_strnicmp+1,f
  2943  0653  0008               	return
  2944  0654                     l2378:	
  2945  0654  3001               	movlw	1
  2946  0655  00A5               	movwf	??_strnicmp
  2947  0656  0825               	movf	??_strnicmp,w
  2948  0657  07A8               	addwf	strnicmp@s1,f
  2949  0658  3001               	movlw	1
  2950  0659  00A5               	movwf	??_strnicmp
  2951  065A  0825               	movf	??_strnicmp,w
  2952  065B  07A2               	addwf	strnicmp@s2,f
  2953  065C  2E17               	goto	l2380
  2954  065D                     l2382:	
  2955  065D  01A2               	clrf	?_strnicmp
  2956  065E  01A3               	clrf	?_strnicmp+1
  2957  065F  0008               	return
  2958  0660                     __end_of_strnicmp:	
  2959                           
  2960                           	psect	text10
  2961  0758                     __ptext10:	
  2962 ;; *************** function _strichr *****************
  2963 ;; Defined at:
  2964 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strichr.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  ptr             1    wreg     PTR const unsigned char 
  2967 ;;		 -> sim300_buffer(96), 
  2968 ;;  chr             2    2[BANK0 ] int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  ptr             1    6[BANK0 ] PTR const unsigned char 
  2971 ;;		 -> sim300_buffer(96), 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      PTR unsigned char 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         0       2       0       0       0
  2982 ;;      Locals:         0       1       0       0       0
  2983 ;;      Temps:          0       2       0       0       0
  2984 ;;      Totals:         0       5       0       0       0
  2985 ;;Total ram usage:        5 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    3
  2988 ;; This function calls:
  2989 ;;		_toupper
  2990 ;; This function is called by:
  2991 ;;		_SIM300WaitForValidCall
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           
  2996                           ;psect for function _strichr
  2997  0758                     _strichr:	
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in _strichr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3001                           ;strichr@ptr stored from wreg
  3002  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3004  075A  00A6               	movwf	strichr@ptr
  3005  075B  0822               	movf	strichr@chr,w
  3006  075C  120A  158A  26F5  120A  118A  	fcall	_toupper
  3007  0761  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0762  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0763  00A4               	movwf	??_strichr
  3010  0764  01A5               	clrf	??_strichr+1
  3011  0765  0824               	movf	??_strichr,w
  3012  0766  00A2               	movwf	strichr@chr
  3013  0767  0825               	movf	??_strichr+1,w
  3014  0768  00A3               	movwf	strichr@chr+1
  3015  0769                     l2418:	
  3016  0769  0826               	movf	strichr@ptr,w
  3017  076A  0084               	movwf	4
  3018  076B  1783               	bsf	3,7	;select IRP bank2
  3019  076C  0880               	movf	0,f
  3020  076D  1903               	btfsc	3,2
  3021  076E  2F84               	goto	l2420
  3022  076F  0826               	movf	strichr@ptr,w
  3023  0770  0084               	movwf	4
  3024  0771  1783               	bsf	3,7	;select IRP bank2
  3025  0772  0800               	movf	0,w
  3026  0773  120A  158A  26F5  120A  118A  	fcall	_toupper
  3027  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3029  077A  0622               	xorwf	strichr@chr,w
  3030  077B  1D03               	skipz
  3031  077C  2F7F               	goto	l2416
  3032  077D  0826               	movf	strichr@ptr,w
  3033  077E  0008               	return
  3034  077F                     l2416:	
  3035  077F  3001               	movlw	1
  3036  0780  00A4               	movwf	??_strichr
  3037  0781  0824               	movf	??_strichr,w
  3038  0782  07A6               	addwf	strichr@ptr,f
  3039  0783  2F69               	goto	l2418
  3040  0784                     l2420:	
  3041  0784  3000               	movlw	0
  3042  0785  0008               	return
  3043  0786                     __end_of_strichr:	
  3044                           
  3045                           	psect	text11
  3046  0EF5                     __ptext11:	
  3047 ;; *************** function _toupper *****************
  3048 ;; Defined at:
  3049 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\toupper.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  c               1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  c               1    1[BANK0 ] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      unsigned char 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         0       0       0       0       0
  3064 ;;      Locals:         0       1       0       0       0
  3065 ;;      Temps:          0       1       0       0       0
  3066 ;;      Totals:         0       2       0       0       0
  3067 ;;Total ram usage:        2 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    2
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_strichr
  3074 ;;		_strnicmp
  3075 ;;		_strrichr
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _toupper
  3081  0EF5                     _toupper:	
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _toupper: [wreg+status,2+status,0]
  3085                           ;toupper@c stored from wreg
  3086  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0EF7  00A1               	movwf	toupper@c
  3089  0EF8  307B               	movlw	123
  3090  0EF9  0221               	subwf	toupper@c,w
  3091  0EFA  1803               	skipnc
  3092  0EFB  2F04               	goto	l2246
  3093  0EFC  3061               	movlw	97
  3094  0EFD  0221               	subwf	toupper@c,w
  3095  0EFE  1C03               	skipc
  3096  0EFF  2F04               	goto	l2246
  3097  0F00  30DF               	movlw	223
  3098  0F01  00A0               	movwf	??_toupper
  3099  0F02  0820               	movf	??_toupper,w
  3100  0F03  05A1               	andwf	toupper@c,f
  3101  0F04                     l2246:	
  3102  0F04  0821               	movf	toupper@c,w
  3103  0F05  0008               	return
  3104  0F06                     __end_of_toupper:	
  3105                           
  3106                           	psect	text12
  3107  0520                     __ptext12:	
  3108 ;; *************** function _SIM300RingResponse *****************
  3109 ;; Defined at:
  3110 ;;		line 190 in file "E:\Study Material\XC8 PROJECTS\Modem\sim300.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  timeout         2    2[BANK0 ] unsigned int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  n               2    5[BANK0 ] unsigned int 
  3115 ;;  i               1    7[BANK0 ] char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      char 
  3118 ;; Registers used:
  3119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3125 ;;      Params:         0       2       0       0       0
  3126 ;;      Locals:         0       3       0       0       0
  3127 ;;      Temps:          0       1       0       0       0
  3128 ;;      Totals:         0       6       0       0       0
  3129 ;;Total ram usage:        6 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    4
  3132 ;; This function calls:
  3133 ;;		_USARTDataAvailable
  3134 ;;		_USARTFlushBuffer
  3135 ;;		_USARTReadData
  3136 ;; This function is called by:
  3137 ;;		_SIM300WaitForValidCall
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _SIM300RingResponse
  3143  0520                     _SIM300RingResponse:	
  3144                           
  3145                           ;sim300.c: 192: int8_t i=0;
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in _SIM300RingResponse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3149  0520  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0521  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0522  01A7               	clrf	SIM300RingResponse@i
  3152                           
  3153                           ;sim300.c: 193: uint16_t n=0;
  3154  0523  01A5               	clrf	SIM300RingResponse@n
  3155  0524  01A6               	clrf	SIM300RingResponse@n+1
  3156                           
  3157                           ;sim300.c: 196: {
  3158                           ;sim300.c: 198: while (USARTDataAvailable()==0 && n<timeout)
  3159                           
  3160                           ;sim300.c: 195: while(1)
  3161  0525  2D33               	goto	l2340
  3162  0526                     l2338:	
  3163                           
  3164                           ;sim300.c: 199: {
  3165                           ;sim300.c: 200: n++;
  3166  0526  3001               	movlw	1
  3167  0527  07A5               	addwf	SIM300RingResponse@n,f
  3168  0528  1803               	skipnc
  3169  0529  0AA6               	incf	SIM300RingResponse@n+1,f
  3170  052A  3000               	movlw	0
  3171  052B  07A6               	addwf	SIM300RingResponse@n+1,f
  3172                           
  3173                           ;sim300.c: 201: _delay((unsigned long)((1)*(4000000/4000.0)));
  3174  052C  30F9               	movlw	249
  3175  052D  00A4               	movwf	??_SIM300RingResponse
  3176  052E                     u2867:	
  3177  052E  0000               	nop
  3178  052F  0BA4               	decfsz	??_SIM300RingResponse,f
  3179  0530  2D2E               	goto	u2867
  3180  0531  2D32               	nop2	;nop
  3181  0532  0000               	nop
  3182  0533                     l2340:	
  3183  0533  120A  158A  2770  120A  118A  	fcall	_USARTDataAvailable
  3184  0538  3800               	iorlw	0
  3185  0539  1D03               	skipz
  3186  053A  2D45               	goto	l2344
  3187  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3188  053C  1303               	bcf	3,6	;RP1=0, select bank0
  3189  053D  0823               	movf	SIM300RingResponse@timeout+1,w
  3190  053E  0226               	subwf	SIM300RingResponse@n+1,w
  3191  053F  1D03               	skipz
  3192  0540  2D43               	goto	u1535
  3193  0541  0822               	movf	SIM300RingResponse@timeout,w
  3194  0542  0225               	subwf	SIM300RingResponse@n,w
  3195  0543                     u1535:	
  3196  0543  1C03               	skipc
  3197  0544  2D26               	goto	l2338
  3198  0545                     l2344:	
  3199                           
  3200                           ;sim300.c: 203: }
  3201                           ;sim300.c: 205: if(n==timeout)
  3202  0545  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0546  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0547  0823               	movf	SIM300RingResponse@timeout+1,w
  3205  0548  0626               	xorwf	SIM300RingResponse@n+1,w
  3206  0549  1D03               	skipz
  3207  054A  2D4D               	goto	u1545
  3208  054B  0822               	movf	SIM300RingResponse@timeout,w
  3209  054C  0625               	xorwf	SIM300RingResponse@n,w
  3210  054D                     u1545:	
  3211  054D  1D03               	skipz
  3212  054E  2D51               	goto	l2352
  3213                           
  3214                           ;sim300.c: 206: {
  3215                           ;sim300.c: 208: return 0;
  3216  054F  3000               	movlw	0
  3217  0550  0008               	return
  3218  0551                     l2352:	
  3219                           ;sim300.c: 209: }
  3220                           
  3221                           
  3222                           ;sim300.c: 210: else
  3223                           ;sim300.c: 211: {
  3224                           ;sim300.c: 213: sim300_buffer[i]=USARTReadData();
  3225  0551  120A  158A  2794  120A  118A  	fcall	_USARTReadData
  3226  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0558  00A4               	movwf	??_SIM300RingResponse
  3229  0559  0827               	movf	SIM300RingResponse@i,w
  3230  055A  3E90               	addlw	_sim300_buffer& (0+255)
  3231  055B  0084               	movwf	4
  3232  055C  0824               	movf	??_SIM300RingResponse,w
  3233  055D  1783               	bsf	3,7	;select IRP bank3
  3234  055E  0080               	movwf	0
  3235                           
  3236                           ;sim300.c: 215: if(sim300_buffer[i]==0x0D && i>20)
  3237  055F  0827               	movf	SIM300RingResponse@i,w
  3238  0560  3E90               	addlw	_sim300_buffer& (0+255)
  3239  0561  0084               	movwf	4
  3240  0562  0800               	movf	0,w
  3241  0563  3A0D               	xorlw	13
  3242  0564  1D03               	skipz
  3243  0565  2D73               	goto	l2366
  3244  0566  0827               	movf	SIM300RingResponse@i,w
  3245  0567  3A80               	xorlw	128
  3246  0568  3E6B               	addlw	-149
  3247  0569  1C03               	skipc
  3248  056A  2D73               	goto	l2366
  3249                           
  3250                           ;sim300.c: 216: {
  3251                           ;sim300.c: 217: USARTFlushBuffer();
  3252  056B  120A  158A  26E7   	fcall	_USARTFlushBuffer
  3253                           
  3254                           ;sim300.c: 218: return i+1;
  3255  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3256  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3257  0570  0827               	movf	SIM300RingResponse@i,w
  3258  0571  3E01               	addlw	1
  3259  0572  0008               	return
  3260  0573                     l2366:	
  3261                           ;sim300.c: 219: }
  3262                           
  3263                           
  3264                           ;sim300.c: 220: else
  3265                           ;sim300.c: 221: i++;
  3266  0573  3001               	movlw	1
  3267  0574  00A4               	movwf	??_SIM300RingResponse
  3268  0575  0824               	movf	??_SIM300RingResponse,w
  3269  0576  07A7               	addwf	SIM300RingResponse@i,f
  3270  0577  2D33               	goto	l2340
  3271  0578                     __end_of_SIM300RingResponse:	
  3272                           
  3273                           	psect	text13
  3274  0EE7                     __ptext13:	
  3275 ;; *************** function _USARTFlushBuffer *****************
  3276 ;; Defined at:
  3277 ;;		line 233 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    3
  3298 ;; This function calls:
  3299 ;;		_USARTDataAvailable
  3300 ;;		_USARTReadData
  3301 ;; This function is called by:
  3302 ;;		_SIM300RingResponse
  3303 ;;		_main
  3304 ;;		_SIM300WaitForValidCall
  3305 ;;		_SIM300WaitForResponse
  3306 ;;		_SIM300IsSIMInserted
  3307 ;;		_SIM300GetProviderName
  3308 ;;		_SIM300GetIMEI
  3309 ;;		_SIM300GetManufacturer
  3310 ;;		_SIM300GetModel
  3311 ;;		_SIM300DeleteMsg
  3312 ;;		_SIM300ReadMsg
  3313 ;;		_SIM300SendMsg
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _USARTFlushBuffer
  3319  0EE7                     _USARTFlushBuffer:	
  3320  0EE7                     l2218:	
  3321                           ;usart_pic16.c: 235: while(USARTDataAvailable()>0)
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _USARTFlushBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3325                           
  3326  0EE7  120A  158A  2770  120A  158A  	fcall	_USARTDataAvailable
  3327  0EEC  3800               	iorlw	0
  3328  0EED  1903               	btfsc	3,2
  3329  0EEE  0008               	return
  3330                           
  3331                           ;usart_pic16.c: 236: {
  3332                           ;usart_pic16.c: 237: USARTReadData();
  3333  0EEF  120A  158A  2794  120A  158A  	fcall	_USARTReadData
  3334  0EF4  2EE7               	goto	l2218
  3335  0EF5                     __end_of_USARTFlushBuffer:	
  3336                           
  3337                           	psect	text14
  3338  04C4                     __ptext14:	
  3339 ;; *************** function _SIM300Init *****************
  3340 ;; Defined at:
  3341 ;;		line 59 in file "E:\Study Material\XC8 PROJECTS\Modem\sim300.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  i               2   18[BANK0 ] unsigned int 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      char 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       2       0       0       0
  3357 ;;      Temps:          0       2       0       0       0
  3358 ;;      Totals:         0       4       0       0       0
  3359 ;;Total ram usage:        4 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    5
  3362 ;; This function calls:
  3363 ;;		_SIM300CheckResponse
  3364 ;;		_SIM300Cmd
  3365 ;;		_USARTDataAvailable
  3366 ;;		_USARTInit
  3367 ;;		_USARTReadBuffer
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _SIM300Init
  3375  04C4                     _SIM300Init:	
  3376                           
  3377                           ;sim300.c: 62: USARTInit(9600);
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _SIM300Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3381  04C4  3080               	movlw	128
  3382  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3383  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3384  04C7  00A0               	movwf	USARTInit@baud_rate
  3385  04C8  3025               	movlw	37
  3386  04C9  00A1               	movwf	USARTInit@baud_rate+1
  3387  04CA  120A  118A  2660  120A  118A  	fcall	_USARTInit
  3388                           
  3389                           ;sim300.c: 65: SIM300Cmd("AT");
  3390  04CF  309B               	movlw	low (STR_1-__stringbase)
  3391  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  3392  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  3393  04D2  00A9               	movwf	SIM300Cmd@cmd
  3394  04D3  3080               	movlw	128
  3395  04D4  00AA               	movwf	SIM300Cmd@cmd+1
  3396  04D5  120A  118A  2452  120A  118A  	fcall	_SIM300Cmd
  3397                           
  3398                           ;sim300.c: 68: uint16_t i=0;
  3399  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3400  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3401  04DC  01B2               	clrf	SIM300Init@i
  3402  04DD  01B3               	clrf	SIM300Init@i+1
  3403  04DE                     l2468:	
  3404                           ;sim300.c: 74: while(i<10)
  3405                           
  3406  04DE  3000               	movlw	0
  3407  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3408  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  3409  04E1  0233               	subwf	SIM300Init@i+1,w
  3410  04E2  300A               	movlw	10
  3411  04E3  1903               	skipnz
  3412  04E4  0232               	subwf	SIM300Init@i,w
  3413  04E5  1803               	btfsc	3,0
  3414  04E6  2D1E               	goto	l2470
  3415                           
  3416                           ;sim300.c: 75: {
  3417                           ;sim300.c: 76: if(USARTDataAvailable()<6)
  3418  04E7  120A  158A  2770  120A  118A  	fcall	_USARTDataAvailable
  3419  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3420  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3421  04EE  00B0               	movwf	??_SIM300Init
  3422  04EF  3006               	movlw	6
  3423  04F0  0230               	subwf	??_SIM300Init,w
  3424  04F1  1803               	skipnc
  3425  04F2  2D03               	goto	l2464
  3426                           
  3427                           ;sim300.c: 77: {
  3428                           ;sim300.c: 78: i++;
  3429  04F3  3001               	movlw	1
  3430  04F4  07B2               	addwf	SIM300Init@i,f
  3431  04F5  1803               	skipnc
  3432  04F6  0AB3               	incf	SIM300Init@i+1,f
  3433  04F7  3000               	movlw	0
  3434  04F8  07B3               	addwf	SIM300Init@i+1,f
  3435                           
  3436                           ;sim300.c: 79: _delay((unsigned long)((10)*(4000000/4000.0)));
  3437  04F9  300D               	movlw	13
  3438  04FA  00B1               	movwf	??_SIM300Init+1
  3439  04FB  30FB               	movlw	251
  3440  04FC  00B0               	movwf	??_SIM300Init
  3441  04FD                     u2877:	
  3442  04FD  0BB0               	decfsz	??_SIM300Init,f
  3443  04FE  2CFD               	goto	u2877
  3444  04FF  0BB1               	decfsz	??_SIM300Init+1,f
  3445  0500  2CFD               	goto	u2877
  3446  0501  2D02               	nop2
  3447                           
  3448                           ;sim300.c: 81: }
  3449                           
  3450                           ;sim300.c: 80: continue;
  3451  0502  2CDE               	goto	l2468
  3452  0503                     l2464:	
  3453                           
  3454                           ;sim300.c: 82: else
  3455                           ;sim300.c: 83: {
  3456                           ;sim300.c: 86: USARTReadBuffer(sim300_buffer,6);
  3457  0503  3006               	movlw	6
  3458  0504  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0505  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0506  00A2               	movwf	USARTReadBuffer@len
  3461  0507  3000               	movlw	0
  3462  0508  00A3               	movwf	USARTReadBuffer@len+1
  3463  0509  3090               	movlw	_sim300_buffer& (0+255)
  3464  050A  120A  158A  27B8  120A  118A  	fcall	_USARTReadBuffer
  3465                           
  3466                           ;sim300.c: 88: return SIM300CheckResponse(sim300_buffer,"OK",6);
  3467  050F  3098               	movlw	(STR_2-__stringbase)& (0+255)
  3468  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0511  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0512  00B0               	movwf	??_SIM300Init
  3471  0513  0830               	movf	??_SIM300Init,w
  3472  0514  00A0               	movwf	SIM300CheckResponse@check
  3473  0515  3006               	movlw	6
  3474  0516  00B1               	movwf	??_SIM300Init+1
  3475  0517  0831               	movf	??_SIM300Init+1,w
  3476  0518  00A1               	movwf	SIM300CheckResponse@len
  3477  0519  3090               	movlw	_sim300_buffer& (0+255)
  3478  051A  120A  118A  25C7   	fcall	_SIM300CheckResponse
  3479  051D  0008               	return
  3480  051E                     l2470:	
  3481                           
  3482                           ;sim300.c: 89: }
  3483                           ;sim300.c: 90: }
  3484                           ;sim300.c: 95: return -3;
  3485  051E  30FD               	movlw	-3
  3486  051F  0008               	return
  3487  0520                     __end_of_SIM300Init:	
  3488                           
  3489                           	psect	text15
  3490  0660                     __ptext15:	
  3491 ;; *************** function _USARTInit *****************
  3492 ;; Defined at:
  3493 ;;		line 31 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  baud_rate       2    0[BANK0 ] unsigned int 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       2       0       0       0
  3508 ;;      Locals:         0       0       0       0       0
  3509 ;;      Temps:          0       1       0       0       0
  3510 ;;      Totals:         0       3       0       0       0
  3511 ;;Total ram usage:        3 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    2
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_SIM300Init
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _USARTInit
  3523  0660                     _USARTInit:	
  3524                           
  3525                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  3529  0660  30FF               	movlw	-1
  3530  0661  00FA               	movwf	_UQEnd	;volatile
  3531  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0664  00A2               	movwf	??_USARTInit
  3534  0665  0822               	movf	??_USARTInit,w
  3535  0666  00FB               	movwf	_UQFront	;volatile
  3536                           
  3537                           ;usart_pic16.c: 37: switch(baud_rate)
  3538  0667  2E73               	goto	l2262
  3539  0668                     l2252:	
  3540                           ;usart_pic16.c: 38: {
  3541                           ;usart_pic16.c: 39: case 9600:
  3542                           
  3543                           
  3544                           ;usart_pic16.c: 40: SPBRG=25;
  3545  0668  3019               	movlw	25
  3546  0669  2E6F               	goto	L4
  3547  066A                     l2254:	
  3548                           ;usart_pic16.c: 42: case 19200:
  3549                           
  3550                           ;usart_pic16.c: 41: break;
  3551                           
  3552                           
  3553                           ;usart_pic16.c: 43: SPBRG=12;
  3554  066A  300C               	movlw	12
  3555  066B  2E6F               	goto	L4
  3556  066C                     l2256:	
  3557                           ;usart_pic16.c: 45: case 28800:
  3558                           
  3559                           ;usart_pic16.c: 44: break;
  3560                           
  3561                           
  3562                           ;usart_pic16.c: 46: SPBRG=8;
  3563  066C  3008               	movlw	8
  3564  066D  2E6F               	goto	L4
  3565  066E                     l2258:	
  3566                           ;usart_pic16.c: 48: case 33600:
  3567                           
  3568                           ;usart_pic16.c: 47: break;
  3569                           
  3570                           
  3571                           ;usart_pic16.c: 49: SPBRG=6;
  3572  066E  3006               	movlw	6
  3573  066F                     L4:	
  3574  066F  1683               	bsf	3,5	;RP0=1, select bank1
  3575  0670  1303               	bcf	3,6	;RP1=0, select bank1
  3576  0671  0099               	movwf	25	;volatile
  3577                           
  3578                           ;usart_pic16.c: 51: }
  3579                           
  3580                           ;usart_pic16.c: 50: break;
  3581  0672  2E96               	goto	l47
  3582  0673                     l2262:	
  3583                           
  3584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  3585                           ; Switch size 1, requested type "space"
  3586                           ; Number of cases is 4, Range of values is 37 to 131
  3587                           ; switch strategies available:
  3588                           ; Name         Instructions Cycles
  3589                           ; simple_byte           13     7 (average)
  3590                           ; jumptable            263     9 (fixed)
  3591                           ;	Chosen strategy is simple_byte
  3592  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0674  0821               	movf	USARTInit@baud_rate+1,w
  3594  0675  3A25               	xorlw	37	; case 37
  3595  0676  1903               	skipnz
  3596  0677  2E82               	goto	l3304
  3597  0678  3A6E               	xorlw	110	; case 75
  3598  0679  1903               	skipnz
  3599  067A  2E87               	goto	l3306
  3600  067B  3A3B               	xorlw	59	; case 112
  3601  067C  1903               	skipnz
  3602  067D  2E8C               	goto	l3308
  3603  067E  3AF3               	xorlw	243	; case 131
  3604  067F  1903               	skipnz
  3605  0680  2E91               	goto	l3310
  3606  0681  2E96               	goto	l47
  3607  0682                     l3304:	
  3608                           
  3609                           ; Switch size 1, requested type "space"
  3610                           ; Number of cases is 1, Range of values is 128 to 128
  3611                           ; switch strategies available:
  3612                           ; Name         Instructions Cycles
  3613                           ; simple_byte            4     3 (average)
  3614                           ; direct_byte           14    11 (fixed)
  3615                           ; jumptable            263     9 (fixed)
  3616                           ;	Chosen strategy is simple_byte
  3617  0682  0820               	movf	USARTInit@baud_rate,w
  3618  0683  3A80               	xorlw	128	; case 128
  3619  0684  1903               	skipnz
  3620  0685  2E68               	goto	l2252
  3621  0686  2E96               	goto	l47
  3622  0687                     l3306:	
  3623                           
  3624                           ; Switch size 1, requested type "space"
  3625                           ; Number of cases is 1, Range of values is 0 to 0
  3626                           ; switch strategies available:
  3627                           ; Name         Instructions Cycles
  3628                           ; simple_byte            4     3 (average)
  3629                           ; direct_byte           11     8 (fixed)
  3630                           ; jumptable            260     6 (fixed)
  3631                           ;	Chosen strategy is simple_byte
  3632  0687  0820               	movf	USARTInit@baud_rate,w
  3633  0688  3A00               	xorlw	0	; case 0
  3634  0689  1903               	skipnz
  3635  068A  2E6A               	goto	l2254
  3636  068B  2E96               	goto	l47
  3637  068C                     l3308:	
  3638                           
  3639                           ; Switch size 1, requested type "space"
  3640                           ; Number of cases is 1, Range of values is 128 to 128
  3641                           ; switch strategies available:
  3642                           ; Name         Instructions Cycles
  3643                           ; simple_byte            4     3 (average)
  3644                           ; direct_byte           14    11 (fixed)
  3645                           ; jumptable            263     9 (fixed)
  3646                           ;	Chosen strategy is simple_byte
  3647  068C  0820               	movf	USARTInit@baud_rate,w
  3648  068D  3A80               	xorlw	128	; case 128
  3649  068E  1903               	skipnz
  3650  068F  2E6C               	goto	l2256
  3651  0690  2E96               	goto	l47
  3652  0691                     l3310:	
  3653                           
  3654                           ; Switch size 1, requested type "space"
  3655                           ; Number of cases is 1, Range of values is 64 to 64
  3656                           ; switch strategies available:
  3657                           ; Name         Instructions Cycles
  3658                           ; simple_byte            4     3 (average)
  3659                           ; direct_byte           14    11 (fixed)
  3660                           ; jumptable            263     9 (fixed)
  3661                           ;	Chosen strategy is simple_byte
  3662  0691  0820               	movf	USARTInit@baud_rate,w
  3663  0692  3A40               	xorlw	64	; case 64
  3664  0693  1903               	skipnz
  3665  0694  2E6E               	goto	l2258
  3666  0695  2E96               	goto	l47
  3667  0696                     l47:	
  3668                           
  3669                           ;usart_pic16.c: 53: TXSTAbits.TX9=0;
  3670  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3671  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3672  0698  1318               	bcf	24,6	;volatile
  3673                           
  3674                           ;usart_pic16.c: 54: TXSTAbits.TXEN=1;
  3675  0699  1698               	bsf	24,5	;volatile
  3676                           
  3677                           ;usart_pic16.c: 55: TXSTAbits.SYNC=0;
  3678  069A  1218               	bcf	24,4	;volatile
  3679                           
  3680                           ;usart_pic16.c: 56: TXSTAbits.BRGH=1;
  3681  069B  1518               	bsf	24,2	;volatile
  3682                           
  3683                           ;usart_pic16.c: 59: RCSTAbits.SPEN=1;
  3684  069C  1283               	bcf	3,5	;RP0=0, select bank0
  3685  069D  1303               	bcf	3,6	;RP1=0, select bank0
  3686  069E  1798               	bsf	24,7	;volatile
  3687                           
  3688                           ;usart_pic16.c: 60: RCSTAbits.RX9=0;
  3689  069F  1318               	bcf	24,6	;volatile
  3690                           
  3691                           ;usart_pic16.c: 61: RCSTAbits.CREN=1;
  3692  06A0  1618               	bsf	24,4	;volatile
  3693                           
  3694                           ;usart_pic16.c: 62: RCSTAbits.ADDEN=0;
  3695  06A1  1198               	bcf	24,3	;volatile
  3696                           
  3697                           ;usart_pic16.c: 65: RCIE=1;
  3698  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3699  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3700  06A4  168C               	bsf	12,5	;volatile
  3701                           
  3702                           ;usart_pic16.c: 66: PEIE=1;
  3703  06A5  170B               	bsf	11,6	;volatile
  3704                           
  3705                           ;usart_pic16.c: 69: (GIE = 1);
  3706  06A6  178B               	bsf	11,7	;volatile
  3707  06A7  0008               	return
  3708  06A8                     __end_of_USARTInit:	
  3709                           
  3710                           	psect	text16
  3711  0452                     __ptext16:	
  3712 ;; *************** function _SIM300Cmd *****************
  3713 ;; Defined at:
  3714 ;;		line 98 in file "E:\Study Material\XC8 PROJECTS\Modem\sim300.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  cmd             2    9[BANK0 ] PTR const unsigned char 
  3717 ;;		 -> STR_23(4), STR_22(4), STR_21(4), STR_20(4), 
  3718 ;;		 -> phone_number(20), STR_19(4), STR_18(4), STR_17(10), 
  3719 ;;		 -> SIM300SendMsg@cmd(25), SIM300ReadMsg@cmd(16), SIM300DeleteMsg@cmd(16), STR_8(7), 
  3720 ;;		 -> STR_7(7), STR_6(7), STR_5(9), STR_4(11), 
  3721 ;;		 -> STR_3(9), STR_1(3), 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  i               2   13[BANK0 ] unsigned int 
  3724 ;;  len             1   15[BANK0 ] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      char 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         0       2       0       0       0
  3735 ;;      Locals:         0       3       0       0       0
  3736 ;;      Temps:          0       2       0       0       0
  3737 ;;      Totals:         0       7       0       0       0
  3738 ;;Total ram usage:        7 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    4
  3741 ;; This function calls:
  3742 ;;		_USARTDataAvailable
  3743 ;;		_USARTReadBuffer
  3744 ;;		_USARTWriteChar
  3745 ;;		_USARTWriteString
  3746 ;;		___wmul
  3747 ;;		_strlen
  3748 ;; This function is called by:
  3749 ;;		_SIM300Init
  3750 ;;		_main
  3751 ;;		_SIM300GetNetStat
  3752 ;;		_SIM300IsSIMInserted
  3753 ;;		_SIM300GetProviderName
  3754 ;;		_SIM300GetIMEI
  3755 ;;		_SIM300GetManufacturer
  3756 ;;		_SIM300GetModel
  3757 ;;		_SIM300DeleteMsg
  3758 ;;		_SIM300ReadMsg
  3759 ;;		_SIM300SendMsg
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function _SIM300Cmd
  3765  0452                     _SIM300Cmd:	
  3766                           
  3767                           ;sim300.c: 100: USARTWriteString(cmd);
  3768                           
  3769                           ;incstack = 0
  3770                           ; Regs used in _SIM300Cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3771  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0454  082A               	movf	SIM300Cmd@cmd+1,w
  3774  0455  01A2               	clrf	USARTWriteString@str+1
  3775  0456  07A2               	addwf	USARTWriteString@str+1,f
  3776  0457  0829               	movf	SIM300Cmd@cmd,w
  3777  0458  01A1               	clrf	USARTWriteString@str
  3778  0459  07A1               	addwf	USARTWriteString@str,f
  3779  045A  120A  118A  27D4  120A  118A  	fcall	_USARTWriteString
  3780                           
  3781                           ;sim300.c: 101: USARTWriteChar(0x0D);
  3782  045F  300D               	movlw	13
  3783  0460  120A  158A  26CC  120A  118A  	fcall	_USARTWriteChar
  3784                           
  3785                           ;sim300.c: 103: uint8_t len=strlen(cmd);
  3786  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0467  082A               	movf	SIM300Cmd@cmd+1,w
  3789  0468  01A1               	clrf	strlen@s+1
  3790  0469  07A1               	addwf	strlen@s+1,f
  3791  046A  0829               	movf	SIM300Cmd@cmd,w
  3792  046B  01A0               	clrf	strlen@s
  3793  046C  07A0               	addwf	strlen@s,f
  3794  046D  120A  118A  2786  120A  118A  	fcall	_strlen
  3795  0472  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0473  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0474  0820               	movf	?_strlen,w
  3798  0475  00AB               	movwf	??_SIM300Cmd
  3799  0476  082B               	movf	??_SIM300Cmd,w
  3800  0477  00AF               	movwf	SIM300Cmd@len
  3801                           
  3802                           ;sim300.c: 105: len++;
  3803  0478  3001               	movlw	1
  3804  0479  00AB               	movwf	??_SIM300Cmd
  3805  047A  082B               	movf	??_SIM300Cmd,w
  3806  047B  07AF               	addwf	SIM300Cmd@len,f
  3807                           
  3808                           ;sim300.c: 107: uint16_t i=0;
  3809  047C  01AD               	clrf	SIM300Cmd@i
  3810  047D  01AE               	clrf	SIM300Cmd@i+1
  3811  047E                     l2300:	
  3812                           ;sim300.c: 110: while(i<10*len)
  3813                           
  3814  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3815  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0480  082F               	movf	SIM300Cmd@len,w
  3817  0481  00AB               	movwf	??_SIM300Cmd
  3818  0482  01AC               	clrf	??_SIM300Cmd+1
  3819  0483  082B               	movf	??_SIM300Cmd,w
  3820  0484  00A0               	movwf	___wmul@multiplier
  3821  0485  082C               	movf	??_SIM300Cmd+1,w
  3822  0486  00A1               	movwf	___wmul@multiplier+1
  3823  0487  300A               	movlw	10
  3824  0488  00A2               	movwf	___wmul@multiplicand
  3825  0489  3000               	movlw	0
  3826  048A  00A3               	movwf	___wmul@multiplicand+1
  3827  048B  120A  118A  27AF  120A  118A  	fcall	___wmul
  3828  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3830  0492  0821               	movf	?___wmul+1,w
  3831  0493  022E               	subwf	SIM300Cmd@i+1,w
  3832  0494  1D03               	skipz
  3833  0495  2C98               	goto	u1455
  3834  0496  0820               	movf	?___wmul,w
  3835  0497  022D               	subwf	SIM300Cmd@i,w
  3836  0498                     u1455:	
  3837  0498  1803               	btfsc	3,0
  3838  0499  0008               	return
  3839                           
  3840                           ;sim300.c: 111: {
  3841                           ;sim300.c: 112: if(USARTDataAvailable()<len)
  3842  049A  120A  158A  2770  120A  118A  	fcall	_USARTDataAvailable
  3843  049F  1283               	bcf	3,5	;RP0=0, select bank0
  3844  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  3845  04A1  00AB               	movwf	??_SIM300Cmd
  3846  04A2  082F               	movf	SIM300Cmd@len,w
  3847  04A3  022B               	subwf	??_SIM300Cmd,w
  3848  04A4  1803               	skipnc
  3849  04A5  2CB6               	goto	l2296
  3850                           
  3851                           ;sim300.c: 113: {
  3852                           ;sim300.c: 114: i++;
  3853  04A6  3001               	movlw	1
  3854  04A7  07AD               	addwf	SIM300Cmd@i,f
  3855  04A8  1803               	skipnc
  3856  04A9  0AAE               	incf	SIM300Cmd@i+1,f
  3857  04AA  3000               	movlw	0
  3858  04AB  07AE               	addwf	SIM300Cmd@i+1,f
  3859                           
  3860                           ;sim300.c: 115: _delay((unsigned long)((10)*(4000000/4000.0)));
  3861  04AC  300D               	movlw	13
  3862  04AD  00AC               	movwf	??_SIM300Cmd+1
  3863  04AE  30FB               	movlw	251
  3864  04AF  00AB               	movwf	??_SIM300Cmd
  3865  04B0                     u2887:	
  3866  04B0  0BAB               	decfsz	??_SIM300Cmd,f
  3867  04B1  2CB0               	goto	u2887
  3868  04B2  0BAC               	decfsz	??_SIM300Cmd+1,f
  3869  04B3  2CB0               	goto	u2887
  3870  04B4  2CB5               	nop2
  3871                           
  3872                           ;sim300.c: 117: }
  3873                           
  3874                           ;sim300.c: 116: continue;
  3875  04B5  2C7E               	goto	l2300
  3876  04B6                     l2296:	
  3877                           
  3878                           ;sim300.c: 118: else
  3879                           ;sim300.c: 119: {
  3880                           ;sim300.c: 122: USARTReadBuffer(sim300_buffer,len);
  3881  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3882  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3883  04B8  082F               	movf	SIM300Cmd@len,w
  3884  04B9  00AB               	movwf	??_SIM300Cmd
  3885  04BA  01AC               	clrf	??_SIM300Cmd+1
  3886  04BB  082B               	movf	??_SIM300Cmd,w
  3887  04BC  00A2               	movwf	USARTReadBuffer@len
  3888  04BD  082C               	movf	??_SIM300Cmd+1,w
  3889  04BE  00A3               	movwf	USARTReadBuffer@len+1
  3890  04BF  3090               	movlw	_sim300_buffer& (0+255)
  3891  04C0  120A  158A  27B8   	fcall	_USARTReadBuffer
  3892                           
  3893                           ;sim300.c: 124: return 1;
  3894                           ;	Return value of _SIM300Cmd is never used
  3895  04C3  0008               	return
  3896  04C4                     __end_of_SIM300Cmd:	
  3897                           ;sim300.c: 125: }
  3898                           ;sim300.c: 126: }
  3899                           ;sim300.c: 128: return -3;
  3900                           ;	Return value of _SIM300Cmd is never used
  3901                           
  3902                           
  3903                           	psect	text17
  3904  0786                     __ptext17:	
  3905 ;; *************** function _strlen *****************
  3906 ;; Defined at:
  3907 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strlen.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3910 ;;		 -> STR_23(4), STR_22(4), STR_21(4), STR_20(4), 
  3911 ;;		 -> phone_number(20), STR_19(4), STR_18(4), STR_17(10), 
  3912 ;;		 -> SIM300SendMsg@cmd(25), SIM300ReadMsg@cmd(16), SIM300DeleteMsg@cmd(16), STR_8(7), 
  3913 ;;		 -> STR_7(7), STR_6(7), STR_5(9), STR_4(11), 
  3914 ;;		 -> STR_3(9), STR_1(3), 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  3917 ;;		 -> STR_23(4), STR_22(4), STR_21(4), STR_20(4), 
  3918 ;;		 -> phone_number(20), STR_19(4), STR_18(4), STR_17(10), 
  3919 ;;		 -> SIM300SendMsg@cmd(25), SIM300ReadMsg@cmd(16), SIM300DeleteMsg@cmd(16), STR_8(7), 
  3920 ;;		 -> STR_7(7), STR_6(7), STR_5(9), STR_4(11), 
  3921 ;;		 -> STR_3(9), STR_1(3), 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2    0[BANK0 ] unsigned int 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       2       0       0       0
  3932 ;;      Locals:         0       2       0       0       0
  3933 ;;      Temps:          0       2       0       0       0
  3934 ;;      Totals:         0       6       0       0       0
  3935 ;;Total ram usage:        6 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_SIM300Cmd
  3942 ;;		_SIM300GetProviderName
  3943 ;;		_SIM300SendMsg
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function _strlen
  3949  0786                     _strlen:	
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3953  0786  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0787  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0788  0821               	movf	strlen@s+1,w
  3956  0789  01A5               	clrf	strlen@cp+1
  3957  078A  07A5               	addwf	strlen@cp+1,f
  3958  078B  0820               	movf	strlen@s,w
  3959  078C  01A4               	clrf	strlen@cp
  3960  078D  07A4               	addwf	strlen@cp,f
  3961  078E                     l2222:	
  3962  078E  0825               	movf	strlen@cp+1,w
  3963  078F  00FF               	movwf	127
  3964  0790  0824               	movf	strlen@cp,w
  3965  0791  0084               	movwf	4
  3966  0792  120A  118A  2300  120A  118A  	fcall	stringtab
  3967  0797  3800               	iorlw	0
  3968  0798  1903               	btfsc	3,2
  3969  0799  2F9F               	goto	l2224
  3970  079A  3001               	movlw	1
  3971  079B  07A4               	addwf	strlen@cp,f
  3972  079C  1803               	skipnc
  3973  079D  0AA5               	incf	strlen@cp+1,f
  3974  079E  2F8E               	goto	l2222
  3975  079F                     l2224:	
  3976  079F  0920               	comf	strlen@s,w
  3977  07A0  00A2               	movwf	??_strlen
  3978  07A1  0921               	comf	strlen@s+1,w
  3979  07A2  00A3               	movwf	??_strlen+1
  3980  07A3  0AA2               	incf	??_strlen,f
  3981  07A4  1903               	skipnz
  3982  07A5  0AA3               	incf	??_strlen+1,f
  3983  07A6  0824               	movf	strlen@cp,w
  3984  07A7  0722               	addwf	??_strlen,w
  3985  07A8  00A0               	movwf	?_strlen
  3986  07A9  0825               	movf	strlen@cp+1,w
  3987  07AA  1803               	skipnc
  3988  07AB  0A25               	incf	strlen@cp+1,w
  3989  07AC  0723               	addwf	??_strlen+1,w
  3990  07AD  00A1               	movwf	?_strlen+1
  3991  07AE  0008               	return
  3992  07AF                     __end_of_strlen:	
  3993                           
  3994                           	psect	text18
  3995  07AF                     __ptext18:	
  3996 ;; *************** function ___wmul *****************
  3997 ;; Defined at:
  3998 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4001 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  product         2    4[BANK0 ] unsigned int 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2    0[BANK0 ] unsigned int 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4013 ;;      Params:         0       4       0       0       0
  4014 ;;      Locals:         0       2       0       0       0
  4015 ;;      Temps:          0       0       0       0       0
  4016 ;;      Totals:         0       6       0       0       0
  4017 ;;Total ram usage:        6 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    2
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_SIM300Cmd
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           
  4028                           ;psect for function ___wmul
  4029  07AF                     ___wmul:	
  4030                           
  4031                           ;incstack = 0
  4032                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4033  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4034  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  4035  07B1  01A4               	clrf	___wmul@product
  4036  07B2  01A5               	clrf	___wmul@product+1
  4037  07B3                     l2230:	
  4038  07B3  1C20               	btfss	___wmul@multiplier,0
  4039  07B4  2FBB               	goto	l591
  4040  07B5  0822               	movf	___wmul@multiplicand,w
  4041  07B6  07A4               	addwf	___wmul@product,f
  4042  07B7  1803               	skipnc
  4043  07B8  0AA5               	incf	___wmul@product+1,f
  4044  07B9  0823               	movf	___wmul@multiplicand+1,w
  4045  07BA  07A5               	addwf	___wmul@product+1,f
  4046  07BB                     l591:	
  4047  07BB  3001               	movlw	1
  4048  07BC                     u1395:	
  4049  07BC  1003               	clrc
  4050  07BD  0DA2               	rlf	___wmul@multiplicand,f
  4051  07BE  0DA3               	rlf	___wmul@multiplicand+1,f
  4052  07BF  3EFF               	addlw	-1
  4053  07C0  1D03               	skipz
  4054  07C1  2FBC               	goto	u1395
  4055  07C2  3001               	movlw	1
  4056  07C3                     u1405:	
  4057  07C3  1003               	clrc
  4058  07C4  0CA1               	rrf	___wmul@multiplier+1,f
  4059  07C5  0CA0               	rrf	___wmul@multiplier,f
  4060  07C6  3EFF               	addlw	-1
  4061  07C7  1D03               	skipz
  4062  07C8  2FC3               	goto	u1405
  4063  07C9  0821               	movf	___wmul@multiplier+1,w
  4064  07CA  0420               	iorwf	___wmul@multiplier,w
  4065  07CB  1D03               	skipz
  4066  07CC  2FB3               	goto	l2230
  4067  07CD  0825               	movf	___wmul@product+1,w
  4068  07CE  01A1               	clrf	?___wmul+1
  4069  07CF  07A1               	addwf	?___wmul+1,f
  4070  07D0  0824               	movf	___wmul@product,w
  4071  07D1  01A0               	clrf	?___wmul
  4072  07D2  07A0               	addwf	?___wmul,f
  4073  07D3  0008               	return
  4074  07D4                     __end_of___wmul:	
  4075                           
  4076                           	psect	text19
  4077  07D4                     __ptext19:	
  4078 ;; *************** function _USARTWriteString *****************
  4079 ;; Defined at:
  4080 ;;		line 80 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  str             2    1[BANK0 ] PTR const unsigned char 
  4083 ;;		 -> STR_23(4), STR_22(4), STR_21(4), STR_20(4), 
  4084 ;;		 -> phone_number(20), STR_19(4), STR_18(4), STR_17(10), 
  4085 ;;		 -> SIM300SendMsg@cmd(25), SIM300ReadMsg@cmd(16), SIM300DeleteMsg@cmd(16), STR_8(7), 
  4086 ;;		 -> STR_7(7), STR_6(7), STR_5(9), STR_4(11), 
  4087 ;;		 -> STR_3(9), STR_1(3), 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;		None               void
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       2       0       0       0
  4100 ;;      Locals:         0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0
  4102 ;;      Totals:         0       2       0       0       0
  4103 ;;Total ram usage:        2 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    3
  4106 ;; This function calls:
  4107 ;;		_USARTWriteChar
  4108 ;; This function is called by:
  4109 ;;		_SIM300Cmd
  4110 ;;		_USARTWriteLine
  4111 ;;		_SIM300SendMsg
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _USARTWriteString
  4117  07D4                     _USARTWriteString:	
  4118  07D4                     l2204:	
  4119                           ;usart_pic16.c: 82: while(*str!='\0')
  4120                           
  4121                           ;incstack = 0
  4122                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4123                           
  4124  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  4125  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  4126  07D6  0822               	movf	USARTWriteString@str+1,w
  4127  07D7  00FF               	movwf	127
  4128  07D8  0821               	movf	USARTWriteString@str,w
  4129  07D9  0084               	movwf	4
  4130  07DA  120A  118A  2300  120A  118A  	fcall	stringtab
  4131  07DF  3800               	iorlw	0
  4132  07E0  1903               	btfsc	3,2
  4133  07E1  0008               	return
  4134                           
  4135                           ;usart_pic16.c: 83: {
  4136                           ;usart_pic16.c: 84: USARTWriteChar(*str);
  4137  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  4138  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  4139  07E4  0822               	movf	USARTWriteString@str+1,w
  4140  07E5  00FF               	movwf	127
  4141  07E6  0821               	movf	USARTWriteString@str,w
  4142  07E7  0084               	movwf	4
  4143  07E8  120A  118A  2300  120A  118A  	fcall	stringtab
  4144  07ED  120A  158A  26CC  120A  118A  	fcall	_USARTWriteChar
  4145                           
  4146                           ;usart_pic16.c: 85: str++;
  4147  07F2  3001               	movlw	1
  4148  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  4149  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  4150  07F5  07A1               	addwf	USARTWriteString@str,f
  4151  07F6  1803               	skipnc
  4152  07F7  0AA2               	incf	USARTWriteString@str+1,f
  4153  07F8  2FD4               	goto	l2204
  4154  07F9                     __end_of_USARTWriteString:	
  4155                           
  4156                           	psect	text20
  4157  0ECC                     __ptext20:	
  4158 ;; *************** function _USARTWriteChar *****************
  4159 ;; Defined at:
  4160 ;;		line 73 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  ch              1    wreg     unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  ch              1    0[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		wreg
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4174 ;;      Params:         0       0       0       0       0
  4175 ;;      Locals:         0       1       0       0       0
  4176 ;;      Temps:          0       0       0       0       0
  4177 ;;      Totals:         0       1       0       0       0
  4178 ;;Total ram usage:        1 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    2
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_USARTWriteString
  4185 ;;		_SIM300Cmd
  4186 ;;		_USARTWriteLine
  4187 ;;		_USARTWriteInt
  4188 ;;		_USARTGotoNewLine
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _USARTWriteChar
  4194  0ECC                     _USARTWriteChar:	
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _USARTWriteChar: [wreg]
  4198                           ;USARTWriteChar@ch stored from wreg
  4199  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0ECE  00A0               	movwf	USARTWriteChar@ch
  4202  0ECF                     l54:	
  4203                           ;usart_pic16.c: 75: while(!PIR1bits.TXIF);
  4204                           
  4205  0ECF  1E0C               	btfss	12,4	;volatile
  4206  0ED0  2ECF               	goto	l54
  4207                           
  4208                           ;usart_pic16.c: 76: TXREG=ch;
  4209  0ED1  0820               	movf	USARTWriteChar@ch,w
  4210  0ED2  0099               	movwf	25	;volatile
  4211  0ED3  0008               	return
  4212  0ED4                     __end_of_USARTWriteChar:	
  4213                           
  4214                           	psect	text21
  4215  0FB8                     __ptext21:	
  4216 ;; *************** function _USARTReadBuffer *****************
  4217 ;; Defined at:
  4218 ;;		line 223 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  buff            1    wreg     PTR unsigned char 
  4221 ;;		 -> sim300_buffer(96), 
  4222 ;;  len             2    2[BANK0 ] unsigned int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  buff            1    8[BANK0 ] PTR unsigned char 
  4225 ;;		 -> sim300_buffer(96), 
  4226 ;;  i               2    6[BANK0 ] unsigned int 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;		None               void
  4229 ;; Registers used:
  4230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4236 ;;      Params:         0       2       0       0       0
  4237 ;;      Locals:         0       3       0       0       0
  4238 ;;      Temps:          0       2       0       0       0
  4239 ;;      Totals:         0       7       0       0       0
  4240 ;;Total ram usage:        7 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    3
  4243 ;; This function calls:
  4244 ;;		_USARTReadData
  4245 ;; This function is called by:
  4246 ;;		_SIM300Init
  4247 ;;		_SIM300Cmd
  4248 ;;		_SIM300GetNetStat
  4249 ;;		_SIM300IsSIMInserted
  4250 ;;		_SIM300SendMsg
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           
  4255                           ;psect for function _USARTReadBuffer
  4256  0FB8                     _USARTReadBuffer:	
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _USARTReadBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4260                           ;USARTReadBuffer@buff stored from wreg
  4261  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4263  0FBA  00A8               	movwf	USARTReadBuffer@buff
  4264                           
  4265                           ;usart_pic16.c: 225: uint16_t i;
  4266                           ;usart_pic16.c: 226: for(i=0;i<len;i++)
  4267  0FBB  01A6               	clrf	USARTReadBuffer@i
  4268  0FBC  01A7               	clrf	USARTReadBuffer@i+1
  4269  0FBD                     l2212:	
  4270  0FBD  0823               	movf	USARTReadBuffer@len+1,w
  4271  0FBE  0227               	subwf	USARTReadBuffer@i+1,w
  4272  0FBF  1D03               	skipz
  4273  0FC0  2FC3               	goto	u1355
  4274  0FC1  0822               	movf	USARTReadBuffer@len,w
  4275  0FC2  0226               	subwf	USARTReadBuffer@i,w
  4276  0FC3                     u1355:	
  4277  0FC3  1803               	btfsc	3,0
  4278  0FC4  0008               	return
  4279                           
  4280                           ;usart_pic16.c: 227: {
  4281                           ;usart_pic16.c: 228: buff[i]=USARTReadData();
  4282  0FC5  120A  158A  2794  120A  158A  	fcall	_USARTReadData
  4283  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0FCC  00A4               	movwf	??_USARTReadBuffer
  4286  0FCD  0826               	movf	USARTReadBuffer@i,w
  4287  0FCE  0728               	addwf	USARTReadBuffer@buff,w
  4288  0FCF  00A5               	movwf	??_USARTReadBuffer+1
  4289  0FD0  0825               	movf	??_USARTReadBuffer+1,w
  4290  0FD1  0084               	movwf	4
  4291  0FD2  0824               	movf	??_USARTReadBuffer,w
  4292  0FD3  1783               	bsf	3,7	;select IRP bank2
  4293  0FD4  0080               	movwf	0
  4294  0FD5  3001               	movlw	1
  4295  0FD6  07A6               	addwf	USARTReadBuffer@i,f
  4296  0FD7  1803               	skipnc
  4297  0FD8  0AA7               	incf	USARTReadBuffer@i+1,f
  4298  0FD9  3000               	movlw	0
  4299  0FDA  07A7               	addwf	USARTReadBuffer@i+1,f
  4300  0FDB  2FBD               	goto	l2212
  4301  0FDC                     __end_of_USARTReadBuffer:	
  4302                           
  4303                           	psect	text22
  4304  0F94                     __ptext22:	
  4305 ;; *************** function _USARTReadData *****************
  4306 ;; Defined at:
  4307 ;;		line 131 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  data            1    1[BANK0 ] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      unsigned char 
  4314 ;; Registers used:
  4315 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4321 ;;      Params:         0       0       0       0       0
  4322 ;;      Locals:         0       1       0       0       0
  4323 ;;      Temps:          0       1       0       0       0
  4324 ;;      Totals:         0       2       0       0       0
  4325 ;;Total ram usage:        2 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    2
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_USARTReadBuffer
  4332 ;;		_USARTFlushBuffer
  4333 ;;		_SIM300RingResponse
  4334 ;;		_SIM300WaitForResponse
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _USARTReadData
  4340  0F94                     _USARTReadData:	
  4341                           
  4342                           ;usart_pic16.c: 133: char data;
  4343                           ;usart_pic16.c: 136: if(UQFront==-1)
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in _USARTReadData: [wreg-fsr0h+status,2+status,0]
  4347  0F94  087B               	movf	_UQFront,w	;volatile
  4348  0F95  3AFF               	xorlw	-1
  4349  0F96  1D03               	skipz
  4350  0F97  2F9A               	goto	l2156
  4351                           
  4352                           ;usart_pic16.c: 137: return 0;
  4353  0F98  3000               	movlw	0
  4354  0F99  0008               	return
  4355  0F9A                     l2156:	
  4356                           
  4357                           ;usart_pic16.c: 139: data=URBuff[UQFront];
  4358  0F9A  087B               	movf	_UQFront,w
  4359  0F9B  3EA0               	addlw	_URBuff& (0+255)
  4360  0F9C  0084               	movwf	4
  4361  0F9D  1383               	bcf	3,7	;select IRP bank1
  4362  0F9E  0800               	movf	0,w
  4363  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0FA1  00A0               	movwf	??_USARTReadData
  4366  0FA2  0820               	movf	??_USARTReadData,w
  4367  0FA3  00A1               	movwf	USARTReadData@data
  4368                           
  4369                           ;usart_pic16.c: 141: if(UQFront==UQEnd)
  4370  0FA4  087B               	movf	_UQFront,w	;volatile
  4371  0FA5  067A               	xorwf	_UQEnd,w	;volatile
  4372  0FA6  1D03               	skipz
  4373  0FA7  2FAE               	goto	l2162
  4374                           
  4375                           ;usart_pic16.c: 142: {
  4376                           ;usart_pic16.c: 145: UQFront=UQEnd=-1;
  4377  0FA8  30FF               	movlw	-1
  4378  0FA9  00FA               	movwf	_UQEnd	;volatile
  4379  0FAA  00A0               	movwf	??_USARTReadData
  4380  0FAB  0820               	movf	??_USARTReadData,w
  4381  0FAC  00FB               	movwf	_UQFront	;volatile
  4382                           
  4383                           ;usart_pic16.c: 146: }
  4384  0FAD  2FB6               	goto	l2168
  4385  0FAE                     l2162:	
  4386                           
  4387                           ;usart_pic16.c: 147: else
  4388                           ;usart_pic16.c: 148: {
  4389                           ;usart_pic16.c: 149: UQFront++;
  4390  0FAE  3001               	movlw	1
  4391  0FAF  00A0               	movwf	??_USARTReadData
  4392  0FB0  0820               	movf	??_USARTReadData,w
  4393  0FB1  07FB               	addwf	_UQFront,f	;volatile
  4394                           
  4395                           ;usart_pic16.c: 151: if(UQFront==64)
  4396  0FB2  087B               	movf	_UQFront,w	;volatile
  4397  0FB3  3A40               	xorlw	64
  4398  0FB4  1903               	btfsc	3,2
  4399                           
  4400                           ;usart_pic16.c: 152: UQFront=0;
  4401  0FB5  01FB               	clrf	_UQFront	;volatile
  4402  0FB6                     l2168:	
  4403                           
  4404                           ;usart_pic16.c: 153: }
  4405                           ;usart_pic16.c: 155: return data;
  4406  0FB6  0821               	movf	USARTReadData@data,w
  4407  0FB7  0008               	return
  4408  0FB8                     __end_of_USARTReadData:	
  4409                           
  4410                           	psect	text23
  4411  0F70                     __ptext23:	
  4412 ;; *************** function _USARTDataAvailable *****************
  4413 ;; Defined at:
  4414 ;;		line 159 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      unsigned char 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0
  4430 ;;      Temps:          0       1       0       0       0
  4431 ;;      Totals:         0       1       0       0       0
  4432 ;;Total ram usage:        1 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    2
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_USARTFlushBuffer
  4439 ;;		_SIM300Init
  4440 ;;		_SIM300Cmd
  4441 ;;		_SIM300RingResponse
  4442 ;;		_SIM300WaitForResponse
  4443 ;;		_SIM300GetNetStat
  4444 ;;		_SIM300IsSIMInserted
  4445 ;;		_SIM300SendMsg
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function _USARTDataAvailable
  4451  0F70                     _USARTDataAvailable:	
  4452                           
  4453                           ;usart_pic16.c: 161: if(UQFront==-1)
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _USARTDataAvailable: [wreg+status,2+status,0]
  4457  0F70  087B               	movf	_UQFront,w	;volatile
  4458  0F71  3AFF               	xorlw	-1
  4459  0F72  1D03               	skipz
  4460  0F73  2F76               	goto	l2178
  4461                           
  4462                           ;usart_pic16.c: 162: return 0;
  4463  0F74  3000               	movlw	0
  4464  0F75  0008               	return
  4465  0F76                     l2178:	
  4466                           
  4467                           ;usart_pic16.c: 163: if(UQFront<UQEnd)
  4468  0F76  087B               	movf	_UQFront,w	;volatile
  4469  0F77  3A80               	xorlw	128
  4470  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0F7A  00A0               	movwf	??_USARTDataAvailable
  4473  0F7B  087A               	movf	_UQEnd,w	;volatile
  4474  0F7C  3A80               	xorlw	128
  4475  0F7D  02A0               	subwf	??_USARTDataAvailable,f
  4476  0F7E  1803               	skipnc
  4477  0F7F  2F85               	goto	l2186
  4478                           
  4479                           ;usart_pic16.c: 164: return(UQEnd-UQFront+1);
  4480  0F80  037B               	decf	_UQFront,w	;volatile
  4481  0F81  3AFF               	xorlw	255
  4482  0F82  077A               	addwf	_UQEnd,w	;volatile
  4483  0F83  3E01               	addlw	1
  4484  0F84  0008               	return
  4485  0F85                     l2186:	
  4486                           
  4487                           ;usart_pic16.c: 165: else if(UQFront>UQEnd)
  4488  0F85  087A               	movf	_UQEnd,w	;volatile
  4489  0F86  3A80               	xorlw	128
  4490  0F87  00A0               	movwf	??_USARTDataAvailable
  4491  0F88  087B               	movf	_UQFront,w	;volatile
  4492  0F89  3A80               	xorlw	128
  4493  0F8A  02A0               	subwf	??_USARTDataAvailable,f
  4494  0F8B  1803               	skipnc
  4495  0F8C  2F92               	goto	l2194
  4496                           
  4497                           ;usart_pic16.c: 166: return (64-UQFront+UQEnd+1);
  4498  0F8D  037B               	decf	_UQFront,w	;volatile
  4499  0F8E  3AFF               	xorlw	255
  4500  0F8F  077A               	addwf	_UQEnd,w	;volatile
  4501  0F90  3E41               	addlw	65
  4502  0F91  0008               	return
  4503  0F92                     l2194:	
  4504                           
  4505                           ;usart_pic16.c: 167: else
  4506                           ;usart_pic16.c: 168: return 1;
  4507  0F92  3001               	movlw	1
  4508  0F93  0008               	return
  4509  0F94                     __end_of_USARTDataAvailable:	
  4510                           
  4511                           	psect	text24
  4512  05C7                     __ptext24:	
  4513 ;; *************** function _SIM300CheckResponse *****************
  4514 ;; Defined at:
  4515 ;;		line 131 in file "E:\Study Material\XC8 PROJECTS\Modem\sim300.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  response        1    wreg     PTR const unsigned char 
  4518 ;;		 -> sim300_buffer(96), 
  4519 ;;  check           1    0[BANK0 ] PTR const unsigned char 
  4520 ;;		 -> STR_2(3), 
  4521 ;;  len             1    1[BANK0 ] unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  response        1    5[BANK0 ] PTR const unsigned char 
  4524 ;;		 -> sim300_buffer(96), 
  4525 ;;  i               1    4[BANK0 ] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      char 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4535 ;;      Params:         0       2       0       0       0
  4536 ;;      Locals:         0       2       0       0       0
  4537 ;;      Temps:          0       2       0       0       0
  4538 ;;      Totals:         0       6       0       0       0
  4539 ;;Total ram usage:        6 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    2
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_SIM300Init
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function _SIM300CheckResponse
  4551  05C7                     _SIM300CheckResponse:	
  4552                           
  4553                           ;incstack = 0
  4554                           ; Regs used in _SIM300CheckResponse: [wreg-fsr0h+status,2+status,0+pclath]
  4555                           ;SIM300CheckResponse@response stored from wreg
  4556  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  4557  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  4558  05C9  00A5               	movwf	SIM300CheckResponse@response
  4559                           
  4560                           ;sim300.c: 133: len-=2;
  4561  05CA  3002               	movlw	2
  4562  05CB  02A1               	subwf	SIM300CheckResponse@len,f
  4563                           
  4564                           ;sim300.c: 136: if(response[0]!=0x0D | response[1]!=0x0A)
  4565  05CC  0825               	movf	SIM300CheckResponse@response,w
  4566  05CD  0084               	movwf	4
  4567  05CE  1783               	bsf	3,7	;select IRP bank2
  4568  05CF  0800               	movf	0,w
  4569  05D0  3A0D               	xorlw	13
  4570  05D1  1D03               	skipz
  4571  05D2  2DD9               	goto	l2308
  4572  05D3  0A25               	incf	SIM300CheckResponse@response,w
  4573  05D4  0084               	movwf	4
  4574  05D5  0800               	movf	0,w
  4575  05D6  3A0A               	xorlw	10
  4576  05D7  1903               	skipnz
  4577  05D8  2DDB               	goto	l2312
  4578  05D9                     l2308:	
  4579                           
  4580                           ;sim300.c: 137: return -1;
  4581  05D9  30FF               	movlw	-1
  4582  05DA  0008               	return
  4583  05DB                     l2312:	
  4584                           
  4585                           ;sim300.c: 140: if(response[len]!=0x0D | response[len+1]!=0x0A)
  4586  05DB  0821               	movf	SIM300CheckResponse@len,w
  4587  05DC  0725               	addwf	SIM300CheckResponse@response,w
  4588  05DD  00A2               	movwf	??_SIM300CheckResponse
  4589  05DE  0822               	movf	??_SIM300CheckResponse,w
  4590  05DF  0084               	movwf	4
  4591  05E0  0800               	movf	0,w
  4592  05E1  3A0D               	xorlw	13
  4593  05E2  1D03               	skipz
  4594  05E3  2DEE               	goto	l2316
  4595  05E4  0821               	movf	SIM300CheckResponse@len,w
  4596  05E5  3E01               	addlw	1
  4597  05E6  0725               	addwf	SIM300CheckResponse@response,w
  4598  05E7  00A2               	movwf	??_SIM300CheckResponse
  4599  05E8  0822               	movf	??_SIM300CheckResponse,w
  4600  05E9  0084               	movwf	4
  4601  05EA  0800               	movf	0,w
  4602  05EB  3A0A               	xorlw	10
  4603  05EC  1903               	skipnz
  4604  05ED  2DF0               	goto	l2320
  4605  05EE                     l2316:	
  4606                           
  4607                           ;sim300.c: 141: return -1;
  4608  05EE  30FF               	movlw	-1
  4609  05EF  0008               	return
  4610  05F0                     l2320:	
  4611                           
  4612                           ;sim300.c: 145: for(uint8_t i=2;i<len;i++)
  4613  05F0  3002               	movlw	2
  4614  05F1  00A2               	movwf	??_SIM300CheckResponse
  4615  05F2  0822               	movf	??_SIM300CheckResponse,w
  4616  05F3  00A4               	movwf	SIM300CheckResponse@i
  4617  05F4                     l2330:	
  4618  05F4  0821               	movf	SIM300CheckResponse@len,w
  4619  05F5  0224               	subwf	SIM300CheckResponse@i,w
  4620  05F6  1803               	btfsc	3,0
  4621  05F7  2E12               	goto	l2332
  4622                           
  4623                           ;sim300.c: 146: {
  4624                           ;sim300.c: 147: if(response[i]!=check[i-2])
  4625  05F8  0824               	movf	SIM300CheckResponse@i,w
  4626  05F9  3EFE               	addlw	-2
  4627  05FA  0720               	addwf	SIM300CheckResponse@check,w
  4628  05FB  0084               	movwf	4
  4629  05FC  120A  118A  230A  120A  118A  	fcall	stringdir
  4630  0601  00A2               	movwf	??_SIM300CheckResponse
  4631  0602  0824               	movf	SIM300CheckResponse@i,w
  4632  0603  0725               	addwf	SIM300CheckResponse@response,w
  4633  0604  00A3               	movwf	??_SIM300CheckResponse+1
  4634  0605  0823               	movf	??_SIM300CheckResponse+1,w
  4635  0606  0084               	movwf	4
  4636  0607  0800               	movf	0,w
  4637  0608  0622               	xorwf	??_SIM300CheckResponse,w
  4638  0609  1903               	skipnz
  4639  060A  2E0D               	goto	l2328
  4640                           
  4641                           ;sim300.c: 148: return -2;
  4642  060B  30FE               	movlw	-2
  4643  060C  0008               	return
  4644  060D                     l2328:	
  4645  060D  3001               	movlw	1
  4646  060E  00A2               	movwf	??_SIM300CheckResponse
  4647  060F  0822               	movf	??_SIM300CheckResponse,w
  4648  0610  07A4               	addwf	SIM300CheckResponse@i,f
  4649  0611  2DF4               	goto	l2330
  4650  0612                     l2332:	
  4651                           
  4652                           ;sim300.c: 149: }
  4653                           ;sim300.c: 151: return 1;
  4654  0612  3001               	movlw	1
  4655  0613  0008               	return
  4656  0614                     __end_of_SIM300CheckResponse:	
  4657                           
  4658                           	psect	text25
  4659  02E2                     __ptext25:	
  4660 ;; *************** function _ISR *****************
  4661 ;; Defined at:
  4662 ;;		line 6 in file "E:\Study Material\XC8 PROJECTS\Modem\isr.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;		None               void
  4669 ;; Registers used:
  4670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4676 ;;      Params:         0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0
  4678 ;;      Temps:          4       0       0       0       0
  4679 ;;      Totals:         4       0       0       0       0
  4680 ;;Total ram usage:        4 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    1
  4683 ;; This function calls:
  4684 ;;		_USARTHandleRxInt
  4685 ;; This function is called by:
  4686 ;;		Interrupt level 1
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _ISR
  4692  02E2                     _ISR:	
  4693                           
  4694                           ;isr.c: 8: if (RCIE && RCIF) {
  4695  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  4696  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  4697  02E4  1E8C               	btfss	12,5	;volatile
  4698  02E5  2AEF               	goto	i1l16
  4699  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  4700  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  4701  02E8  1E8C               	btfss	12,5	;volatile
  4702  02E9  2AEF               	goto	i1l16
  4703                           
  4704                           ;isr.c: 9: USARTHandleRxInt();
  4705  02EA  120A  118A  26A8  120A  118A  	fcall	_USARTHandleRxInt
  4706  02EF                     i1l16:	
  4707                           ;isr.c: 10: return;
  4708                           
  4709  02EF  0878               	movf	??_ISR+3,w
  4710  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  4711  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  4712  02F2  00FF               	movwf	127
  4713  02F3  0877               	movf	??_ISR+2,w
  4714  02F4  008A               	movwf	10
  4715  02F5  0876               	movf	??_ISR+1,w
  4716  02F6  0084               	movwf	4
  4717  02F7  0E75               	swapf	??_ISR^(0+-128),w
  4718  02F8  0083               	movwf	3
  4719  02F9  0EFE               	swapf	126,f
  4720  02FA  0E7E               	swapf	126,w
  4721  02FB  0009               	retfie
  4722  02FC                     __end_of_ISR:	
  4723                           
  4724                           	psect	intentry
  4725  0004                     __pintentry:	
  4726                           ;incstack = 0
  4727                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4728                           
  4729  0004                     interrupt_function:	
  4730  007E                     saved_w	set	btemp
  4731  0004  00FE               	movwf	btemp
  4732  0005  0E03               	swapf	3,w
  4733  0006  00F5               	movwf	??_ISR
  4734  0007  0804               	movf	4,w
  4735  0008  00F6               	movwf	??_ISR+1
  4736  0009  080A               	movf	10,w
  4737  000A  00F7               	movwf	??_ISR+2
  4738  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4739  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4740  000D  087F               	movf	btemp+1,w
  4741  000E  00F8               	movwf	??_ISR+3
  4742  000F  120A  118A  2AE2   	ljmp	_ISR
  4743                           
  4744                           	psect	text26
  4745  06A8                     __ptext26:	
  4746 ;; *************** function _USARTHandleRxInt *****************
  4747 ;; Defined at:
  4748 ;;		line 99 in file "E:\Study Material\XC8 PROJECTS\Modem\usart_pic16.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  data            1    4[COMMON] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;		None               void
  4755 ;; Registers used:
  4756 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4762 ;;      Params:         0       0       0       0       0
  4763 ;;      Locals:         1       0       0       0       0
  4764 ;;      Temps:          4       0       0       0       0
  4765 ;;      Totals:         5       0       0       0       0
  4766 ;;Total ram usage:        5 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_ISR
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _USARTHandleRxInt
  4777  06A8                     _USARTHandleRxInt:	
  4778                           
  4779                           ;usart_pic16.c: 102: if(RB1==1)
  4780                           
  4781                           ;incstack = 0
  4782                           ; Regs used in _USARTHandleRxInt: [wreg-fsr0h+status,2+status,0]
  4783  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  4784  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  4785  06AA  1C86               	btfss	6,1	;volatile
  4786  06AB  2EAE               	goto	i1l69
  4787                           
  4788                           ;usart_pic16.c: 103: RB1=0;
  4789  06AC  1086               	bcf	6,1	;volatile
  4790  06AD  2EAF               	goto	i1l2428
  4791  06AE                     i1l69:	
  4792                           
  4793                           ;usart_pic16.c: 104: else
  4794                           ;usart_pic16.c: 105: RB1=1;
  4795  06AE  1486               	bsf	6,1	;volatile
  4796  06AF                     i1l2428:	
  4797                           
  4798                           ;usart_pic16.c: 108: char data=RCREG;
  4799  06AF  081A               	movf	26,w	;volatile
  4800  06B0  00F0               	movwf	??_USARTHandleRxInt
  4801  06B1  0870               	movf	??_USARTHandleRxInt,w
  4802  06B2  00F4               	movwf	USARTHandleRxInt@data
  4803                           
  4804                           ;usart_pic16.c: 111: if(((UQEnd==64-1) && UQFront==0) || ((UQEnd+1)==UQFront))
  4805  06B3  087A               	movf	_UQEnd,w	;volatile
  4806  06B4  3A3F               	xorlw	63
  4807  06B5  1903               	btfsc	3,2
  4808  06B6  087B               	movf	_UQFront,w	;volatile
  4809  06B7  1903               	btfsc	3,2
  4810  06B8  2ED0               	goto	i1l2434
  4811  06B9  087B               	movf	_UQFront,w	;volatile
  4812  06BA  00F0               	movwf	??_USARTHandleRxInt
  4813  06BB  01F1               	clrf	??_USARTHandleRxInt+1
  4814  06BC  1BF0               	btfsc	??_USARTHandleRxInt,7
  4815  06BD  03F1               	decf	??_USARTHandleRxInt+1,f
  4816  06BE  3001               	movlw	1
  4817  06BF  077A               	addwf	_UQEnd,w	;volatile
  4818  06C0  00F2               	movwf	??_USARTHandleRxInt+2
  4819  06C1  01F3               	clrf	??_USARTHandleRxInt+3
  4820  06C2  1803               	skipnc
  4821  06C3  0AF3               	incf	??_USARTHandleRxInt+3,f
  4822  06C4  1BFA               	btfsc	_UQEnd,7	;volatile
  4823  06C5  03F3               	decf	??_USARTHandleRxInt+3,f
  4824  06C6  0871               	movf	??_USARTHandleRxInt+1,w
  4825  06C7  0673               	xorwf	??_USARTHandleRxInt+3,w
  4826  06C8  1D03               	skipz
  4827  06C9  2ECC               	goto	u169_25
  4828  06CA  0870               	movf	??_USARTHandleRxInt,w
  4829  06CB  0672               	xorwf	??_USARTHandleRxInt+2,w
  4830  06CC                     u169_25:	
  4831  06CC  1D03               	skipz
  4832  06CD  2ED8               	goto	i1l2440
  4833  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  4834  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  4835  06D0                     i1l2434:	
  4836                           
  4837                           ;usart_pic16.c: 112: {
  4838                           ;usart_pic16.c: 114: UQFront++;
  4839  06D0  3001               	movlw	1
  4840  06D1  00F0               	movwf	??_USARTHandleRxInt
  4841  06D2  0870               	movf	??_USARTHandleRxInt,w
  4842  06D3  07FB               	addwf	_UQFront,f	;volatile
  4843                           
  4844                           ;usart_pic16.c: 115: if(UQFront==64)
  4845  06D4  087B               	movf	_UQFront,w	;volatile
  4846  06D5  3A40               	xorlw	64
  4847  06D6  1903               	btfsc	3,2
  4848                           
  4849                           ;usart_pic16.c: 116: UQFront=0;
  4850  06D7  01FB               	clrf	_UQFront	;volatile
  4851  06D8                     i1l2440:	
  4852                           
  4853                           ;usart_pic16.c: 117: }
  4854                           ;usart_pic16.c: 119: if(UQEnd==64-1)
  4855  06D8  087A               	movf	_UQEnd,w	;volatile
  4856  06D9  3A3F               	xorlw	63
  4857  06DA  1D03               	skipz
  4858  06DB  2EDE               	goto	i1l2444
  4859                           
  4860                           ;usart_pic16.c: 120: UQEnd=0;
  4861  06DC  01FA               	clrf	_UQEnd	;volatile
  4862  06DD  2EE2               	goto	i1l2446
  4863  06DE                     i1l2444:	
  4864                           
  4865                           ;usart_pic16.c: 121: else
  4866                           ;usart_pic16.c: 122: UQEnd++;
  4867  06DE  3001               	movlw	1
  4868  06DF  00F0               	movwf	??_USARTHandleRxInt
  4869  06E0  0870               	movf	??_USARTHandleRxInt,w
  4870  06E1  07FA               	addwf	_UQEnd,f	;volatile
  4871  06E2                     i1l2446:	
  4872                           
  4873                           ;usart_pic16.c: 124: URBuff[UQEnd]=data;
  4874  06E2  0874               	movf	USARTHandleRxInt@data,w
  4875  06E3  00F0               	movwf	??_USARTHandleRxInt
  4876  06E4  087A               	movf	_UQEnd,w
  4877  06E5  3EA0               	addlw	_URBuff& (0+255)
  4878  06E6  0084               	movwf	4
  4879  06E7  0870               	movf	??_USARTHandleRxInt,w
  4880  06E8  1383               	bcf	3,7	;select IRP bank1
  4881  06E9  0080               	movwf	0
  4882                           
  4883                           ;usart_pic16.c: 126: if(UQFront==-1)
  4884  06EA  087B               	movf	_UQFront,w	;volatile
  4885  06EB  3AFF               	xorlw	-1
  4886  06EC  1D03               	skipz
  4887  06ED  0008               	return
  4888                           
  4889                           ;usart_pic16.c: 127: UQFront=0;
  4890  06EE  01FB               	clrf	_UQFront	;volatile
  4891  06EF  0008               	return
  4892  06F0                     __end_of_USARTHandleRxInt:	
  4893  007E                     btemp	set	126	;btemp
  4894  007E                     wtemp	set	126
  4895  007E                     wtemp0	set	126
  4896  0080                     wtemp1	set	128
  4897  0082                     wtemp2	set	130
  4898  0084                     wtemp3	set	132
  4899  0086                     wtemp4	set	134
  4900  0088                     wtemp5	set	136
  4901  007F                     wtemp6	set	127
  4902  007E                     ttemp	set	126
  4903  007E                     ttemp0	set	126
  4904  0081                     ttemp1	set	129
  4905  0084                     ttemp2	set	132
  4906  0087                     ttemp3	set	135
  4907  007F                     ttemp4	set	127
  4908  007E                     ltemp	set	126
  4909  007E                     ltemp0	set	126
  4910  0082                     ltemp1	set	130
  4911  0086                     ltemp2	set	134
  4912  0080                     ltemp3	set	128


Data Sizes:
    Strings     147
    Constant    10
    Data        21
    BSS         173
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     27      58
    BANK1            80      0      64
    BANK3            96      0      96
    BANK2            96      0       0

Pointer List with Targets:

    strrichr@ptr	PTR const unsigned char  size(1) Largest target is 96
		 -> sim300_buffer(BANK3[96]), 

    strrichr@cp	PTR const unsigned char  size(1) Largest target is 96
		 -> sim300_buffer(BANK3[96]), 

    strnicmp@s2	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_24(CODE[7]), STR_16(CODE[6]), STR_14(CODE[3]), STR_13(CODE[16]), 
		 -> STR_11(CODE[7]), STR_10(CODE[3]), 

    strnicmp@s1	PTR const unsigned char  size(1) Largest target is 96
		 -> sim300_buffer(BANK3[96]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> phone_number(BANK0[20]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[10]), 
		 -> SIM300SendMsg@cmd(BANK0[25]), SIM300ReadMsg@cmd(BANK0[16]), SIM300DeleteMsg@cmd(BANK0[16]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[11]), 
		 -> STR_3(CODE[9]), STR_1(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> phone_number(BANK0[20]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[10]), 
		 -> SIM300SendMsg@cmd(BANK0[25]), SIM300ReadMsg@cmd(BANK0[16]), SIM300DeleteMsg@cmd(BANK0[16]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[11]), 
		 -> STR_3(CODE[9]), STR_1(CODE[3]), 

    strichr@ptr	PTR const unsigned char  size(1) Largest target is 96
		 -> sim300_buffer(BANK3[96]), 

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_25(CODE[7]), 

    S446$_cp	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_25(CODE[7]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_25(CODE[7]), 

    sp__strichr	PTR unsigned char  size(1) Largest target is 96
		 -> NULL(NULL[0]), sim300_buffer(BANK3[96]), 

    SIM300WaitForValidCall@start	PTR unsigned char  size(1) Largest target is 96
		 -> NULL(NULL[0]), sim300_buffer(BANK3[96]), 

    sp__strrichr	PTR unsigned char  size(1) Largest target is 96
		 -> NULL(NULL[0]), sim300_buffer(BANK3[96]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 4
		 -> SIM300WaitForMsg@str_id(COMMON[4]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 96
		 -> NULL(NULL[0]), sim300_buffer(BANK3[96]), 

    SIM300CheckResponse@check	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    SIM300CheckResponse@response	PTR const unsigned char  size(1) Largest target is 96
		 -> sim300_buffer(BANK3[96]), 

    SIM300Cmd@cmd	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> phone_number(BANK0[20]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[10]), 
		 -> SIM300SendMsg@cmd(BANK0[25]), SIM300ReadMsg@cmd(BANK0[16]), SIM300DeleteMsg@cmd(BANK0[16]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[11]), 
		 -> STR_3(CODE[9]), STR_1(CODE[3]), 

    USARTReadBuffer@buff	PTR unsigned char  size(1) Largest target is 96
		 -> sim300_buffer(BANK3[96]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> phone_number(BANK0[20]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[10]), 
		 -> SIM300SendMsg@cmd(BANK0[25]), SIM300ReadMsg@cmd(BANK0[16]), SIM300DeleteMsg@cmd(BANK0[16]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[11]), 
		 -> STR_3(CODE[9]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK0

    _main->_SIM300Init
    _SIM300WaitForValidCall->_strnicmp
    _strrichr->_toupper
    _strnicmp->_toupper
    _strichr->_toupper
    _SIM300RingResponse->_USARTReadData
    _USARTFlushBuffer->_USARTReadData
    _SIM300Init->_SIM300Cmd
    _SIM300Cmd->_USARTReadBuffer
    _USARTWriteString->_USARTWriteChar
    _USARTReadBuffer->_USARTReadData

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    8979
                                             20 BANK0      7     7      0
                          _SIM300Cmd
                         _SIM300Init
             _SIM300WaitForValidCall
                   _USARTFlushBuffer
                            ___awmod
                        _eeprom_read
                       _eeprom_write
                        _phase_check
                              _start
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _start                                                3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _phase_check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1     150
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     508
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SIM300WaitForValidCall                               4     4      0    2027
                                              9 BANK0      4     4      0
                 _SIM300RingResponse
                   _USARTFlushBuffer
                            _strichr
                           _strnicmp
                           _strrichr
 ---------------------------------------------------------------------------------
 (2) _strrichr                                             6     4      2     327
                                              2 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _strnicmp                                             7     4      3     978
                                              2 BANK0      7     4      3
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _strichr                                              5     3      2     259
                                              2 BANK0      5     3      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SIM300RingResponse                                   6     4      2     279
                                              2 BANK0      6     4      2
                 _USARTDataAvailable
                   _USARTFlushBuffer
                      _USARTReadData
 ---------------------------------------------------------------------------------
 (1) _USARTFlushBuffer                                     0     0      0      23
                 _USARTDataAvailable
                      _USARTReadData
 ---------------------------------------------------------------------------------
 (1) _SIM300Init                                           4     4      0    3549
                                             16 BANK0      4     4      0
                _SIM300CheckResponse
                          _SIM300Cmd
                 _USARTDataAvailable
                          _USARTInit
                    _USARTReadBuffer
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _SIM300Cmd                                            7     5      2    2537
                                              9 BANK0      7     5      2
                 _USARTDataAvailable
                    _USARTReadBuffer
                     _USARTWriteChar
                   _USARTWriteString
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     355
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     278
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _USARTWriteString                                     2     0      2     226
                                              1 BANK0      2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (4) _USARTWriteChar                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USARTReadBuffer                                      7     5      2     513
                                              2 BANK0      7     5      2
                      _USARTReadData
 ---------------------------------------------------------------------------------
 (2) _USARTReadData                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USARTDataAvailable                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIM300CheckResponse                                  6     4      2     400
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0      23
                                              5 COMMON     4     4      0
                   _USARTHandleRxInt
 ---------------------------------------------------------------------------------
 (6) _USARTHandleRxInt                                     5     5      0      23
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SIM300Cmd
     _USARTDataAvailable
     _USARTReadBuffer
       _USARTReadData
     _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar
     ___wmul
     _strlen
   _SIM300Init
     _SIM300CheckResponse
     _SIM300Cmd
       _USARTDataAvailable
       _USARTReadBuffer
         _USARTReadData
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
       ___wmul
       _strlen
     _USARTDataAvailable
     _USARTInit
     _USARTReadBuffer
       _USARTReadData
   _SIM300WaitForValidCall
     _SIM300RingResponse
       _USARTDataAvailable
       _USARTFlushBuffer
         _USARTDataAvailable
         _USARTReadData
       _USARTReadData
     _USARTFlushBuffer
       _USARTDataAvailable
       _USARTReadData
     _strichr
       _toupper
     _strnicmp
       _toupper
     _strrichr
       _toupper
   _USARTFlushBuffer
     _USARTDataAvailable
     _USARTReadData
   ___awmod
   _eeprom_read
   _eeprom_write
   _phase_check
   _start
   _stop

 _ISR (ROOT)
   _USARTHandleRxInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E6      12        0.0%
ABS                  0      0      E6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Dec 07 16:46:40 2014

                              pc 0002                               l54 0ECF                               l47 0696  
                             _RD 0C60                               _WR 0C61                               fsr 0004  
            ___wmul@multiplicand 0022               USARTInit@baud_rate 0020                              l501 072B  
                            l415 0444                              l370 0057                              l377 00E7  
                            l591 07BB                              l479 0FE2             ??_USARTDataAvailable 0020  
                            _GIE 005F                              _RB1 0031                              _RC0 0038  
                            _RC1 0039                              _RA5 002D                              _RC2 003A  
                            _RC3 003B                              _RC4 003C                              _RC5 003D  
                            _RB7 0037                              _ISR 02E2                   ?_USARTReadData 0070  
                            fsr0 0004                              indf 0000                     ___awmod@sign 0026  
                    ?_SIM300Init 0070                             ?_ISR 0070                             l2212 0FBD  
                           l2204 07D4                             l2300 047E                             l3100 018C  
                           l2230 07B3                             l2222 078E                             l3102 0190  
                           l3030 0098                             l2320 05F0                             l2312 05DB  
                           l2224 079F                             l2330 05F4                             l2162 0FAE  
                           l2218 0EE7                             l2402 0710                             l3130 01F2  
                           l3122 01D2                             l3026 0092                             l3018 007F  
                           l2332 0612                             l2316 05EE                             l2308 05D9  
                           l2156 0F9A                             l2252 0668                             l2340 0533  
                           l2420 0784                             l2404 0726                             l3052 0100  
                           l3310 0691                             l2254 066A                             l2262 0673  
                           l2246 0F04                             l3142 0236                             l3126 01E4  
                           l3070 0141                             l2328 060D                             l2168 0FB6  
                           l3304 0682                             l2256 066C                             l2352 0551  
                           l2344 0545                             l2416 077F                             l3064 0133  
                           l2194 0F92                             l2186 0F85                             l2178 0F76  
                           l3306 0687                             l2258 066E                             l2338 0526  
                           l2418 0769                             l2610 044D                             l2522 0EE5  
                           l3154 026A                             l3090 015E                             l3082 0150  
                           l3308 068C                             l2380 0617                             l3148 0240  
                           l2470 051E                             l2366 0573                             l2382 065D  
                           l2374 064E                             l2390 06F7                             l2296 04B6  
                           l2464 0503                             l2392 0702                             l3088 015A  
                           l2378 0654                             l2554 03C2                             l2468 04DE  
                           l2644 0584                             l2574 0406                             l2670 05C0  
                           l2662 05AD                             l2576 0421                             l2656 0591  
                           l2648 058B                             l2594 0438                             l2658 059F  
                           l2666 05B8                             STR_1 03AA                             STR_2 03A7  
                           STR_3 0361                             STR_4 0336                             STR_5 036A  
                           STR_6 0396                             STR_7 0388                             STR_8 038F  
                           STR_9 0341                             u1405 07C3                             u1355 0FC3  
                           u1455 0498                             u1535 0543                             u1545 054D  
                           u1801 0FE0                             u1395 07BC                             u1595 0623  
                           u2707 0168                             u2717 0182                             u2637 005E  
                           u2807 02B7                             u2727 01C7                             u2647 006E  
                           u2817 02D1                             u2737 01D8                             u2657 00AC  
                           u1955 0594                             u2827 0F57                             u2747 020A  
                           u2667 00CA                             _PEIE 005E                             u2837 0F68  
                           u2757 0224                             u2677 00DF                             u1975 05A5  
                           u2847 0F35                             u2767 0248                             u2687 00EE  
                           i1l16 02EF                             u1985 05AE                             u2857 0F46  
                           u2777 0262                             u2697 00FA                             u2867 052E  
                           u2787 028E                             _RCIE 0465                             _RCIF 0065  
                           u2877 04FD                             u2797 029D                             u2887 04B0  
                           i1l69 06AE                             _WREN 0C62                   ??_eeprom_write 0021  
         __end_of_USARTWriteChar 0ED4                             _main 0042                             btemp 007E  
                           _stop 0F4E                USARTReadData@data 0021                             ltemp 007E  
                           start 0012                             ttemp 007E                             wtemp 007E  
             __size_of_SIM300Cmd 0072              SIM300RingResponse@i 0027              SIM300RingResponse@n 0025  
                          ??_ISR 0075                ?_USARTHandleRxInt 0070                            ?_main 0070  
             ??_USARTHandleRxInt 0070                            _EEADR 010D                            STR_11 0381  
                          STR_20 03A3                            STR_12 034C                            STR_21 03A3  
                          STR_13 031A                            STR_22 03A3                            STR_23 03A3  
                          STR_15 032A                            STR_16 039D                            STR_24 037A  
                          STR_25 0373                            STR_17 0357                            STR_18 03A3  
                          STR_19 03A3                  __end_of___awmod 05C7                            _CARRY 0018  
               USARTWriteChar@ch 0020                            ?_stop 0070                            _RCREG 001A  
                          _SPBRG 0099                            _TRISA 0085                            _TRISB 0086  
                          _TRISC 0087                            _TXREG 0019                            _UQEnd 007A  
               ?_USARTReadBuffer 0022                     _WRONG_NUMBER 0059                  __end_of_dpowers 031A  
                          _start 0F2C                            main@r 0037                            pclath 000A  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080               __size_of_USARTInit 0048                  ?_USARTWriteChar 0070  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                  __end_of_strichr 0786                     ?_phase_check 0070  
                __end_of_toupper 0F06                  __initialization 0015              __size_of_SIM300Init 005C  
                   __end_of_main 02E2                     __end_of_stop 0F70                  ??_USARTReadData 0020  
                         ??_main 0034                           ??_stop 0020                      SIM300Init@i 0032  
              __end_of_SIM300Cmd 04C4                           _ADCON1 009F               USARTReadBuffer@len 0022  
                         _EEDATA 010C                           _EECON1 018C                           _EECON2 018D  
                         ?_start 0070                           i1l2440 06D8                           i1l2434 06D0  
                         i1l2444 06DE                           i1l2428 06AF                           i1l2446 06E2  
                         u169_25 06CC                ?_USARTFlushBuffer 0070                           _URBuff 00A0  
             ??_USARTFlushBuffer 0022               _SIM300RingResponse 0520             __size_of_eeprom_read 0024  
                         ___wmul 07AF                        ??___awmod 0024              _SIM300CheckResponse 05C7  
            ?_SIM300RingResponse 0022         __end_of_USARTWriteString 07F9                  ___awmod@divisor 0020  
           __end_of_eeprom_write 0758                  ___awmod@counter 0025                __end_of_USARTInit 06A8  
                         _strlen 0786                           saved_w 007E             ?_SIM300CheckResponse 0020  
                      ??_strichr 0024                        ??_toupper 0020             ??_SIM300RingResponse 0024  
               __end_of_strnicmp 0660                 __end_of_strrichr 0728         ??_SIM300WaitForValidCall 0029  
        __end_of__initialization 003E                  eeprom_read@addr 0021                   __pcstackCOMMON 0070  
                   __pidataBANK0 0F17                    __end_of_start 0F4E                     ??_SIM300Init 0030  
              eeprom_write@value 0020            ??_SIM300CheckResponse 0022                     SIM300Cmd@cmd 0029  
                   SIM300Cmd@len 002F                          ??_start 0020                       __pbssBANK0 0050  
                     __pbssBANK1 00A0                       __pbssBANK3 0190      SIM300WaitForValidCall@start 002B  
           __size_of_phase_check 000B                       __pmaintext 0042                          ?___wmul 0020  
             __end_of_SIM300Init 0520                       __pintentry 0004              USARTReadBuffer@buff 0028  
                        ?_strlen 0020      __size_of_USARTDataAvailable 0024                          _LP_FLAG 0055  
               ??_USARTWriteChar 0020               USARTWriteInt@F1040 0050      SIM300CheckResponse@response 0025  
      __size_of_USARTHandleRxInt 0048                       __stringtab 0300                          _UQFront 007B  
__size_of_SIM300WaitForValidCall 00A5                        _CALL_FLAG 0079            __size_of_eeprom_write 0030  
           SIM300CheckResponse@i 0024                          ___awmod 0578                  __size_of___wmul 0025  
                      ?_strnicmp 0022                          __ptext1 0F4E                          __ptext2 0F2C  
                        __ptext3 0EDC                          __ptext4 0728                          __ptext5 0FDC  
                        __ptext6 0578                          __ptext7 03AD                          __ptext8 06F0  
                        __ptext9 0614                        ?_strrichr 0022                  __size_of_strlen 0029  
                   __size_of_ISR 001A                          _dpowers 0310                 ___awmod@dividend 0022  
                        clrloop0 0ED5                          _strichr 0758                          _toupper 0EF5  
           end_of_initialization 003E                        _SIM300Cmd 0452         __size_of_USARTReadBuffer 0024  
                   _eeprom_write 0728                        _RCSTAbits 0018                          strlen@s 0020  
      __size_of_USARTFlushBuffer 000E                ?_USARTWriteString 0021           _SIM300WaitForValidCall 03AD  
                     ??_strnicmp 0025                       ??_strrichr 0024            __end_of_USARTReadData 0FB8  
             ??_USARTWriteString 0023         SIM300CheckResponse@check 0020          SIM300WaitForValidCall@i 002C  
                      _USARTInit 0660                       ?_SIM300Cmd 0029                    ??_eeprom_read 0020  
                      _TXSTAbits 0098                 USARTReadBuffer@i 0026                   __end_of___wmul 07D4  
                 __end_of_strlen 07AF              start_initialization 0015                       ?_USARTInit 0020  
                    __end_of_ISR 02FC                 _USARTHandleRxInt 06A8                       SIM300Cmd@i 002D  
    __size_of_SIM300RingResponse 0058        SIM300WaitForValidCall@len 002A                ??_USARTReadBuffer 0024  
                       ??___wmul 0024              __end_of_eeprom_read 1000                       init_fetch0 0F06  
                    __pdataBANK0 003B                         ??_strlen 0022      __end_of_SIM300CheckResponse 0614  
         SIM300CheckResponse@len 0021                      __pbssCOMMON 0079                        ___latbits 0002  
                  __pcstackBANK0 0020              __end_of__stringdata 03AD                 eeprom_write@addr 0022  
                    ??_SIM300Cmd 002B                    ??_phase_check 0020                         ?___awmod 0020  
               _USARTFlushBuffer 0EE7       __end_of_USARTDataAvailable 0F94                        __pstrings 0300  
              __size_of_strnicmp 004C                __size_of_strrichr 0038                      ??_USARTInit 0022  
                       ?_strichr 0022                         ?_toupper 0070                   __size_of_start 0022  
              interrupt_function 0004                   ___wmul@product 0024                      strnicmp@len 0023  
                      clear_ram0 0ED4                      _eeprom_read 0FDC                         _PIR1bits 000C  
                    strrichr@chr 0022              __end_of_phase_check 0EE7          ?_SIM300WaitForValidCall 0070  
                    strrichr@ptr 0027                      __stringbase 030F                      __stringdata 031A  
              ___wmul@multiplier 0020                        main@count 0039                        main@timer 003A  
      __size_of_USARTWriteString 0025              _REQUIRED_RING_COUNT 003B          __size_of_USARTWriteChar 0008  
 __end_of_SIM300WaitForValidCall 0452         __end_of_USARTHandleRxInt 06F0                 __size_of___awmod 004F  
             __end_of__stringtab 0310                     _phone_number 003C                         __ptext10 0758  
                       __ptext11 0EF5                         __ptext20 0ECC                         __ptext12 0520  
                       __ptext21 0FB8                         __ptext13 0EE7                         __ptext22 0F94  
                       __ptext14 04C4                         __ptext23 0F70                         __ptext15 0660  
                       __ptext24 05C7                         __ptext16 0452                         __ptext25 02E2  
                       __ptext17 0786                         __ptext26 06A8                         __ptext18 07AF  
                       __ptext19 07D4                       strichr@chr 0022                  _USARTReadBuffer 0FB8  
                     strichr@ptr 0026                 __size_of_strichr 002E                 __size_of_toupper 0011  
                  __size_of_main 02A0                    __size_of_stop 0022                      _phase_check 0EDC  
                     strnicmp@s1 0028                       strnicmp@s2 0022           __size_of_USARTReadData 0024  
                main@ten_seconds 0038                       strrichr@cp 0026                         _strnicmp 0614  
                       _strrichr 06F0                       _SIM300Init 04C4                         init_ram0 0F0A  
     __end_of_SIM300RingResponse 0578                         intlevel1 0000         __end_of_USARTFlushBuffer 0EF5  
                      stringcode 030A                        strnicmp@r 0027                       _RING_COUNT 0057  
            USARTWriteString@str 0021                       _MOTOR_FLAG 0056                       _RING_TIMER 0058  
                  _USARTReadData 0F94                         strlen@cp 0024          __end_of_USARTReadBuffer 0FDC  
           USARTHandleRxInt@data 0074                         stringdir 030A                         toupper@c 0021  
                       stringtab 0300        SIM300RingResponse@timeout 0022               _USARTDataAvailable 0F70  
   __size_of_SIM300CheckResponse 004D                 _USARTWriteString 07D4                    ?_eeprom_write 0020  
                   ?_eeprom_read 0070              ?_USARTDataAvailable 0070                   _USARTWriteChar 0ECC  
                  _sim300_buffer 0190  
