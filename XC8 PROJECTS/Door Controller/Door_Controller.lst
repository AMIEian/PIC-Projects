

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Jun 17 12:51:16 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  001D                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  0081                     	;# 
    65  0085                     	;# 
    66  0086                     	;# 
    67  0087                     	;# 
    68  008C                     	;# 
    69  008D                     	;# 
    70  008E                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  010F                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87                           
    88                           	psect	idataBANK0
    89  07F7                     __pidataBANK0:	
    90                           
    91                           ;initializer for _door_State
    92  07F7  3404               	retlw	4
    93  001F                     _ADCON0	set	31
    94  001F                     _ADCON0bits	set	31
    95  001E                     _ADRESH	set	30
    96  000B                     _INTCON	set	11
    97  00F8                     _ADON	set	248
    98  0018                     _CARRY	set	24
    99  005F                     _GIE	set	95
   100  00FA                     _GO	set	250
   101  0029                     _RA1	set	41
   102  002A                     _RA2	set	42
   103  002B                     _RA3	set	43
   104  0031                     _RB1	set	49
   105  0032                     _RB2	set	50
   106  0033                     _RB3	set	51
   107  0034                     _RB4	set	52
   108  0038                     _RC0	set	56
   109  0039                     _RC1	set	57
   110  003A                     _RC2	set	58
   111  003C                     _RC4	set	60
   112  003D                     _RC5	set	61
   113  003E                     _RC6	set	62
   114  009F                     _ADCON1	set	159
   115  009E                     _ADRESL	set	158
   116  0081                     _OPTION_REG	set	129
   117  0085                     _TRISA	set	133
   118  0086                     _TRISB	set	134
   119  0087                     _TRISC	set	135
   120  010D                     _EEADR	set	269
   121  010C                     _EEDATA	set	268
   122  018C                     _EECON1	set	396
   123  018D                     _EECON2	set	397
   124  0C60                     _RD	set	3168
   125  0C61                     _WR	set	3169
   126  0C62                     _WREN	set	3170
   127                           
   128                           	psect	cinit
   129  0015                     start_initialization:	
   130                           ; #config settings
   131                           
   132  0015                     __initialization:	
   133                           
   134                           ; Clear objects allocated to COMMON
   135  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   136  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   137  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   138                           
   139                           ; Initialize objects allocated to BANK0
   140  0018  120A  118A  27F7   	fcall	__pidataBANK0	;fetch initializer
   141  001B  00E9               	movwf	__pdataBANK0& (0+127)
   142  001C                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145  001C                     __end_of__initialization:	
   146  001C  0183               	clrf	3
   147  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMMON
   150  0076                     __pbssCOMMON:	
   151  0076                     _normal_current:	
   152  0076                     	ds	3
   153                           
   154                           	psect	dataBANK0
   155  0069                     __pdataBANK0:	
   156  0069                     _door_State:	
   157  0069                     	ds	1
   158                           
   159                           	psect	cstackBANK1
   160  00A0                     __pcstackBANK1:	
   161  00A0                     main@Auto_Close:	
   162                           
   163                           ; 1 bytes @ 0x0
   164  00A0                     	ds	1
   165  00A1                     main@integer:	
   166                           
   167                           ; 1 bytes @ 0x1
   168  00A1                     	ds	1
   169  00A2                     main@fraction:	
   170                           
   171                           ; 1 bytes @ 0x2
   172  00A2                     	ds	1
   173  00A3                     main@seconds:	
   174                           
   175                           ; 2 bytes @ 0x3
   176  00A3                     	ds	2
   177  00A5                     main@count:	
   178                           
   179                           ; 1 bytes @ 0x5
   180  00A5                     	ds	1
   181  00A6                     main@Over_Current_Timer:	
   182                           
   183                           ; 2 bytes @ 0x6
   184  00A6                     	ds	2
   185                           
   186                           	psect	cstackCOMMON
   187  0070                     __pcstackCOMMON:	
   188  0070                     ?_over_current_config:	
   189  0070                     ?_main:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0070                     ?_Tx_Received:	
   193                           ; 0 bytes @ 0x0
   194                           
   195  0070                     ??_Tx_Received:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_eeprom_read:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_check_over_current:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206  0070                     	ds	5
   207  0075                     ??_eeprom_read:	
   208  0075                     ??_ReadADC:	
   209                           ; 0 bytes @ 0x5
   210                           
   211  0075                     ?_eeprom_write:	
   212                           ; 0 bytes @ 0x5
   213                           
   214  0075                     ??___ftneg:	
   215                           ; 0 bytes @ 0x5
   216                           
   217  0075                     ??___lwdiv:	
   218                           ; 0 bytes @ 0x5
   219                           
   220  0075                     eeprom_write@value:	
   221                           ; 0 bytes @ 0x5
   222                           
   223  0075                     ___attoft@sign:	
   224                           ; 1 bytes @ 0x5
   225                           
   226  0075                     ___lbtoft@c:	
   227                           ; 1 bytes @ 0x5
   228                           
   229                           
   230                           ; 1 bytes @ 0x5
   231  0075                     	ds	1
   232  0076                     ??_modf:	
   233                           
   234                           	psect	cstackBANK0
   235  0020                     __pcstackBANK0:	
   236                           ; 0 bytes @ 0x6
   237                           
   238  0020                     ??_eeprom_write:	
   239  0020                     ?___ftge:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0020                     ?_ReadADC:	
   243                           ; 1 bit 
   244                           
   245  0020                     ?___lwdiv:	
   246                           ; 2 bytes @ 0x0
   247                           
   248  0020                     ?___ftpack:	
   249                           ; 2 bytes @ 0x0
   250                           
   251  0020                     ?___ftneg:	
   252                           ; 3 bytes @ 0x0
   253                           
   254  0020                     ?___fttol:	
   255                           ; 3 bytes @ 0x0
   256                           
   257  0020                     eeprom_read@addr:	
   258                           ; 4 bytes @ 0x0
   259                           
   260  0020                     ___lwdiv@divisor:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0020                     ___ftpack@arg:	
   264                           ; 2 bytes @ 0x0
   265                           
   266  0020                     ___ftge@ff1:	
   267                           ; 3 bytes @ 0x0
   268                           
   269  0020                     ___ftneg@f1:	
   270                           ; 3 bytes @ 0x0
   271                           
   272  0020                     ___fttol@f1:	
   273                           ; 3 bytes @ 0x0
   274                           
   275                           
   276                           ; 3 bytes @ 0x0
   277  0020                     	ds	1
   278  0021                     eeprom_write@addr:	
   279                           
   280                           ; 1 bytes @ 0x1
   281  0021                     	ds	1
   282  0022                     ReadADC@result:	
   283  0022                     ___lwdiv@dividend:	
   284                           ; 2 bytes @ 0x2
   285                           
   286                           
   287                           ; 2 bytes @ 0x2
   288  0022                     	ds	1
   289  0023                     ___ftpack@exp:	
   290  0023                     ___ftge@ff2:	
   291                           ; 1 bytes @ 0x3
   292                           
   293                           
   294                           ; 3 bytes @ 0x3
   295  0023                     	ds	1
   296  0024                     ??___fttol:	
   297  0024                     ___ftpack@sign:	
   298                           ; 0 bytes @ 0x4
   299                           
   300  0024                     ___lwdiv@counter:	
   301                           ; 1 bytes @ 0x4
   302                           
   303                           
   304                           ; 1 bytes @ 0x4
   305  0024                     	ds	1
   306  0025                     ??___ftpack:	
   307  0025                     ___lwdiv@quotient:	
   308                           ; 0 bytes @ 0x5
   309                           
   310                           
   311                           ; 2 bytes @ 0x5
   312  0025                     	ds	1
   313  0026                     ??___ftge:	
   314                           
   315                           ; 0 bytes @ 0x6
   316  0026                     	ds	2
   317  0028                     ?___lbtoft:	
   318  0028                     ?___lwtoft:	
   319                           ; 3 bytes @ 0x8
   320                           
   321  0028                     ___fttol@sign1:	
   322                           ; 3 bytes @ 0x8
   323                           
   324  0028                     ___lwtoft@c:	
   325                           ; 1 bytes @ 0x8
   326                           
   327                           
   328                           ; 2 bytes @ 0x8
   329  0028                     	ds	1
   330  0029                     ___fttol@lval:	
   331                           
   332                           ; 4 bytes @ 0x9
   333  0029                     	ds	2
   334  002B                     ??___lbtoft:	
   335  002B                     ??___lwtoft:	
   336                           ; 0 bytes @ 0xB
   337                           
   338                           
   339                           ; 0 bytes @ 0xB
   340  002B                     	ds	1
   341  002C                     ??_check_over_current:	
   342                           
   343                           ; 0 bytes @ 0xC
   344  002C                     	ds	1
   345  002D                     ___fttol@exp1:	
   346                           
   347                           ; 1 bytes @ 0xD
   348  002D                     	ds	1
   349  002E                     ?___attoft:	
   350  002E                     check_over_current@avg_reading:	
   351                           ; 3 bytes @ 0xE
   352                           
   353  002E                     ___attoft@c:	
   354                           ; 3 bytes @ 0xE
   355                           
   356                           
   357                           ; 3 bytes @ 0xE
   358  002E                     	ds	1
   359  002F                     ?___ftmul:	
   360  002F                     ___ftmul@f1:	
   361                           ; 3 bytes @ 0xF
   362                           
   363                           
   364                           ; 3 bytes @ 0xF
   365  002F                     	ds	2
   366  0031                     ??___attoft:	
   367  0031                     check_over_current@res:	
   368                           ; 0 bytes @ 0x11
   369                           
   370                           
   371                           ; 2 bytes @ 0x11
   372  0031                     	ds	1
   373  0032                     ___ftmul@f2:	
   374                           
   375                           ; 3 bytes @ 0x12
   376  0032                     	ds	1
   377  0033                     check_over_current@sum:	
   378                           
   379                           ; 2 bytes @ 0x13
   380  0033                     	ds	2
   381  0035                     ??___ftmul:	
   382  0035                     check_over_current@readings:	
   383                           ; 0 bytes @ 0x15
   384                           
   385                           
   386                           ; 1 bytes @ 0x15
   387  0035                     	ds	4
   388  0039                     ___ftmul@exp:	
   389                           
   390                           ; 1 bytes @ 0x19
   391  0039                     	ds	1
   392  003A                     ___ftmul@f3_as_product:	
   393                           
   394                           ; 3 bytes @ 0x1A
   395  003A                     	ds	3
   396  003D                     ___ftmul@cntr:	
   397                           
   398                           ; 1 bytes @ 0x1D
   399  003D                     	ds	1
   400  003E                     ___ftmul@sign:	
   401                           
   402                           ; 1 bytes @ 0x1E
   403  003E                     	ds	1
   404  003F                     ?___ftadd:	
   405  003F                     ___ftadd@f1:	
   406                           ; 3 bytes @ 0x1F
   407                           
   408                           
   409                           ; 3 bytes @ 0x1F
   410  003F                     	ds	3
   411  0042                     ___ftadd@f2:	
   412                           
   413                           ; 3 bytes @ 0x22
   414  0042                     	ds	3
   415  0045                     ??___ftadd:	
   416                           
   417                           ; 0 bytes @ 0x25
   418  0045                     	ds	4
   419  0049                     ___ftadd@sign:	
   420                           
   421                           ; 1 bytes @ 0x29
   422  0049                     	ds	1
   423  004A                     ___ftadd@exp2:	
   424                           
   425                           ; 1 bytes @ 0x2A
   426  004A                     	ds	1
   427  004B                     ___ftadd@exp1:	
   428                           
   429                           ; 1 bytes @ 0x2B
   430  004B                     	ds	1
   431  004C                     ?_modf:	
   432  004C                     modf@value:	
   433                           ; 3 bytes @ 0x2C
   434                           
   435                           
   436                           ; 3 bytes @ 0x2C
   437  004C                     	ds	3
   438  004F                     modf@iptr:	
   439                           
   440                           ; 1 bytes @ 0x2F
   441  004F                     	ds	1
   442  0050                     ??_over_current_config:	
   443                           
   444                           ; 0 bytes @ 0x30
   445  0050                     	ds	3
   446  0053                     over_current_config@over_current_reading:	
   447                           
   448                           ; 3 bytes @ 0x33
   449  0053                     	ds	3
   450  0056                     over_current_config@decimals:	
   451                           
   452                           ; 1 bytes @ 0x36
   453  0056                     	ds	1
   454  0057                     over_current_config@points:	
   455                           
   456                           ; 1 bytes @ 0x37
   457  0057                     	ds	1
   458  0058                     over_current_config@res:	
   459                           
   460                           ; 2 bytes @ 0x38
   461  0058                     	ds	2
   462  005A                     over_current_config@readings:	
   463                           
   464                           ; 1 bytes @ 0x3A
   465  005A                     	ds	1
   466  005B                     over_current_config@avg_reading:	
   467                           
   468                           ; 3 bytes @ 0x3B
   469  005B                     	ds	3
   470  005E                     over_current_config@fractional:	
   471                           
   472                           ; 3 bytes @ 0x3E
   473  005E                     	ds	3
   474  0061                     over_current_config@integral:	
   475                           
   476                           ; 3 bytes @ 0x41
   477  0061                     	ds	3
   478  0064                     over_current_config@sum:	
   479                           
   480                           ; 2 bytes @ 0x44
   481  0064                     	ds	2
   482  0066                     ??_main:	
   483                           
   484                           ; 0 bytes @ 0x46
   485  0066                     	ds	3
   486                           
   487                           	psect	maintext
   488  0020                     __pmaintext:	
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 49 in file "E:\Study Material\XC8 PROJECTS\Door Controller\door1ph.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  Over_Current    2    6[BANK1 ] int 
   499 ;;  seconds         2    3[BANK1 ] int 
   500 ;;  count           1    5[BANK1 ] unsigned char 
   501 ;;  fraction        1    2[BANK1 ] unsigned char 
   502 ;;  integer         1    1[BANK1 ] unsigned char 
   503 ;;  Auto_Close      1    0[BANK1 ] unsigned char 
   504 ;; Return value:  Size  Location     Type
   505 ;;		None               void
   506 ;; Registers used:
   507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 17F/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       0       8       0       0
   515 ;;      Temps:          0       3       0       0       0
   516 ;;      Totals:         0       3       8       0       0
   517 ;;Total ram usage:       11 bytes
   518 ;; Hardware stack levels required when called:    5
   519 ;; This function calls:
   520 ;;		___ftadd
   521 ;;		___ftmul
   522 ;;		___lbtoft
   523 ;;		_check_over_current
   524 ;;		_eeprom_read
   525 ;;		_over_current_config
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _main
   533  0020                     _main:	
   534                           
   535                           ;door1ph.c: 51: ADCON0 = 0x80;
   536                           
   537                           ;incstack = 0
   538                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   539  0020  3080               	movlw	128
   540  0021  1283               	bcf	3,5	;RP0=0, select bank0
   541  0022  1303               	bcf	3,6	;RP1=0, select bank0
   542  0023  009F               	movwf	31	;volatile
   543                           
   544                           ;door1ph.c: 52: ADCON1 = 0x8E;
   545  0024  308E               	movlw	142
   546  0025  1683               	bsf	3,5	;RP0=1, select bank1
   547  0026  1303               	bcf	3,6	;RP1=0, select bank1
   548  0027  009F               	movwf	31	;volatile
   549                           
   550                           ;door1ph.c: 54: TRISA = 0xFF;
   551  0028  30FF               	movlw	255
   552  0029  0085               	movwf	5	;volatile
   553                           
   554                           ;door1ph.c: 55: TRISB = 0xE1;
   555  002A  30E1               	movlw	225
   556  002B  0086               	movwf	6	;volatile
   557                           
   558                           ;door1ph.c: 56: TRISC = 0x2F;
   559  002C  302F               	movlw	47
   560  002D  0087               	movwf	7	;volatile
   561                           
   562                           ;door1ph.c: 59: int seconds;
   563                           ;door1ph.c: 60: int Over_Current_Timer = 0;
   564  002E  01A6               	clrf	main@Over_Current_Timer^(0+128)
   565  002F  01A7               	clrf	(main@Over_Current_Timer+1)^(0+128)
   566                           
   567                           ;door1ph.c: 61: char Auto_Close = 1;
   568  0030  01A0               	clrf	main@Auto_Close^(0+128)
   569  0031  0AA0               	incf	main@Auto_Close^(0+128),f
   570                           
   571                           ;door1ph.c: 62: char count = 0;
   572  0032  01A5               	clrf	main@count^(0+128)
   573                           
   574                           ;door1ph.c: 63: unsigned char integer = 0, fraction = 0;
   575  0033  01A1               	clrf	main@integer^(0+128)
   576  0034  01A2               	clrf	main@fraction^(0+128)
   577                           
   578                           ;door1ph.c: 64: RB3 = 0;
   579  0035  1283               	bcf	3,5	;RP0=0, select bank0
   580  0036  1303               	bcf	3,6	;RP1=0, select bank0
   581  0037  1186               	bcf	6,3	;volatile
   582                           
   583                           ;door1ph.c: 65: RB1 = 0;
   584  0038  1086               	bcf	6,1	;volatile
   585                           
   586                           ;door1ph.c: 66: RB4 = 0;
   587  0039  1206               	bcf	6,4	;volatile
   588                           
   589                           ;door1ph.c: 67: RB2 = 0;
   590  003A  1106               	bcf	6,2	;volatile
   591                           
   592                           ;door1ph.c: 68: RC6 = 0;
   593  003B  1307               	bcf	7,6	;volatile
   594                           
   595                           ;door1ph.c: 70: for(count = 0; count < 5; count++)
   596  003C  1683               	bsf	3,5	;RP0=1, select bank1
   597  003D  1303               	bcf	3,6	;RP1=0, select bank1
   598  003E  01A5               	clrf	main@count^(0+128)
   599  003F  3005               	movlw	5
   600  0040  0225               	subwf	main@count^(0+128),w
   601  0041  1803               	btfsc	3,0
   602  0042  286F               	goto	l72
   603  0043                     l71:	
   604                           
   605                           ;door1ph.c: 71: {
   606                           ;door1ph.c: 72: RC4 = 1;
   607  0043  1283               	bcf	3,5	;RP0=0, select bank0
   608  0044  1303               	bcf	3,6	;RP1=0, select bank0
   609  0045  1607               	bsf	7,4	;volatile
   610                           
   611                           ;door1ph.c: 73: _delay(1000000);
   612  0046  3006               	movlw	6
   613  0047  00E8               	movwf	??_main+2
   614  0048  3013               	movlw	19
   615  0049  00E7               	movwf	??_main+1
   616  004A  30B1               	movlw	177
   617  004B  00E6               	movwf	??_main
   618  004C                     u3637:	
   619  004C  0BE6               	decfsz	??_main,f
   620  004D  284C               	goto	u3637
   621  004E  0BE7               	decfsz	??_main+1,f
   622  004F  284C               	goto	u3637
   623  0050  0BE8               	decfsz	??_main+2,f
   624  0051  284C               	goto	u3637
   625  0052  2853               	nop2
   626                           
   627                           ;door1ph.c: 74: RC4 = 0;
   628  0053  1283               	bcf	3,5	;RP0=0, select bank0
   629  0054  1303               	bcf	3,6	;RP1=0, select bank0
   630  0055  1207               	bcf	7,4	;volatile
   631                           
   632                           ;door1ph.c: 75: _delay(1000000);
   633  0056  3006               	movlw	6
   634  0057  00E8               	movwf	??_main+2
   635  0058  3013               	movlw	19
   636  0059  00E7               	movwf	??_main+1
   637  005A  30B1               	movlw	177
   638  005B  00E6               	movwf	??_main
   639  005C                     u3647:	
   640  005C  0BE6               	decfsz	??_main,f
   641  005D  285C               	goto	u3647
   642  005E  0BE7               	decfsz	??_main+1,f
   643  005F  285C               	goto	u3647
   644  0060  0BE8               	decfsz	??_main+2,f
   645  0061  285C               	goto	u3647
   646  0062  2863               	nop2
   647  0063  3001               	movlw	1
   648  0064  1283               	bcf	3,5	;RP0=0, select bank0
   649  0065  1303               	bcf	3,6	;RP1=0, select bank0
   650  0066  00E6               	movwf	??_main
   651  0067  0866               	movf	??_main,w
   652  0068  1683               	bsf	3,5	;RP0=1, select bank1
   653  0069  1303               	bcf	3,6	;RP1=0, select bank1
   654  006A  07A5               	addwf	main@count^(0+128),f
   655  006B  3005               	movlw	5
   656  006C  0225               	subwf	main@count^(0+128),w
   657  006D  1C03               	skipc
   658  006E  2843               	goto	l71
   659  006F                     l72:	
   660                           
   661                           ;door1ph.c: 76: }
   662                           ;door1ph.c: 80: if(RC1 == 1)
   663  006F  1283               	bcf	3,5	;RP0=0, select bank0
   664  0070  1303               	bcf	3,6	;RP1=0, select bank0
   665  0071  1C87               	btfss	7,1	;volatile
   666  0072  287C               	goto	l2317
   667                           
   668                           ;door1ph.c: 81: {
   669                           ;door1ph.c: 82: door_State = Closed;
   670  0073  01E9               	clrf	_door_State
   671  0074  0AE9               	incf	_door_State,f
   672                           
   673                           ;door1ph.c: 83: if(RC5 == 1)
   674  0075  1E87               	btfss	7,5	;volatile
   675  0076  287C               	goto	l2317
   676                           
   677                           ;door1ph.c: 84: over_current_config();
   678  0077  120A  118A  226A  120A  118A  	fcall	_over_current_config
   679  007C                     l2317:	
   680                           
   681                           ;door1ph.c: 85: }
   682                           ;door1ph.c: 86: if(RC0 == 1)
   683  007C  1283               	bcf	3,5	;RP0=0, select bank0
   684  007D  1303               	bcf	3,6	;RP1=0, select bank0
   685  007E  1807               	btfsc	7,0	;volatile
   686                           
   687                           ;door1ph.c: 87: {
   688                           ;door1ph.c: 88: door_State = Opened;
   689  007F  01E9               	clrf	_door_State
   690                           
   691                           ;door1ph.c: 89: }
   692                           ;door1ph.c: 90: if(RC0 == 0 && RC1 == 0)
   693  0080  1C07               	btfss	7,0	;volatile
   694  0081  1887               	btfsc	7,1	;volatile
   695  0082  2887               	goto	l2327
   696                           
   697                           ;door1ph.c: 91: {
   698                           ;door1ph.c: 92: door_State = Opening;
   699  0083  3002               	movlw	2
   700  0084  00E6               	movwf	??_main
   701  0085  0866               	movf	??_main,w
   702  0086  00E9               	movwf	_door_State
   703  0087                     l2327:	
   704                           
   705                           ;door1ph.c: 93: }
   706                           ;door1ph.c: 96: integer = eeprom_read(0x00);
   707  0087  3000               	movlw	0
   708  0088  120A  158A  275B  120A  118A  	fcall	_eeprom_read
   709  008D  1283               	bcf	3,5	;RP0=0, select bank0
   710  008E  1303               	bcf	3,6	;RP1=0, select bank0
   711  008F  00E6               	movwf	??_main
   712  0090  0866               	movf	??_main,w
   713  0091  1683               	bsf	3,5	;RP0=1, select bank1
   714  0092  1303               	bcf	3,6	;RP1=0, select bank1
   715  0093  00A1               	movwf	main@integer^(0+128)
   716                           
   717                           ;door1ph.c: 97: _delay(50);
   718  0094  3010               	movlw	16
   719  0095  1283               	bcf	3,5	;RP0=0, select bank0
   720  0096  1303               	bcf	3,6	;RP1=0, select bank0
   721  0097  00E6               	movwf	??_main
   722  0098                     u3657:	
   723  0098  0BE6               	decfsz	??_main,f
   724  0099  2898               	goto	u3657
   725  009A  0000               	nop
   726                           
   727                           ;door1ph.c: 98: fraction = eeprom_read(0x01);
   728  009B  3001               	movlw	1
   729  009C  120A  158A  275B  120A  118A  	fcall	_eeprom_read
   730  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   731  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   732  00A3  00E6               	movwf	??_main
   733  00A4  0866               	movf	??_main,w
   734  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   735  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   736  00A7  00A2               	movwf	main@fraction^(0+128)
   737                           
   738                           ;door1ph.c: 99: _delay(50);
   739  00A8  3010               	movlw	16
   740  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   741  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   742  00AB  00E6               	movwf	??_main
   743  00AC                     u3667:	
   744  00AC  0BE6               	decfsz	??_main,f
   745  00AD  28AC               	goto	u3667
   746  00AE  0000               	nop
   747                           
   748                           ;door1ph.c: 100: normal_current = integer + (fraction * 0.01);
   749  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   750  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   751  00B1  0822               	movf	main@fraction^(0+128),w
   752  00B2  120A  158A  271D  120A  118A  	fcall	___lbtoft
   753  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   754  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   755  00B9  0828               	movf	?___lbtoft,w
   756  00BA  00B2               	movwf	___ftmul@f2
   757  00BB  0829               	movf	?___lbtoft+1,w
   758  00BC  00B3               	movwf	___ftmul@f2+1
   759  00BD  082A               	movf	?___lbtoft+2,w
   760  00BE  00B4               	movwf	___ftmul@f2+2
   761  00BF  30D7               	movlw	215
   762  00C0  00AF               	movwf	___ftmul@f1
   763  00C1  3023               	movlw	35
   764  00C2  00B0               	movwf	___ftmul@f1+1
   765  00C3  303C               	movlw	60
   766  00C4  00B1               	movwf	___ftmul@f1+2
   767  00C5  120A  118A  24C6  120A  118A  	fcall	___ftmul
   768  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   769  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   770  00CC  082F               	movf	?___ftmul,w
   771  00CD  00BF               	movwf	___ftadd@f1
   772  00CE  0830               	movf	?___ftmul+1,w
   773  00CF  00C0               	movwf	___ftadd@f1+1
   774  00D0  0831               	movf	?___ftmul+2,w
   775  00D1  00C1               	movwf	___ftadd@f1+2
   776  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   777  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   778  00D4  0821               	movf	main@integer^(0+128),w
   779  00D5  120A  158A  271D  120A  118A  	fcall	___lbtoft
   780  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   781  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   782  00DC  0828               	movf	?___lbtoft,w
   783  00DD  00C2               	movwf	___ftadd@f2
   784  00DE  0829               	movf	?___lbtoft+1,w
   785  00DF  00C3               	movwf	___ftadd@f2+1
   786  00E0  082A               	movf	?___lbtoft+2,w
   787  00E1  00C4               	movwf	___ftadd@f2+2
   788  00E2  120A  118A  23BD  120A  118A  	fcall	___ftadd
   789  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   790  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   791  00E9  083F               	movf	?___ftadd,w
   792  00EA  00F6               	movwf	_normal_current
   793  00EB  0840               	movf	?___ftadd+1,w
   794  00EC  00F7               	movwf	_normal_current+1
   795  00ED  0841               	movf	?___ftadd+2,w
   796  00EE  00F8               	movwf	_normal_current+2
   797                           
   798                           ;door1ph.c: 102: OPTION_REG = 0xC0;
   799  00EF  30C0               	movlw	192
   800  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   801  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   802  00F2  0081               	movwf	1	;volatile
   803                           
   804                           ;door1ph.c: 103: INTCON = 0x90;
   805  00F3  3090               	movlw	144
   806  00F4  008B               	movwf	11	;volatile
   807  00F5                     l77:	
   808                           ;door1ph.c: 105: while(1)
   809                           
   810                           
   811                           ;door1ph.c: 106: {
   812                           ;door1ph.c: 107: if(door_State == Opening)
   813  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   814  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   815  00F7  0869               	movf	_door_State,w
   816  00F8  3A02               	xorlw	2
   817  00F9  1D03               	skipz
   818  00FA  2984               	goto	l2373
   819                           
   820                           ;door1ph.c: 108: {
   821                           ;door1ph.c: 110: RB3 = 1;
   822  00FB  1586               	bsf	6,3	;volatile
   823                           
   824                           ;door1ph.c: 111: RB1 = 1;
   825  00FC  1486               	bsf	6,1	;volatile
   826                           
   827                           ;door1ph.c: 112: _delay(1000000);
   828  00FD  3006               	movlw	6
   829  00FE  00E8               	movwf	??_main+2
   830  00FF  3013               	movlw	19
   831  0100  00E7               	movwf	??_main+1
   832  0101  30B1               	movlw	177
   833  0102  00E6               	movwf	??_main
   834  0103                     u3677:	
   835  0103  0BE6               	decfsz	??_main,f
   836  0104  2903               	goto	u3677
   837  0105  0BE7               	decfsz	??_main+1,f
   838  0106  2903               	goto	u3677
   839  0107  0BE8               	decfsz	??_main+2,f
   840  0108  2903               	goto	u3677
   841  0109  290A               	nop2
   842  010A  2927               	goto	l2347
   843  010B                     l2341:	
   844                           ;door1ph.c: 114: while(RC0 == 0 && door_State == Opening && Over_Current_Timer < 3000)
   845                           
   846                           ;door1ph.c: 113: Over_Current_Timer = 0;
   847                           
   848                           
   849                           ;door1ph.c: 115: {
   850                           ;door1ph.c: 118: if(check_over_current() == 1)
   851  010B  120A  118A  2627  120A  118A  	fcall	_check_over_current
   852  0110  3A01               	xorlw	1
   853  0111  1D03               	skipz
   854  0112  2927               	goto	l2347
   855                           
   856                           ;door1ph.c: 119: {
   857                           ;door1ph.c: 120: _delay(1000);
   858  0113  30F9               	movlw	249
   859  0114  1283               	bcf	3,5	;RP0=0, select bank0
   860  0115  1303               	bcf	3,6	;RP1=0, select bank0
   861  0116  00E6               	movwf	??_main
   862  0117                     u3687:	
   863  0117  0000               	nop
   864  0118  0BE6               	decfsz	??_main,f
   865  0119  2917               	goto	u3687
   866  011A  291B               	nop2	;nop
   867  011B  0000               	nop
   868                           
   869                           ;door1ph.c: 121: Over_Current_Timer = Over_Current_Timer + 1;
   870  011C  1683               	bsf	3,5	;RP0=1, select bank1
   871  011D  1303               	bcf	3,6	;RP1=0, select bank1
   872  011E  0826               	movf	main@Over_Current_Timer^(0+128),w
   873  011F  3E01               	addlw	1
   874  0120  00A6               	movwf	main@Over_Current_Timer^(0+128)
   875  0121  0827               	movf	(main@Over_Current_Timer+1)^(0+128),w
   876  0122  1803               	skipnc
   877  0123  3E01               	addlw	1
   878  0124  3E00               	addlw	0
   879  0125  00A7               	movwf	(main@Over_Current_Timer+1)^(0+128)
   880                           
   881                           ;door1ph.c: 122: }
   882  0126  292B               	goto	l2349
   883  0127                     l2347:	
   884                           
   885                           ;door1ph.c: 123: else
   886                           ;door1ph.c: 124: {
   887                           ;door1ph.c: 125: Over_Current_Timer = 0;
   888  0127  1683               	bsf	3,5	;RP0=1, select bank1
   889  0128  1303               	bcf	3,6	;RP1=0, select bank1
   890  0129  01A6               	clrf	main@Over_Current_Timer^(0+128)
   891  012A  01A7               	clrf	(main@Over_Current_Timer+1)^(0+128)
   892  012B                     l2349:	
   893  012B  1283               	bcf	3,5	;RP0=0, select bank0
   894  012C  1303               	bcf	3,6	;RP1=0, select bank0
   895  012D  1807               	btfsc	7,0	;volatile
   896  012E  2940               	goto	l85
   897  012F  0869               	movf	_door_State,w
   898  0130  3A02               	xorlw	2
   899  0131  1D03               	skipz
   900  0132  2940               	goto	l85
   901  0133  1683               	bsf	3,5	;RP0=1, select bank1
   902  0134  1303               	bcf	3,6	;RP1=0, select bank1
   903  0135  0827               	movf	(main@Over_Current_Timer+1)^(0+128),w
   904  0136  3A80               	xorlw	128
   905  0137  00FF               	movwf	127
   906  0138  308B               	movlw	139
   907  0139  027F               	subwf	127,w
   908  013A  1D03               	skipz
   909  013B  293E               	goto	u3465
   910  013C  30B8               	movlw	184
   911  013D  0226               	subwf	main@Over_Current_Timer^(0+128),w
   912  013E                     u3465:	
   913  013E  1C03               	skipc
   914  013F  290B               	goto	l2341
   915  0140                     l85:	
   916                           
   917                           ;door1ph.c: 126: }
   918                           ;door1ph.c: 127: }
   919                           ;door1ph.c: 130: RB3 = 0;
   920  0140  1283               	bcf	3,5	;RP0=0, select bank0
   921  0141  1303               	bcf	3,6	;RP1=0, select bank0
   922  0142  1186               	bcf	6,3	;volatile
   923                           
   924                           ;door1ph.c: 131: RB1 = 0;
   925  0143  1086               	bcf	6,1	;volatile
   926                           
   927                           ;door1ph.c: 132: _delay(1500000);
   928  0144  3008               	movlw	8
   929  0145  00E8               	movwf	??_main+2
   930  0146  309D               	movlw	157
   931  0147  00E7               	movwf	??_main+1
   932  0148  300B               	movlw	11
   933  0149  00E6               	movwf	??_main
   934  014A                     u3697:	
   935  014A  0BE6               	decfsz	??_main,f
   936  014B  294A               	goto	u3697
   937  014C  0BE7               	decfsz	??_main+1,f
   938  014D  294A               	goto	u3697
   939  014E  0BE8               	decfsz	??_main+2,f
   940  014F  294A               	goto	u3697
   941  0150  2951               	nop2
   942                           
   943                           ;door1ph.c: 135: if(RC0 == 1)
   944  0151  1283               	bcf	3,5	;RP0=0, select bank0
   945  0152  1303               	bcf	3,6	;RP1=0, select bank0
   946  0153  1807               	btfsc	7,0	;volatile
   947                           
   948                           ;door1ph.c: 136: {
   949                           ;door1ph.c: 138: door_State = Opened;
   950  0154  01E9               	clrf	_door_State
   951                           
   952                           ;door1ph.c: 139: }
   953                           ;door1ph.c: 140: if(Over_Current_Timer >= 3000)
   954  0155  1683               	bsf	3,5	;RP0=1, select bank1
   955  0156  1303               	bcf	3,6	;RP1=0, select bank1
   956  0157  0827               	movf	(main@Over_Current_Timer+1)^(0+128),w
   957  0158  3A80               	xorlw	128
   958  0159  00FF               	movwf	127
   959  015A  308B               	movlw	139
   960  015B  027F               	subwf	127,w
   961  015C  1D03               	skipz
   962  015D  2960               	goto	u3485
   963  015E  30B8               	movlw	184
   964  015F  0226               	subwf	main@Over_Current_Timer^(0+128),w
   965  0160                     u3485:	
   966  0160  1C03               	skipc
   967  0161  2984               	goto	l2373
   968                           
   969                           ;door1ph.c: 141: {
   970                           ;door1ph.c: 143: INTCON = 0x00;
   971  0162  018B               	clrf	11	;volatile
   972  0163                     l2365:	
   973                           ;door1ph.c: 144: while(1)
   974                           
   975                           
   976                           ;door1ph.c: 145: {
   977                           ;door1ph.c: 147: RC6 = 1;
   978  0163  1283               	bcf	3,5	;RP0=0, select bank0
   979  0164  1303               	bcf	3,6	;RP1=0, select bank0
   980  0165  1707               	bsf	7,6	;volatile
   981                           
   982                           ;door1ph.c: 148: _delay(1000000);
   983  0166  3006               	movlw	6
   984  0167  00E8               	movwf	??_main+2
   985  0168  3013               	movlw	19
   986  0169  00E7               	movwf	??_main+1
   987  016A  30B1               	movlw	177
   988  016B  00E6               	movwf	??_main
   989  016C                     u3707:	
   990  016C  0BE6               	decfsz	??_main,f
   991  016D  296C               	goto	u3707
   992  016E  0BE7               	decfsz	??_main+1,f
   993  016F  296C               	goto	u3707
   994  0170  0BE8               	decfsz	??_main+2,f
   995  0171  296C               	goto	u3707
   996  0172  2973               	nop2
   997                           
   998                           ;door1ph.c: 149: RC6 = 0;
   999  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0175  1307               	bcf	7,6	;volatile
  1002                           
  1003                           ;door1ph.c: 150: _delay(1000000);
  1004  0176  3006               	movlw	6
  1005  0177  00E8               	movwf	??_main+2
  1006  0178  3013               	movlw	19
  1007  0179  00E7               	movwf	??_main+1
  1008  017A  30B1               	movlw	177
  1009  017B  00E6               	movwf	??_main
  1010  017C                     u3717:	
  1011  017C  0BE6               	decfsz	??_main,f
  1012  017D  297C               	goto	u3717
  1013  017E  0BE7               	decfsz	??_main+1,f
  1014  017F  297C               	goto	u3717
  1015  0180  0BE8               	decfsz	??_main+2,f
  1016  0181  297C               	goto	u3717
  1017  0182  2983               	nop2
  1018  0183  2963               	goto	l2365
  1019  0184                     l2373:	
  1020                           
  1021                           ;door1ph.c: 151: }
  1022                           ;door1ph.c: 152: }
  1023                           ;door1ph.c: 154: }
  1024                           ;door1ph.c: 156: if(door_State == Closing)
  1025  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0186  0869               	movf	_door_State,w
  1028  0187  3A03               	xorlw	3
  1029  0188  1D03               	skipz
  1030  0189  2A1F               	goto	l2421
  1031                           
  1032                           ;door1ph.c: 157: {
  1033                           ;door1ph.c: 159: RB4 = 1;
  1034  018A  1606               	bsf	6,4	;volatile
  1035                           
  1036                           ;door1ph.c: 160: RB2 = 1;
  1037  018B  1506               	bsf	6,2	;volatile
  1038                           
  1039                           ;door1ph.c: 161: _delay(1000000);
  1040  018C  3006               	movlw	6
  1041  018D  00E8               	movwf	??_main+2
  1042  018E  3013               	movlw	19
  1043  018F  00E7               	movwf	??_main+1
  1044  0190  30B1               	movlw	177
  1045  0191  00E6               	movwf	??_main
  1046  0192                     u3727:	
  1047  0192  0BE6               	decfsz	??_main,f
  1048  0193  2992               	goto	u3727
  1049  0194  0BE7               	decfsz	??_main+1,f
  1050  0195  2992               	goto	u3727
  1051  0196  0BE8               	decfsz	??_main+2,f
  1052  0197  2992               	goto	u3727
  1053  0198  2999               	nop2
  1054  0199  29B6               	goto	l2387
  1055  019A                     l2381:	
  1056                           ;door1ph.c: 163: while((RC1 == 0 && RC2 == 0) && (door_State == Closing && Over_Current_
      +                          Timer < 3000))
  1057                           
  1058                           ;door1ph.c: 162: Over_Current_Timer = 0;
  1059                           
  1060                           
  1061                           ;door1ph.c: 164: {
  1062                           ;door1ph.c: 167: if(check_over_current() == 1)
  1063  019A  120A  118A  2627  120A  118A  	fcall	_check_over_current
  1064  019F  3A01               	xorlw	1
  1065  01A0  1D03               	skipz
  1066  01A1  29B6               	goto	l2387
  1067                           
  1068                           ;door1ph.c: 168: {
  1069                           ;door1ph.c: 169: _delay(1000);
  1070  01A2  30F9               	movlw	249
  1071  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1072  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1073  01A5  00E6               	movwf	??_main
  1074  01A6                     u3737:	
  1075  01A6  0000               	nop
  1076  01A7  0BE6               	decfsz	??_main,f
  1077  01A8  29A6               	goto	u3737
  1078  01A9  29AA               	nop2	;nop
  1079  01AA  0000               	nop
  1080                           
  1081                           ;door1ph.c: 170: Over_Current_Timer = Over_Current_Timer + 1;
  1082  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1083  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1084  01AD  0826               	movf	main@Over_Current_Timer^(0+128),w
  1085  01AE  3E01               	addlw	1
  1086  01AF  00A6               	movwf	main@Over_Current_Timer^(0+128)
  1087  01B0  0827               	movf	(main@Over_Current_Timer+1)^(0+128),w
  1088  01B1  1803               	skipnc
  1089  01B2  3E01               	addlw	1
  1090  01B3  3E00               	addlw	0
  1091  01B4  00A7               	movwf	(main@Over_Current_Timer+1)^(0+128)
  1092                           
  1093                           ;door1ph.c: 171: }
  1094  01B5  29BA               	goto	l2389
  1095  01B6                     l2387:	
  1096                           
  1097                           ;door1ph.c: 172: else
  1098                           ;door1ph.c: 173: {
  1099                           ;door1ph.c: 174: Over_Current_Timer = 0;
  1100  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1101  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1102  01B8  01A6               	clrf	main@Over_Current_Timer^(0+128)
  1103  01B9  01A7               	clrf	(main@Over_Current_Timer+1)^(0+128)
  1104  01BA                     l2389:	
  1105  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1106  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1107  01BC  1C87               	btfss	7,1	;volatile
  1108  01BD  1907               	btfsc	7,2	;volatile
  1109  01BE  29D0               	goto	l100
  1110  01BF  0869               	movf	_door_State,w
  1111  01C0  3A03               	xorlw	3
  1112  01C1  1D03               	skipz
  1113  01C2  29D0               	goto	l100
  1114  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1115  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1116  01C5  0827               	movf	(main@Over_Current_Timer+1)^(0+128),w
  1117  01C6  3A80               	xorlw	128
  1118  01C7  00FF               	movwf	127
  1119  01C8  308B               	movlw	139
  1120  01C9  027F               	subwf	127,w
  1121  01CA  1D03               	skipz
  1122  01CB  29CE               	goto	u3545
  1123  01CC  30B8               	movlw	184
  1124  01CD  0226               	subwf	main@Over_Current_Timer^(0+128),w
  1125  01CE                     u3545:	
  1126  01CE  1C03               	skipc
  1127  01CF  299A               	goto	l2381
  1128  01D0                     l100:	
  1129                           
  1130                           ;door1ph.c: 175: }
  1131                           ;door1ph.c: 176: }
  1132                           ;door1ph.c: 179: RB4 = 0;
  1133  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1134  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1135  01D2  1206               	bcf	6,4	;volatile
  1136                           
  1137                           ;door1ph.c: 180: RB2 = 0;
  1138  01D3  1106               	bcf	6,2	;volatile
  1139                           
  1140                           ;door1ph.c: 181: _delay(1500000);
  1141  01D4  3008               	movlw	8
  1142  01D5  00E8               	movwf	??_main+2
  1143  01D6  309D               	movlw	157
  1144  01D7  00E7               	movwf	??_main+1
  1145  01D8  300B               	movlw	11
  1146  01D9  00E6               	movwf	??_main
  1147  01DA                     u3747:	
  1148  01DA  0BE6               	decfsz	??_main,f
  1149  01DB  29DA               	goto	u3747
  1150  01DC  0BE7               	decfsz	??_main+1,f
  1151  01DD  29DA               	goto	u3747
  1152  01DE  0BE8               	decfsz	??_main+2,f
  1153  01DF  29DA               	goto	u3747
  1154  01E0  29E1               	nop2
  1155                           
  1156                           ;door1ph.c: 184: if(RC2 == 1)
  1157  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1158  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1159  01E3  1D07               	btfss	7,2	;volatile
  1160  01E4  29E9               	goto	l2403
  1161                           
  1162                           ;door1ph.c: 185: {
  1163                           ;door1ph.c: 187: door_State = Opening;
  1164  01E5  3002               	movlw	2
  1165  01E6  00E6               	movwf	??_main
  1166  01E7  0866               	movf	??_main,w
  1167  01E8  00E9               	movwf	_door_State
  1168  01E9                     l2403:	
  1169                           
  1170                           ;door1ph.c: 188: }
  1171                           ;door1ph.c: 189: if(RC1 == 1)
  1172  01E9  1C87               	btfss	7,1	;volatile
  1173  01EA  29ED               	goto	l2407
  1174                           
  1175                           ;door1ph.c: 190: {
  1176                           ;door1ph.c: 192: door_State = Closed;
  1177  01EB  01E9               	clrf	_door_State
  1178  01EC  0AE9               	incf	_door_State,f
  1179  01ED                     l2407:	
  1180                           
  1181                           ;door1ph.c: 193: }
  1182                           ;door1ph.c: 194: if(Over_Current_Timer >= 3000)
  1183  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1184  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1185  01EF  0827               	movf	(main@Over_Current_Timer+1)^(0+128),w
  1186  01F0  3A80               	xorlw	128
  1187  01F1  00FF               	movwf	127
  1188  01F2  308B               	movlw	139
  1189  01F3  027F               	subwf	127,w
  1190  01F4  1D03               	skipz
  1191  01F5  29F8               	goto	u3575
  1192  01F6  30B8               	movlw	184
  1193  01F7  0226               	subwf	main@Over_Current_Timer^(0+128),w
  1194  01F8                     u3575:	
  1195  01F8  1C03               	skipc
  1196  01F9  2A1F               	goto	l2421
  1197                           
  1198                           ;door1ph.c: 195: {
  1199                           ;door1ph.c: 197: INTCON = 0x00;
  1200  01FA  018B               	clrf	11	;volatile
  1201                           
  1202                           ;door1ph.c: 198: RC6 = 1;
  1203  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1204  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1205  01FD  1707               	bsf	7,6	;volatile
  1206  01FE                     l2413:	
  1207                           ;door1ph.c: 199: while(1)
  1208                           
  1209                           
  1210                           ;door1ph.c: 200: {
  1211                           ;door1ph.c: 202: RC6 = 1;
  1212  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1213  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0200  1707               	bsf	7,6	;volatile
  1215                           
  1216                           ;door1ph.c: 203: _delay(1000000);
  1217  0201  3006               	movlw	6
  1218  0202  00E8               	movwf	??_main+2
  1219  0203  3013               	movlw	19
  1220  0204  00E7               	movwf	??_main+1
  1221  0205  30B1               	movlw	177
  1222  0206  00E6               	movwf	??_main
  1223  0207                     u3757:	
  1224  0207  0BE6               	decfsz	??_main,f
  1225  0208  2A07               	goto	u3757
  1226  0209  0BE7               	decfsz	??_main+1,f
  1227  020A  2A07               	goto	u3757
  1228  020B  0BE8               	decfsz	??_main+2,f
  1229  020C  2A07               	goto	u3757
  1230  020D  2A0E               	nop2
  1231                           
  1232                           ;door1ph.c: 204: RC6 = 0;
  1233  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1234  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0210  1307               	bcf	7,6	;volatile
  1236                           
  1237                           ;door1ph.c: 205: _delay(1000000);
  1238  0211  3006               	movlw	6
  1239  0212  00E8               	movwf	??_main+2
  1240  0213  3013               	movlw	19
  1241  0214  00E7               	movwf	??_main+1
  1242  0215  30B1               	movlw	177
  1243  0216  00E6               	movwf	??_main
  1244  0217                     u3767:	
  1245  0217  0BE6               	decfsz	??_main,f
  1246  0218  2A17               	goto	u3767
  1247  0219  0BE7               	decfsz	??_main+1,f
  1248  021A  2A17               	goto	u3767
  1249  021B  0BE8               	decfsz	??_main+2,f
  1250  021C  2A17               	goto	u3767
  1251  021D  2A1E               	nop2
  1252  021E  29FE               	goto	l2413
  1253  021F                     l2421:	
  1254                           
  1255                           ;door1ph.c: 206: }
  1256                           ;door1ph.c: 207: }
  1257                           ;door1ph.c: 208: }
  1258                           ;door1ph.c: 210: if(door_State == Opened && Auto_Close == 1)
  1259  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0221  08E9               	movf	_door_State,f
  1262  0222  1D03               	skipz
  1263  0223  28F5               	goto	l77
  1264  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1265  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1266  0226  0820               	movf	main@Auto_Close^(0+128),w
  1267  0227  3A01               	xorlw	1
  1268  0228  1D03               	skipz
  1269  0229  28F5               	goto	l77
  1270                           
  1271                           ;door1ph.c: 211: {
  1272                           ;door1ph.c: 213: seconds = 0;
  1273  022A  01A3               	clrf	main@seconds^(0+128)
  1274  022B  01A4               	clrf	(main@seconds+1)^(0+128)
  1275                           
  1276                           ;door1ph.c: 214: while(door_State == Opened && seconds < 30)
  1277  022C  2A44               	goto	l2429
  1278  022D                     l2427:	
  1279                           
  1280                           ;door1ph.c: 215: {
  1281                           ;door1ph.c: 216: _delay(1000000);
  1282  022D  3006               	movlw	6
  1283  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1284  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0230  00E8               	movwf	??_main+2
  1286  0231  3013               	movlw	19
  1287  0232  00E7               	movwf	??_main+1
  1288  0233  30B1               	movlw	177
  1289  0234  00E6               	movwf	??_main
  1290  0235                     u3777:	
  1291  0235  0BE6               	decfsz	??_main,f
  1292  0236  2A35               	goto	u3777
  1293  0237  0BE7               	decfsz	??_main+1,f
  1294  0238  2A35               	goto	u3777
  1295  0239  0BE8               	decfsz	??_main+2,f
  1296  023A  2A35               	goto	u3777
  1297  023B  2A3C               	nop2
  1298                           
  1299                           ;door1ph.c: 217: seconds++;
  1300  023C  3001               	movlw	1
  1301  023D  1683               	bsf	3,5	;RP0=1, select bank1
  1302  023E  1303               	bcf	3,6	;RP1=0, select bank1
  1303  023F  07A3               	addwf	main@seconds^(0+128),f
  1304  0240  1803               	skipnc
  1305  0241  0AA4               	incf	(main@seconds+1)^(0+128),f
  1306  0242  3000               	movlw	0
  1307  0243  07A4               	addwf	(main@seconds+1)^(0+128),f
  1308  0244                     l2429:	
  1309  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0246  08E9               	movf	_door_State,f
  1312  0247  1D03               	skipz
  1313  0248  2A56               	goto	l2433
  1314  0249  1683               	bsf	3,5	;RP0=1, select bank1
  1315  024A  1303               	bcf	3,6	;RP1=0, select bank1
  1316  024B  0824               	movf	(main@seconds+1)^(0+128),w
  1317  024C  3A80               	xorlw	128
  1318  024D  00FF               	movwf	127
  1319  024E  3080               	movlw	128
  1320  024F  027F               	subwf	127,w
  1321  0250  1D03               	skipz
  1322  0251  2A54               	goto	u3615
  1323  0252  301E               	movlw	30
  1324  0253  0223               	subwf	main@seconds^(0+128),w
  1325  0254                     u3615:	
  1326  0254  1C03               	skipc
  1327  0255  2A2D               	goto	l2427
  1328  0256                     l2433:	
  1329                           
  1330                           ;door1ph.c: 218: }
  1331                           ;door1ph.c: 220: if(seconds >= 30)
  1332  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0258  0824               	movf	(main@seconds+1)^(0+128),w
  1335  0259  3A80               	xorlw	128
  1336  025A  00FF               	movwf	127
  1337  025B  3080               	movlw	128
  1338  025C  027F               	subwf	127,w
  1339  025D  1D03               	skipz
  1340  025E  2A61               	goto	u3625
  1341  025F  301E               	movlw	30
  1342  0260  0223               	subwf	main@seconds^(0+128),w
  1343  0261                     u3625:	
  1344  0261  1C03               	skipc
  1345  0262  28F5               	goto	l77
  1346                           
  1347                           ;door1ph.c: 221: {
  1348                           ;door1ph.c: 223: door_State = Closing;
  1349  0263  3003               	movlw	3
  1350  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0266  00E6               	movwf	??_main
  1353  0267  0866               	movf	??_main,w
  1354  0268  00E9               	movwf	_door_State
  1355  0269  28F5               	goto	l77
  1356  026A                     __end_of_main:	
  1357                           
  1358                           	psect	text1
  1359  026A                     __ptext1:	
  1360 ;; *************** function _over_current_config *****************
  1361 ;; Defined at:
  1362 ;;		line 254 in file "E:\Study Material\XC8 PROJECTS\Door Controller\door1ph.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  integral        3   65[BANK0 ] unsigned char 
  1367 ;;  fractional      3   62[BANK0 ] unsigned char 
  1368 ;;  avg_reading     3   59[BANK0 ] float 
  1369 ;;  over_current    3   51[BANK0 ] float 
  1370 ;;  sum             2   68[BANK0 ] unsigned int 
  1371 ;;  res             2   56[BANK0 ] unsigned int 
  1372 ;;  readings        1   58[BANK0 ] unsigned char 
  1373 ;;  points          1   55[BANK0 ] unsigned char 
  1374 ;;  decimals        1   54[BANK0 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       0       0       0
  1385 ;;      Locals:         0      19       0       0       0
  1386 ;;      Temps:          0       3       0       0       0
  1387 ;;      Totals:         0      22       0       0       0
  1388 ;;Total ram usage:       22 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    4
  1391 ;; This function calls:
  1392 ;;		_ReadADC
  1393 ;;		___ftadd
  1394 ;;		___ftmul
  1395 ;;		___fttol
  1396 ;;		___lwdiv
  1397 ;;		___lwtoft
  1398 ;;		_eeprom_write
  1399 ;;		_modf
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function _over_current_config
  1407  026A                     _over_current_config:	
  1408                           
  1409                           ;door1ph.c: 256: float over_current_reading = 0;
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _over_current_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1413  026A  3000               	movlw	0
  1414  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1415  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1416  026D  00D3               	movwf	over_current_config@over_current_reading
  1417  026E  3000               	movlw	0
  1418  026F  00D4               	movwf	over_current_config@over_current_reading+1
  1419  0270  3000               	movlw	0
  1420  0271  00D5               	movwf	over_current_config@over_current_reading+2
  1421                           
  1422                           ;door1ph.c: 257: float avg_reading = 0;
  1423  0272  3000               	movlw	0
  1424  0273  00DB               	movwf	over_current_config@avg_reading
  1425  0274  3000               	movlw	0
  1426  0275  00DC               	movwf	over_current_config@avg_reading+1
  1427  0276  3000               	movlw	0
  1428  0277  00DD               	movwf	over_current_config@avg_reading+2
  1429                           
  1430                           ;door1ph.c: 258: unsigned int sum = 0;
  1431  0278  01E4               	clrf	over_current_config@sum
  1432  0279  01E5               	clrf	over_current_config@sum+1
  1433                           
  1434                           ;door1ph.c: 259: unsigned int res = 0;
  1435  027A  01D8               	clrf	over_current_config@res
  1436  027B  01D9               	clrf	over_current_config@res+1
  1437                           
  1438                           ;door1ph.c: 260: unsigned char readings = 0;
  1439  027C  01DA               	clrf	over_current_config@readings
  1440                           
  1441                           ;door1ph.c: 261: unsigned char decimals, points;
  1442                           ;door1ph.c: 262: double integral;
  1443                           ;door1ph.c: 263: double fractional;
  1444                           ;door1ph.c: 267: RB3 = 1;
  1445  027D  1586               	bsf	6,3	;volatile
  1446                           
  1447                           ;door1ph.c: 268: RB1 = 1;
  1448  027E  1486               	bsf	6,1	;volatile
  1449                           
  1450                           ;door1ph.c: 269: _delay(1000000);
  1451  027F  3006               	movlw	6
  1452  0280  00D2               	movwf	??_over_current_config+2
  1453  0281  3013               	movlw	19
  1454  0282  00D1               	movwf	??_over_current_config+1
  1455  0283  30B1               	movlw	177
  1456  0284  00D0               	movwf	??_over_current_config
  1457  0285                     u3787:	
  1458  0285  0BD0               	decfsz	??_over_current_config,f
  1459  0286  2A85               	goto	u3787
  1460  0287  0BD1               	decfsz	??_over_current_config+1,f
  1461  0288  2A85               	goto	u3787
  1462  0289  0BD2               	decfsz	??_over_current_config+2,f
  1463  028A  2A85               	goto	u3787
  1464  028B  2A8C               	nop2
  1465                           
  1466                           ;door1ph.c: 270: sum = 0;
  1467  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1468  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1469  028E  01E4               	clrf	over_current_config@sum
  1470  028F  01E5               	clrf	over_current_config@sum+1
  1471                           
  1472                           ;door1ph.c: 271: readings = 0;
  1473  0290  01DA               	clrf	over_current_config@readings
  1474  0291                     l2195:	
  1475                           ;door1ph.c: 273: while(RC0 == 0)
  1476                           
  1477  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0293  1807               	btfsc	7,0	;volatile
  1480  0294  2ABE               	goto	l127
  1481                           
  1482                           ;door1ph.c: 274: {
  1483                           ;door1ph.c: 275: readings++;
  1484  0295  3001               	movlw	1
  1485  0296  00D0               	movwf	??_over_current_config
  1486  0297  0850               	movf	??_over_current_config,w
  1487  0298  07DA               	addwf	over_current_config@readings,f
  1488                           
  1489                           ;door1ph.c: 276: res = 0;
  1490  0299  01D8               	clrf	over_current_config@res
  1491  029A  01D9               	clrf	over_current_config@res+1
  1492                           
  1493                           ;door1ph.c: 277: res = ReadADC();
  1494  029B  120A  158A  273B  120A  118A  	fcall	_ReadADC
  1495  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1496  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1497  02A2  0821               	movf	?_ReadADC+1,w
  1498  02A3  01D9               	clrf	over_current_config@res+1
  1499  02A4  07D9               	addwf	over_current_config@res+1,f
  1500  02A5  0820               	movf	?_ReadADC,w
  1501  02A6  01D8               	clrf	over_current_config@res
  1502  02A7  07D8               	addwf	over_current_config@res,f
  1503                           
  1504                           ;door1ph.c: 278: sum = sum + res;
  1505  02A8  0858               	movf	over_current_config@res,w
  1506  02A9  0764               	addwf	over_current_config@sum,w
  1507  02AA  00E4               	movwf	over_current_config@sum
  1508  02AB  0859               	movf	over_current_config@res+1,w
  1509  02AC  1803               	skipnc
  1510  02AD  0A59               	incf	over_current_config@res+1,w
  1511  02AE  0765               	addwf	over_current_config@sum+1,w
  1512  02AF  00E5               	movwf	over_current_config@sum+1
  1513                           
  1514                           ;door1ph.c: 279: _delay(250000);
  1515  02B0  3002               	movlw	2
  1516  02B1  00D2               	movwf	??_over_current_config+2
  1517  02B2  3045               	movlw	69
  1518  02B3  00D1               	movwf	??_over_current_config+1
  1519  02B4  30A9               	movlw	169
  1520  02B5  00D0               	movwf	??_over_current_config
  1521  02B6                     u3797:	
  1522  02B6  0BD0               	decfsz	??_over_current_config,f
  1523  02B7  2AB6               	goto	u3797
  1524  02B8  0BD1               	decfsz	??_over_current_config+1,f
  1525  02B9  2AB6               	goto	u3797
  1526  02BA  0BD2               	decfsz	??_over_current_config+2,f
  1527  02BB  2AB6               	goto	u3797
  1528  02BC  2ABD               	nop2
  1529  02BD  2A91               	goto	l2195
  1530  02BE                     l127:	
  1531                           
  1532                           ;door1ph.c: 280: }
  1533                           ;door1ph.c: 282: RB3 = 0;
  1534  02BE  1186               	bcf	6,3	;volatile
  1535                           
  1536                           ;door1ph.c: 283: RB1 = 0;
  1537  02BF  1086               	bcf	6,1	;volatile
  1538                           
  1539                           ;door1ph.c: 284: _delay(2000000);
  1540  02C0  300B               	movlw	11
  1541  02C1  00D2               	movwf	??_over_current_config+2
  1542  02C2  3026               	movlw	38
  1543  02C3  00D1               	movwf	??_over_current_config+1
  1544  02C4  3066               	movlw	102
  1545  02C5  00D0               	movwf	??_over_current_config
  1546  02C6                     u3807:	
  1547  02C6  0BD0               	decfsz	??_over_current_config,f
  1548  02C7  2AC6               	goto	u3807
  1549  02C8  0BD1               	decfsz	??_over_current_config+1,f
  1550  02C9  2AC6               	goto	u3807
  1551  02CA  0BD2               	decfsz	??_over_current_config+2,f
  1552  02CB  2AC6               	goto	u3807
  1553  02CC  2ACD               	nop2
  1554                           
  1555                           ;door1ph.c: 287: avg_reading = sum/readings;
  1556  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1557  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1558  02CF  085A               	movf	over_current_config@readings,w
  1559  02D0  00D0               	movwf	??_over_current_config
  1560  02D1  01D1               	clrf	??_over_current_config+1
  1561  02D2  0850               	movf	??_over_current_config,w
  1562  02D3  00A0               	movwf	___lwdiv@divisor
  1563  02D4  0851               	movf	??_over_current_config+1,w
  1564  02D5  00A1               	movwf	___lwdiv@divisor+1
  1565  02D6  0865               	movf	over_current_config@sum+1,w
  1566  02D7  01A3               	clrf	___lwdiv@dividend+1
  1567  02D8  07A3               	addwf	___lwdiv@dividend+1,f
  1568  02D9  0864               	movf	over_current_config@sum,w
  1569  02DA  01A2               	clrf	___lwdiv@dividend
  1570  02DB  07A2               	addwf	___lwdiv@dividend,f
  1571  02DC  120A  118A  27AD  120A  118A  	fcall	___lwdiv
  1572  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1573  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1574  02E3  0821               	movf	?___lwdiv+1,w
  1575  02E4  01A9               	clrf	___lwtoft@c+1
  1576  02E5  07A9               	addwf	___lwtoft@c+1,f
  1577  02E6  0820               	movf	?___lwdiv,w
  1578  02E7  01A8               	clrf	___lwtoft@c
  1579  02E8  07A8               	addwf	___lwtoft@c,f
  1580  02E9  120A  158A  2705  120A  118A  	fcall	___lwtoft
  1581  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1582  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1583  02F0  0828               	movf	?___lwtoft,w
  1584  02F1  00DB               	movwf	over_current_config@avg_reading
  1585  02F2  0829               	movf	?___lwtoft+1,w
  1586  02F3  00DC               	movwf	over_current_config@avg_reading+1
  1587  02F4  082A               	movf	?___lwtoft+2,w
  1588  02F5  00DD               	movwf	over_current_config@avg_reading+2
  1589                           
  1590                           ;door1ph.c: 289: over_current_reading = avg_reading + (avg_reading*0.7);
  1591  02F6  085B               	movf	over_current_config@avg_reading,w
  1592  02F7  00BF               	movwf	___ftadd@f1
  1593  02F8  085C               	movf	over_current_config@avg_reading+1,w
  1594  02F9  00C0               	movwf	___ftadd@f1+1
  1595  02FA  085D               	movf	over_current_config@avg_reading+2,w
  1596  02FB  00C1               	movwf	___ftadd@f1+2
  1597  02FC  3033               	movlw	51
  1598  02FD  00AF               	movwf	___ftmul@f1
  1599  02FE  3033               	movlw	51
  1600  02FF  00B0               	movwf	___ftmul@f1+1
  1601  0300  303F               	movlw	63
  1602  0301  00B1               	movwf	___ftmul@f1+2
  1603  0302  085B               	movf	over_current_config@avg_reading,w
  1604  0303  00B2               	movwf	___ftmul@f2
  1605  0304  085C               	movf	over_current_config@avg_reading+1,w
  1606  0305  00B3               	movwf	___ftmul@f2+1
  1607  0306  085D               	movf	over_current_config@avg_reading+2,w
  1608  0307  00B4               	movwf	___ftmul@f2+2
  1609  0308  120A  118A  24C6  120A  118A  	fcall	___ftmul
  1610  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1611  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1612  030F  082F               	movf	?___ftmul,w
  1613  0310  00C2               	movwf	___ftadd@f2
  1614  0311  0830               	movf	?___ftmul+1,w
  1615  0312  00C3               	movwf	___ftadd@f2+1
  1616  0313  0831               	movf	?___ftmul+2,w
  1617  0314  00C4               	movwf	___ftadd@f2+2
  1618  0315  120A  118A  23BD  120A  118A  	fcall	___ftadd
  1619  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1620  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1621  031C  083F               	movf	?___ftadd,w
  1622  031D  00D3               	movwf	over_current_config@over_current_reading
  1623  031E  0840               	movf	?___ftadd+1,w
  1624  031F  00D4               	movwf	over_current_config@over_current_reading+1
  1625  0320  0841               	movf	?___ftadd+2,w
  1626  0321  00D5               	movwf	over_current_config@over_current_reading+2
  1627                           
  1628                           ;door1ph.c: 292: fractional = modf(over_current_reading, &integral);
  1629  0322  0853               	movf	over_current_config@over_current_reading,w
  1630  0323  00CC               	movwf	modf@value
  1631  0324  0854               	movf	over_current_config@over_current_reading+1,w
  1632  0325  00CD               	movwf	modf@value+1
  1633  0326  0855               	movf	over_current_config@over_current_reading+2,w
  1634  0327  00CE               	movwf	modf@value+2
  1635  0328  3061               	movlw	over_current_config@integral& (0+255)
  1636  0329  00D0               	movwf	??_over_current_config
  1637  032A  0850               	movf	??_over_current_config,w
  1638  032B  00CF               	movwf	modf@iptr
  1639  032C  120A  118A  275D  120A  118A  	fcall	_modf
  1640  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0333  084C               	movf	?_modf,w
  1643  0334  00DE               	movwf	over_current_config@fractional
  1644  0335  084D               	movf	?_modf+1,w
  1645  0336  00DF               	movwf	over_current_config@fractional+1
  1646  0337  084E               	movf	?_modf+2,w
  1647  0338  00E0               	movwf	over_current_config@fractional+2
  1648                           
  1649                           ;door1ph.c: 293: fractional = fractional * 100;
  1650  0339  3000               	movlw	0
  1651  033A  00AF               	movwf	___ftmul@f1
  1652  033B  30C8               	movlw	200
  1653  033C  00B0               	movwf	___ftmul@f1+1
  1654  033D  3042               	movlw	66
  1655  033E  00B1               	movwf	___ftmul@f1+2
  1656  033F  085E               	movf	over_current_config@fractional,w
  1657  0340  00B2               	movwf	___ftmul@f2
  1658  0341  085F               	movf	over_current_config@fractional+1,w
  1659  0342  00B3               	movwf	___ftmul@f2+1
  1660  0343  0860               	movf	over_current_config@fractional+2,w
  1661  0344  00B4               	movwf	___ftmul@f2+2
  1662  0345  120A  118A  24C6  120A  118A  	fcall	___ftmul
  1663  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1664  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1665  034C  082F               	movf	?___ftmul,w
  1666  034D  00DE               	movwf	over_current_config@fractional
  1667  034E  0830               	movf	?___ftmul+1,w
  1668  034F  00DF               	movwf	over_current_config@fractional+1
  1669  0350  0831               	movf	?___ftmul+2,w
  1670  0351  00E0               	movwf	over_current_config@fractional+2
  1671                           
  1672                           ;door1ph.c: 294: decimals = integral;
  1673  0352  0861               	movf	over_current_config@integral,w
  1674  0353  00A0               	movwf	___fttol@f1
  1675  0354  0862               	movf	over_current_config@integral+1,w
  1676  0355  00A1               	movwf	___fttol@f1+1
  1677  0356  0863               	movf	over_current_config@integral+2,w
  1678  0357  00A2               	movwf	___fttol@f1+2
  1679  0358  120A  118A  2599  120A  118A  	fcall	___fttol
  1680  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1681  035E  1303               	bcf	3,6	;RP1=0, select bank0
  1682  035F  0820               	movf	?___fttol,w
  1683  0360  00D0               	movwf	??_over_current_config
  1684  0361  0850               	movf	??_over_current_config,w
  1685  0362  00D6               	movwf	over_current_config@decimals
  1686                           
  1687                           ;door1ph.c: 295: points = fractional;
  1688  0363  085E               	movf	over_current_config@fractional,w
  1689  0364  00A0               	movwf	___fttol@f1
  1690  0365  085F               	movf	over_current_config@fractional+1,w
  1691  0366  00A1               	movwf	___fttol@f1+1
  1692  0367  0860               	movf	over_current_config@fractional+2,w
  1693  0368  00A2               	movwf	___fttol@f1+2
  1694  0369  120A  118A  2599  120A  118A  	fcall	___fttol
  1695  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1696  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0370  0820               	movf	?___fttol,w
  1698  0371  00D0               	movwf	??_over_current_config
  1699  0372  0850               	movf	??_over_current_config,w
  1700  0373  00D7               	movwf	over_current_config@points
  1701                           
  1702                           ;door1ph.c: 298: eeprom_write(0x00,decimals);
  1703  0374  0856               	movf	over_current_config@decimals,w
  1704  0375  00D0               	movwf	??_over_current_config
  1705  0376  0850               	movf	??_over_current_config,w
  1706  0377  00F5               	movwf	eeprom_write@value
  1707  0378  3000               	movlw	0
  1708  0379  120A  158A  27A6  120A  118A  	fcall	_eeprom_write
  1709                           
  1710                           ;door1ph.c: 299: _delay(50);
  1711  037E  3010               	movlw	16
  1712  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0381  00D0               	movwf	??_over_current_config
  1715  0382                     u3817:	
  1716  0382  0BD0               	decfsz	??_over_current_config,f
  1717  0383  2B82               	goto	u3817
  1718  0384  0000               	nop
  1719                           
  1720                           ;door1ph.c: 300: eeprom_write(0x01,points);
  1721  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0387  0857               	movf	over_current_config@points,w
  1724  0388  00D0               	movwf	??_over_current_config
  1725  0389  0850               	movf	??_over_current_config,w
  1726  038A  00F5               	movwf	eeprom_write@value
  1727  038B  3001               	movlw	1
  1728  038C  120A  158A  27A6  120A  118A  	fcall	_eeprom_write
  1729                           
  1730                           ;door1ph.c: 301: _delay(50);
  1731  0391  3010               	movlw	16
  1732  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0394  00D0               	movwf	??_over_current_config
  1735  0395                     u3827:	
  1736  0395  0BD0               	decfsz	??_over_current_config,f
  1737  0396  2B95               	goto	u3827
  1738  0397  0000               	nop
  1739                           
  1740                           ;door1ph.c: 305: RB4 = 1;
  1741  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1743  039A  1606               	bsf	6,4	;volatile
  1744                           
  1745                           ;door1ph.c: 306: RB2 = 1;
  1746  039B  1506               	bsf	6,2	;volatile
  1747                           
  1748                           ;door1ph.c: 307: _delay(1000000);
  1749  039C  3006               	movlw	6
  1750  039D  00D2               	movwf	??_over_current_config+2
  1751  039E  3013               	movlw	19
  1752  039F  00D1               	movwf	??_over_current_config+1
  1753  03A0  30B1               	movlw	177
  1754  03A1  00D0               	movwf	??_over_current_config
  1755  03A2                     u3837:	
  1756  03A2  0BD0               	decfsz	??_over_current_config,f
  1757  03A3  2BA2               	goto	u3837
  1758  03A4  0BD1               	decfsz	??_over_current_config+1,f
  1759  03A5  2BA2               	goto	u3837
  1760  03A6  0BD2               	decfsz	??_over_current_config+2,f
  1761  03A7  2BA2               	goto	u3837
  1762  03A8  2BA9               	nop2
  1763  03A9                     l128:	
  1764                           ;door1ph.c: 310: {
  1765                           
  1766                           ;door1ph.c: 309: while(RC1 == 0)
  1767                           
  1768  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1769  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1770  03AB  1C87               	btfss	7,1	;volatile
  1771  03AC  2BA9               	goto	l128
  1772                           
  1773                           ;door1ph.c: 312: }
  1774                           ;door1ph.c: 314: RB4 = 0;
  1775  03AD  1206               	bcf	6,4	;volatile
  1776                           
  1777                           ;door1ph.c: 315: RB2 = 0;
  1778  03AE  1106               	bcf	6,2	;volatile
  1779                           
  1780                           ;door1ph.c: 316: _delay(1000000);
  1781  03AF  3006               	movlw	6
  1782  03B0  00D2               	movwf	??_over_current_config+2
  1783  03B1  3013               	movlw	19
  1784  03B2  00D1               	movwf	??_over_current_config+1
  1785  03B3  30B1               	movlw	177
  1786  03B4  00D0               	movwf	??_over_current_config
  1787  03B5                     u3847:	
  1788  03B5  0BD0               	decfsz	??_over_current_config,f
  1789  03B6  2BB5               	goto	u3847
  1790  03B7  0BD1               	decfsz	??_over_current_config+1,f
  1791  03B8  2BB5               	goto	u3847
  1792  03B9  0BD2               	decfsz	??_over_current_config+2,f
  1793  03BA  2BB5               	goto	u3847
  1794  03BB  2BBC               	nop2
  1795  03BC  0008               	return
  1796  03BD                     __end_of_over_current_config:	
  1797                           ;door1ph.c: 317: return;
  1798                           
  1799                           
  1800                           	psect	text2
  1801  075D                     __ptext2:	
  1802 ;; *************** function _modf *****************
  1803 ;; Defined at:
  1804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\modf.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  value           3   44[BANK0 ] unsigned char 
  1807 ;;  iptr            1   47[BANK0 ] PTR 
  1808 ;;		 -> over_current_config@integral(3), 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  3   44[BANK0 ] PTR 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1820 ;;      Params:         0       4       0       0       0
  1821 ;;      Locals:         0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0
  1823 ;;      Totals:         0       4       0       0       0
  1824 ;;Total ram usage:        4 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    3
  1827 ;; This function calls:
  1828 ;;		___attoft
  1829 ;;		___ftadd
  1830 ;;		___ftneg
  1831 ;;		___fttol
  1832 ;; This function is called by:
  1833 ;;		_over_current_config
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _modf
  1839  075D                     _modf:	
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _modf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1843  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1844  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1845  075F  084C               	movf	modf@value,w
  1846  0760  00A0               	movwf	___fttol@f1
  1847  0761  084D               	movf	modf@value+1,w
  1848  0762  00A1               	movwf	___fttol@f1+1
  1849  0763  084E               	movf	modf@value+2,w
  1850  0764  00A2               	movwf	___fttol@f1+2
  1851  0765  120A  118A  2599  120A  118A  	fcall	___fttol
  1852  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1853  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1854  076C  0822               	movf	?___fttol+2,w
  1855  076D  00B0               	movwf	___attoft@c+2
  1856  076E  0821               	movf	?___fttol+1,w
  1857  076F  00AF               	movwf	___attoft@c+1
  1858  0770  0820               	movf	?___fttol,w
  1859  0771  00AE               	movwf	___attoft@c
  1860  0772  120A  158A  277D  120A  118A  	fcall	___attoft
  1861  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0779  084F               	movf	modf@iptr,w
  1864  077A  0084               	movwf	4
  1865  077B  082E               	movf	?___attoft,w
  1866  077C  1383               	bcf	3,7	;select IRP bank0
  1867  077D  0080               	movwf	0
  1868  077E  0A84               	incf	4,f
  1869  077F  082F               	movf	?___attoft+1,w
  1870  0780  0080               	movwf	0
  1871  0781  0A84               	incf	4,f
  1872  0782  0830               	movf	?___attoft+2,w
  1873  0783  0080               	movwf	0
  1874  0784  084C               	movf	modf@value,w
  1875  0785  00BF               	movwf	___ftadd@f1
  1876  0786  084D               	movf	modf@value+1,w
  1877  0787  00C0               	movwf	___ftadd@f1+1
  1878  0788  084E               	movf	modf@value+2,w
  1879  0789  00C1               	movwf	___ftadd@f1+2
  1880  078A  084F               	movf	modf@iptr,w
  1881  078B  0084               	movwf	4
  1882  078C  0800               	movf	0,w
  1883  078D  00A0               	movwf	___ftneg@f1
  1884  078E  0A84               	incf	4,f
  1885  078F  0800               	movf	0,w
  1886  0790  00A1               	movwf	___ftneg@f1+1
  1887  0791  0A84               	incf	4,f
  1888  0792  0800               	movf	0,w
  1889  0793  00A2               	movwf	___ftneg@f1+2
  1890  0794  120A  118A  27ED  120A  118A  	fcall	___ftneg
  1891  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1892  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1893  079B  0820               	movf	?___ftneg,w
  1894  079C  00C2               	movwf	___ftadd@f2
  1895  079D  0821               	movf	?___ftneg+1,w
  1896  079E  00C3               	movwf	___ftadd@f2+1
  1897  079F  0822               	movf	?___ftneg+2,w
  1898  07A0  00C4               	movwf	___ftadd@f2+2
  1899  07A1  120A  118A  23BD   	fcall	___ftadd
  1900  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1901  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1902  07A6  083F               	movf	?___ftadd,w
  1903  07A7  00CC               	movwf	?_modf
  1904  07A8  0840               	movf	?___ftadd+1,w
  1905  07A9  00CD               	movwf	?_modf+1
  1906  07AA  0841               	movf	?___ftadd+2,w
  1907  07AB  00CE               	movwf	?_modf+2
  1908  07AC  0008               	return
  1909  07AD                     __end_of_modf:	
  1910                           
  1911                           	psect	text3
  1912  0599                     __ptext3:	
  1913 ;; *************** function ___fttol *****************
  1914 ;; Defined at:
  1915 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  f1              3    0[BANK0 ] float 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  lval            4    9[BANK0 ] unsigned long 
  1920 ;;  exp1            1   13[BANK0 ] unsigned char 
  1921 ;;  sign1           1    8[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  4    0[BANK0 ] long 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       4       0       0       0
  1932 ;;      Locals:         0       6       0       0       0
  1933 ;;      Temps:          0       4       0       0       0
  1934 ;;      Totals:         0      14       0       0       0
  1935 ;;Total ram usage:       14 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_over_current_config
  1942 ;;		_modf
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function ___fttol
  1948  0599                     ___fttol:	
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1952  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1953  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1954  059B  0820               	movf	___fttol@f1,w
  1955  059C  00A4               	movwf	??___fttol
  1956  059D  0821               	movf	___fttol@f1+1,w
  1957  059E  00A5               	movwf	??___fttol+1
  1958  059F  0822               	movf	___fttol@f1+2,w
  1959  05A0  00A6               	movwf	??___fttol+2
  1960  05A1  1003               	clrc
  1961  05A2  0D25               	rlf	??___fttol+1,w
  1962  05A3  0D26               	rlf	??___fttol+2,w
  1963  05A4  00A7               	movwf	??___fttol+3
  1964  05A5  0827               	movf	??___fttol+3,w
  1965  05A6  00AD               	movwf	___fttol@exp1
  1966  05A7  08AD               	movf	___fttol@exp1,f
  1967  05A8  1D03               	skipz
  1968  05A9  2DB3               	goto	l1995
  1969  05AA  3000               	movlw	0
  1970  05AB  00A3               	movwf	?___fttol+3
  1971  05AC  3000               	movlw	0
  1972  05AD  00A2               	movwf	?___fttol+2
  1973  05AE  3000               	movlw	0
  1974  05AF  00A1               	movwf	?___fttol+1
  1975  05B0  3000               	movlw	0
  1976  05B1  00A0               	movwf	?___fttol
  1977  05B2  0008               	return
  1978  05B3                     l1995:	
  1979  05B3  0820               	movf	___fttol@f1,w
  1980  05B4  00A4               	movwf	??___fttol
  1981  05B5  0821               	movf	___fttol@f1+1,w
  1982  05B6  00A5               	movwf	??___fttol+1
  1983  05B7  0822               	movf	___fttol@f1+2,w
  1984  05B8  00A6               	movwf	??___fttol+2
  1985  05B9  3017               	movlw	23
  1986  05BA                     u2895:	
  1987  05BA  1003               	clrc
  1988  05BB  0CA6               	rrf	??___fttol+2,f
  1989  05BC  0CA5               	rrf	??___fttol+1,f
  1990  05BD  0CA4               	rrf	??___fttol,f
  1991  05BE  3EFF               	addlw	-1
  1992  05BF  1D03               	skipz
  1993  05C0  2DBA               	goto	u2895
  1994  05C1  0824               	movf	??___fttol,w
  1995  05C2  00A7               	movwf	??___fttol+3
  1996  05C3  0827               	movf	??___fttol+3,w
  1997  05C4  00A8               	movwf	___fttol@sign1
  1998  05C5  17A1               	bsf	___fttol@f1+1,7
  1999  05C6  30FF               	movlw	255
  2000  05C7  05A0               	andwf	___fttol@f1,f
  2001  05C8  30FF               	movlw	255
  2002  05C9  05A1               	andwf	___fttol@f1+1,f
  2003  05CA  3000               	movlw	0
  2004  05CB  05A2               	andwf	___fttol@f1+2,f
  2005  05CC  0820               	movf	___fttol@f1,w
  2006  05CD  00A9               	movwf	___fttol@lval
  2007  05CE  0821               	movf	___fttol@f1+1,w
  2008  05CF  00AA               	movwf	___fttol@lval+1
  2009  05D0  0822               	movf	___fttol@f1+2,w
  2010  05D1  00AB               	movwf	___fttol@lval+2
  2011  05D2  01AC               	clrf	___fttol@lval+3
  2012  05D3  308E               	movlw	142
  2013  05D4  02AD               	subwf	___fttol@exp1,f
  2014  05D5  1FAD               	btfss	___fttol@exp1,7
  2015  05D6  2DF5               	goto	l2015
  2016  05D7  082D               	movf	___fttol@exp1,w
  2017  05D8  3A80               	xorlw	128
  2018  05D9  3E8F               	addlw	143
  2019  05DA  1803               	skipnc
  2020  05DB  2DE5               	goto	l2013
  2021  05DC  3000               	movlw	0
  2022  05DD  00A3               	movwf	?___fttol+3
  2023  05DE  3000               	movlw	0
  2024  05DF  00A2               	movwf	?___fttol+2
  2025  05E0  3000               	movlw	0
  2026  05E1  00A1               	movwf	?___fttol+1
  2027  05E2  3000               	movlw	0
  2028  05E3  00A0               	movwf	?___fttol
  2029  05E4  0008               	return
  2030  05E5                     l2013:	
  2031  05E5  3001               	movlw	1
  2032  05E6                     u2925:	
  2033  05E6  1003               	clrc
  2034  05E7  0CAC               	rrf	___fttol@lval+3,f
  2035  05E8  0CAB               	rrf	___fttol@lval+2,f
  2036  05E9  0CAA               	rrf	___fttol@lval+1,f
  2037  05EA  0CA9               	rrf	___fttol@lval,f
  2038  05EB  3EFF               	addlw	-1
  2039  05EC  1D03               	skipz
  2040  05ED  2DE6               	goto	u2925
  2041  05EE  3001               	movlw	1
  2042  05EF  00A4               	movwf	??___fttol
  2043  05F0  0824               	movf	??___fttol,w
  2044  05F1  07AD               	addwf	___fttol@exp1,f
  2045  05F2  1903               	btfsc	3,2
  2046  05F3  2E10               	goto	l2025
  2047  05F4  2DE5               	goto	l2013
  2048  05F5                     l2015:	
  2049  05F5  3018               	movlw	24
  2050  05F6  022D               	subwf	___fttol@exp1,w
  2051  05F7  1C03               	skipc
  2052  05F8  2E0D               	goto	l2023
  2053  05F9  3000               	movlw	0
  2054  05FA  00A3               	movwf	?___fttol+3
  2055  05FB  3000               	movlw	0
  2056  05FC  00A2               	movwf	?___fttol+2
  2057  05FD  3000               	movlw	0
  2058  05FE  00A1               	movwf	?___fttol+1
  2059  05FF  3000               	movlw	0
  2060  0600  00A0               	movwf	?___fttol
  2061  0601  0008               	return
  2062  0602                     l2021:	
  2063  0602  3001               	movlw	1
  2064  0603  00A4               	movwf	??___fttol
  2065  0604                     u2955:	
  2066  0604  1003               	clrc
  2067  0605  0DA9               	rlf	___fttol@lval,f
  2068  0606  0DAA               	rlf	___fttol@lval+1,f
  2069  0607  0DAB               	rlf	___fttol@lval+2,f
  2070  0608  0DAC               	rlf	___fttol@lval+3,f
  2071  0609  0BA4               	decfsz	??___fttol,f
  2072  060A  2E04               	goto	u2955
  2073  060B  3001               	movlw	1
  2074  060C  02AD               	subwf	___fttol@exp1,f
  2075  060D                     l2023:	
  2076  060D  08AD               	movf	___fttol@exp1,f
  2077  060E  1D03               	skipz
  2078  060F  2E02               	goto	l2021
  2079  0610                     l2025:	
  2080  0610  0828               	movf	___fttol@sign1,w
  2081  0611  1903               	btfsc	3,2
  2082  0612  2E1E               	goto	l2029
  2083  0613  09A9               	comf	___fttol@lval,f
  2084  0614  09AA               	comf	___fttol@lval+1,f
  2085  0615  09AB               	comf	___fttol@lval+2,f
  2086  0616  09AC               	comf	___fttol@lval+3,f
  2087  0617  0AA9               	incf	___fttol@lval,f
  2088  0618  1903               	skipnz
  2089  0619  0AAA               	incf	___fttol@lval+1,f
  2090  061A  1903               	skipnz
  2091  061B  0AAB               	incf	___fttol@lval+2,f
  2092  061C  1903               	skipnz
  2093  061D  0AAC               	incf	___fttol@lval+3,f
  2094  061E                     l2029:	
  2095  061E  082C               	movf	___fttol@lval+3,w
  2096  061F  00A3               	movwf	?___fttol+3
  2097  0620  082B               	movf	___fttol@lval+2,w
  2098  0621  00A2               	movwf	?___fttol+2
  2099  0622  082A               	movf	___fttol@lval+1,w
  2100  0623  00A1               	movwf	?___fttol+1
  2101  0624  0829               	movf	___fttol@lval,w
  2102  0625  00A0               	movwf	?___fttol
  2103  0626  0008               	return
  2104  0627                     __end_of___fttol:	
  2105                           
  2106                           	psect	text4
  2107  07ED                     __ptext4:	
  2108 ;; *************** function ___ftneg *****************
  2109 ;; Defined at:
  2110 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  f1              3    0[BANK0 ] float 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  3    0[BANK0 ] float 
  2117 ;; Registers used:
  2118 ;;		wreg
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       3       0       0       0
  2125 ;;      Locals:         0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0
  2127 ;;      Totals:         0       3       0       0       0
  2128 ;;Total ram usage:        3 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_modf
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function ___ftneg
  2140  07ED                     ___ftneg:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in ___ftneg: [wreg]
  2144  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  2145  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  2146  07EF  0822               	movf	___ftneg@f1+2,w
  2147  07F0  0421               	iorwf	___ftneg@f1+1,w
  2148  07F1  0420               	iorwf	___ftneg@f1,w
  2149  07F2  1903               	skipnz
  2150  07F3  0008               	return
  2151  07F4  3080               	movlw	128
  2152  07F5  06A2               	xorwf	___ftneg@f1+2,f
  2153  07F6  0008               	return
  2154  07F7                     __end_of___ftneg:	
  2155                           
  2156                           	psect	text5
  2157  03BD                     __ptext5:	
  2158 ;; *************** function ___ftadd *****************
  2159 ;; Defined at:
  2160 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  f1              3   31[BANK0 ] float 
  2163 ;;  f2              3   34[BANK0 ] float 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  exp1            1   43[BANK0 ] unsigned char 
  2166 ;;  exp2            1   42[BANK0 ] unsigned char 
  2167 ;;  sign            1   41[BANK0 ] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  3   31[BANK0 ] float 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       6       0       0       0
  2178 ;;      Locals:         0       3       0       0       0
  2179 ;;      Temps:          0       4       0       0       0
  2180 ;;      Totals:         0      13       0       0       0
  2181 ;;Total ram usage:       13 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    2
  2184 ;; This function calls:
  2185 ;;		___ftpack
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;;		_over_current_config
  2189 ;;		_modf
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function ___ftadd
  2195  03BD                     ___ftadd:	
  2196                           
  2197                           ;incstack = 0
  2198                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2199  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2200  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2201  03BF  083F               	movf	___ftadd@f1,w
  2202  03C0  00C5               	movwf	??___ftadd
  2203  03C1  0840               	movf	___ftadd@f1+1,w
  2204  03C2  00C6               	movwf	??___ftadd+1
  2205  03C3  0841               	movf	___ftadd@f1+2,w
  2206  03C4  00C7               	movwf	??___ftadd+2
  2207  03C5  1003               	clrc
  2208  03C6  0D46               	rlf	??___ftadd+1,w
  2209  03C7  0D47               	rlf	??___ftadd+2,w
  2210  03C8  00C8               	movwf	??___ftadd+3
  2211  03C9  0848               	movf	??___ftadd+3,w
  2212  03CA  00CB               	movwf	___ftadd@exp1
  2213  03CB  0842               	movf	___ftadd@f2,w
  2214  03CC  00C5               	movwf	??___ftadd
  2215  03CD  0843               	movf	___ftadd@f2+1,w
  2216  03CE  00C6               	movwf	??___ftadd+1
  2217  03CF  0844               	movf	___ftadd@f2+2,w
  2218  03D0  00C7               	movwf	??___ftadd+2
  2219  03D1  1003               	clrc
  2220  03D2  0D46               	rlf	??___ftadd+1,w
  2221  03D3  0D47               	rlf	??___ftadd+2,w
  2222  03D4  00C8               	movwf	??___ftadd+3
  2223  03D5  0848               	movf	??___ftadd+3,w
  2224  03D6  00CA               	movwf	___ftadd@exp2
  2225  03D7  084B               	movf	___ftadd@exp1,w
  2226  03D8  1903               	btfsc	3,2
  2227  03D9  2BE6               	goto	l1917
  2228  03DA  084A               	movf	___ftadd@exp2,w
  2229  03DB  024B               	subwf	___ftadd@exp1,w
  2230  03DC  1803               	skipnc
  2231  03DD  2BED               	goto	l1921
  2232  03DE  034B               	decf	___ftadd@exp1,w
  2233  03DF  3AFF               	xorlw	255
  2234  03E0  074A               	addwf	___ftadd@exp2,w
  2235  03E1  00C5               	movwf	??___ftadd
  2236  03E2  3019               	movlw	25
  2237  03E3  0245               	subwf	??___ftadd,w
  2238  03E4  1C03               	skipc
  2239  03E5  2BED               	goto	l1921
  2240  03E6                     l1917:	
  2241  03E6  0842               	movf	___ftadd@f2,w
  2242  03E7  00BF               	movwf	?___ftadd
  2243  03E8  0843               	movf	___ftadd@f2+1,w
  2244  03E9  00C0               	movwf	?___ftadd+1
  2245  03EA  0844               	movf	___ftadd@f2+2,w
  2246  03EB  00C1               	movwf	?___ftadd+2
  2247  03EC  0008               	return
  2248  03ED                     l1921:	
  2249  03ED  084A               	movf	___ftadd@exp2,w
  2250  03EE  1903               	btfsc	3,2
  2251  03EF  0008               	return
  2252  03F0  084B               	movf	___ftadd@exp1,w
  2253  03F1  024A               	subwf	___ftadd@exp2,w
  2254  03F2  1803               	skipnc
  2255  03F3  2BFC               	goto	l1927
  2256  03F4  034A               	decf	___ftadd@exp2,w
  2257  03F5  3AFF               	xorlw	255
  2258  03F6  074B               	addwf	___ftadd@exp1,w
  2259  03F7  00C5               	movwf	??___ftadd
  2260  03F8  3019               	movlw	25
  2261  03F9  0245               	subwf	??___ftadd,w
  2262  03FA  1803               	btfsc	3,0
  2263  03FB  0008               	return
  2264  03FC                     l1927:	
  2265  03FC  3006               	movlw	6
  2266  03FD  00C5               	movwf	??___ftadd
  2267  03FE  0845               	movf	??___ftadd,w
  2268  03FF  00C9               	movwf	___ftadd@sign
  2269  0400  1BC1               	btfsc	___ftadd@f1+2,7
  2270  0401  17C9               	bsf	___ftadd@sign,7
  2271  0402  1BC4               	btfsc	___ftadd@f2+2,7
  2272  0403  1749               	bsf	___ftadd@sign,6
  2273  0404  17C0               	bsf	___ftadd@f1+1,7
  2274  0405  30FF               	movlw	255
  2275  0406  05BF               	andwf	___ftadd@f1,f
  2276  0407  30FF               	movlw	255
  2277  0408  05C0               	andwf	___ftadd@f1+1,f
  2278  0409  3000               	movlw	0
  2279  040A  05C1               	andwf	___ftadd@f1+2,f
  2280  040B  17C3               	bsf	___ftadd@f2+1,7
  2281  040C  30FF               	movlw	255
  2282  040D  05C2               	andwf	___ftadd@f2,f
  2283  040E  30FF               	movlw	255
  2284  040F  05C3               	andwf	___ftadd@f2+1,f
  2285  0410  3000               	movlw	0
  2286  0411  05C4               	andwf	___ftadd@f2+2,f
  2287  0412  084A               	movf	___ftadd@exp2,w
  2288  0413  024B               	subwf	___ftadd@exp1,w
  2289  0414  1803               	skipnc
  2290  0415  2C3C               	goto	l1949
  2291  0416                     l1939:	
  2292  0416  3001               	movlw	1
  2293  0417                     u2725:	
  2294  0417  1003               	clrc
  2295  0418  0DC2               	rlf	___ftadd@f2,f
  2296  0419  0DC3               	rlf	___ftadd@f2+1,f
  2297  041A  0DC4               	rlf	___ftadd@f2+2,f
  2298  041B  3EFF               	addlw	-1
  2299  041C  1D03               	skipz
  2300  041D  2C17               	goto	u2725
  2301  041E  3001               	movlw	1
  2302  041F  02CA               	subwf	___ftadd@exp2,f
  2303  0420  084A               	movf	___ftadd@exp2,w
  2304  0421  064B               	xorwf	___ftadd@exp1,w
  2305  0422  1903               	skipnz
  2306  0423  2C37               	goto	l1947
  2307  0424  3001               	movlw	1
  2308  0425  02C9               	subwf	___ftadd@sign,f
  2309  0426  0849               	movf	___ftadd@sign,w
  2310  0427  3907               	andlw	7
  2311  0428  1903               	btfsc	3,2
  2312  0429  2C37               	goto	l1947
  2313  042A  2C16               	goto	l1939
  2314  042B                     l1945:	
  2315  042B  3001               	movlw	1
  2316  042C                     u2755:	
  2317  042C  1003               	clrc
  2318  042D  0CC1               	rrf	___ftadd@f1+2,f
  2319  042E  0CC0               	rrf	___ftadd@f1+1,f
  2320  042F  0CBF               	rrf	___ftadd@f1,f
  2321  0430  3EFF               	addlw	-1
  2322  0431  1D03               	skipz
  2323  0432  2C2C               	goto	u2755
  2324  0433  3001               	movlw	1
  2325  0434  00C5               	movwf	??___ftadd
  2326  0435  0845               	movf	??___ftadd,w
  2327  0436  07CB               	addwf	___ftadd@exp1,f
  2328  0437                     l1947:	
  2329  0437  084B               	movf	___ftadd@exp1,w
  2330  0438  064A               	xorwf	___ftadd@exp2,w
  2331  0439  1903               	btfsc	3,2
  2332  043A  2C65               	goto	l459
  2333  043B  2C2B               	goto	l1945
  2334  043C                     l1949:	
  2335  043C  084B               	movf	___ftadd@exp1,w
  2336  043D  024A               	subwf	___ftadd@exp2,w
  2337  043E  1803               	skipnc
  2338  043F  2C65               	goto	l459
  2339  0440                     l1951:	
  2340  0440  3001               	movlw	1
  2341  0441                     u2785:	
  2342  0441  1003               	clrc
  2343  0442  0DBF               	rlf	___ftadd@f1,f
  2344  0443  0DC0               	rlf	___ftadd@f1+1,f
  2345  0444  0DC1               	rlf	___ftadd@f1+2,f
  2346  0445  3EFF               	addlw	-1
  2347  0446  1D03               	skipz
  2348  0447  2C41               	goto	u2785
  2349  0448  3001               	movlw	1
  2350  0449  02CB               	subwf	___ftadd@exp1,f
  2351  044A  084A               	movf	___ftadd@exp2,w
  2352  044B  064B               	xorwf	___ftadd@exp1,w
  2353  044C  1903               	skipnz
  2354  044D  2C61               	goto	l1959
  2355  044E  3001               	movlw	1
  2356  044F  02C9               	subwf	___ftadd@sign,f
  2357  0450  0849               	movf	___ftadd@sign,w
  2358  0451  3907               	andlw	7
  2359  0452  1903               	btfsc	3,2
  2360  0453  2C61               	goto	l1959
  2361  0454  2C40               	goto	l1951
  2362  0455                     l1957:	
  2363  0455  3001               	movlw	1
  2364  0456                     u2815:	
  2365  0456  1003               	clrc
  2366  0457  0CC4               	rrf	___ftadd@f2+2,f
  2367  0458  0CC3               	rrf	___ftadd@f2+1,f
  2368  0459  0CC2               	rrf	___ftadd@f2,f
  2369  045A  3EFF               	addlw	-1
  2370  045B  1D03               	skipz
  2371  045C  2C56               	goto	u2815
  2372  045D  3001               	movlw	1
  2373  045E  00C5               	movwf	??___ftadd
  2374  045F  0845               	movf	??___ftadd,w
  2375  0460  07CA               	addwf	___ftadd@exp2,f
  2376  0461                     l1959:	
  2377  0461  084B               	movf	___ftadd@exp1,w
  2378  0462  064A               	xorwf	___ftadd@exp2,w
  2379  0463  1D03               	skipz
  2380  0464  2C55               	goto	l1957
  2381  0465                     l459:	
  2382  0465  1FC9               	btfss	___ftadd@sign,7
  2383  0466  2C77               	goto	l1963
  2384  0467  30FF               	movlw	255
  2385  0468  06BF               	xorwf	___ftadd@f1,f
  2386  0469  30FF               	movlw	255
  2387  046A  06C0               	xorwf	___ftadd@f1+1,f
  2388  046B  30FF               	movlw	255
  2389  046C  06C1               	xorwf	___ftadd@f1+2,f
  2390  046D  3001               	movlw	1
  2391  046E  07BF               	addwf	___ftadd@f1,f
  2392  046F  3000               	movlw	0
  2393  0470  1803               	skipnc
  2394  0471  3001               	movlw	1
  2395  0472  07C0               	addwf	___ftadd@f1+1,f
  2396  0473  3000               	movlw	0
  2397  0474  1803               	skipnc
  2398  0475  3001               	movlw	1
  2399  0476  07C1               	addwf	___ftadd@f1+2,f
  2400  0477                     l1963:	
  2401  0477  1F49               	btfss	___ftadd@sign,6
  2402  0478  2C89               	goto	l1967
  2403  0479  30FF               	movlw	255
  2404  047A  06C2               	xorwf	___ftadd@f2,f
  2405  047B  30FF               	movlw	255
  2406  047C  06C3               	xorwf	___ftadd@f2+1,f
  2407  047D  30FF               	movlw	255
  2408  047E  06C4               	xorwf	___ftadd@f2+2,f
  2409  047F  3001               	movlw	1
  2410  0480  07C2               	addwf	___ftadd@f2,f
  2411  0481  3000               	movlw	0
  2412  0482  1803               	skipnc
  2413  0483  3001               	movlw	1
  2414  0484  07C3               	addwf	___ftadd@f2+1,f
  2415  0485  3000               	movlw	0
  2416  0486  1803               	skipnc
  2417  0487  3001               	movlw	1
  2418  0488  07C4               	addwf	___ftadd@f2+2,f
  2419  0489                     l1967:	
  2420  0489  01C9               	clrf	___ftadd@sign
  2421  048A  083F               	movf	___ftadd@f1,w
  2422  048B  07C2               	addwf	___ftadd@f2,f
  2423  048C  0840               	movf	___ftadd@f1+1,w
  2424  048D  1103               	clrz
  2425  048E  1803               	skipnc
  2426  048F  0A40               	incf	___ftadd@f1+1,w
  2427  0490  1D03               	btfss	3,2
  2428  0491  07C3               	addwf	___ftadd@f2+1,f
  2429  0492  0841               	movf	___ftadd@f1+2,w
  2430  0493  1103               	clrz
  2431  0494  1803               	skipnc
  2432  0495  0A41               	incf	___ftadd@f1+2,w
  2433  0496  1D03               	btfss	3,2
  2434  0497  07C4               	addwf	___ftadd@f2+2,f
  2435  0498  1FC4               	btfss	___ftadd@f2+2,7
  2436  0499  2CAC               	goto	l1977
  2437  049A  30FF               	movlw	255
  2438  049B  06C2               	xorwf	___ftadd@f2,f
  2439  049C  30FF               	movlw	255
  2440  049D  06C3               	xorwf	___ftadd@f2+1,f
  2441  049E  30FF               	movlw	255
  2442  049F  06C4               	xorwf	___ftadd@f2+2,f
  2443  04A0  3001               	movlw	1
  2444  04A1  07C2               	addwf	___ftadd@f2,f
  2445  04A2  3000               	movlw	0
  2446  04A3  1803               	skipnc
  2447  04A4  3001               	movlw	1
  2448  04A5  07C3               	addwf	___ftadd@f2+1,f
  2449  04A6  3000               	movlw	0
  2450  04A7  1803               	skipnc
  2451  04A8  3001               	movlw	1
  2452  04A9  07C4               	addwf	___ftadd@f2+2,f
  2453  04AA  01C9               	clrf	___ftadd@sign
  2454  04AB  0AC9               	incf	___ftadd@sign,f
  2455  04AC                     l1977:	
  2456  04AC  0842               	movf	___ftadd@f2,w
  2457  04AD  00A0               	movwf	___ftpack@arg
  2458  04AE  0843               	movf	___ftadd@f2+1,w
  2459  04AF  00A1               	movwf	___ftpack@arg+1
  2460  04B0  0844               	movf	___ftadd@f2+2,w
  2461  04B1  00A2               	movwf	___ftpack@arg+2
  2462  04B2  084B               	movf	___ftadd@exp1,w
  2463  04B3  00C5               	movwf	??___ftadd
  2464  04B4  0845               	movf	??___ftadd,w
  2465  04B5  00A3               	movwf	___ftpack@exp
  2466  04B6  0849               	movf	___ftadd@sign,w
  2467  04B7  00C6               	movwf	??___ftadd+1
  2468  04B8  0846               	movf	??___ftadd+1,w
  2469  04B9  00A4               	movwf	___ftpack@sign
  2470  04BA  120A  118A  2694   	fcall	___ftpack
  2471  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2472  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2473  04BF  0820               	movf	?___ftpack,w
  2474  04C0  00BF               	movwf	?___ftadd
  2475  04C1  0821               	movf	?___ftpack+1,w
  2476  04C2  00C0               	movwf	?___ftadd+1
  2477  04C3  0822               	movf	?___ftpack+2,w
  2478  04C4  00C1               	movwf	?___ftadd+2
  2479  04C5  0008               	return
  2480  04C6                     __end_of___ftadd:	
  2481                           
  2482                           	psect	text6
  2483  0F7D                     __ptext6:	
  2484 ;; *************** function ___attoft *****************
  2485 ;; Defined at:
  2486 ;;		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\attoft.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  c               3   14[BANK0 ] m
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  sign            1    5[COMMON] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  3   14[BANK0 ] float 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         0       3       0       0       0
  2501 ;;      Locals:         1       0       0       0       0
  2502 ;;      Temps:          0       2       0       0       0
  2503 ;;      Totals:         1       5       0       0       0
  2504 ;;Total ram usage:        6 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    2
  2507 ;; This function calls:
  2508 ;;		___ftpack
  2509 ;; This function is called by:
  2510 ;;		_modf
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function ___attoft
  2516  0F7D                     ___attoft:	
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in ___attoft: [wreg+status,2+status,0+pclath+cstack]
  2520  0F7D  01F5               	clrf	___attoft@sign
  2521  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0F80  1FB0               	btfss	___attoft@c+2,7
  2524  0F81  2F8C               	goto	l1905
  2525  0F82  09AE               	comf	___attoft@c,f
  2526  0F83  09AF               	comf	___attoft@c+1,f
  2527  0F84  09B0               	comf	___attoft@c+2,f
  2528  0F85  0AAE               	incf	___attoft@c,f
  2529  0F86  1903               	skipnz
  2530  0F87  0AAF               	incf	___attoft@c+1,f
  2531  0F88  1903               	skipnz
  2532  0F89  0AB0               	incf	___attoft@c+2,f
  2533  0F8A  01F5               	clrf	___attoft@sign
  2534  0F8B  0AF5               	incf	___attoft@sign,f
  2535  0F8C                     l1905:	
  2536  0F8C  082E               	movf	___attoft@c,w
  2537  0F8D  00A0               	movwf	___ftpack@arg
  2538  0F8E  082F               	movf	___attoft@c+1,w
  2539  0F8F  00A1               	movwf	___ftpack@arg+1
  2540  0F90  0830               	movf	___attoft@c+2,w
  2541  0F91  00A2               	movwf	___ftpack@arg+2
  2542  0F92  308E               	movlw	142
  2543  0F93  00B1               	movwf	??___attoft
  2544  0F94  0831               	movf	??___attoft,w
  2545  0F95  00A3               	movwf	___ftpack@exp
  2546  0F96  0875               	movf	___attoft@sign,w
  2547  0F97  00B2               	movwf	??___attoft+1
  2548  0F98  0832               	movf	??___attoft+1,w
  2549  0F99  00A4               	movwf	___ftpack@sign
  2550  0F9A  120A  118A  2694   	fcall	___ftpack
  2551  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0F9F  0820               	movf	?___ftpack,w
  2554  0FA0  00AE               	movwf	?___attoft
  2555  0FA1  0821               	movf	?___ftpack+1,w
  2556  0FA2  00AF               	movwf	?___attoft+1
  2557  0FA3  0822               	movf	?___ftpack+2,w
  2558  0FA4  00B0               	movwf	?___attoft+2
  2559  0FA5  0008               	return
  2560  0FA6                     __end_of___attoft:	
  2561                           
  2562                           	psect	text7
  2563  0FA6                     __ptext7:	
  2564 ;; *************** function _eeprom_write *****************
  2565 ;; Defined at:
  2566 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\eewrite.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  addr            1    wreg     unsigned char 
  2569 ;;  value           1    5[COMMON] unsigned char 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  addr            1    1[BANK0 ] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2581 ;;      Params:         1       0       0       0       0
  2582 ;;      Locals:         0       1       0       0       0
  2583 ;;      Temps:          0       1       0       0       0
  2584 ;;      Totals:         1       2       0       0       0
  2585 ;;Total ram usage:        3 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_over_current_config
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           
  2596                           ;psect for function _eeprom_write
  2597  0FA6                     _eeprom_write:	
  2598                           
  2599                           ;incstack = 0
  2600                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2601                           ;eeprom_write@addr stored from wreg
  2602  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0FA8  00A1               	movwf	eeprom_write@addr
  2605  0FA9                     l179:	
  2606  0FA9  1683               	bsf	3,5	;RP0=1, select bank3
  2607  0FAA  1703               	bsf	3,6	;RP1=1, select bank3
  2608  0FAB  188C               	btfsc	12,1	;volsfr
  2609  0FAC  2FA9               	goto	l179
  2610  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0FAF  0821               	movf	eeprom_write@addr,w
  2613  0FB0  1283               	bcf	3,5	;RP0=0, select bank2
  2614  0FB1  1703               	bsf	3,6	;RP1=1, select bank2
  2615  0FB2  008D               	movwf	13	;volatile
  2616  0FB3  0875               	movf	eeprom_write@value,w
  2617  0FB4  008C               	movwf	12	;volatile
  2618  0FB5  303F               	movlw	63
  2619  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0FB8  00A0               	movwf	??_eeprom_write
  2622  0FB9  0820               	movf	??_eeprom_write,w
  2623  0FBA  1683               	bsf	3,5	;RP0=1, select bank3
  2624  0FBB  1703               	bsf	3,6	;RP1=1, select bank3
  2625  0FBC  058C               	andwf	12,f	;volsfr
  2626  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0FBF  1003               	bcf	3,0	;volatile
  2629  0FC0  1B8B               	btfsc	11,7	;volatile
  2630  0FC1  1403               	bsf	3,0	;volatile
  2631  0FC2  138B               	bcf	11,7	;volatile
  2632  0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  2633  0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  2634  0FC5  150C               	bsf	12,2	;volsfr
  2635  0FC6  3055               	movlw	85
  2636  0FC7  008D               	movwf	13	;volsfr
  2637  0FC8  30AA               	movlw	170
  2638  0FC9  008D               	movwf	13	;volsfr
  2639  0FCA  148C               	bsf	12,1	;volsfr
  2640  0FCB  110C               	bcf	12,2	;volsfr
  2641  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  2643  0FCE  1C03               	btfss	3,0	;volatile
  2644  0FCF  0008               	return
  2645  0FD0  178B               	bsf	11,7	;volatile
  2646  0FD1  0008               	return
  2647  0FD2                     __end_of_eeprom_write:	
  2648                           
  2649                           	psect	text8
  2650  07AD                     __ptext8:	
  2651 ;; *************** function ___lwdiv *****************
  2652 ;; Defined at:
  2653 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  divisor         2    0[BANK0 ] unsigned int 
  2656 ;;  dividend        2    2[BANK0 ] unsigned int 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  quotient        2    5[BANK0 ] unsigned int 
  2659 ;;  counter         1    4[BANK0 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2    0[BANK0 ] unsigned int 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2669 ;;      Params:         0       4       0       0       0
  2670 ;;      Locals:         0       3       0       0       0
  2671 ;;      Temps:          1       0       0       0       0
  2672 ;;      Totals:         1       7       0       0       0
  2673 ;;Total ram usage:        8 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_over_current_config
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function ___lwdiv
  2685  07AD                     ___lwdiv:	
  2686                           
  2687                           ;incstack = 0
  2688                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2689  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2690  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2691  07AF  01A5               	clrf	___lwdiv@quotient
  2692  07B0  01A6               	clrf	___lwdiv@quotient+1
  2693  07B1  0821               	movf	___lwdiv@divisor+1,w
  2694  07B2  0420               	iorwf	___lwdiv@divisor,w
  2695  07B3  1903               	skipnz
  2696  07B4  2FE6               	goto	l2163
  2697  07B5  01A4               	clrf	___lwdiv@counter
  2698  07B6  0AA4               	incf	___lwdiv@counter,f
  2699  07B7                     l2151:	
  2700  07B7  1BA1               	btfsc	___lwdiv@divisor+1,7
  2701  07B8  2FC5               	goto	l2153
  2702  07B9  3001               	movlw	1
  2703  07BA                     u3225:	
  2704  07BA  1003               	clrc
  2705  07BB  0DA0               	rlf	___lwdiv@divisor,f
  2706  07BC  0DA1               	rlf	___lwdiv@divisor+1,f
  2707  07BD  3EFF               	addlw	-1
  2708  07BE  1D03               	skipz
  2709  07BF  2FBA               	goto	u3225
  2710  07C0  3001               	movlw	1
  2711  07C1  00F5               	movwf	??___lwdiv
  2712  07C2  0875               	movf	??___lwdiv,w
  2713  07C3  07A4               	addwf	___lwdiv@counter,f
  2714  07C4  2FB7               	goto	l2151
  2715  07C5                     l2153:	
  2716  07C5  3001               	movlw	1
  2717  07C6                     u3245:	
  2718  07C6  1003               	clrc
  2719  07C7  0DA5               	rlf	___lwdiv@quotient,f
  2720  07C8  0DA6               	rlf	___lwdiv@quotient+1,f
  2721  07C9  3EFF               	addlw	-1
  2722  07CA  1D03               	skipz
  2723  07CB  2FC6               	goto	u3245
  2724  07CC  0821               	movf	___lwdiv@divisor+1,w
  2725  07CD  0223               	subwf	___lwdiv@dividend+1,w
  2726  07CE  1D03               	skipz
  2727  07CF  2FD2               	goto	u3255
  2728  07D0  0820               	movf	___lwdiv@divisor,w
  2729  07D1  0222               	subwf	___lwdiv@dividend,w
  2730  07D2                     u3255:	
  2731  07D2  1C03               	skipc
  2732  07D3  2FDB               	goto	l2159
  2733  07D4  0820               	movf	___lwdiv@divisor,w
  2734  07D5  02A2               	subwf	___lwdiv@dividend,f
  2735  07D6  0821               	movf	___lwdiv@divisor+1,w
  2736  07D7  1C03               	skipc
  2737  07D8  03A3               	decf	___lwdiv@dividend+1,f
  2738  07D9  02A3               	subwf	___lwdiv@dividend+1,f
  2739  07DA  1425               	bsf	___lwdiv@quotient,0
  2740  07DB                     l2159:	
  2741  07DB  3001               	movlw	1
  2742  07DC                     u3265:	
  2743  07DC  1003               	clrc
  2744  07DD  0CA1               	rrf	___lwdiv@divisor+1,f
  2745  07DE  0CA0               	rrf	___lwdiv@divisor,f
  2746  07DF  3EFF               	addlw	-1
  2747  07E0  1D03               	skipz
  2748  07E1  2FDC               	goto	u3265
  2749  07E2  3001               	movlw	1
  2750  07E3  02A4               	subwf	___lwdiv@counter,f
  2751  07E4  1D03               	btfss	3,2
  2752  07E5  2FC5               	goto	l2153
  2753  07E6                     l2163:	
  2754  07E6  0826               	movf	___lwdiv@quotient+1,w
  2755  07E7  01A1               	clrf	?___lwdiv+1
  2756  07E8  07A1               	addwf	?___lwdiv+1,f
  2757  07E9  0825               	movf	___lwdiv@quotient,w
  2758  07EA  01A0               	clrf	?___lwdiv
  2759  07EB  07A0               	addwf	?___lwdiv,f
  2760  07EC  0008               	return
  2761  07ED                     __end_of___lwdiv:	
  2762                           
  2763                           	psect	text9
  2764  04C6                     __ptext9:	
  2765 ;; *************** function ___ftmul *****************
  2766 ;; Defined at:
  2767 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  f1              3   15[BANK0 ] float 
  2770 ;;  f2              3   18[BANK0 ] float 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  2773 ;;  sign            1   30[BANK0 ] unsigned char 
  2774 ;;  cntr            1   29[BANK0 ] unsigned char 
  2775 ;;  exp             1   25[BANK0 ] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  3   15[BANK0 ] float 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       6       0       0       0
  2786 ;;      Locals:         0       6       0       0       0
  2787 ;;      Temps:          0       4       0       0       0
  2788 ;;      Totals:         0      16       0       0       0
  2789 ;;Total ram usage:       16 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    2
  2792 ;; This function calls:
  2793 ;;		___ftpack
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;;		_over_current_config
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function ___ftmul
  2802  04C6                     ___ftmul:	
  2803                           
  2804                           ;incstack = 0
  2805                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2806  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2807  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2808  04C8  082F               	movf	___ftmul@f1,w
  2809  04C9  00B5               	movwf	??___ftmul
  2810  04CA  0830               	movf	___ftmul@f1+1,w
  2811  04CB  00B6               	movwf	??___ftmul+1
  2812  04CC  0831               	movf	___ftmul@f1+2,w
  2813  04CD  00B7               	movwf	??___ftmul+2
  2814  04CE  1003               	clrc
  2815  04CF  0D36               	rlf	??___ftmul+1,w
  2816  04D0  0D37               	rlf	??___ftmul+2,w
  2817  04D1  00B8               	movwf	??___ftmul+3
  2818  04D2  0838               	movf	??___ftmul+3,w
  2819  04D3  00B9               	movwf	___ftmul@exp
  2820  04D4  08B9               	movf	___ftmul@exp,f
  2821  04D5  1D03               	skipz
  2822  04D6  2CDE               	goto	l2097
  2823  04D7  3000               	movlw	0
  2824  04D8  00AF               	movwf	?___ftmul
  2825  04D9  3000               	movlw	0
  2826  04DA  00B0               	movwf	?___ftmul+1
  2827  04DB  3000               	movlw	0
  2828  04DC  00B1               	movwf	?___ftmul+2
  2829  04DD  0008               	return
  2830  04DE                     l2097:	
  2831  04DE  0832               	movf	___ftmul@f2,w
  2832  04DF  00B5               	movwf	??___ftmul
  2833  04E0  0833               	movf	___ftmul@f2+1,w
  2834  04E1  00B6               	movwf	??___ftmul+1
  2835  04E2  0834               	movf	___ftmul@f2+2,w
  2836  04E3  00B7               	movwf	??___ftmul+2
  2837  04E4  1003               	clrc
  2838  04E5  0D36               	rlf	??___ftmul+1,w
  2839  04E6  0D37               	rlf	??___ftmul+2,w
  2840  04E7  00B8               	movwf	??___ftmul+3
  2841  04E8  0838               	movf	??___ftmul+3,w
  2842  04E9  00BE               	movwf	___ftmul@sign
  2843  04EA  08BE               	movf	___ftmul@sign,f
  2844  04EB  1D03               	skipz
  2845  04EC  2CF4               	goto	l2103
  2846  04ED  3000               	movlw	0
  2847  04EE  00AF               	movwf	?___ftmul
  2848  04EF  3000               	movlw	0
  2849  04F0  00B0               	movwf	?___ftmul+1
  2850  04F1  3000               	movlw	0
  2851  04F2  00B1               	movwf	?___ftmul+2
  2852  04F3  0008               	return
  2853  04F4                     l2103:	
  2854  04F4  083E               	movf	___ftmul@sign,w
  2855  04F5  3E7B               	addlw	123
  2856  04F6  00B5               	movwf	??___ftmul
  2857  04F7  0835               	movf	??___ftmul,w
  2858  04F8  07B9               	addwf	___ftmul@exp,f
  2859  04F9  082F               	movf	___ftmul@f1,w
  2860  04FA  00B5               	movwf	??___ftmul
  2861  04FB  0830               	movf	___ftmul@f1+1,w
  2862  04FC  00B6               	movwf	??___ftmul+1
  2863  04FD  0831               	movf	___ftmul@f1+2,w
  2864  04FE  00B7               	movwf	??___ftmul+2
  2865  04FF  3010               	movlw	16
  2866  0500                     u3095:	
  2867  0500  1003               	clrc
  2868  0501  0CB7               	rrf	??___ftmul+2,f
  2869  0502  0CB6               	rrf	??___ftmul+1,f
  2870  0503  0CB5               	rrf	??___ftmul,f
  2871  0504  3EFF               	addlw	-1
  2872  0505  1D03               	skipz
  2873  0506  2D00               	goto	u3095
  2874  0507  0835               	movf	??___ftmul,w
  2875  0508  00B8               	movwf	??___ftmul+3
  2876  0509  0838               	movf	??___ftmul+3,w
  2877  050A  00BE               	movwf	___ftmul@sign
  2878  050B  0832               	movf	___ftmul@f2,w
  2879  050C  00B5               	movwf	??___ftmul
  2880  050D  0833               	movf	___ftmul@f2+1,w
  2881  050E  00B6               	movwf	??___ftmul+1
  2882  050F  0834               	movf	___ftmul@f2+2,w
  2883  0510  00B7               	movwf	??___ftmul+2
  2884  0511  3010               	movlw	16
  2885  0512                     u3105:	
  2886  0512  1003               	clrc
  2887  0513  0CB7               	rrf	??___ftmul+2,f
  2888  0514  0CB6               	rrf	??___ftmul+1,f
  2889  0515  0CB5               	rrf	??___ftmul,f
  2890  0516  3EFF               	addlw	-1
  2891  0517  1D03               	skipz
  2892  0518  2D12               	goto	u3105
  2893  0519  0835               	movf	??___ftmul,w
  2894  051A  00B8               	movwf	??___ftmul+3
  2895  051B  0838               	movf	??___ftmul+3,w
  2896  051C  06BE               	xorwf	___ftmul@sign,f
  2897  051D  3080               	movlw	128
  2898  051E  00B5               	movwf	??___ftmul
  2899  051F  0835               	movf	??___ftmul,w
  2900  0520  05BE               	andwf	___ftmul@sign,f
  2901  0521  17B0               	bsf	___ftmul@f1+1,7
  2902  0522  17B3               	bsf	___ftmul@f2+1,7
  2903  0523  30FF               	movlw	255
  2904  0524  05B2               	andwf	___ftmul@f2,f
  2905  0525  30FF               	movlw	255
  2906  0526  05B3               	andwf	___ftmul@f2+1,f
  2907  0527  3000               	movlw	0
  2908  0528  05B4               	andwf	___ftmul@f2+2,f
  2909  0529  3000               	movlw	0
  2910  052A  00BA               	movwf	___ftmul@f3_as_product
  2911  052B  3000               	movlw	0
  2912  052C  00BB               	movwf	___ftmul@f3_as_product+1
  2913  052D  3000               	movlw	0
  2914  052E  00BC               	movwf	___ftmul@f3_as_product+2
  2915  052F  3007               	movlw	7
  2916  0530  00B5               	movwf	??___ftmul
  2917  0531  0835               	movf	??___ftmul,w
  2918  0532  00BD               	movwf	___ftmul@cntr
  2919  0533                     l2115:	
  2920  0533  1C2F               	btfss	___ftmul@f1,0
  2921  0534  2D43               	goto	l2119
  2922  0535  0832               	movf	___ftmul@f2,w
  2923  0536  07BA               	addwf	___ftmul@f3_as_product,f
  2924  0537  0833               	movf	___ftmul@f2+1,w
  2925  0538  1103               	clrz
  2926  0539  1803               	skipnc
  2927  053A  0A33               	incf	___ftmul@f2+1,w
  2928  053B  1D03               	btfss	3,2
  2929  053C  07BB               	addwf	___ftmul@f3_as_product+1,f
  2930  053D  0834               	movf	___ftmul@f2+2,w
  2931  053E  1103               	clrz
  2932  053F  1803               	skipnc
  2933  0540  0A34               	incf	___ftmul@f2+2,w
  2934  0541  1D03               	btfss	3,2
  2935  0542  07BC               	addwf	___ftmul@f3_as_product+2,f
  2936  0543                     l2119:	
  2937  0543  3001               	movlw	1
  2938  0544                     u3135:	
  2939  0544  1003               	clrc
  2940  0545  0CB1               	rrf	___ftmul@f1+2,f
  2941  0546  0CB0               	rrf	___ftmul@f1+1,f
  2942  0547  0CAF               	rrf	___ftmul@f1,f
  2943  0548  3EFF               	addlw	-1
  2944  0549  1D03               	skipz
  2945  054A  2D44               	goto	u3135
  2946  054B  3001               	movlw	1
  2947  054C                     u3145:	
  2948  054C  1003               	clrc
  2949  054D  0DB2               	rlf	___ftmul@f2,f
  2950  054E  0DB3               	rlf	___ftmul@f2+1,f
  2951  054F  0DB4               	rlf	___ftmul@f2+2,f
  2952  0550  3EFF               	addlw	-1
  2953  0551  1D03               	skipz
  2954  0552  2D4C               	goto	u3145
  2955  0553  3001               	movlw	1
  2956  0554  02BD               	subwf	___ftmul@cntr,f
  2957  0555  1D03               	btfss	3,2
  2958  0556  2D33               	goto	l2115
  2959  0557  3009               	movlw	9
  2960  0558  00B5               	movwf	??___ftmul
  2961  0559  0835               	movf	??___ftmul,w
  2962  055A  00BD               	movwf	___ftmul@cntr
  2963  055B                     l2127:	
  2964  055B  1C2F               	btfss	___ftmul@f1,0
  2965  055C  2D6B               	goto	l2131
  2966  055D  0832               	movf	___ftmul@f2,w
  2967  055E  07BA               	addwf	___ftmul@f3_as_product,f
  2968  055F  0833               	movf	___ftmul@f2+1,w
  2969  0560  1103               	clrz
  2970  0561  1803               	skipnc
  2971  0562  0A33               	incf	___ftmul@f2+1,w
  2972  0563  1D03               	btfss	3,2
  2973  0564  07BB               	addwf	___ftmul@f3_as_product+1,f
  2974  0565  0834               	movf	___ftmul@f2+2,w
  2975  0566  1103               	clrz
  2976  0567  1803               	skipnc
  2977  0568  0A34               	incf	___ftmul@f2+2,w
  2978  0569  1D03               	btfss	3,2
  2979  056A  07BC               	addwf	___ftmul@f3_as_product+2,f
  2980  056B                     l2131:	
  2981  056B  3001               	movlw	1
  2982  056C                     u3185:	
  2983  056C  1003               	clrc
  2984  056D  0CB1               	rrf	___ftmul@f1+2,f
  2985  056E  0CB0               	rrf	___ftmul@f1+1,f
  2986  056F  0CAF               	rrf	___ftmul@f1,f
  2987  0570  3EFF               	addlw	-1
  2988  0571  1D03               	skipz
  2989  0572  2D6C               	goto	u3185
  2990  0573  3001               	movlw	1
  2991  0574                     u3195:	
  2992  0574  1003               	clrc
  2993  0575  0CBC               	rrf	___ftmul@f3_as_product+2,f
  2994  0576  0CBB               	rrf	___ftmul@f3_as_product+1,f
  2995  0577  0CBA               	rrf	___ftmul@f3_as_product,f
  2996  0578  3EFF               	addlw	-1
  2997  0579  1D03               	skipz
  2998  057A  2D74               	goto	u3195
  2999  057B  3001               	movlw	1
  3000  057C  02BD               	subwf	___ftmul@cntr,f
  3001  057D  1D03               	btfss	3,2
  3002  057E  2D5B               	goto	l2127
  3003  057F  083A               	movf	___ftmul@f3_as_product,w
  3004  0580  00A0               	movwf	___ftpack@arg
  3005  0581  083B               	movf	___ftmul@f3_as_product+1,w
  3006  0582  00A1               	movwf	___ftpack@arg+1
  3007  0583  083C               	movf	___ftmul@f3_as_product+2,w
  3008  0584  00A2               	movwf	___ftpack@arg+2
  3009  0585  0839               	movf	___ftmul@exp,w
  3010  0586  00B5               	movwf	??___ftmul
  3011  0587  0835               	movf	??___ftmul,w
  3012  0588  00A3               	movwf	___ftpack@exp
  3013  0589  083E               	movf	___ftmul@sign,w
  3014  058A  00B6               	movwf	??___ftmul+1
  3015  058B  0836               	movf	??___ftmul+1,w
  3016  058C  00A4               	movwf	___ftpack@sign
  3017  058D  120A  118A  2694   	fcall	___ftpack
  3018  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0591  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0592  0820               	movf	?___ftpack,w
  3021  0593  00AF               	movwf	?___ftmul
  3022  0594  0821               	movf	?___ftpack+1,w
  3023  0595  00B0               	movwf	?___ftmul+1
  3024  0596  0822               	movf	?___ftpack+2,w
  3025  0597  00B1               	movwf	?___ftmul+2
  3026  0598  0008               	return
  3027  0599                     __end_of___ftmul:	
  3028                           
  3029                           	psect	text10
  3030  0F5B                     __ptext10:	
  3031 ;; *************** function _eeprom_read *****************
  3032 ;; Defined at:
  3033 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\eeread.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  addr            1    wreg     unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  addr            1    0[BANK0 ] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      unsigned char 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       1       0       0       0
  3049 ;;      Temps:          1       0       0       0       0
  3050 ;;      Totals:         1       1       0       0       0
  3051 ;;Total ram usage:        2 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    1
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _eeprom_read
  3063  0F5B                     _eeprom_read:	
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3067                           ;eeprom_read@addr stored from wreg
  3068  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0F5D  00A0               	movwf	eeprom_read@addr
  3071  0F5E  2F61               	goto	l157
  3072  0F5F                     u3301:	
  3073  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3075  0F61                     l157:	
  3076  0F61  0064               	clrwdt	;# 
  3077  0F62  1683               	bsf	3,5	;RP0=1, select bank3
  3078  0F63  1703               	bsf	3,6	;RP1=1, select bank3
  3079  0F64  188C               	btfsc	12,1	;volsfr
  3080  0F65  2F5F               	goto	u3301
  3081  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0F68  0820               	movf	eeprom_read@addr,w
  3084  0F69  1283               	bcf	3,5	;RP0=0, select bank2
  3085  0F6A  1703               	bsf	3,6	;RP1=1, select bank2
  3086  0F6B  008D               	movwf	13	;volatile
  3087  0F6C  303F               	movlw	63
  3088  0F6D  00F5               	movwf	??_eeprom_read
  3089  0F6E  0875               	movf	??_eeprom_read,w
  3090  0F6F  1683               	bsf	3,5	;RP0=1, select bank3
  3091  0F70  1703               	bsf	3,6	;RP1=1, select bank3
  3092  0F71  058C               	andwf	12,f	;volsfr
  3093  0F72  140C               	bsf	12,0	;volsfr
  3094  0F73  1003               	clrc
  3095  0F74  180C               	btfsc	12,0	;volsfr
  3096  0F75  1403               	setc
  3097  0F76  3000               	movlw	0
  3098  0F77  1803               	skipnc
  3099  0F78  3001               	movlw	1
  3100  0F79  1283               	bcf	3,5	;RP0=0, select bank2
  3101  0F7A  1703               	bsf	3,6	;RP1=1, select bank2
  3102  0F7B  080C               	movf	12,w	;volatile
  3103  0F7C  0008               	return
  3104  0F7D                     __end_of_eeprom_read:	
  3105                           
  3106                           	psect	text11
  3107  0627                     __ptext11:	
  3108 ;; *************** function _check_over_current *****************
  3109 ;; Defined at:
  3110 ;;		line 320 in file "E:\Study Material\XC8 PROJECTS\Door Controller\door1ph.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  avg_reading     3   14[BANK0 ] float 
  3115 ;;  sum             2   19[BANK0 ] unsigned int 
  3116 ;;  res             2   17[BANK0 ] unsigned int 
  3117 ;;  readings        1   21[BANK0 ] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      unsigned char 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0, pclath, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3127 ;;      Params:         0       0       0       0       0
  3128 ;;      Locals:         0       8       0       0       0
  3129 ;;      Temps:          0       2       0       0       0
  3130 ;;      Totals:         0      10       0       0       0
  3131 ;;Total ram usage:       10 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    3
  3134 ;; This function calls:
  3135 ;;		_ReadADC
  3136 ;;		___ftge
  3137 ;;		___lwtoft
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _check_over_current
  3145  0627                     _check_over_current:	
  3146                           
  3147                           ;door1ph.c: 322: float avg_reading = 0;
  3148                           
  3149                           ;incstack = 0
  3150                           ; Regs used in _check_over_current: [wreg+status,2+status,0+pclath+cstack]
  3151  0627  3000               	movlw	0
  3152  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3154  062A  00AE               	movwf	check_over_current@avg_reading
  3155  062B  3000               	movlw	0
  3156  062C  00AF               	movwf	check_over_current@avg_reading+1
  3157  062D  3000               	movlw	0
  3158  062E  00B0               	movwf	check_over_current@avg_reading+2
  3159                           
  3160                           ;door1ph.c: 323: unsigned int sum = 0;
  3161  062F  01B3               	clrf	check_over_current@sum
  3162  0630  01B4               	clrf	check_over_current@sum+1
  3163                           
  3164                           ;door1ph.c: 324: unsigned int res = 0;
  3165  0631  01B1               	clrf	check_over_current@res
  3166  0632  01B2               	clrf	check_over_current@res+1
  3167                           
  3168                           ;door1ph.c: 325: unsigned char readings = 0;
  3169  0633  01B5               	clrf	check_over_current@readings
  3170                           
  3171                           ;door1ph.c: 327: sum = 0;
  3172  0634  01B3               	clrf	check_over_current@sum
  3173  0635  01B4               	clrf	check_over_current@sum+1
  3174                           
  3175                           ;door1ph.c: 328: readings = 0;
  3176  0636  01B5               	clrf	check_over_current@readings
  3177                           
  3178                           ;door1ph.c: 329: avg_reading = 0;
  3179  0637  3000               	movlw	0
  3180  0638  00AE               	movwf	check_over_current@avg_reading
  3181  0639  3000               	movlw	0
  3182  063A  00AF               	movwf	check_over_current@avg_reading+1
  3183  063B  3000               	movlw	0
  3184  063C  00B0               	movwf	check_over_current@avg_reading+2
  3185                           
  3186                           ;door1ph.c: 330: for(readings = 0; readings < 16; readings++)
  3187  063D  01B5               	clrf	check_over_current@readings
  3188  063E  3010               	movlw	16
  3189  063F  0235               	subwf	check_over_current@readings,w
  3190  0640  1803               	btfsc	3,0
  3191  0641  2E61               	goto	l2261
  3192  0642                     l2251:	
  3193                           
  3194                           ;door1ph.c: 331: {
  3195                           ;door1ph.c: 332: res = 0;
  3196  0642  01B1               	clrf	check_over_current@res
  3197  0643  01B2               	clrf	check_over_current@res+1
  3198                           
  3199                           ;door1ph.c: 333: res = ReadADC();
  3200  0644  120A  158A  273B  120A  118A  	fcall	_ReadADC
  3201  0649  1283               	bcf	3,5	;RP0=0, select bank0
  3202  064A  1303               	bcf	3,6	;RP1=0, select bank0
  3203  064B  0821               	movf	?_ReadADC+1,w
  3204  064C  01B2               	clrf	check_over_current@res+1
  3205  064D  07B2               	addwf	check_over_current@res+1,f
  3206  064E  0820               	movf	?_ReadADC,w
  3207  064F  01B1               	clrf	check_over_current@res
  3208  0650  07B1               	addwf	check_over_current@res,f
  3209                           
  3210                           ;door1ph.c: 334: sum = sum + res;
  3211  0651  0831               	movf	check_over_current@res,w
  3212  0652  0733               	addwf	check_over_current@sum,w
  3213  0653  00B3               	movwf	check_over_current@sum
  3214  0654  0832               	movf	check_over_current@res+1,w
  3215  0655  1803               	skipnc
  3216  0656  0A32               	incf	check_over_current@res+1,w
  3217  0657  0734               	addwf	check_over_current@sum+1,w
  3218  0658  00B4               	movwf	check_over_current@sum+1
  3219  0659  3001               	movlw	1
  3220  065A  00AC               	movwf	??_check_over_current
  3221  065B  082C               	movf	??_check_over_current,w
  3222  065C  07B5               	addwf	check_over_current@readings,f
  3223  065D  3010               	movlw	16
  3224  065E  0235               	subwf	check_over_current@readings,w
  3225  065F  1C03               	skipc
  3226  0660  2E42               	goto	l2251
  3227  0661                     l2261:	
  3228                           
  3229                           ;door1ph.c: 335: }
  3230                           ;door1ph.c: 336: avg_reading = sum/16;
  3231  0661  0834               	movf	check_over_current@sum+1,w
  3232  0662  00AD               	movwf	??_check_over_current+1
  3233  0663  0833               	movf	check_over_current@sum,w
  3234  0664  00AC               	movwf	??_check_over_current
  3235  0665  3004               	movlw	4
  3236  0666                     u3335:	
  3237  0666  1003               	clrc
  3238  0667  0CAD               	rrf	??_check_over_current+1,f
  3239  0668  0CAC               	rrf	??_check_over_current,f
  3240  0669  3EFF               	addlw	-1
  3241  066A  1D03               	skipz
  3242  066B  2E66               	goto	u3335
  3243  066C  082C               	movf	??_check_over_current,w
  3244  066D  00A8               	movwf	___lwtoft@c
  3245  066E  082D               	movf	??_check_over_current+1,w
  3246  066F  00A9               	movwf	___lwtoft@c+1
  3247  0670  120A  158A  2705  120A  118A  	fcall	___lwtoft
  3248  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0677  0828               	movf	?___lwtoft,w
  3251  0678  00AE               	movwf	check_over_current@avg_reading
  3252  0679  0829               	movf	?___lwtoft+1,w
  3253  067A  00AF               	movwf	check_over_current@avg_reading+1
  3254  067B  082A               	movf	?___lwtoft+2,w
  3255  067C  00B0               	movwf	check_over_current@avg_reading+2
  3256                           
  3257                           ;door1ph.c: 337: if(avg_reading > normal_current)
  3258  067D  0876               	movf	_normal_current,w
  3259  067E  00A0               	movwf	___ftge@ff1
  3260  067F  0877               	movf	_normal_current+1,w
  3261  0680  00A1               	movwf	___ftge@ff1+1
  3262  0681  0878               	movf	_normal_current+2,w
  3263  0682  00A2               	movwf	___ftge@ff1+2
  3264  0683  082E               	movf	check_over_current@avg_reading,w
  3265  0684  00A3               	movwf	___ftge@ff2
  3266  0685  082F               	movf	check_over_current@avg_reading+1,w
  3267  0686  00A4               	movwf	___ftge@ff2+1
  3268  0687  0830               	movf	check_over_current@avg_reading+2,w
  3269  0688  00A5               	movwf	___ftge@ff2+2
  3270  0689  120A  118A  26FE  120A  118A  	fcall	___ftge
  3271  068E  1803               	btfsc	3,0
  3272  068F  2E92               	goto	l2269
  3273                           
  3274                           ;door1ph.c: 338: return 1;
  3275  0690  3001               	movlw	1
  3276  0691  0008               	return
  3277  0692                     l2269:	
  3278                           
  3279                           ;door1ph.c: 339: else
  3280                           ;door1ph.c: 340: return 0;
  3281  0692  3000               	movlw	0
  3282  0693  0008               	return
  3283  0694                     __end_of_check_over_current:	
  3284                           
  3285                           	psect	text12
  3286  0F05                     __ptext12:	
  3287 ;; *************** function ___lwtoft *****************
  3288 ;; Defined at:
  3289 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwtoft.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  c               2    8[BANK0 ] unsigned int 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  3    8[BANK0 ] float 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       3       0       0       0
  3304 ;;      Locals:         0       0       0       0       0
  3305 ;;      Temps:          0       1       0       0       0
  3306 ;;      Totals:         0       4       0       0       0
  3307 ;;Total ram usage:        4 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    2
  3310 ;; This function calls:
  3311 ;;		___ftpack
  3312 ;; This function is called by:
  3313 ;;		_over_current_config
  3314 ;;		_check_over_current
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function ___lwtoft
  3320  0F05                     ___lwtoft:	
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3324  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0F07  0828               	movf	___lwtoft@c,w
  3327  0F08  00A0               	movwf	___ftpack@arg
  3328  0F09  0829               	movf	___lwtoft@c+1,w
  3329  0F0A  00A1               	movwf	___ftpack@arg+1
  3330  0F0B  01A2               	clrf	___ftpack@arg+2
  3331  0F0C  308E               	movlw	142
  3332  0F0D  00AB               	movwf	??___lwtoft
  3333  0F0E  082B               	movf	??___lwtoft,w
  3334  0F0F  00A3               	movwf	___ftpack@exp
  3335  0F10  01A4               	clrf	___ftpack@sign
  3336  0F11  120A  118A  2694   	fcall	___ftpack
  3337  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0F16  0820               	movf	?___ftpack,w
  3340  0F17  00A8               	movwf	?___lwtoft
  3341  0F18  0821               	movf	?___ftpack+1,w
  3342  0F19  00A9               	movwf	?___lwtoft+1
  3343  0F1A  0822               	movf	?___ftpack+2,w
  3344  0F1B  00AA               	movwf	?___lwtoft+2
  3345  0F1C  0008               	return
  3346  0F1D                     __end_of___lwtoft:	
  3347                           
  3348                           	psect	text13
  3349  06FE                     __ptext13:	
  3350 ;; *************** function ___ftge *****************
  3351 ;; Defined at:
  3352 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftge.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  ff1             3    0[BANK0 ] float 
  3355 ;;  ff2             3    3[BANK0 ] float 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       6       0       0       0
  3368 ;;      Locals:         0       0       0       0       0
  3369 ;;      Temps:          0       6       0       0       0
  3370 ;;      Totals:         0      12       0       0       0
  3371 ;;Total ram usage:       12 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_check_over_current
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function ___ftge
  3383  06FE                     ___ftge:	
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3387  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3388  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0700  1FA2               	btfss	___ftge@ff1+2,7
  3390  0701  2F27               	goto	l2075
  3391  0702  3000               	movlw	0
  3392  0703  00A6               	movwf	??___ftge
  3393  0704  3000               	movlw	0
  3394  0705  00A7               	movwf	??___ftge+1
  3395  0706  3080               	movlw	128
  3396  0707  00A8               	movwf	??___ftge+2
  3397  0708  0920               	comf	___ftge@ff1,w
  3398  0709  00A9               	movwf	??___ftge+3
  3399  070A  0921               	comf	___ftge@ff1+1,w
  3400  070B  00AA               	movwf	??___ftge+4
  3401  070C  0922               	comf	___ftge@ff1+2,w
  3402  070D  00AB               	movwf	??___ftge+5
  3403  070E  0AA9               	incf	??___ftge+3,f
  3404  070F  1903               	skipnz
  3405  0710  0AAA               	incf	??___ftge+4,f
  3406  0711  1903               	skipnz
  3407  0712  0AAB               	incf	??___ftge+5,f
  3408  0713  0829               	movf	??___ftge+3,w
  3409  0714  07A6               	addwf	??___ftge,f
  3410  0715  082A               	movf	??___ftge+4,w
  3411  0716  1803               	skipnc
  3412  0717  0F2A               	incfsz	??___ftge+4,w
  3413  0718  2F1A               	goto	u3031
  3414  0719  2F1B               	goto	u3032
  3415  071A                     u3031:	
  3416  071A  07A7               	addwf	??___ftge+1,f
  3417  071B                     u3032:	
  3418  071B  082B               	movf	??___ftge+5,w
  3419  071C  1803               	skipnc
  3420  071D  0F2B               	incfsz	??___ftge+5,w
  3421  071E  2F20               	goto	u3033
  3422  071F  2F21               	goto	u3034
  3423  0720                     u3033:	
  3424  0720  07A8               	addwf	??___ftge+2,f
  3425  0721                     u3034:	
  3426  0721  0826               	movf	??___ftge,w
  3427  0722  00A0               	movwf	___ftge@ff1
  3428  0723  0827               	movf	??___ftge+1,w
  3429  0724  00A1               	movwf	___ftge@ff1+1
  3430  0725  0828               	movf	??___ftge+2,w
  3431  0726  00A2               	movwf	___ftge@ff1+2
  3432  0727                     l2075:	
  3433  0727  1FA5               	btfss	___ftge@ff2+2,7
  3434  0728  2F4E               	goto	l2079
  3435  0729  3000               	movlw	0
  3436  072A  00A6               	movwf	??___ftge
  3437  072B  3000               	movlw	0
  3438  072C  00A7               	movwf	??___ftge+1
  3439  072D  3080               	movlw	128
  3440  072E  00A8               	movwf	??___ftge+2
  3441  072F  0923               	comf	___ftge@ff2,w
  3442  0730  00A9               	movwf	??___ftge+3
  3443  0731  0924               	comf	___ftge@ff2+1,w
  3444  0732  00AA               	movwf	??___ftge+4
  3445  0733  0925               	comf	___ftge@ff2+2,w
  3446  0734  00AB               	movwf	??___ftge+5
  3447  0735  0AA9               	incf	??___ftge+3,f
  3448  0736  1903               	skipnz
  3449  0737  0AAA               	incf	??___ftge+4,f
  3450  0738  1903               	skipnz
  3451  0739  0AAB               	incf	??___ftge+5,f
  3452  073A  0829               	movf	??___ftge+3,w
  3453  073B  07A6               	addwf	??___ftge,f
  3454  073C  082A               	movf	??___ftge+4,w
  3455  073D  1803               	skipnc
  3456  073E  0F2A               	incfsz	??___ftge+4,w
  3457  073F  2F41               	goto	u3051
  3458  0740  2F42               	goto	u3052
  3459  0741                     u3051:	
  3460  0741  07A7               	addwf	??___ftge+1,f
  3461  0742                     u3052:	
  3462  0742  082B               	movf	??___ftge+5,w
  3463  0743  1803               	skipnc
  3464  0744  0F2B               	incfsz	??___ftge+5,w
  3465  0745  2F47               	goto	u3053
  3466  0746  2F48               	goto	u3054
  3467  0747                     u3053:	
  3468  0747  07A8               	addwf	??___ftge+2,f
  3469  0748                     u3054:	
  3470  0748  0826               	movf	??___ftge,w
  3471  0749  00A3               	movwf	___ftge@ff2
  3472  074A  0827               	movf	??___ftge+1,w
  3473  074B  00A4               	movwf	___ftge@ff2+1
  3474  074C  0828               	movf	??___ftge+2,w
  3475  074D  00A5               	movwf	___ftge@ff2+2
  3476  074E                     l2079:	
  3477  074E  3080               	movlw	128
  3478  074F  06A2               	xorwf	___ftge@ff1+2,f
  3479  0750  3080               	movlw	128
  3480  0751  06A5               	xorwf	___ftge@ff2+2,f
  3481  0752  0825               	movf	___ftge@ff2+2,w
  3482  0753  0222               	subwf	___ftge@ff1+2,w
  3483  0754  1D03               	skipz
  3484  0755  0008               	return
  3485  0756  0824               	movf	___ftge@ff2+1,w
  3486  0757  0221               	subwf	___ftge@ff1+1,w
  3487  0758  1D03               	skipz
  3488  0759  0008               	return
  3489  075A  0823               	movf	___ftge@ff2,w
  3490  075B  0220               	subwf	___ftge@ff1,w
  3491  075C  0008               	return
  3492  075D                     __end_of___ftge:	
  3493                           
  3494                           	psect	text14
  3495  0F3B                     __ptext14:	
  3496 ;; *************** function _ReadADC *****************
  3497 ;; Defined at:
  3498 ;;		line 343 in file "E:\Study Material\XC8 PROJECTS\Door Controller\door1ph.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  result          2    2[BANK0 ] unsigned int 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    0[BANK0 ] unsigned int 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       2       0       0       0
  3513 ;;      Locals:         0       2       0       0       0
  3514 ;;      Temps:          1       0       0       0       0
  3515 ;;      Totals:         1       4       0       0       0
  3516 ;;Total ram usage:        5 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_over_current_config
  3523 ;;		_check_over_current
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _ReadADC
  3529  0F3B                     _ReadADC:	
  3530                           
  3531                           ;door1ph.c: 345: unsigned int result = 0;
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  3535  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0F3D  01A2               	clrf	ReadADC@result
  3538  0F3E  01A3               	clrf	ReadADC@result+1
  3539                           
  3540                           ;door1ph.c: 347: ADON=1;
  3541  0F3F  141F               	bsf	31,0	;volatile
  3542                           
  3543                           ;door1ph.c: 349: _delay((unsigned long)((100)*(4000000/4000000.0)));
  3544  0F40  3021               	movlw	33
  3545  0F41  00F5               	movwf	??_ReadADC
  3546  0F42                     u3857:	
  3547  0F42  0BF5               	decfsz	??_ReadADC,f
  3548  0F43  2F42               	goto	u3857
  3549                           
  3550                           ;door1ph.c: 351: GO=1;
  3551  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0F46  151F               	bsf	31,2	;volatile
  3554  0F47                     l141:	
  3555                           ;door1ph.c: 353: {
  3556                           
  3557                           ;door1ph.c: 352: while(GO)
  3558                           
  3559  0F47  191F               	btfsc	31,2	;volatile
  3560  0F48  2F47               	goto	l141
  3561                           
  3562                           ;door1ph.c: 355: }
  3563                           ;door1ph.c: 356: result = ((ADRESH<<8)|ADRESL);
  3564  0F49  081E               	movf	30,w	;volatile
  3565  0F4A  01A3               	clrf	ReadADC@result+1
  3566  0F4B  07A3               	addwf	ReadADC@result+1,f
  3567  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  3568  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  3569  0F4E  081E               	movf	30,w	;volatile
  3570  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  3571  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  3572  0F51  01A2               	clrf	ReadADC@result
  3573  0F52  07A2               	addwf	ReadADC@result,f
  3574                           
  3575                           ;door1ph.c: 357: ADCON0bits.ADON=0;
  3576  0F53  101F               	bcf	31,0	;volatile
  3577                           
  3578                           ;door1ph.c: 358: return result;
  3579  0F54  0823               	movf	ReadADC@result+1,w
  3580  0F55  01A1               	clrf	?_ReadADC+1
  3581  0F56  07A1               	addwf	?_ReadADC+1,f
  3582  0F57  0822               	movf	ReadADC@result,w
  3583  0F58  01A0               	clrf	?_ReadADC
  3584  0F59  07A0               	addwf	?_ReadADC,f
  3585  0F5A  0008               	return
  3586  0F5B                     __end_of_ReadADC:	
  3587                           
  3588                           	psect	text15
  3589  0F1D                     __ptext15:	
  3590 ;; *************** function ___lbtoft *****************
  3591 ;; Defined at:
  3592 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbtoft.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  c               1    wreg     unsigned char 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  c               1    5[COMMON] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  3    8[BANK0 ] float 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       3       0       0       0
  3607 ;;      Locals:         1       0       0       0       0
  3608 ;;      Temps:          0       4       0       0       0
  3609 ;;      Totals:         1       7       0       0       0
  3610 ;;Total ram usage:        8 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    2
  3613 ;; This function calls:
  3614 ;;		___ftpack
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function ___lbtoft
  3622  0F1D                     ___lbtoft:	
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  3626                           ;___lbtoft@c stored from wreg
  3627  0F1D  00F5               	movwf	___lbtoft@c
  3628  0F1E  0875               	movf	___lbtoft@c,w
  3629  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0F21  00AB               	movwf	??___lbtoft
  3632  0F22  01AC               	clrf	??___lbtoft+1
  3633  0F23  01AD               	clrf	??___lbtoft+2
  3634  0F24  082B               	movf	??___lbtoft,w
  3635  0F25  00A0               	movwf	___ftpack@arg
  3636  0F26  082C               	movf	??___lbtoft+1,w
  3637  0F27  00A1               	movwf	___ftpack@arg+1
  3638  0F28  082D               	movf	??___lbtoft+2,w
  3639  0F29  00A2               	movwf	___ftpack@arg+2
  3640  0F2A  308E               	movlw	142
  3641  0F2B  00AE               	movwf	??___lbtoft+3
  3642  0F2C  082E               	movf	??___lbtoft+3,w
  3643  0F2D  00A3               	movwf	___ftpack@exp
  3644  0F2E  01A4               	clrf	___ftpack@sign
  3645  0F2F  120A  118A  2694   	fcall	___ftpack
  3646  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0F34  0820               	movf	?___ftpack,w
  3649  0F35  00A8               	movwf	?___lbtoft
  3650  0F36  0821               	movf	?___ftpack+1,w
  3651  0F37  00A9               	movwf	?___lbtoft+1
  3652  0F38  0822               	movf	?___ftpack+2,w
  3653  0F39  00AA               	movwf	?___lbtoft+2
  3654  0F3A  0008               	return
  3655  0F3B                     __end_of___lbtoft:	
  3656                           
  3657                           	psect	text16
  3658  0694                     __ptext16:	
  3659 ;; *************** function ___ftpack *****************
  3660 ;; Defined at:
  3661 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  arg             3    0[BANK0 ] unsigned um
  3664 ;;  exp             1    3[BANK0 ] unsigned char 
  3665 ;;  sign            1    4[BANK0 ] unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  3    0[BANK0 ] float 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       5       0       0       0
  3678 ;;      Locals:         0       0       0       0       0
  3679 ;;      Temps:          0       3       0       0       0
  3680 ;;      Totals:         0       8       0       0       0
  3681 ;;Total ram usage:        8 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		___attoft
  3688 ;;		___ftadd
  3689 ;;		___ftmul
  3690 ;;		___lbtoft
  3691 ;;		___lwtoft
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function ___ftpack
  3697  0694                     ___ftpack:	
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3701  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0696  0823               	movf	___ftpack@exp,w
  3704  0697  1903               	btfsc	3,2
  3705  0698  2E9E               	goto	l1873
  3706  0699  0822               	movf	___ftpack@arg+2,w
  3707  069A  0421               	iorwf	___ftpack@arg+1,w
  3708  069B  0420               	iorwf	___ftpack@arg,w
  3709  069C  1D03               	skipz
  3710  069D  2EB1               	goto	l1879
  3711  069E                     l1873:	
  3712  069E  3000               	movlw	0
  3713  069F  00A0               	movwf	?___ftpack
  3714  06A0  3000               	movlw	0
  3715  06A1  00A1               	movwf	?___ftpack+1
  3716  06A2  3000               	movlw	0
  3717  06A3  00A2               	movwf	?___ftpack+2
  3718  06A4  0008               	return
  3719  06A5                     l1877:	
  3720  06A5  3001               	movlw	1
  3721  06A6  00A5               	movwf	??___ftpack
  3722  06A7  0825               	movf	??___ftpack,w
  3723  06A8  07A3               	addwf	___ftpack@exp,f
  3724  06A9  3001               	movlw	1
  3725  06AA                     u2535:	
  3726  06AA  1003               	clrc
  3727  06AB  0CA2               	rrf	___ftpack@arg+2,f
  3728  06AC  0CA1               	rrf	___ftpack@arg+1,f
  3729  06AD  0CA0               	rrf	___ftpack@arg,f
  3730  06AE  3EFF               	addlw	-1
  3731  06AF  1D03               	skipz
  3732  06B0  2EAA               	goto	u2535
  3733  06B1                     l1879:	
  3734  06B1  30FE               	movlw	254
  3735  06B2  0522               	andwf	___ftpack@arg+2,w
  3736  06B3  1903               	btfsc	3,2
  3737  06B4  2ECC               	goto	l430
  3738  06B5  2EA5               	goto	l1877
  3739  06B6                     l1881:	
  3740  06B6  3001               	movlw	1
  3741  06B7  00A5               	movwf	??___ftpack
  3742  06B8  0825               	movf	??___ftpack,w
  3743  06B9  07A3               	addwf	___ftpack@exp,f
  3744  06BA  3001               	movlw	1
  3745  06BB  07A0               	addwf	___ftpack@arg,f
  3746  06BC  3000               	movlw	0
  3747  06BD  1803               	skipnc
  3748  06BE  3001               	movlw	1
  3749  06BF  07A1               	addwf	___ftpack@arg+1,f
  3750  06C0  3000               	movlw	0
  3751  06C1  1803               	skipnc
  3752  06C2  3001               	movlw	1
  3753  06C3  07A2               	addwf	___ftpack@arg+2,f
  3754  06C4  3001               	movlw	1
  3755  06C5                     u2555:	
  3756  06C5  1003               	clrc
  3757  06C6  0CA2               	rrf	___ftpack@arg+2,f
  3758  06C7  0CA1               	rrf	___ftpack@arg+1,f
  3759  06C8  0CA0               	rrf	___ftpack@arg,f
  3760  06C9  3EFF               	addlw	-1
  3761  06CA  1D03               	skipz
  3762  06CB  2EC5               	goto	u2555
  3763  06CC                     l430:	
  3764  06CC  30FF               	movlw	255
  3765  06CD  0522               	andwf	___ftpack@arg+2,w
  3766  06CE  1903               	btfsc	3,2
  3767  06CF  2EDB               	goto	l1889
  3768  06D0  2EB6               	goto	l1881
  3769  06D1                     l1887:	
  3770  06D1  3001               	movlw	1
  3771  06D2  02A3               	subwf	___ftpack@exp,f
  3772  06D3  3001               	movlw	1
  3773  06D4                     u2575:	
  3774  06D4  1003               	clrc
  3775  06D5  0DA0               	rlf	___ftpack@arg,f
  3776  06D6  0DA1               	rlf	___ftpack@arg+1,f
  3777  06D7  0DA2               	rlf	___ftpack@arg+2,f
  3778  06D8  3EFF               	addlw	-1
  3779  06D9  1D03               	skipz
  3780  06DA  2ED4               	goto	u2575
  3781  06DB                     l1889:	
  3782  06DB  1FA1               	btfss	___ftpack@arg+1,7
  3783  06DC  2ED1               	goto	l1887
  3784  06DD  1823               	btfsc	___ftpack@exp,0
  3785  06DE  2EE5               	goto	l436
  3786  06DF  30FF               	movlw	255
  3787  06E0  05A0               	andwf	___ftpack@arg,f
  3788  06E1  307F               	movlw	127
  3789  06E2  05A1               	andwf	___ftpack@arg+1,f
  3790  06E3  30FF               	movlw	255
  3791  06E4  05A2               	andwf	___ftpack@arg+2,f
  3792  06E5                     l436:	
  3793  06E5  1003               	clrc
  3794  06E6  0CA3               	rrf	___ftpack@exp,f
  3795  06E7  0823               	movf	___ftpack@exp,w
  3796  06E8  00A5               	movwf	??___ftpack
  3797  06E9  01A6               	clrf	??___ftpack+1
  3798  06EA  01A7               	clrf	??___ftpack+2
  3799  06EB  3010               	movlw	16
  3800  06EC                     u2605:	
  3801  06EC  1003               	clrc
  3802  06ED  0DA5               	rlf	??___ftpack,f
  3803  06EE  0DA6               	rlf	??___ftpack+1,f
  3804  06EF  0DA7               	rlf	??___ftpack+2,f
  3805  06F0  3EFF               	addlw	-1
  3806  06F1  1D03               	skipz
  3807  06F2  2EEC               	goto	u2605
  3808  06F3  0825               	movf	??___ftpack,w
  3809  06F4  04A0               	iorwf	___ftpack@arg,f
  3810  06F5  0826               	movf	??___ftpack+1,w
  3811  06F6  04A1               	iorwf	___ftpack@arg+1,f
  3812  06F7  0827               	movf	??___ftpack+2,w
  3813  06F8  04A2               	iorwf	___ftpack@arg+2,f
  3814  06F9  0824               	movf	___ftpack@sign,w
  3815  06FA  1903               	btfsc	3,2
  3816  06FB  0008               	return
  3817  06FC  17A2               	bsf	___ftpack@arg+2,7
  3818  06FD  0008               	return
  3819  06FE                     __end_of___ftpack:	
  3820                           
  3821                           	psect	text17
  3822  0FD2                     __ptext17:	
  3823 ;; *************** function _Tx_Received *****************
  3824 ;; Defined at:
  3825 ;;		line 229 in file "E:\Study Material\XC8 PROJECTS\Door Controller\door1ph.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;		None               void
  3832 ;; Registers used:
  3833 ;;		wreg
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0
  3841 ;;      Temps:          5       0       0       0       0
  3842 ;;      Totals:         5       0       0       0       0
  3843 ;;Total ram usage:        5 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		Interrupt level 1
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _Tx_Received
  3854  0FD2                     _Tx_Received:	
  3855                           
  3856                           ;door1ph.c: 231: if(RA1 == 0 && RA2 == 1 && RA3 == 0 && door_State != Opening && RC1 == 
      +                          0)
  3857  0FD2  1C85               	btfss	5,1	;volatile
  3858  0FD3  1D05               	btfss	5,2	;volatile
  3859  0FD4  2FDE               	goto	i1l119
  3860  0FD5  1985               	btfsc	5,3	;volatile
  3861  0FD6  2FDE               	goto	i1l119
  3862  0FD7  0869               	movf	_door_State,w
  3863  0FD8  3A02               	xorlw	2
  3864  0FD9  1D03               	btfss	3,2
  3865  0FDA  1887               	btfsc	7,1	;volatile
  3866  0FDB  2FDE               	goto	i1l119
  3867                           
  3868                           ;door1ph.c: 232: {
  3869                           ;door1ph.c: 233: door_State = Closing;
  3870  0FDC  3003               	movlw	3
  3871  0FDD  2FF0               	goto	L3
  3872  0FDE                     i1l119:	
  3873                           ;door1ph.c: 236: return;
  3874                           
  3875                           ;door1ph.c: 235: INTCON = 0x90;
  3876                           
  3877                           
  3878                           ;door1ph.c: 237: }
  3879                           ;door1ph.c: 238: if(RA1 == 1 && RA2 == 0 && RA3 == 0 && door_State != Closing && RC0 == 
      +                          0)
  3880  0FDE  1885               	btfsc	5,1	;volatile
  3881  0FDF  1905               	btfsc	5,2	;volatile
  3882  0FE0  2FEA               	goto	i1l121
  3883  0FE1  1985               	btfsc	5,3	;volatile
  3884  0FE2  2FEA               	goto	i1l121
  3885  0FE3  0869               	movf	_door_State,w
  3886  0FE4  3A03               	xorlw	3
  3887  0FE5  1D03               	btfss	3,2
  3888  0FE6  1807               	btfsc	7,0	;volatile
  3889  0FE7  2FEA               	goto	i1l121
  3890                           
  3891                           ;door1ph.c: 239: {
  3892                           ;door1ph.c: 240: door_State = Opening;
  3893  0FE8  3002               	movlw	2
  3894  0FE9  2FF0               	goto	L3
  3895  0FEA                     i1l121:	
  3896                           ;door1ph.c: 243: return;
  3897                           
  3898                           ;door1ph.c: 242: INTCON = 0x90;
  3899                           
  3900                           
  3901                           ;door1ph.c: 244: }
  3902                           ;door1ph.c: 245: if(RA1 == 0 && RA2 == 0 && RA3 == 1)
  3903  0FEA  1C85               	btfss	5,1	;volatile
  3904  0FEB  1905               	btfsc	5,2	;volatile
  3905  0FEC  2FF5               	goto	i1l120
  3906  0FED  1D85               	btfss	5,3	;volatile
  3907  0FEE  2FF5               	goto	i1l120
  3908                           
  3909                           ;door1ph.c: 246: {
  3910                           ;door1ph.c: 247: door_State = Stoped;
  3911  0FEF  3004               	movlw	4
  3912  0FF0                     L3:	
  3913  0FF0  00F0               	movwf	??_Tx_Received
  3914  0FF1  0870               	movf	??_Tx_Received,w
  3915  0FF2  00E9               	movwf	_door_State
  3916                           
  3917                           ;door1ph.c: 249: INTCON = 0x90;
  3918  0FF3  3090               	movlw	144
  3919  0FF4  008B               	movwf	11	;volatile
  3920  0FF5                     i1l120:	
  3921                           ;door1ph.c: 250: return;
  3922                           
  3923  0FF5  0874               	movf	??_Tx_Received+4,w
  3924  0FF6  00FF               	movwf	127
  3925  0FF7  0873               	movf	??_Tx_Received+3,w
  3926  0FF8  008A               	movwf	10
  3927  0FF9  0872               	movf	??_Tx_Received+2,w
  3928  0FFA  0084               	movwf	4
  3929  0FFB  0E71               	swapf	(??_Tx_Received+1)^(0+-128),w
  3930  0FFC  0083               	movwf	3
  3931  0FFD  0EFE               	swapf	126,f
  3932  0FFE  0E7E               	swapf	126,w
  3933  0FFF  0009               	retfie
  3934  1000                     __end_of_Tx_Received:	
  3935  007E                     btemp	set	126	;btemp
  3936  007E                     wtemp	set	126
  3937  007E                     wtemp0	set	126
  3938  0080                     wtemp1	set	128
  3939  0082                     wtemp2	set	130
  3940  0084                     wtemp3	set	132
  3941  0086                     wtemp4	set	134
  3942  0088                     wtemp5	set	136
  3943  007F                     wtemp6	set	127
  3944  007E                     ttemp	set	126
  3945  007E                     ttemp0	set	126
  3946  0081                     ttemp1	set	129
  3947  0084                     ttemp2	set	132
  3948  0087                     ttemp3	set	135
  3949  007F                     ttemp4	set	127
  3950  007E                     ltemp	set	126
  3951  007E                     ltemp0	set	126
  3952  0082                     ltemp1	set	130
  3953  0086                     ltemp2	set	134
  3954  0080                     ltemp3	set	128
  3955                           
  3956                           	psect	intentry
  3957  0004                     __pintentry:	
  3958                           ;incstack = 0
  3959                           ; Regs used in _Tx_Received: [wreg]
  3960                           
  3961  0004                     interrupt_function:	
  3962  007E                     saved_w	set	btemp
  3963  0004  00FE               	movwf	btemp
  3964  0005  0E03               	swapf	3,w
  3965  0006  00F1               	movwf	??_Tx_Received+1
  3966  0007  0804               	movf	4,w
  3967  0008  00F2               	movwf	??_Tx_Received+2
  3968  0009  080A               	movf	10,w
  3969  000A  00F3               	movwf	??_Tx_Received+3
  3970  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3971  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3972  000D  087F               	movf	btemp+1,w
  3973  000E  00F4               	movwf	??_Tx_Received+4
  3974  000F  120A  158A  2FD2   	ljmp	_Tx_Received


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     73      74
    BANK1            80      8       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    modf@iptr	PTR  size(1) Largest target is 3
		 -> over_current_config@integral(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->___lbtoft
    _main->_eeprom_read
    _over_current_config->_ReadADC
    _over_current_config->___lwdiv
    _over_current_config->_eeprom_write
    _modf->___attoft
    ___ftadd->___lbtoft
    ___ftmul->___lbtoft
    _check_over_current->_ReadADC
    ___lwtoft->___lwdiv

Critical Paths under _Tx_Received in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_over_current_config
    _over_current_config->_modf
    _modf->___ftadd
    ___ftadd->___ftmul
    ___attoft->___fttol
    ___ftmul->___lbtoft
    _check_over_current->___ftge
    _check_over_current->___lwtoft
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _Tx_Received in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tx_Received in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tx_Received in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tx_Received in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   29949
                                             70 BANK0      3     3      0
                                              0 BANK1      8     8      0
                            ___ftadd
                            ___ftmul
                           ___lbtoft
                 _check_over_current
                        _eeprom_read
                _over_current_config
 ---------------------------------------------------------------------------------
 (1) _over_current_config                                 22    22      0   17711
                                             48 BANK0     22    22      0
                            _ReadADC
                            ___ftadd
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                       _eeprom_write
                               _modf
 ---------------------------------------------------------------------------------
 (2) _modf                                                 4     0      4    7047
                                             44 BANK0      4     0      4
                           ___attoft
                            ___ftadd
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     130
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3802
                                             31 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___attoft                                             6     3      3    2295
                                              5 COMMON     1     1      0
                                             14 BANK0      5     2      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     192
                                              5 COMMON     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2975
                                             15 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _check_over_current                                  10    10      0    2848
                                             12 BANK0     10    10      0
                            _ReadADC
                             ___ftge
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2258
                                              8 BANK0      4     1      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     328
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              5     3      2      37
                                              5 COMMON     1     1      0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    2128
                                              5 COMMON     1     1      0
                                              8 BANK0      7     4      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2097
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Tx_Received                                          5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   _check_over_current
     _ReadADC
     ___ftge
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
   _eeprom_read
   _over_current_config
     _ReadADC
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
     ___lwdiv
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
     _eeprom_write
     _modf
       ___attoft
         ___ftpack
         ___fttol (ARG)
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg
       ___fttol

 _Tx_Received (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      8       8       7       10.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Jun 17 12:51:16 2017

                                     l71 0043                                       l72 006F  
                                     l85 0140                                       l77 00F5  
                                     _GO 00FA                                       _RD 0C60  
                                     _WR 0C61                             ___ftadd@exp1 004B  
                           ___ftadd@exp2 004A                             ___ftadd@sign 0049  
                                    l100 01D0                                      l141 0F47  
                                    l127 02BE                                      l128 03A9  
                                    l157 0F61                                      l430 06CC  
                                    l179 0FA9                                      l436 06E5  
                                    l459 0465                                      _GIE 005F  
                                    _RA1 0029                                      _RA2 002A  
                                    _RB1 0031                                      _RA3 002B  
                                    _RC0 0038                                      _RB2 0032  
                                    _RC1 0039                                      _RB3 0033  
                                    _RC2 003A                                      _RB4 0034  
                                    _RC4 003C                                      _RC5 003D  
                                    _RC6 003E               check_over_current@readings 0035  
                                    fsr0 0004                                      indf 0000  
                                   l2021 0602                                     l2013 05E5  
                                   l2103 04F4                                     l2023 060D  
                                   l2015 05F5                                     l2025 0610  
                                   l2131 056B                                     l2115 0533  
                                   l2029 061E                                     l2127 055B  
                                   l2119 0543                                     l2151 07B7  
                                   l2153 07C5                                     l2075 0727  
                                   l2251 0642                                     l2163 07E6  
                                   l2403 01E9                                     l2261 0661  
                                   l2413 01FE                                     l2421 021F  
                                   l2341 010B                                     l2317 007C  
                                   l2079 074E                                     l2159 07DB  
                                   l2407 01ED                                     l2327 0087  
                                   l2097 04DE                                     l2433 0256  
                                   l2195 0291                                     l2427 022D  
                                   l2347 0127                                     l2269 0692  
                                   l2429 0244                                     l2381 019A  
                                   l2365 0163                                     l2349 012B  
                                   l2373 0184                                     l1905 0F8C  
                                   l1921 03ED                                     l2387 01B6  
                                   l1917 03E6                                     l2389 01BA  
                                   l1951 0440                                     l1927 03FC  
                                   l1881 06B6                                     l1873 069E  
                                   l1945 042B                                     l1963 0477  
                                   l1947 0437                                     l1939 0416  
                                   l1877 06A5                                     l1957 0455  
                                   l1949 043C                                     l1887 06D1  
                                   l1879 06B1                                     l1967 0489  
                                   l1959 0461                                     l1889 06DB  
                                   l1977 04AC                                     l1995 05B3  
                                   _ADON 00F8                                     u3031 071A  
                                   u3032 071B                                     u3033 0720  
                                   u3105 0512                                     u3034 0721  
                                   u3051 0741                                     u3052 0742  
                                   u3053 0747                                     u3301 0F5F  
                                   u3054 0748                                     u3135 0544  
                                   u3145 054C                                     u3225 07BA  
                                   u2605 06EC                                     u3245 07C6  
                                   u2535 06AA                                     u3335 0666  
                                   u3095 0500                                     u3255 07D2  
                                   u3185 056C                                     u3265 07DC  
                                   u2555 06C5                                     u3195 0574  
                                   u2725 0417                                     u2575 06D4  
                                   u2815 0456                                     u3615 0254  
                                   u3625 0261                                     u3545 01CE  
                                   u3465 013E                                     u2755 042C  
                                   u3707 016C                                     u2925 05E6  
                                   u3717 017C                                     u3485 0160  
                                   u3637 004C                                     u3807 02C6  
                                   u3575 01F8                                     u3727 0192  
                                   u3647 005C                                     u2785 0441  
                                   u3817 0382                                     u3737 01A6  
                                   u3657 0098                                     u2955 0604  
                                   u3827 0395                                     u3747 01DA  
                                   u3667 00AC                                     u3837 03A2  
                                   u3757 0207                                     u3677 0103  
                                   u2895 05BA                                     u3847 03B5  
                                   u3767 0217                                     u3687 0117  
                                   u3857 0F42                                     u3777 0235  
                                   u3697 014A                                     u3787 0285  
                                   u3797 02B6                                     _WREN 0C62  
                         ??_eeprom_write 0020                              main@integer 00A1  
                            main@seconds 00A3                                     _main 0020  
                           ___ftpack@arg 0020                                     _modf 075D  
                           ___ftpack@exp 0023                                     btemp 007E  
                                   ltemp 007E                                     start 0012  
                                   ttemp 007E                                     wtemp 007E  
                           ___ftmul@cntr 003D                             ___ftmul@sign 003E  
                        __end_of_ReadADC 0F5B                             ___fttol@exp1 002D  
                           ___fttol@lval 0029                            ___attoft@sign 0075  
                         main@Auto_Close 00A0                            ReadADC@result 0022  
                                  ?_main 0070                                    ?_modf 004C  
                           main@fraction 00A2                                    _EEADR 010D  
                        __end_of___ftadd 04C6                                    _CARRY 0018  
                        __end_of___ftneg 07F7                          __end_of___ftmul 0599  
                        __end_of___fttol 0627                          __end_of___lwdiv 07ED  
                                  i1l120 0FF5                                    i1l121 0FEA  
                                  i1l119 0FDE                                    _TRISA 0085  
                                  _TRISB 0086                                    _TRISC 0087  
                          ___ftpack@sign 0024                                    pclath 000A  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                          __initialization 0015  
                           __end_of_main 026A                             __end_of_modf 07AD  
                                 ??_main 0066                            ___fttol@sign1 0028  
                                 ??_modf 0076              over_current_config@decimals 0056  
                                 _ADCON0 001F                                   _ADCON1 009F  
                                 _ADRESH 001E                                   _ADRESL 009E  
                                 _EEDATA 010C                                   _EECON1 018C  
                                 _EECON2 018D                         __end_of___attoft 0FA6  
                       __end_of___ftpack 06FE                         __end_of___lbtoft 0F3B  
                                 _INTCON 000B                         __end_of___lwtoft 0F1D  
                              ??_ReadADC 0075              over_current_config@readings 005A  
            over_current_config@integral 0061                     __size_of_eeprom_read 0022  
over_current_config@over_current_reading 0053              __size_of_check_over_current 006D  
                                 ___ftge 06FE                                ??___ftadd 0045  
                              ??___ftneg 0075                                ??___ftmul 0035  
                              ??___fttol 0024                                ??___lwdiv 0075  
                   __end_of_eeprom_write 0FD2                    ___ftmul@f3_as_product 003A  
                                 saved_w 007E                            ??_Tx_Received 0070  
                __end_of__initialization 001C                          eeprom_read@addr 0020  
                             ___ftadd@f1 003F                               ___ftadd@f2 0042  
                             ___ftge@ff1 0020                               ___ftge@ff2 0023  
            __end_of_over_current_config 03BD                    check_over_current@res 0031  
                  check_over_current@sum 0033                               ___attoft@c 002E  
                             ___ftneg@f1 0020                               ___lbtoft@c 0075  
                             ___ftmul@f1 002F                               ___ftmul@f2 0032  
                             ___fttol@f1 0020                           __pcstackCOMMON 0070  
                           __pidataBANK0 07F7                               ___lwtoft@c 0028  
                      eeprom_write@value 0075                      __end_of_Tx_Received 1000  
                             __pmaintext 0020                                  ?___ftge 0020  
                             __pintentry 0004                                ?___attoft 002E  
                              ?___ftpack 0020                                ?___lbtoft 0028  
                              ?___lwtoft 0028                               _door_State 0069  
                                _ReadADC 0F3B                    __size_of_eeprom_write 002C  
                        __size_of___ftge 005F                                  ___ftadd 03BD  
                                ___ftneg 07ED                                  ___ftmul 04C6  
                                ___fttol 0599                                  ___lwdiv 07AD  
                             ??___attoft 0031                               ??___ftpack 0025  
                             ??___lbtoft 002B                                  __ptext1 026A  
                                __ptext2 075D                                  __ptext3 0599  
                                __ptext4 07ED                                  __ptext5 03BD  
                                __ptext6 0F7D                                  __ptext7 0FA6  
                                __ptext8 07AD                                  __ptext9 04C6  
                             ??___lwtoft 002B                     end_of_initialization 001C  
                            _Tx_Received 0FD2                             _eeprom_write 0FA6  
              over_current_config@points 0057            over_current_config@fractional 005E  
                          ??_eeprom_read 0075               __end_of_check_over_current 0694  
                            ___ftmul@exp 0039                           __end_of___ftge 075D  
                         _normal_current 0076                      start_initialization 0015  
         over_current_config@avg_reading 005B                                 ??___ftge 0026  
                    __end_of_eeprom_read 0F7D             __size_of_over_current_config 0153  
                            __pdataBANK0 0069                        __size_of___attoft 0029  
                      __size_of___ftpack 006A                        __size_of___lbtoft 001E  
                            __pbssCOMMON 0076                                ___latbits 0002  
                      __size_of___lwtoft 0018                            __pcstackBANK0 0020  
                          __pcstackBANK1 00A0            check_over_current@avg_reading 002E  
                       eeprom_write@addr 0021                                 ?_ReadADC 0020  
                       ___lwdiv@dividend 0022                                 ?___ftadd 003F  
                               ?___ftneg 0020                                 ?___ftmul 002F  
                               ?___fttol 0020                                 ?___lwdiv 0020  
                       ___lwdiv@quotient 0025                             ?_Tx_Received 0070  
                      interrupt_function 0004                              _eeprom_read 0F5B  
                 over_current_config@res 0058                   over_current_config@sum 0064  
                             _ADCON0bits 001F                                main@count 00A5  
                       __size_of_ReadADC 0020                                modf@value 004C  
                 main@Over_Current_Timer 00A6                         __size_of___ftadd 0109  
                       __size_of___ftneg 000A                         __size_of___ftmul 00D3  
                       __size_of___fttol 008E                         __size_of___lwdiv 0040  
                               ___attoft 0F7D                                 ___ftpack 0694  
                               ___lbtoft 0F1D                       _check_over_current 0627  
                               ___lwtoft 0F05                          ___lwdiv@divisor 0020  
                        ___lwdiv@counter 0024                      ?_check_over_current 0070  
                               __ptext10 0F5B                                 __ptext11 0627  
                               __ptext12 0F05                                 __ptext13 06FE  
                               __ptext14 0F3B                                 __ptext15 0F1D  
                               __ptext16 0694                                 __ptext17 0FD2  
                    _over_current_config 026A                            __size_of_main 024A  
                          __size_of_modf 0050                     ??_check_over_current 002C  
                   ?_over_current_config 0070                                 modf@iptr 004F  
                               intlevel1 0000                     __size_of_Tx_Received 002E  
                  ??_over_current_config 0050                               _OPTION_REG 0081  
                          ?_eeprom_write 0075                             ?_eeprom_read 0070  
