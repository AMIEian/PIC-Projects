

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu May 21 17:03:17 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  001D                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0087                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  010F                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001B                     	;# 
   126  001B                     	;# 
   127  001C                     	;# 
   128  001D                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  0081                     	;# 
   132  0085                     	;# 
   133  0086                     	;# 
   134  0087                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266                           
   267                           	psect	strings
   268  0400                     __pstrings:	
   269  0400                     stringtab:	
   270  0400                     __stringtab:	
   271                           
   272                           ;	String table - string pointers are 1 byte each
   273  0400  1BFF               	btfsc	btemp+1,7
   274  0401  2C0A               	ljmp	stringcode
   275  0402  1383               	bcf	3,7
   276  0403  187F               	btfsc	btemp+1,0
   277  0404  1783               	bsf	3,7
   278  0405  0800               	movf	0,w
   279  0406  0A84               	incf	4,f
   280  0407  1903               	skipnz
   281  0408  0AFF               	incf	btemp+1,f
   282  0409  0008               	return
   283  040A                     stringcode:	
   284  040A                     stringdir:	
   285  040A  3004               	movlw	high stringdir
   286  040B  008A               	movwf	10
   287  040C  0804               	movf	4,w
   288  040D  0A84               	incf	4,f
   289  040E  0782               	addwf	2,f
   290  040F                     __stringbase:	
   291  040F  3400               	retlw	0
   292  0410                     __end_of__stringtab:	
   293  0410                     _dpowers:	
   294  0410  3401               	retlw	1
   295  0411  3400               	retlw	0
   296  0412  340A               	retlw	10
   297  0413  3400               	retlw	0
   298  0414  3464               	retlw	100
   299  0415  3400               	retlw	0
   300  0416  34E8               	retlw	232
   301  0417  3403               	retlw	3
   302  0418  3410               	retlw	16
   303  0419  3427               	retlw	39
   304  041A                     __end_of_dpowers:	
   305  000C                     _PIR1bits	set	12
   306  001A                     _RCREG	set	26
   307  0018                     _RCSTAbits	set	24
   308  0019                     _TXREG	set	25
   309  005F                     _GIE	set	95
   310  005E                     _PEIE	set	94
   311  0030                     _RB0	set	48
   312  0031                     _RB1	set	49
   313  003D                     _RC5	set	61
   314  0065                     _RCIF	set	101
   315  0099                     _SPBRG	set	153
   316  0086                     _TRISB	set	134
   317  0087                     _TRISC	set	135
   318  0098                     _TXSTAbits	set	152
   319  0465                     _RCIE	set	1125
   320  041A                     __stringdata:	
   321  041A                     STR_15:	
   322  041A  3453               	retlw	83	;'S'
   323  041B  344F               	retlw	79	;'O'
   324  041C  344D               	retlw	77	;'M'
   325  041D  3445               	retlw	69	;'E'
   326  041E  3442               	retlw	66	;'B'
   327  041F  344F               	retlw	79	;'O'
   328  0420  3444               	retlw	68	;'D'
   329  0421  3459               	retlw	89	;'Y'
   330  0422  3420               	retlw	32	;' '
   331  0423  3448               	retlw	72	;'H'
   332  0424  3441               	retlw	65	;'A'
   333  0425  3453               	retlw	83	;'S'
   334  0426  3420               	retlw	32	;' '
   335  0427  3445               	retlw	69	;'E'
   336  0428  344E               	retlw	78	;'N'
   337  0429  3454               	retlw	84	;'T'
   338  042A  3445               	retlw	69	;'E'
   339  042B  3452               	retlw	82	;'R'
   340  042C  3445               	retlw	69	;'E'
   341  042D  3444               	retlw	68	;'D'
   342  042E  3420               	retlw	32	;' '
   343  042F  3449               	retlw	73	;'I'
   344  0430  344E               	retlw	78	;'N'
   345  0431  3454               	retlw	84	;'T'
   346  0432  344F               	retlw	79	;'O'
   347  0433  3420               	retlw	32	;' '
   348  0434  3448               	retlw	72	;'H'
   349  0435  344F               	retlw	79	;'O'
   350  0436  3455               	retlw	85	;'U'
   351  0437  3453               	retlw	83	;'S'
   352  0438  3445               	retlw	69	;'E'
   353  0439  3421               	retlw	33	;'!'
   354  043A  3400               	retlw	0
   355  043B                     STR_12:	
   356  043B  3441               	retlw	65	;'A'
   357  043C  3454               	retlw	84	;'T'
   358  043D  3444               	retlw	68	;'D'
   359  043E  3439               	retlw	57	;'9'
   360  043F  3434               	retlw	52	;'4'
   361  0440  3430               	retlw	48	;'0'
   362  0441  3433               	retlw	51	;'3'
   363  0442  3435               	retlw	53	;'5'
   364  0443  3438               	retlw	56	;'8'
   365  0444  3435               	retlw	53	;'5'
   366  0445  3434               	retlw	52	;'4'
   367  0446  3433               	retlw	51	;'3'
   368  0447  3436               	retlw	54	;'6'
   369  0448  343B               	retlw	59	;';'
   370  0449  3400               	retlw	0
   371  044A                     STR_8:	
   372  044A  3441               	retlw	65	;'A'
   373  044B  3454               	retlw	84	;'T'
   374  044C  342B               	retlw	43	;'+'
   375  044D  3443               	retlw	67	;'C'
   376  044E  344D               	retlw	77	;'M'
   377  044F  3447               	retlw	71	;'G'
   378  0450  3453               	retlw	83	;'S'
   379  0451  343D               	retlw	61	;'='
   380  0452  3420               	retlw	32	;' '
   381  0453  3425               	retlw	37	;'%'
   382  0454  3473               	retlw	115	;'s'
   383  0455  3400               	retlw	0
   384  0456                     STR_14:	
   385  0456  3439               	retlw	57	;'9'
   386  0457  3434               	retlw	52	;'4'
   387  0458  3430               	retlw	48	;'0'
   388  0459  3433               	retlw	51	;'3'
   389  045A  3435               	retlw	53	;'5'
   390  045B  3438               	retlw	56	;'8'
   391  045C  3435               	retlw	53	;'5'
   392  045D  3434               	retlw	52	;'4'
   393  045E  3433               	retlw	51	;'3'
   394  045F  3436               	retlw	54	;'6'
   395  0460  3400               	retlw	0
   396  0461                     STR_3:	
   397  0461  3441               	retlw	65	;'A'
   398  0462  3454               	retlw	84	;'T'
   399  0463  342B               	retlw	43	;'+'
   400  0464  3443               	retlw	67	;'C'
   401  0465  344D               	retlw	77	;'M'
   402  0466  3447               	retlw	71	;'G'
   403  0467  3444               	retlw	68	;'D'
   404  0468  343D               	retlw	61	;'='
   405  0469  3425               	retlw	37	;'%'
   406  046A  3464               	retlw	100	;'d'
   407  046B  3400               	retlw	0
   408  046C                     STR_6:	
   409  046C  3441               	retlw	65	;'A'
   410  046D  3454               	retlw	84	;'T'
   411  046E  342B               	retlw	43	;'+'
   412  046F  3443               	retlw	67	;'C'
   413  0470  344D               	retlw	77	;'M'
   414  0471  3447               	retlw	71	;'G'
   415  0472  3452               	retlw	82	;'R'
   416  0473  343D               	retlw	61	;'='
   417  0474  3425               	retlw	37	;'%'
   418  0475  3464               	retlw	100	;'d'
   419  0476  3400               	retlw	0
   420  0477                     STR_11:	
   421  0477  3441               	retlw	65	;'A'
   422  0478  3454               	retlw	84	;'T'
   423  0479  342B               	retlw	43	;'+'
   424  047A  3443               	retlw	67	;'C'
   425  047B  344D               	retlw	77	;'M'
   426  047C  3447               	retlw	71	;'G'
   427  047D  3444               	retlw	68	;'D'
   428  047E  343D               	retlw	61	;'='
   429  047F  3431               	retlw	49	;'1'
   430  0480  3400               	retlw	0
   431  0481                     STR_10:	
   432  0481  3441               	retlw	65	;'A'
   433  0482  3454               	retlw	84	;'T'
   434  0483  342B               	retlw	43	;'+'
   435  0484  3443               	retlw	67	;'C'
   436  0485  344D               	retlw	77	;'M'
   437  0486  3447               	retlw	71	;'G'
   438  0487  3446               	retlw	70	;'F'
   439  0488  343D               	retlw	61	;'='
   440  0489  3431               	retlw	49	;'1'
   441  048A  3400               	retlw	0
   442  048B                     STR_16:	
   443  048B  3428               	retlw	40	;'('
   444  048C  346E               	retlw	110	;'n'
   445  048D  3475               	retlw	117	;'u'
   446  048E  346C               	retlw	108	;'l'
   447  048F  346C               	retlw	108	;'l'
   448  0490  3429               	retlw	41	;')'
   449  0491  3400               	retlw	0
   450  0492                     STR_5:	
   451  0492  342B               	retlw	43	;'+'
   452  0493  3443               	retlw	67	;'C'
   453  0494  344D               	retlw	77	;'M'
   454  0495  3454               	retlw	84	;'T'
   455  0496  3449               	retlw	73	;'I'
   456  0497  343A               	retlw	58	;':'
   457  0498  3400               	retlw	0
   458  0499                     STR_9:	
   459  0499  3443               	retlw	67	;'C'
   460  049A  344D               	retlw	77	;'M'
   461  049B  3447               	retlw	71	;'G'
   462  049C  3453               	retlw	83	;'S'
   463  049D  343A               	retlw	58	;':'
   464  049E  3400               	retlw	0
   465  049F                     STR_13:	
   466  049F  3441               	retlw	65	;'A'
   467  04A0  3454               	retlw	84	;'T'
   468  04A1  3448               	retlw	72	;'H'
   469  04A2  3400               	retlw	0
   470  04A3                     STR_7:	
   471  04A3  3445               	retlw	69	;'E'
   472  04A4  3447               	retlw	71	;'G'
   473  04A5  344C               	retlw	76	;'L'
   474  04A6  3400               	retlw	0
   475  04A7                     STR_2:	
   476  04A7  344F               	retlw	79	;'O'
   477  04A8  344B               	retlw	75	;'K'
   478  04A9  3400               	retlw	0
   479  04AA                     STR_1:	
   480  04AA  3441               	retlw	65	;'A'
   481  04AB  3454               	retlw	84	;'T'
   482  04AC  3400               	retlw	0
   483  04AD                     __end_of__stringdata:	
   484                           
   485                           	psect	cinit
   486  0015                     start_initialization:	
   487                           ; #config settings
   488                           
   489  0015                     __initialization:	
   490                           
   491                           ; Clear objects allocated to COMMON
   492  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   493  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   494                           
   495                           ; Clear objects allocated to BANK0
   496  0017  01DF               	clrf	__pbssBANK0& (0+127)
   497  0018  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   498  0019  01E1               	clrf	(__pbssBANK0+2)& (0+127)
   499  001A  01E2               	clrf	(__pbssBANK0+3)& (0+127)
   500  001B  01E3               	clrf	(__pbssBANK0+4)& (0+127)
   501                           
   502                           ; Clear objects allocated to BANK1
   503  001C  1383               	bcf	3,7	;select IRP bank0
   504  001D  30BC               	movlw	low __pbssBANK1
   505  001E  0084               	movwf	4
   506  001F  30CB               	movlw	low (__pbssBANK1+15)
   507  0020  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   508                           
   509                           ; Clear objects allocated to BANK3
   510  0025  1783               	bsf	3,7	;select IRP bank2
   511  0026  3090               	movlw	low __pbssBANK3
   512  0027  0084               	movwf	4
   513  0028  30D6               	movlw	low (__pbssBANK3+70)
   514  0029  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   515                           
   516                           ; Clear objects allocated to BANK2
   517  002E  3010               	movlw	low __pbssBANK2
   518  002F  0084               	movwf	4
   519  0030  3050               	movlw	low (__pbssBANK2+64)
   520  0031  120A  118A  27F7   	fcall	clear_ram0
   521  0034                     end_of_initialization:	
   522                           ;End of C runtime variable initialization code
   523                           
   524  0034                     __end_of__initialization:	
   525  0034  0183               	clrf	3
   526  0035  120A  118A  2956   	ljmp	_main	;jump to C main() function
   527                           
   528                           	psect	bssCOMMON
   529  0079                     __pbssCOMMON:	
   530  0079                     _UQEnd:	
   531  0079                     	ds	1
   532  007A                     _UQFront:	
   533  007A                     	ds	1
   534                           
   535                           	psect	bssBANK0
   536  005F                     __pbssBANK0:	
   537  005F                     USARTWriteInt@F1040:	
   538  005F                     	ds	5
   539                           
   540                           	psect	bssBANK1
   541  00BC                     __pbssBANK1:	
   542  00BC                     _MSG_number:	
   543  00BC                     	ds	15
   544                           
   545                           	psect	bssBANK3
   546  0190                     __pbssBANK3:	
   547  0190                     _sim300_buffer:	
   548  0190                     	ds	70
   549                           
   550                           	psect	bssBANK2
   551  0110                     __pbssBANK2:	
   552  0110                     _URBuff:	
   553  0110                     	ds	64
   554                           
   555                           	psect	clrtext
   556  07F7                     clear_ram0:	
   557                           ;	Called with FSR containing the base address, and
   558                           ;	W with the last address+1
   559                           
   560  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   561  07F8                     clrloop0:	
   562  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   563  07F9  0A84               	incf	4,f	;increment pointer
   564  07FA  0604               	xorwf	4,w	;XOR with final address
   565  07FB  1903               	btfsc	3,2	;have we reached the end yet?
   566  07FC  3400               	retlw	0	;all done for this memory range, return
   567  07FD  0604               	xorwf	4,w	;XOR again to restore value
   568  07FE  2FF8               	goto	clrloop0	;do the next byte
   569                           
   570                           	psect	cstackBANK1
   571  00A0                     __pcstackBANK1:	
   572  00A0                     SIM300SendMsg@cmd:	
   573                           
   574                           ; 25 bytes @ 0x0
   575  00A0                     	ds	25
   576  00B9                     SIM300SendMsg@num:	
   577                           
   578                           ; 1 bytes @ 0x19
   579  00B9                     	ds	1
   580  00BA                     SIM300SendMsg@len:	
   581                           
   582                           ; 1 bytes @ 0x1A
   583  00BA                     	ds	1
   584  00BB                     SIM300SendMsg@n:	
   585                           
   586                           ; 1 bytes @ 0x1B
   587  00BB                     	ds	1
   588                           
   589                           	psect	cstackCOMMON
   590  0070                     __pcstackCOMMON:	
   591  0070                     ?_USARTHandleRxInt:	
   592  0070                     ??_USARTHandleRxInt:	
   593                           ; 0 bytes @ 0x0
   594                           
   595  0070                     ?_USARTWriteChar:	
   596                           ; 0 bytes @ 0x0
   597                           
   598  0070                     ?_USARTFlushBuffer:	
   599                           ; 0 bytes @ 0x0
   600                           
   601  0070                     ?_isdigit:	
   602                           ; 0 bytes @ 0x0
   603                           
   604  0070                     ?_ISR:	
   605                           ; 1 bit 
   606                           
   607  0070                     ?_main:	
   608                           ; 0 bytes @ 0x0
   609                           
   610  0070                     ?_USARTDataAvailable:	
   611                           ; 0 bytes @ 0x0
   612                           
   613  0070                     ?_USARTReadData:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_toupper:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_SIM300Init:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_SIM300DeleteMsg:	
   623                           ; 1 bytes @ 0x0
   624                           
   625                           
   626                           ; 1 bytes @ 0x0
   627  0070                     	ds	4
   628  0074                     USARTHandleRxInt@data:	
   629                           
   630                           ; 1 bytes @ 0x4
   631  0074                     	ds	1
   632  0075                     ??_ISR:	
   633                           
   634                           ; 0 bytes @ 0x5
   635  0075                     	ds	4
   636                           
   637                           	psect	cstackBANK0
   638  0020                     __pcstackBANK0:	
   639  0020                     ?_USARTInit:	
   640  0020                     ??_USARTDataAvailable:	
   641                           ; 0 bytes @ 0x0
   642                           
   643  0020                     ??_USARTWriteChar:	
   644                           ; 0 bytes @ 0x0
   645                           
   646  0020                     ??_USARTReadData:	
   647                           ; 0 bytes @ 0x0
   648                           
   649  0020                     ??_isdigit:	
   650                           ; 0 bytes @ 0x0
   651                           
   652  0020                     ??_toupper:	
   653                           ; 0 bytes @ 0x0
   654                           
   655  0020                     ?_SIM300CheckResponse:	
   656                           ; 0 bytes @ 0x0
   657                           
   658  0020                     ?_strlen:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0020                     ?___wmul:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0020                     ?___lwdiv:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0020                     SIM300CheckResponse@check:	
   668                           ; 2 bytes @ 0x0
   669                           
   670  0020                     USARTWriteChar@ch:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0020                     _isdigit$594:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0020                     USARTInit@baud_rate:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0020                     ___wmul@multiplier:	
   680                           ; 2 bytes @ 0x0
   681                           
   682  0020                     ___lwdiv@divisor:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0020                     strlen@s:	
   686                           ; 2 bytes @ 0x0
   687                           
   688                           
   689                           ; 2 bytes @ 0x0
   690  0020                     	ds	1
   691  0021                     ?_USARTWriteString:	
   692  0021                     SIM300CheckResponse@len:	
   693                           ; 0 bytes @ 0x1
   694                           
   695  0021                     USARTReadData@data:	
   696                           ; 1 bytes @ 0x1
   697                           
   698  0021                     isdigit@c:	
   699                           ; 1 bytes @ 0x1
   700                           
   701  0021                     toupper@c:	
   702                           ; 1 bytes @ 0x1
   703                           
   704  0021                     USARTWriteString@str:	
   705                           ; 1 bytes @ 0x1
   706                           
   707                           
   708                           ; 2 bytes @ 0x1
   709  0021                     	ds	1
   710  0022                     ??_USARTInit:	
   711  0022                     ??_SIM300CheckResponse:	
   712                           ; 0 bytes @ 0x2
   713                           
   714  0022                     ??_strlen:	
   715                           ; 0 bytes @ 0x2
   716                           
   717  0022                     ??_USARTFlushBuffer:	
   718                           ; 0 bytes @ 0x2
   719                           
   720  0022                     ?_SIM300WaitForResponse:	
   721                           ; 0 bytes @ 0x2
   722                           
   723  0022                     ?_strnicmp:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0022                     strnicmp@s2:	
   727                           ; 2 bytes @ 0x2
   728                           
   729  0022                     SIM300WaitForResponse@timeout:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0022                     ___wmul@multiplicand:	
   733                           ; 2 bytes @ 0x2
   734                           
   735  0022                     ___lwdiv@dividend:	
   736                           ; 2 bytes @ 0x2
   737                           
   738                           
   739                           ; 2 bytes @ 0x2
   740  0022                     	ds	1
   741  0023                     ??_USARTWriteString:	
   742  0023                     strnicmp@len:	
   743                           ; 0 bytes @ 0x3
   744                           
   745                           
   746                           ; 2 bytes @ 0x3
   747  0023                     	ds	1
   748  0024                     ??_SIM300WaitForResponse:	
   749  0024                     ??___wmul:	
   750                           ; 0 bytes @ 0x4
   751                           
   752  0024                     ??___lwdiv:	
   753                           ; 0 bytes @ 0x4
   754                           
   755  0024                     SIM300CheckResponse@i:	
   756                           ; 0 bytes @ 0x4
   757                           
   758  0024                     ___wmul@product:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0024                     strlen@cp:	
   762                           ; 2 bytes @ 0x4
   763                           
   764                           
   765                           ; 2 bytes @ 0x4
   766  0024                     	ds	1
   767  0025                     ??_strnicmp:	
   768  0025                     SIM300CheckResponse@response:	
   769                           ; 0 bytes @ 0x5
   770                           
   771  0025                     SIM300WaitForResponse@n:	
   772                           ; 1 bytes @ 0x5
   773                           
   774  0025                     ___lwdiv@quotient:	
   775                           ; 2 bytes @ 0x5
   776                           
   777                           
   778                           ; 2 bytes @ 0x5
   779  0025                     	ds	1
   780  0026                     ?_USARTReadBuffer:	
   781  0026                     ?_atoi:	
   782                           ; 0 bytes @ 0x6
   783                           
   784  0026                     USARTReadBuffer@len:	
   785                           ; 2 bytes @ 0x6
   786                           
   787                           
   788                           ; 2 bytes @ 0x6
   789  0026                     	ds	1
   790  0027                     SIM300WaitForResponse@i:	
   791  0027                     ___lwdiv@counter:	
   792                           ; 1 bytes @ 0x7
   793                           
   794  0027                     strnicmp@r:	
   795                           ; 1 bytes @ 0x7
   796                           
   797                           
   798                           ; 1 bytes @ 0x7
   799  0027                     	ds	1
   800  0028                     ??_USARTReadBuffer:	
   801  0028                     ??_atoi:	
   802                           ; 0 bytes @ 0x8
   803                           
   804  0028                     ?___lwmod:	
   805                           ; 0 bytes @ 0x8
   806                           
   807  0028                     strnicmp@s1:	
   808                           ; 2 bytes @ 0x8
   809                           
   810  0028                     ___lwmod@divisor:	
   811                           ; 1 bytes @ 0x8
   812                           
   813                           
   814                           ; 2 bytes @ 0x8
   815  0028                     	ds	2
   816  002A                     USARTReadBuffer@buff:	
   817  002A                     atoi@sign:	
   818                           ; 1 bytes @ 0xA
   819                           
   820  002A                     ___lwmod@dividend:	
   821                           ; 1 bytes @ 0xA
   822                           
   823                           
   824                           ; 2 bytes @ 0xA
   825  002A                     	ds	1
   826  002B                     USARTReadBuffer@i:	
   827  002B                     atoi@a:	
   828                           ; 2 bytes @ 0xB
   829                           
   830                           
   831                           ; 2 bytes @ 0xB
   832  002B                     	ds	1
   833  002C                     ??___lwmod:	
   834                           
   835                           ; 0 bytes @ 0xC
   836  002C                     	ds	1
   837  002D                     ?_SIM300Cmd:	
   838  002D                     atoi@s:	
   839                           ; 1 bytes @ 0xD
   840                           
   841  002D                     ___lwmod@counter:	
   842                           ; 1 bytes @ 0xD
   843                           
   844  002D                     SIM300Cmd@cmd:	
   845                           ; 1 bytes @ 0xD
   846                           
   847                           
   848                           ; 2 bytes @ 0xD
   849  002D                     	ds	1
   850  002E                     ?_sprintf:	
   851  002E                     sprintf@f:	
   852                           ; 2 bytes @ 0xE
   853                           
   854                           
   855                           ; 1 bytes @ 0xE
   856  002E                     	ds	1
   857  002F                     ??_SIM300Cmd:	
   858                           
   859                           ; 0 bytes @ 0xF
   860  002F                     	ds	2
   861  0031                     ??_sprintf:	
   862  0031                     SIM300Cmd@i:	
   863                           ; 0 bytes @ 0x11
   864                           
   865                           
   866                           ; 2 bytes @ 0x11
   867  0031                     	ds	2
   868  0033                     SIM300Cmd@len:	
   869                           
   870                           ; 1 bytes @ 0x13
   871  0033                     	ds	1
   872  0034                     ??_SIM300Init:	
   873  0034                     sprintf@flag:	
   874                           ; 0 bytes @ 0x14
   875                           
   876                           
   877                           ; 1 bytes @ 0x14
   878  0034                     	ds	1
   879  0035                     sprintf@prec:	
   880                           
   881                           ; 1 bytes @ 0x15
   882  0035                     	ds	1
   883  0036                     sprintf@ap:	
   884  0036                     SIM300Init@i:	
   885                           ; 1 bytes @ 0x16
   886                           
   887                           
   888                           ; 2 bytes @ 0x16
   889  0036                     	ds	1
   890  0037                     sprintf@sp:	
   891                           
   892                           ; 1 bytes @ 0x17
   893  0037                     	ds	1
   894  0038                     sprintf@_val:	
   895                           
   896                           ; 3 bytes @ 0x18
   897  0038                     	ds	3
   898  003B                     sprintf@c:	
   899                           
   900                           ; 1 bytes @ 0x1B
   901  003B                     	ds	1
   902  003C                     ??_SIM300DeleteMsg:	
   903                           
   904                           ; 0 bytes @ 0x1C
   905  003C                     	ds	3
   906  003F                     SIM300DeleteMsg@cmd:	
   907                           
   908                           ; 16 bytes @ 0x1F
   909  003F                     	ds	16
   910  004F                     SIM300DeleteMsg@i:	
   911                           
   912                           ; 1 bytes @ 0x2F
   913  004F                     	ds	1
   914  0050                     SIM300DeleteMsg@len:	
   915                           
   916                           ; 1 bytes @ 0x30
   917  0050                     	ds	1
   918  0051                     ?_SIM300SendMsg:	
   919  0051                     SIM300SendMsg@msg:	
   920                           ; 1 bytes @ 0x31
   921                           
   922                           
   923                           ; 1 bytes @ 0x31
   924  0051                     	ds	1
   925  0052                     SIM300SendMsg@msg_ref:	
   926                           
   927                           ; 1 bytes @ 0x32
   928  0052                     	ds	1
   929  0053                     ??_SIM300SendMsg:	
   930                           
   931                           ; 0 bytes @ 0x33
   932  0053                     	ds	4
   933  0057                     ??_main:	
   934                           
   935                           ; 0 bytes @ 0x37
   936  0057                     	ds	3
   937  005A                     main@result:	
   938                           
   939                           ; 1 bytes @ 0x3A
   940  005A                     	ds	1
   941  005B                     main@r:	
   942                           
   943                           ; 1 bytes @ 0x3B
   944  005B                     	ds	1
   945  005C                     main@ref:	
   946                           
   947                           ; 1 bytes @ 0x3C
   948  005C                     	ds	1
   949  005D                     main@SMS_Sent:	
   950                           
   951                           ; 1 bytes @ 0x3D
   952  005D                     	ds	1
   953  005E                     main@count:	
   954                           
   955                           ; 1 bytes @ 0x3E
   956  005E                     	ds	1
   957                           
   958                           	psect	maintext
   959  0156                     __pmaintext:	
   960 ;;
   961 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   962 ;;
   963 ;; *************** function _main *****************
   964 ;; Defined at:
   965 ;;		line 12 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\Security.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  count           1   62[BANK0 ] unsigned char 
   970 ;;  SMS_Sent        1   61[BANK0 ] unsigned char 
   971 ;;  ref             1   60[BANK0 ] unsigned char 
   972 ;;  r               1   59[BANK0 ] char 
   973 ;;  result          1   58[BANK0 ] unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 17F/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       5       0       0       0
   985 ;;      Temps:          0       3       0       0       0
   986 ;;      Totals:         0       8       0       0       0
   987 ;;Total ram usage:        8 bytes
   988 ;; Hardware stack levels required when called:    7
   989 ;; This function calls:
   990 ;;		_SIM300Cmd
   991 ;;		_SIM300Init
   992 ;;		_SIM300SendMsg
   993 ;;		_USARTFlushBuffer
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _main
  1001  0156                     _main:	
  1002                           
  1003                           ;Security.c: 14: TRISB = 0xFF;
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1007  0156  30FF               	movlw	255
  1008  0157  1683               	bsf	3,5	;RP0=1, select bank1
  1009  0158  1303               	bcf	3,6	;RP1=0, select bank1
  1010  0159  0086               	movwf	6	;volatile
  1011                           
  1012                           ;Security.c: 15: TRISC = 0x00;
  1013  015A  0187               	clrf	7	;volatile
  1014                           
  1015                           ;Security.c: 16: char count = 0;
  1016  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1017  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1018  015D  01DE               	clrf	main@count
  1019                           
  1020                           ;Security.c: 17: char SMS_Sent = 0;
  1021  015E  01DD               	clrf	main@SMS_Sent
  1022                           
  1023                           ;Security.c: 18: uint8_t ref,result;
  1024                           ;Security.c: 20: for(count = 0; count < 5; count ++)
  1025  015F  01DE               	clrf	main@count
  1026  0160  3005               	movlw	5
  1027  0161  025E               	subwf	main@count,w
  1028  0162  1803               	btfsc	3,0
  1029  0163  298C               	goto	l2548
  1030  0164                     l292:	
  1031                           
  1032                           ;Security.c: 21: {
  1033                           ;Security.c: 22: RC5 = 1;
  1034  0164  1687               	bsf	7,5	;volatile
  1035                           
  1036                           ;Security.c: 23: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1037  0165  3006               	movlw	6
  1038  0166  00D9               	movwf	??_main+2
  1039  0167  3013               	movlw	19
  1040  0168  00D8               	movwf	??_main+1
  1041  0169  30B1               	movlw	177
  1042  016A  00D7               	movwf	??_main
  1043  016B                     u2477:	
  1044  016B  0BD7               	decfsz	??_main,f
  1045  016C  296B               	goto	u2477
  1046  016D  0BD8               	decfsz	??_main+1,f
  1047  016E  296B               	goto	u2477
  1048  016F  0BD9               	decfsz	??_main+2,f
  1049  0170  296B               	goto	u2477
  1050  0171  2972               	nop2
  1051                           
  1052                           ;Security.c: 24: RC5 = 0;
  1053  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0174  1287               	bcf	7,5	;volatile
  1056                           
  1057                           ;Security.c: 25: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1058  0175  3006               	movlw	6
  1059  0176  00D9               	movwf	??_main+2
  1060  0177  3013               	movlw	19
  1061  0178  00D8               	movwf	??_main+1
  1062  0179  30B1               	movlw	177
  1063  017A  00D7               	movwf	??_main
  1064  017B                     u2487:	
  1065  017B  0BD7               	decfsz	??_main,f
  1066  017C  297B               	goto	u2487
  1067  017D  0BD8               	decfsz	??_main+1,f
  1068  017E  297B               	goto	u2487
  1069  017F  0BD9               	decfsz	??_main+2,f
  1070  0180  297B               	goto	u2487
  1071  0181  2982               	nop2
  1072  0182  3001               	movlw	1
  1073  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0185  00D7               	movwf	??_main
  1076  0186  0857               	movf	??_main,w
  1077  0187  07DE               	addwf	main@count,f
  1078  0188  3005               	movlw	5
  1079  0189  025E               	subwf	main@count,w
  1080  018A  1C03               	skipc
  1081  018B  2964               	goto	l292
  1082  018C                     l2548:	
  1083                           
  1084                           ;Security.c: 26: }
  1085                           ;Security.c: 28: int8_t r= SIM300Init();
  1086  018C  120A  118A  25F3  120A  118A  	fcall	_SIM300Init
  1087  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0193  00D7               	movwf	??_main
  1090  0194  0857               	movf	??_main,w
  1091  0195  00DB               	movwf	main@r
  1092                           
  1093                           ;Security.c: 29: _delay(1000000);
  1094  0196  3006               	movlw	6
  1095  0197  00D9               	movwf	??_main+2
  1096  0198  3013               	movlw	19
  1097  0199  00D8               	movwf	??_main+1
  1098  019A  30B1               	movlw	177
  1099  019B  00D7               	movwf	??_main
  1100  019C                     u2497:	
  1101  019C  0BD7               	decfsz	??_main,f
  1102  019D  299C               	goto	u2497
  1103  019E  0BD8               	decfsz	??_main+1,f
  1104  019F  299C               	goto	u2497
  1105  01A0  0BD9               	decfsz	??_main+2,f
  1106  01A1  299C               	goto	u2497
  1107  01A2  29A3               	nop2
  1108                           
  1109                           ;Security.c: 31: if(r == 1)
  1110  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1111  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1112  01A5  085B               	movf	main@r,w
  1113  01A6  3A01               	xorlw	1
  1114  01A7  1D03               	skipz
  1115  01A8  29F1               	goto	l296
  1116                           
  1117                           ;Security.c: 32: {
  1118                           ;Security.c: 34: SIM300Cmd("AT+CMGF=1");
  1119  01A9  3072               	movlw	low (STR_10-__stringbase)
  1120  01AA  00AD               	movwf	SIM300Cmd@cmd
  1121  01AB  3080               	movlw	128
  1122  01AC  00AE               	movwf	SIM300Cmd@cmd+1
  1123  01AD  120A  118A  2522  120A  118A  	fcall	_SIM300Cmd
  1124                           
  1125                           ;Security.c: 35: _delay(1000000);
  1126  01B2  3006               	movlw	6
  1127  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1128  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1129  01B5  00D9               	movwf	??_main+2
  1130  01B6  3013               	movlw	19
  1131  01B7  00D8               	movwf	??_main+1
  1132  01B8  30B1               	movlw	177
  1133  01B9  00D7               	movwf	??_main
  1134  01BA                     u2507:	
  1135  01BA  0BD7               	decfsz	??_main,f
  1136  01BB  29BA               	goto	u2507
  1137  01BC  0BD8               	decfsz	??_main+1,f
  1138  01BD  29BA               	goto	u2507
  1139  01BE  0BD9               	decfsz	??_main+2,f
  1140  01BF  29BA               	goto	u2507
  1141  01C0  29C1               	nop2
  1142                           
  1143                           ;Security.c: 37: SIM300Cmd("AT+CMGD=1");
  1144  01C1  3068               	movlw	low (STR_11-__stringbase)
  1145  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1146  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1147  01C4  00AD               	movwf	SIM300Cmd@cmd
  1148  01C5  3080               	movlw	128
  1149  01C6  00AE               	movwf	SIM300Cmd@cmd+1
  1150  01C7  120A  118A  2522  120A  118A  	fcall	_SIM300Cmd
  1151                           
  1152                           ;Security.c: 38: _delay(1000000);
  1153  01CC  3006               	movlw	6
  1154  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1155  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1156  01CF  00D9               	movwf	??_main+2
  1157  01D0  3013               	movlw	19
  1158  01D1  00D8               	movwf	??_main+1
  1159  01D2  30B1               	movlw	177
  1160  01D3  00D7               	movwf	??_main
  1161  01D4                     u2517:	
  1162  01D4  0BD7               	decfsz	??_main,f
  1163  01D5  29D4               	goto	u2517
  1164  01D6  0BD8               	decfsz	??_main+1,f
  1165  01D7  29D4               	goto	u2517
  1166  01D8  0BD9               	decfsz	??_main+2,f
  1167  01D9  29D4               	goto	u2517
  1168  01DA  29DB               	nop2
  1169                           
  1170                           ;Security.c: 40: USARTFlushBuffer();
  1171  01DB  120A  158A  2701  120A  118A  	fcall	_USARTFlushBuffer
  1172                           
  1173                           ;Security.c: 42: RC5 = 1;
  1174  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1175  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1176  01E2  1687               	bsf	7,5	;volatile
  1177                           
  1178                           ;Security.c: 43: _delay(1000000);
  1179  01E3  3006               	movlw	6
  1180  01E4  00D9               	movwf	??_main+2
  1181  01E5  3013               	movlw	19
  1182  01E6  00D8               	movwf	??_main+1
  1183  01E7  30B1               	movlw	177
  1184  01E8  00D7               	movwf	??_main
  1185  01E9                     u2527:	
  1186  01E9  0BD7               	decfsz	??_main,f
  1187  01EA  29E9               	goto	u2527
  1188  01EB  0BD8               	decfsz	??_main+1,f
  1189  01EC  29E9               	goto	u2527
  1190  01ED  0BD9               	decfsz	??_main+2,f
  1191  01EE  29E9               	goto	u2527
  1192  01EF  29F0               	nop2
  1193                           
  1194                           ;Security.c: 44: }
  1195  01F0  2A67               	goto	l2584
  1196  01F1                     l296:	
  1197                           ;Security.c: 45: else
  1198                           ;Security.c: 46: {
  1199                           ;Security.c: 48: while(1)
  1200                           
  1201                           
  1202                           ;Security.c: 49: {
  1203                           ;Security.c: 50: RC5 = 1;
  1204  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1205  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1206  01F3  1687               	bsf	7,5	;volatile
  1207                           
  1208                           ;Security.c: 51: _delay(100000);
  1209  01F4  3082               	movlw	130
  1210  01F5  00D8               	movwf	??_main+1
  1211  01F6  30DD               	movlw	221
  1212  01F7  00D7               	movwf	??_main
  1213  01F8                     u2537:	
  1214  01F8  0BD7               	decfsz	??_main,f
  1215  01F9  29F8               	goto	u2537
  1216  01FA  0BD8               	decfsz	??_main+1,f
  1217  01FB  29F8               	goto	u2537
  1218  01FC  29FD               	nop2
  1219                           
  1220                           ;Security.c: 52: RC5 = 0;
  1221  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1222  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1223  01FF  1287               	bcf	7,5	;volatile
  1224                           
  1225                           ;Security.c: 53: _delay(100000);
  1226  0200  3082               	movlw	130
  1227  0201  00D8               	movwf	??_main+1
  1228  0202  30DD               	movlw	221
  1229  0203  00D7               	movwf	??_main
  1230  0204                     u2547:	
  1231  0204  0BD7               	decfsz	??_main,f
  1232  0205  2A04               	goto	u2547
  1233  0206  0BD8               	decfsz	??_main+1,f
  1234  0207  2A04               	goto	u2547
  1235  0208  2A09               	nop2
  1236  0209  29F1               	goto	l296
  1237  020A                     l2570:	
  1238                           ;Security.c: 58: {
  1239                           ;Security.c: 59: while(RB0 == 1)
  1240                           
  1241                           ;Security.c: 54: }
  1242                           ;Security.c: 55: }
  1243                           ;Security.c: 57: while(1)
  1244                           
  1245                           
  1246                           ;Security.c: 60: {
  1247                           ;Security.c: 62: SIM300Cmd("ATD9403585436;");
  1248  020A  302C               	movlw	low (STR_12-__stringbase)
  1249  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1250  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1251  020D  00AD               	movwf	SIM300Cmd@cmd
  1252  020E  3080               	movlw	128
  1253  020F  00AE               	movwf	SIM300Cmd@cmd+1
  1254  0210  120A  118A  2522  120A  118A  	fcall	_SIM300Cmd
  1255                           
  1256                           ;Security.c: 63: _delay((unsigned long)((30000)*(4000000/4000.0)));
  1257  0215  3099               	movlw	153
  1258  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0218  00D9               	movwf	??_main+2
  1261  0219  3032               	movlw	50
  1262  021A  00D8               	movwf	??_main+1
  1263  021B  3038               	movlw	56
  1264  021C  00D7               	movwf	??_main
  1265  021D                     u2557:	
  1266  021D  0BD7               	decfsz	??_main,f
  1267  021E  2A1D               	goto	u2557
  1268  021F  0BD8               	decfsz	??_main+1,f
  1269  0220  2A1D               	goto	u2557
  1270  0221  0BD9               	decfsz	??_main+2,f
  1271  0222  2A1D               	goto	u2557
  1272  0223  2A24               	nop2
  1273                           
  1274                           ;Security.c: 65: SIM300Cmd("ATH");
  1275  0224  3090               	movlw	low (STR_13-__stringbase)
  1276  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0227  00AD               	movwf	SIM300Cmd@cmd
  1279  0228  3080               	movlw	128
  1280  0229  00AE               	movwf	SIM300Cmd@cmd+1
  1281  022A  120A  118A  2522  120A  118A  	fcall	_SIM300Cmd
  1282                           
  1283                           ;Security.c: 66: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1284  022F  3006               	movlw	6
  1285  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0232  00D9               	movwf	??_main+2
  1288  0233  3013               	movlw	19
  1289  0234  00D8               	movwf	??_main+1
  1290  0235  30B1               	movlw	177
  1291  0236  00D7               	movwf	??_main
  1292  0237                     u2567:	
  1293  0237  0BD7               	decfsz	??_main,f
  1294  0238  2A37               	goto	u2567
  1295  0239  0BD8               	decfsz	??_main+1,f
  1296  023A  2A37               	goto	u2567
  1297  023B  0BD9               	decfsz	??_main+2,f
  1298  023C  2A37               	goto	u2567
  1299  023D  2A3E               	nop2
  1300                           
  1301                           ;Security.c: 67: if(SMS_Sent == 0)
  1302  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1303  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0240  08DD               	movf	main@SMS_Sent,f
  1305  0241  1D03               	skipz
  1306  0242  2A67               	goto	l2584
  1307                           
  1308                           ;Security.c: 68: {
  1309                           ;Security.c: 71: result=SIM300SendMsg("9403585436","SOMEBODY HAS ENTERED INTO HOUSE!",&r
      +                          ef);
  1310  0243  300B               	movlw	(STR_15-__stringbase)& (0+255)
  1311  0244  00D7               	movwf	??_main
  1312  0245  0857               	movf	??_main,w
  1313  0246  00D1               	movwf	SIM300SendMsg@msg
  1314  0247  305C               	movlw	main@ref& (0+255)
  1315  0248  00D8               	movwf	??_main+1
  1316  0249  0858               	movf	??_main+1,w
  1317  024A  00D2               	movwf	SIM300SendMsg@msg_ref
  1318  024B  3047               	movlw	(STR_14-__stringbase)& (0+255)
  1319  024C  120A  118A  2038  120A  118A  	fcall	_SIM300SendMsg
  1320  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0253  00D9               	movwf	??_main+2
  1323  0254  0859               	movf	??_main+2,w
  1324  0255  00DA               	movwf	main@result
  1325                           
  1326                           ;Security.c: 72: _delay((unsigned long)((5000)*(4000000/4000.0)));
  1327  0256  301A               	movlw	26
  1328  0257  00D9               	movwf	??_main+2
  1329  0258  305E               	movlw	94
  1330  0259  00D8               	movwf	??_main+1
  1331  025A  3086               	movlw	134
  1332  025B  00D7               	movwf	??_main
  1333  025C                     u2577:	
  1334  025C  0BD7               	decfsz	??_main,f
  1335  025D  2A5C               	goto	u2577
  1336  025E  0BD8               	decfsz	??_main+1,f
  1337  025F  2A5C               	goto	u2577
  1338  0260  0BD9               	decfsz	??_main+2,f
  1339  0261  2A5C               	goto	u2577
  1340  0262  0000               	nop
  1341                           
  1342                           ;Security.c: 73: SMS_Sent = 1;
  1343  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0265  01DD               	clrf	main@SMS_Sent
  1346  0266  0ADD               	incf	main@SMS_Sent,f
  1347  0267                     l2584:	
  1348  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0269  1806               	btfsc	6,0	;volatile
  1351  026A  2A0A               	goto	l2570
  1352                           
  1353                           ;Security.c: 74: }
  1354                           ;Security.c: 75: }
  1355                           ;Security.c: 76: SMS_Sent = 0;
  1356  026B  01DD               	clrf	main@SMS_Sent
  1357  026C  2A67               	goto	l2584
  1358  026D                     __end_of_main:	
  1359                           
  1360                           	psect	text1
  1361  0038                     __ptext1:	
  1362 ;; *************** function _SIM300SendMsg *****************
  1363 ;; Defined at:
  1364 ;;		line 375 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\sim300.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  num             1    wreg     PTR const unsigned char 
  1367 ;;		 -> STR_14(11), 
  1368 ;;  msg             1   49[BANK0 ] PTR const unsigned char 
  1369 ;;		 -> STR_15(33), 
  1370 ;;  msg_ref         1   50[BANK0 ] PTR unsigned char 
  1371 ;;		 -> main@ref(1), 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  num             1   25[BANK1 ] PTR const unsigned char 
  1374 ;;		 -> STR_14(11), 
  1375 ;;  cmd            25    0[BANK1 ] unsigned char [25]
  1376 ;;  n               1   27[BANK1 ] unsigned char 
  1377 ;;  len             1   26[BANK1 ] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      char 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       2       0       0       0
  1388 ;;      Locals:         0       0      28       0       0
  1389 ;;      Temps:          0       4       0       0       0
  1390 ;;      Totals:         0       6      28       0       0
  1391 ;;Total ram usage:       34 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    6
  1394 ;; This function calls:
  1395 ;;		_SIM300Cmd
  1396 ;;		_SIM300DeleteMsg
  1397 ;;		_SIM300WaitForResponse
  1398 ;;		_USARTDataAvailable
  1399 ;;		_USARTFlushBuffer
  1400 ;;		_USARTReadBuffer
  1401 ;;		_USARTWriteChar
  1402 ;;		_USARTWriteString
  1403 ;;		_atoi
  1404 ;;		_sprintf
  1405 ;;		_strlen
  1406 ;;		_strnicmp
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _SIM300SendMsg
  1414  0038                     _SIM300SendMsg:	
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _SIM300SendMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1418                           ;SIM300SendMsg@num stored from wreg
  1419  0038  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0039  1303               	bcf	3,6	;RP1=0, select bank1
  1421  003A  00B9               	movwf	SIM300SendMsg@num^(0+128)
  1422                           
  1423                           ;sim300.c: 377: USARTFlushBuffer();
  1424  003B  120A  158A  2701  120A  118A  	fcall	_USARTFlushBuffer
  1425                           
  1426                           ;sim300.c: 379: char cmd[25];
  1427                           ;sim300.c: 381: sprintf(cmd,"AT+CMGS= %s",num);
  1428  0040  303B               	movlw	(STR_8-__stringbase)& (0+255)
  1429  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0043  00D3               	movwf	??_SIM300SendMsg
  1432  0044  0853               	movf	??_SIM300SendMsg,w
  1433  0045  00AE               	movwf	sprintf@f
  1434  0046  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0047  1303               	bcf	3,6	;RP1=0, select bank1
  1436  0048  0839               	movf	SIM300SendMsg@num^(0+128),w
  1437  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1438  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1439  004B  00D4               	movwf	??_SIM300SendMsg+1
  1440  004C  0854               	movf	??_SIM300SendMsg+1,w
  1441  004D  00AF               	movwf	?_sprintf+1
  1442  004E  30A0               	movlw	SIM300SendMsg@cmd& (0+255)
  1443  004F  120A  118A  226D  120A  118A  	fcall	_sprintf
  1444                           
  1445                           ;sim300.c: 383: cmd[8]=0x22;
  1446  0054  3022               	movlw	34
  1447  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0057  00D3               	movwf	??_SIM300SendMsg
  1450  0058  0853               	movf	??_SIM300SendMsg,w
  1451  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1452  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1453  005B  00A8               	movwf	(SIM300SendMsg@cmd^(0+128)+8)
  1454                           
  1455                           ;sim300.c: 385: uint8_t n=strlen(cmd);
  1456  005C  30A0               	movlw	SIM300SendMsg@cmd& (0+255)
  1457  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1458  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1459  005F  00A0               	movwf	strlen@s
  1460  0060  3000               	movlw	0
  1461  0061  00A1               	movwf	strlen@s+1
  1462  0062  120A  118A  27CE  120A  118A  	fcall	_strlen
  1463  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0069  0820               	movf	?_strlen,w
  1466  006A  00D3               	movwf	??_SIM300SendMsg
  1467  006B  0853               	movf	??_SIM300SendMsg,w
  1468  006C  1683               	bsf	3,5	;RP0=1, select bank1
  1469  006D  1303               	bcf	3,6	;RP1=0, select bank1
  1470  006E  00BB               	movwf	SIM300SendMsg@n^(0+128)
  1471                           
  1472                           ;sim300.c: 387: cmd[n]=0x22;
  1473  006F  3022               	movlw	34
  1474  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0072  00D3               	movwf	??_SIM300SendMsg
  1477  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0075  083B               	movf	SIM300SendMsg@n^(0+128),w
  1480  0076  3EA0               	addlw	SIM300SendMsg@cmd& (0+255)
  1481  0077  0084               	movwf	4
  1482  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1484  007A  0853               	movf	??_SIM300SendMsg,w
  1485  007B  1383               	bcf	3,7	;select IRP bank1
  1486  007C  0080               	movwf	0
  1487                           
  1488                           ;sim300.c: 388: cmd[n+1]='\0';
  1489  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1490  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1491  007F  083B               	movf	SIM300SendMsg@n^(0+128),w
  1492  0080  3E01               	addlw	1
  1493  0081  3EA0               	addlw	SIM300SendMsg@cmd& (0+255)
  1494  0082  0084               	movwf	4
  1495  0083  0180               	clrf	0
  1496                           
  1497                           ;sim300.c: 391: SIM300Cmd(cmd);
  1498  0084  30A0               	movlw	SIM300SendMsg@cmd& (0+255)
  1499  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0087  00AD               	movwf	SIM300Cmd@cmd
  1502  0088  3000               	movlw	0
  1503  0089  00AE               	movwf	SIM300Cmd@cmd+1
  1504  008A  120A  118A  2522  120A  118A  	fcall	_SIM300Cmd
  1505                           
  1506                           ;sim300.c: 393: _delay((unsigned long)((100)*(4000000/4000.0)));
  1507  008F  3082               	movlw	130
  1508  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0092  00D4               	movwf	??_SIM300SendMsg+1
  1511  0093  30DD               	movlw	221
  1512  0094  00D3               	movwf	??_SIM300SendMsg
  1513  0095                     u2587:	
  1514  0095  0BD3               	decfsz	??_SIM300SendMsg,f
  1515  0096  2895               	goto	u2587
  1516  0097  0BD4               	decfsz	??_SIM300SendMsg+1,f
  1517  0098  2895               	goto	u2587
  1518  0099  289A               	nop2
  1519                           
  1520                           ;sim300.c: 395: USARTWriteString(msg);
  1521  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1522  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1523  009C  0851               	movf	SIM300SendMsg@msg,w
  1524  009D  00A1               	movwf	USARTWriteString@str
  1525  009E  3080               	movlw	128
  1526  009F  00A2               	movwf	USARTWriteString@str+1
  1527  00A0  120A  158A  27B6  120A  118A  	fcall	_USARTWriteString
  1528                           
  1529                           ;sim300.c: 397: USARTWriteChar(0x1A);
  1530  00A5  301A               	movlw	26
  1531  00A6  120A  118A  23F3  120A  118A  	fcall	_USARTWriteChar
  1532  00AB                     l2256:	
  1533                           ;sim300.c: 399: while( USARTDataAvailable()<(strlen(msg)+5) );
  1534                           
  1535  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1536  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1537  00AD  0851               	movf	SIM300SendMsg@msg,w
  1538  00AE  00A0               	movwf	strlen@s
  1539  00AF  3080               	movlw	128
  1540  00B0  00A1               	movwf	strlen@s+1
  1541  00B1  120A  118A  27CE  120A  118A  	fcall	_strlen
  1542  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1543  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1544  00B8  0820               	movf	?_strlen,w
  1545  00B9  3E05               	addlw	5
  1546  00BA  00D3               	movwf	??_SIM300SendMsg
  1547  00BB  0821               	movf	?_strlen+1,w
  1548  00BC  1803               	skipnc
  1549  00BD  3E01               	addlw	1
  1550  00BE  3E00               	addlw	0
  1551  00BF  00D4               	movwf	??_SIM300SendMsg+1
  1552  00C0  120A  158A  274A  120A  118A  	fcall	_USARTDataAvailable
  1553  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1554  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1555  00C7  00D5               	movwf	??_SIM300SendMsg+2
  1556  00C8  01D6               	clrf	??_SIM300SendMsg+3
  1557  00C9  0854               	movf	??_SIM300SendMsg+1,w
  1558  00CA  0256               	subwf	??_SIM300SendMsg+3,w
  1559  00CB  1D03               	skipz
  1560  00CC  28CF               	goto	u1845
  1561  00CD  0853               	movf	??_SIM300SendMsg,w
  1562  00CE  0255               	subwf	??_SIM300SendMsg+2,w
  1563  00CF                     u1845:	
  1564  00CF  1C03               	skipc
  1565  00D0  28AB               	goto	l2256
  1566                           
  1567                           ;sim300.c: 402: USARTReadBuffer(sim300_buffer,strlen(msg)+5);
  1568  00D1  0851               	movf	SIM300SendMsg@msg,w
  1569  00D2  00A0               	movwf	strlen@s
  1570  00D3  3080               	movlw	128
  1571  00D4  00A1               	movwf	strlen@s+1
  1572  00D5  120A  118A  27CE  120A  118A  	fcall	_strlen
  1573  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1574  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1575  00DC  0820               	movf	?_strlen,w
  1576  00DD  3E05               	addlw	5
  1577  00DE  00A6               	movwf	USARTReadBuffer@len
  1578  00DF  0821               	movf	?_strlen+1,w
  1579  00E0  1803               	skipnc
  1580  00E1  3E01               	addlw	1
  1581  00E2  3E00               	addlw	0
  1582  00E3  00A7               	movwf	USARTReadBuffer@len+1
  1583  00E4  3090               	movlw	_sim300_buffer& (0+255)
  1584  00E5  120A  158A  2792  120A  118A  	fcall	_USARTReadBuffer
  1585                           
  1586                           ;sim300.c: 404: uint8_t len=SIM300WaitForResponse(6000);
  1587  00EA  3070               	movlw	112
  1588  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1589  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1590  00ED  00A2               	movwf	SIM300WaitForResponse@timeout
  1591  00EE  3017               	movlw	23
  1592  00EF  00A3               	movwf	SIM300WaitForResponse@timeout+1
  1593  00F0  120A  118A  264F  120A  118A  	fcall	_SIM300WaitForResponse
  1594  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1595  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1596  00F7  00D3               	movwf	??_SIM300SendMsg
  1597  00F8  0853               	movf	??_SIM300SendMsg,w
  1598  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1599  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1600  00FB  00BA               	movwf	SIM300SendMsg@len^(0+128)
  1601                           
  1602                           ;sim300.c: 406: if(len==0)
  1603  00FC  08BA               	movf	SIM300SendMsg@len^(0+128),f
  1604  00FD  1D03               	skipz
  1605  00FE  2901               	goto	l2268
  1606                           
  1607                           ;sim300.c: 407: return -3;
  1608  00FF  30FD               	movlw	-3
  1609  0100  0008               	return
  1610  0101                     l2268:	
  1611                           
  1612                           ;sim300.c: 409: sim300_buffer[len-1]='\0';
  1613  0101  083A               	movf	SIM300SendMsg@len^(0+128),w
  1614  0102  3EFF               	addlw	255
  1615  0103  3E90               	addlw	_sim300_buffer& (0+255)
  1616  0104  0084               	movwf	4
  1617  0105  1783               	bsf	3,7	;select IRP bank3
  1618  0106  0180               	clrf	0
  1619                           
  1620                           ;sim300.c: 410: n = 1;
  1621  0107  01BB               	clrf	SIM300SendMsg@n^(0+128)
  1622  0108  0ABB               	incf	SIM300SendMsg@n^(0+128),f
  1623                           
  1624                           ;sim300.c: 412: if(strnicmp(sim300_buffer+2,"CMGS:",5)==0)
  1625  0109  308A               	movlw	(STR_9-__stringbase)& (0+255)
  1626  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1627  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1628  010C  00D3               	movwf	??_SIM300SendMsg
  1629  010D  0853               	movf	??_SIM300SendMsg,w
  1630  010E  00A2               	movwf	strnicmp@s2
  1631  010F  3005               	movlw	5
  1632  0110  00A3               	movwf	strnicmp@len
  1633  0111  3000               	movlw	0
  1634  0112  00A4               	movwf	strnicmp@len+1
  1635  0113  3092               	movlw	(_sim300_buffer+2)& (0+255)
  1636  0114  120A  118A  26F2  120A  118A  	fcall	_strnicmp
  1637  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1638  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1639  011B  0823               	movf	?_strnicmp+1,w
  1640  011C  0422               	iorwf	?_strnicmp,w
  1641  011D  1D03               	skipz
  1642  011E  2942               	goto	l2286
  1643                           
  1644                           ;sim300.c: 413: {
  1645                           ;sim300.c: 415: *msg_ref=atoi(sim300_buffer+8);
  1646  011F  3098               	movlw	(_sim300_buffer+8)& (0+255)
  1647  0120  120A  118A  24AD  120A  118A  	fcall	_atoi
  1648  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0127  0826               	movf	?_atoi,w
  1651  0128  00D3               	movwf	??_SIM300SendMsg
  1652  0129  0852               	movf	SIM300SendMsg@msg_ref,w
  1653  012A  0084               	movwf	4
  1654  012B  0853               	movf	??_SIM300SendMsg,w
  1655  012C  1383               	bcf	3,7	;select IRP bank0
  1656  012D  0080               	movwf	0
  1657                           
  1658                           ;sim300.c: 417: len = SIM300DeleteMsg(n);
  1659  012E  1683               	bsf	3,5	;RP0=1, select bank1
  1660  012F  1303               	bcf	3,6	;RP1=0, select bank1
  1661  0130  083B               	movf	SIM300SendMsg@n^(0+128),w
  1662  0131  120A  118A  2594  120A  118A  	fcall	_SIM300DeleteMsg
  1663  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0138  00D3               	movwf	??_SIM300SendMsg
  1666  0139  0853               	movf	??_SIM300SendMsg,w
  1667  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1668  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1669  013C  00BA               	movwf	SIM300SendMsg@len^(0+128)
  1670                           
  1671                           ;sim300.c: 419: USARTFlushBuffer();
  1672  013D  120A  158A  2701   	fcall	_USARTFlushBuffer
  1673                           
  1674                           ;sim300.c: 421: return 1;
  1675  0140  3001               	movlw	1
  1676                           
  1677                           ;sim300.c: 422: }
  1678  0141  0008               	return
  1679  0142                     l2286:	
  1680                           
  1681                           ;sim300.c: 423: else
  1682                           ;sim300.c: 424: {
  1683                           ;sim300.c: 425: len = SIM300DeleteMsg(n);
  1684  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0144  083B               	movf	SIM300SendMsg@n^(0+128),w
  1687  0145  120A  118A  2594  120A  118A  	fcall	_SIM300DeleteMsg
  1688  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1689  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1690  014C  00D3               	movwf	??_SIM300SendMsg
  1691  014D  0853               	movf	??_SIM300SendMsg,w
  1692  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1693  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1694  0150  00BA               	movwf	SIM300SendMsg@len^(0+128)
  1695                           
  1696                           ;sim300.c: 426: USARTFlushBuffer();
  1697  0151  120A  158A  2701   	fcall	_USARTFlushBuffer
  1698                           
  1699                           ;sim300.c: 427: return -2;
  1700  0154  30FE               	movlw	-2
  1701  0155  0008               	return
  1702  0156                     __end_of_SIM300SendMsg:	
  1703                           
  1704                           	psect	text2
  1705  04AD                     __ptext2:	
  1706 ;; *************** function _atoi *****************
  1707 ;; Defined at:
  1708 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\atoi.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  s               1    wreg     PTR const unsigned char 
  1711 ;;		 -> sim300_buffer(70), 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  1714 ;;		 -> sim300_buffer(70), 
  1715 ;;  a               2   11[BANK0 ] int 
  1716 ;;  sign            1   10[BANK0 ] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    6[BANK0 ] int 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       2       0       0       0
  1727 ;;      Locals:         0       4       0       0       0
  1728 ;;      Temps:          0       2       0       0       0
  1729 ;;      Totals:         0       8       0       0       0
  1730 ;;Total ram usage:        8 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    3
  1733 ;; This function calls:
  1734 ;;		___wmul
  1735 ;;		_isdigit
  1736 ;; This function is called by:
  1737 ;;		_SIM300SendMsg
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _atoi
  1743  04AD                     _atoi:	
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1747                           ;atoi@s stored from wreg
  1748  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1749  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1750  04AF  00AD               	movwf	atoi@s
  1751  04B0                     l2156:	
  1752  04B0  082D               	movf	atoi@s,w
  1753  04B1  0084               	movwf	4
  1754  04B2  1783               	bsf	3,7	;select IRP bank2
  1755  04B3  0800               	movf	0,w
  1756  04B4  3A20               	xorlw	32
  1757  04B5  1D03               	btfss	3,2
  1758  04B6  2CBC               	goto	l2158
  1759  04B7                     l2154:	
  1760  04B7  3001               	movlw	1
  1761  04B8  00A8               	movwf	??_atoi
  1762  04B9  0828               	movf	??_atoi,w
  1763  04BA  07AD               	addwf	atoi@s,f
  1764  04BB  2CB0               	goto	l2156
  1765  04BC                     l2158:	
  1766  04BC  082D               	movf	atoi@s,w
  1767  04BD  0084               	movwf	4
  1768  04BE  0800               	movf	0,w
  1769  04BF  3A09               	xorlw	9
  1770  04C0  1903               	skipnz
  1771  04C1  2CB7               	goto	l2154
  1772  04C2  01AB               	clrf	atoi@a
  1773  04C3  01AC               	clrf	atoi@a+1
  1774  04C4  01AA               	clrf	atoi@sign
  1775  04C5  082D               	movf	atoi@s,w
  1776  04C6  0084               	movwf	4
  1777  04C7  0800               	movf	0,w
  1778  04C8  3A2D               	xorlw	45
  1779  04C9  1D03               	skipz
  1780  04CA  2CD0               	goto	l2166
  1781  04CB  3001               	movlw	1
  1782  04CC  00A8               	movwf	??_atoi
  1783  04CD  0828               	movf	??_atoi,w
  1784  04CE  07AA               	addwf	atoi@sign,f
  1785  04CF  2CD6               	goto	l2172
  1786  04D0                     l2166:	
  1787  04D0  082D               	movf	atoi@s,w
  1788  04D1  0084               	movwf	4
  1789  04D2  0800               	movf	0,w
  1790  04D3  3A2B               	xorlw	43
  1791  04D4  1D03               	skipz
  1792  04D5  2CDA               	goto	l2174
  1793  04D6                     l2172:	
  1794  04D6  3001               	movlw	1
  1795  04D7  00A8               	movwf	??_atoi
  1796  04D8  0828               	movf	??_atoi,w
  1797  04D9  07AD               	addwf	atoi@s,f
  1798  04DA                     l2174:	
  1799  04DA  082D               	movf	atoi@s,w
  1800  04DB  0084               	movwf	4
  1801  04DC  0800               	movf	0,w
  1802  04DD  120A  158A  270F  120A  118A  	fcall	_isdigit
  1803  04E2  1C03               	btfss	3,0
  1804  04E3  2D0A               	goto	l2176
  1805  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1806  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1807  04E6  082C               	movf	atoi@a+1,w
  1808  04E7  01A1               	clrf	___wmul@multiplier+1
  1809  04E8  07A1               	addwf	___wmul@multiplier+1,f
  1810  04E9  082B               	movf	atoi@a,w
  1811  04EA  01A0               	clrf	___wmul@multiplier
  1812  04EB  07A0               	addwf	___wmul@multiplier,f
  1813  04EC  300A               	movlw	10
  1814  04ED  00A2               	movwf	___wmul@multiplicand
  1815  04EE  3000               	movlw	0
  1816  04EF  00A3               	movwf	___wmul@multiplicand+1
  1817  04F0  120A  158A  27DB  120A  118A  	fcall	___wmul
  1818  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1819  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1820  04F7  082D               	movf	atoi@s,w
  1821  04F8  0084               	movwf	4
  1822  04F9  1783               	bsf	3,7	;select IRP bank2
  1823  04FA  0800               	movf	0,w
  1824  04FB  0720               	addwf	?___wmul,w
  1825  04FC  00A8               	movwf	??_atoi
  1826  04FD  0821               	movf	?___wmul+1,w
  1827  04FE  1803               	skipnc
  1828  04FF  0A21               	incf	?___wmul+1,w
  1829  0500  00A9               	movwf	??_atoi+1
  1830  0501  0828               	movf	??_atoi,w
  1831  0502  3ED0               	addlw	208
  1832  0503  00AB               	movwf	atoi@a
  1833  0504  0829               	movf	??_atoi+1,w
  1834  0505  1803               	skipnc
  1835  0506  3E01               	addlw	1
  1836  0507  3EFF               	addlw	255
  1837  0508  00AC               	movwf	atoi@a+1
  1838  0509  2CD6               	goto	l2172
  1839  050A                     l2176:	
  1840  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1841  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1842  050C  082A               	movf	atoi@sign,w
  1843  050D  1903               	btfsc	3,2
  1844  050E  2D1B               	goto	l2182
  1845  050F  092B               	comf	atoi@a,w
  1846  0510  00A8               	movwf	??_atoi
  1847  0511  092C               	comf	atoi@a+1,w
  1848  0512  00A9               	movwf	??_atoi+1
  1849  0513  0AA8               	incf	??_atoi,f
  1850  0514  1903               	skipnz
  1851  0515  0AA9               	incf	??_atoi+1,f
  1852  0516  0828               	movf	??_atoi,w
  1853  0517  00A6               	movwf	?_atoi
  1854  0518  0829               	movf	??_atoi+1,w
  1855  0519  00A7               	movwf	?_atoi+1
  1856  051A  0008               	return
  1857  051B                     l2182:	
  1858  051B  082C               	movf	atoi@a+1,w
  1859  051C  01A7               	clrf	?_atoi+1
  1860  051D  07A7               	addwf	?_atoi+1,f
  1861  051E  082B               	movf	atoi@a,w
  1862  051F  01A6               	clrf	?_atoi
  1863  0520  07A6               	addwf	?_atoi,f
  1864  0521  0008               	return
  1865  0522                     __end_of_atoi:	
  1866                           
  1867                           	psect	text3
  1868  0F0F                     __ptext3:	
  1869 ;; *************** function _isdigit *****************
  1870 ;; Defined at:
  1871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\isdigit.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  c               1    wreg     unsigned char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  c               1    1[BANK0 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;		None               void
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0       2       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         0       2       0       0       0
  1889 ;;Total ram usage:        2 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    2
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_atoi
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _isdigit
  1901  0F0F                     _isdigit:	
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1905                           ;isdigit@c stored from wreg
  1906  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0F11  00A1               	movwf	isdigit@c
  1909  0F12  01A0               	clrf	_isdigit$594
  1910  0F13  303A               	movlw	58
  1911  0F14  0221               	subwf	isdigit@c,w
  1912  0F15  1803               	skipnc
  1913  0F16  2F1D               	goto	l2054
  1914  0F17  3030               	movlw	48
  1915  0F18  0221               	subwf	isdigit@c,w
  1916  0F19  1C03               	skipc
  1917  0F1A  2F1D               	goto	l2054
  1918  0F1B  01A0               	clrf	_isdigit$594
  1919  0F1C  0AA0               	incf	_isdigit$594,f
  1920  0F1D                     l2054:	
  1921  0F1D  0C20               	rrf	_isdigit$594,w
  1922  0F1E  0008               	return
  1923  0F1F                     __end_of_isdigit:	
  1924                           
  1925                           	psect	text4
  1926  0594                     __ptext4:	
  1927 ;; *************** function _SIM300DeleteMsg *****************
  1928 ;; Defined at:
  1929 ;;		line 227 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\sim300.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  i               1    wreg     unsigned char 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  i               1   47[BANK0 ] unsigned char 
  1934 ;;  cmd            16   31[BANK0 ] unsigned char [16]
  1935 ;;  len             1   48[BANK0 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      char 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0      18       0       0       0
  1947 ;;      Temps:          0       3       0       0       0
  1948 ;;      Totals:         0      21       0       0       0
  1949 ;;Total ram usage:       21 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    5
  1952 ;; This function calls:
  1953 ;;		_SIM300Cmd
  1954 ;;		_SIM300WaitForResponse
  1955 ;;		_USARTFlushBuffer
  1956 ;;		_sprintf
  1957 ;;		_strnicmp
  1958 ;; This function is called by:
  1959 ;;		_SIM300SendMsg
  1960 ;;		_SIM300WaitForValidMsg
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function _SIM300DeleteMsg
  1966  0594                     _SIM300DeleteMsg:	
  1967                           
  1968                           ;incstack = 0
  1969                           ; Regs used in _SIM300DeleteMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1970                           ;SIM300DeleteMsg@i stored from wreg
  1971  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0596  00CF               	movwf	SIM300DeleteMsg@i
  1974                           
  1975                           ;sim300.c: 229: USARTFlushBuffer();
  1976  0597  120A  158A  2701  120A  118A  	fcall	_USARTFlushBuffer
  1977                           
  1978                           ;sim300.c: 232: char cmd[16];
  1979                           ;sim300.c: 235: sprintf(cmd,"AT+CMGD=%d",i);
  1980  059C  3052               	movlw	(STR_3-__stringbase)& (0+255)
  1981  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1982  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1983  059F  00BC               	movwf	??_SIM300DeleteMsg
  1984  05A0  083C               	movf	??_SIM300DeleteMsg,w
  1985  05A1  00AE               	movwf	sprintf@f
  1986  05A2  084F               	movf	SIM300DeleteMsg@i,w
  1987  05A3  00BD               	movwf	??_SIM300DeleteMsg+1
  1988  05A4  01BE               	clrf	??_SIM300DeleteMsg+2
  1989  05A5  083D               	movf	??_SIM300DeleteMsg+1,w
  1990  05A6  00AF               	movwf	?_sprintf+1
  1991  05A7  083E               	movf	??_SIM300DeleteMsg+2,w
  1992  05A8  00B0               	movwf	?_sprintf+2
  1993  05A9  303F               	movlw	SIM300DeleteMsg@cmd& (0+255)
  1994  05AA  120A  118A  226D  120A  118A  	fcall	_sprintf
  1995                           
  1996                           ;sim300.c: 238: SIM300Cmd(cmd);
  1997  05AF  303F               	movlw	SIM300DeleteMsg@cmd& (0+255)
  1998  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1999  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2000  05B2  00AD               	movwf	SIM300Cmd@cmd
  2001  05B3  3000               	movlw	0
  2002  05B4  00AE               	movwf	SIM300Cmd@cmd+1
  2003  05B5  120A  118A  2522  120A  118A  	fcall	_SIM300Cmd
  2004                           
  2005                           ;sim300.c: 240: uint8_t len=SIM300WaitForResponse(1000);
  2006  05BA  30E8               	movlw	232
  2007  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2008  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2009  05BD  00A2               	movwf	SIM300WaitForResponse@timeout
  2010  05BE  3003               	movlw	3
  2011  05BF  00A3               	movwf	SIM300WaitForResponse@timeout+1
  2012  05C0  120A  118A  264F  120A  118A  	fcall	_SIM300WaitForResponse
  2013  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  2014  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  2015  05C7  00BC               	movwf	??_SIM300DeleteMsg
  2016  05C8  083C               	movf	??_SIM300DeleteMsg,w
  2017  05C9  00D0               	movwf	SIM300DeleteMsg@len
  2018                           
  2019                           ;sim300.c: 242: if(len==0)
  2020  05CA  08D0               	movf	SIM300DeleteMsg@len,f
  2021  05CB  1D03               	skipz
  2022  05CC  2DCF               	goto	l2134
  2023                           
  2024                           ;sim300.c: 243: return -3;
  2025  05CD  30FD               	movlw	-3
  2026  05CE  0008               	return
  2027  05CF                     l2134:	
  2028                           
  2029                           ;sim300.c: 245: sim300_buffer[len-1]='\0';
  2030  05CF  0850               	movf	SIM300DeleteMsg@len,w
  2031  05D0  3EFF               	addlw	255
  2032  05D1  3E90               	addlw	_sim300_buffer& (0+255)
  2033  05D2  0084               	movwf	4
  2034  05D3  1783               	bsf	3,7	;select IRP bank3
  2035  05D4  0180               	clrf	0
  2036                           
  2037                           ;sim300.c: 248: if(strnicmp(sim300_buffer+2,"OK",2)==0)
  2038  05D5  3098               	movlw	(STR_2-__stringbase)& (0+255)
  2039  05D6  00BC               	movwf	??_SIM300DeleteMsg
  2040  05D7  083C               	movf	??_SIM300DeleteMsg,w
  2041  05D8  00A2               	movwf	strnicmp@s2
  2042  05D9  3002               	movlw	2
  2043  05DA  00A3               	movwf	strnicmp@len
  2044  05DB  3000               	movlw	0
  2045  05DC  00A4               	movwf	strnicmp@len+1
  2046  05DD  3092               	movlw	(_sim300_buffer+2)& (0+255)
  2047  05DE  120A  118A  26F2  120A  118A  	fcall	_strnicmp
  2048  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2049  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2050  05E5  0823               	movf	?_strnicmp+1,w
  2051  05E6  0422               	iorwf	?_strnicmp,w
  2052  05E7  1D03               	skipz
  2053  05E8  2DEE               	goto	l2146
  2054                           
  2055                           ;sim300.c: 249: {
  2056                           ;sim300.c: 250: USARTFlushBuffer();
  2057  05E9  120A  158A  2701   	fcall	_USARTFlushBuffer
  2058                           
  2059                           ;sim300.c: 251: return 1;
  2060  05EC  3001               	movlw	1
  2061                           
  2062                           ;sim300.c: 252: }
  2063  05ED  0008               	return
  2064  05EE                     l2146:	
  2065                           
  2066                           ;sim300.c: 253: else
  2067                           ;sim300.c: 254: {
  2068                           ;sim300.c: 255: USARTFlushBuffer();
  2069  05EE  120A  158A  2701   	fcall	_USARTFlushBuffer
  2070                           
  2071                           ;sim300.c: 256: return -2;
  2072  05F1  30FE               	movlw	-2
  2073  05F2  0008               	return
  2074  05F3                     __end_of_SIM300DeleteMsg:	
  2075                           
  2076                           	psect	text5
  2077  06F2                     __ptext5:	
  2078 ;; *************** function _strnicmp *****************
  2079 ;; Defined at:
  2080 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strnicmp.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  s1              1    wreg     PTR const unsigned char 
  2083 ;;		 -> sim300_buffer(70), 
  2084 ;;  s2              1    2[BANK0 ] PTR const unsigned char 
  2085 ;;		 -> STR_9(6), STR_5(7), STR_4(3), 
  2086 ;;  len             2    3[BANK0 ] unsigned int 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  s1              1    8[BANK0 ] PTR const unsigned char 
  2089 ;;		 -> sim300_buffer(70), 
  2090 ;;  r               1    7[BANK0 ] char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  2    2[BANK0 ] int 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       3       0       0       0
  2101 ;;      Locals:         0       2       0       0       0
  2102 ;;      Temps:          0       2       0       0       0
  2103 ;;      Totals:         0       7       0       0       0
  2104 ;;Total ram usage:        7 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    3
  2107 ;; This function calls:
  2108 ;;		_toupper
  2109 ;; This function is called by:
  2110 ;;		_SIM300DeleteMsg
  2111 ;;		_SIM300SendMsg
  2112 ;;		_SIM300WaitForValidMsg
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function _strnicmp
  2118  06F2                     _strnicmp:	
  2119                           
  2120                           ;incstack = 0
  2121                           ; Regs used in _strnicmp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2122                           ;strnicmp@s1 stored from wreg
  2123  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2124  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2125  06F4  00A8               	movwf	strnicmp@s1
  2126  06F5                     l2040:	
  2127  06F5  3001               	movlw	1
  2128  06F6  02A3               	subwf	strnicmp@len,f
  2129  06F7  3000               	movlw	0
  2130  06F8  1C03               	skipc
  2131  06F9  03A4               	decf	strnicmp@len+1,f
  2132  06FA  02A4               	subwf	strnicmp@len+1,f
  2133  06FB  30FF               	movlw	255
  2134  06FC  0624               	xorwf	strnicmp@len+1,w
  2135  06FD  1D03               	skipz
  2136  06FE  2F01               	goto	u1575
  2137  06FF  30FF               	movlw	255
  2138  0700  0623               	xorwf	strnicmp@len,w
  2139  0701                     u1575:	
  2140  0701  1903               	btfsc	3,2
  2141  0702  2F3B               	goto	l2042
  2142  0703  0822               	movf	strnicmp@s2,w
  2143  0704  0084               	movwf	4
  2144  0705  120A  118A  240A  120A  118A  	fcall	stringdir
  2145  070A  120A  158A  271F  120A  118A  	fcall	_toupper
  2146  070F  3AFF               	xorlw	255
  2147  0710  3E01               	addlw	1
  2148  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0712  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0713  00A5               	movwf	??_strnicmp
  2151  0714  0828               	movf	strnicmp@s1,w
  2152  0715  0084               	movwf	4
  2153  0716  1783               	bsf	3,7	;select IRP bank2
  2154  0717  0800               	movf	0,w
  2155  0718  120A  158A  271F  120A  118A  	fcall	_toupper
  2156  071D  1283               	bcf	3,5	;RP0=0, select bank0
  2157  071E  1303               	bcf	3,6	;RP1=0, select bank0
  2158  071F  0725               	addwf	??_strnicmp,w
  2159  0720  00A6               	movwf	??_strnicmp+1
  2160  0721  0826               	movf	??_strnicmp+1,w
  2161  0722  00A7               	movwf	strnicmp@r
  2162  0723  08A7               	movf	strnicmp@r,f
  2163  0724  1D03               	skipz
  2164  0725  2F2C               	goto	l2034
  2165  0726  0828               	movf	strnicmp@s1,w
  2166  0727  0084               	movwf	4
  2167  0728  1783               	bsf	3,7	;select IRP bank2
  2168  0729  0880               	movf	0,f
  2169  072A  1D03               	skipz
  2170  072B  2F32               	goto	l2038
  2171  072C                     l2034:	
  2172  072C  0827               	movf	strnicmp@r,w
  2173  072D  00A2               	movwf	?_strnicmp
  2174  072E  01A3               	clrf	?_strnicmp+1
  2175  072F  1BA2               	btfsc	?_strnicmp,7
  2176  0730  03A3               	decf	?_strnicmp+1,f
  2177  0731  0008               	return
  2178  0732                     l2038:	
  2179  0732  3001               	movlw	1
  2180  0733  00A5               	movwf	??_strnicmp
  2181  0734  0825               	movf	??_strnicmp,w
  2182  0735  07A8               	addwf	strnicmp@s1,f
  2183  0736  3001               	movlw	1
  2184  0737  00A5               	movwf	??_strnicmp
  2185  0738  0825               	movf	??_strnicmp,w
  2186  0739  07A2               	addwf	strnicmp@s2,f
  2187  073A  2EF5               	goto	l2040
  2188  073B                     l2042:	
  2189  073B  01A2               	clrf	?_strnicmp
  2190  073C  01A3               	clrf	?_strnicmp+1
  2191  073D  0008               	return
  2192  073E                     __end_of_strnicmp:	
  2193                           
  2194                           	psect	text6
  2195  0F1F                     __ptext6:	
  2196 ;; *************** function _toupper *****************
  2197 ;; Defined at:
  2198 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\toupper.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  c               1    wreg     unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  c               1    1[BANK0 ] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      unsigned char 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       1       0       0       0
  2214 ;;      Temps:          0       1       0       0       0
  2215 ;;      Totals:         0       2       0       0       0
  2216 ;;Total ram usage:        2 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    2
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_strnicmp
  2223 ;;		_strrichr
  2224 ;;		_strichr
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _toupper
  2230  0F1F                     _toupper:	
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _toupper: [wreg+status,2+status,0]
  2234                           ;toupper@c stored from wreg
  2235  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0F21  00A1               	movwf	toupper@c
  2238  0F22  307B               	movlw	123
  2239  0F23  0221               	subwf	toupper@c,w
  2240  0F24  1803               	skipnc
  2241  0F25  2F2E               	goto	l1898
  2242  0F26  3061               	movlw	97
  2243  0F27  0221               	subwf	toupper@c,w
  2244  0F28  1C03               	skipc
  2245  0F29  2F2E               	goto	l1898
  2246  0F2A  30DF               	movlw	223
  2247  0F2B  00A0               	movwf	??_toupper
  2248  0F2C  0820               	movf	??_toupper,w
  2249  0F2D  05A1               	andwf	toupper@c,f
  2250  0F2E                     l1898:	
  2251  0F2E  0821               	movf	toupper@c,w
  2252  0F2F  0008               	return
  2253  0F30                     __end_of_toupper:	
  2254                           
  2255                           	psect	text7
  2256  026D                     __ptext7:	
  2257 ;; *************** function _sprintf *****************
  2258 ;; Defined at:
  2259 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  sp              1    wreg     PTR unsigned char 
  2262 ;;		 -> SIM300SendMsg@cmd(25), SIM300ReadValidMsg@cmd(16), SIM300DeleteMsg@cmd(16), 
  2263 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2264 ;;		 -> STR_8(12), STR_6(11), STR_3(11), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  2267 ;;		 -> SIM300SendMsg@cmd(25), SIM300ReadValidMsg@cmd(16), SIM300DeleteMsg@cmd(16), 
  2268 ;;  _val            3   24[BANK0 ] struct .
  2269 ;;  c               1   27[BANK0 ] char 
  2270 ;;  ap              1   22[BANK0 ] PTR void [1]
  2271 ;;		 -> ?_sprintf(2), 
  2272 ;;  prec            1   21[BANK0 ] char 
  2273 ;;  flag            1   20[BANK0 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2   14[BANK0 ] int 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       3       0       0       0
  2284 ;;      Locals:         0       8       0       0       0
  2285 ;;      Temps:          0       3       0       0       0
  2286 ;;      Totals:         0      14       0       0       0
  2287 ;;Total ram usage:       14 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    3
  2290 ;; This function calls:
  2291 ;;		___lwdiv
  2292 ;;		___lwmod
  2293 ;; This function is called by:
  2294 ;;		_SIM300DeleteMsg
  2295 ;;		_SIM300SendMsg
  2296 ;;		_SIM300ReadValidMsg
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function _sprintf
  2302  026D                     _sprintf:	
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2306                           ;sprintf@sp stored from wreg
  2307  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2308  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2309  026F  00B7               	movwf	sprintf@sp
  2310                           
  2311                           ;doprnt.c: 494: va_list ap;
  2312                           ;doprnt.c: 499: signed char c;
  2313                           ;doprnt.c: 506: signed char prec;
  2314                           ;doprnt.c: 508: unsigned char flag;
  2315                           ;doprnt.c: 527: union {
  2316                           ;doprnt.c: 528: unsigned int _val;
  2317                           ;doprnt.c: 529: struct {
  2318                           ;doprnt.c: 530: const char * _cp;
  2319                           ;doprnt.c: 531: unsigned _len;
  2320                           ;doprnt.c: 532: } _str;
  2321                           ;doprnt.c: 533: } _val;
  2322                           ;doprnt.c: 542: *ap = __va_start();
  2323  0270  302F               	movlw	(?_sprintf+1)& (0+255)
  2324  0271  00B1               	movwf	??_sprintf
  2325  0272  0831               	movf	??_sprintf,w
  2326  0273  00B6               	movwf	sprintf@ap
  2327  0274                     l2022:	
  2328                           ;doprnt.c: 545: while(c = *f++) {
  2329                           
  2330  0274  3001               	movlw	1
  2331  0275  07AE               	addwf	sprintf@f,f
  2332  0276  30FF               	movlw	-1
  2333  0277  072E               	addwf	sprintf@f,w
  2334  0278  0084               	movwf	4
  2335  0279  120A  118A  240A  120A  118A  	fcall	stringdir
  2336  027E  00B1               	movwf	??_sprintf
  2337  027F  0831               	movf	??_sprintf,w
  2338  0280  00BB               	movwf	sprintf@c
  2339  0281  08BB               	movf	sprintf@c,f
  2340  0282  1903               	btfsc	3,2
  2341  0283  2B78               	goto	l2024
  2342                           
  2343                           ;doprnt.c: 547: if(c != '%')
  2344  0284  083B               	movf	sprintf@c,w
  2345  0285  3A25               	xorlw	37
  2346  0286  1903               	skipnz
  2347  0287  2A94               	goto	l1964
  2348                           
  2349                           ;doprnt.c: 549: {
  2350                           ;doprnt.c: 550: ((*sp++ = (c)));
  2351  0288  083B               	movf	sprintf@c,w
  2352  0289  00B1               	movwf	??_sprintf
  2353  028A  0837               	movf	sprintf@sp,w
  2354  028B  0084               	movwf	4
  2355  028C  0831               	movf	??_sprintf,w
  2356  028D  1383               	bcf	3,7	;select IRP bank0
  2357  028E  0080               	movwf	0
  2358  028F  3001               	movlw	1
  2359  0290  00B1               	movwf	??_sprintf
  2360  0291  0831               	movf	??_sprintf,w
  2361  0292  07B7               	addwf	sprintf@sp,f
  2362                           
  2363                           ;doprnt.c: 551: continue;
  2364  0293  2A74               	goto	l2022
  2365  0294                     l1964:	
  2366                           
  2367                           ;doprnt.c: 552: }
  2368                           ;doprnt.c: 557: flag = 0;
  2369  0294  01B4               	clrf	sprintf@flag
  2370                           
  2371                           ;doprnt.c: 644: switch(c = *f++) {
  2372  0295  2AC7               	goto	l1982
  2373  0296                     l1966:	
  2374                           ;doprnt.c: 737: case 's':
  2375                           
  2376                           ;doprnt.c: 707: case 'i':
  2377                           ;doprnt.c: 708: break;
  2378                           
  2379                           ;doprnt.c: 706: case 'd':
  2380                           
  2381                           ;doprnt.c: 647: goto alldone;
  2382                           
  2383                           ;doprnt.c: 646: case 0:
  2384                           
  2385                           
  2386                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  2387  0296  0836               	movf	sprintf@ap,w
  2388  0297  0084               	movwf	4
  2389  0298  1383               	bcf	3,7	;select IRP bank0
  2390  0299  0800               	movf	0,w
  2391  029A  00B1               	movwf	??_sprintf
  2392  029B  0831               	movf	??_sprintf,w
  2393  029C  00B8               	movwf	sprintf@_val
  2394  029D  3001               	movlw	1
  2395  029E  00B1               	movwf	??_sprintf
  2396  029F  0831               	movf	??_sprintf,w
  2397  02A0  07B6               	addwf	sprintf@ap,f
  2398                           
  2399                           ;doprnt.c: 749: if(!_val._str._cp)
  2400  02A1  08B8               	movf	sprintf@_val,f
  2401  02A2  1D03               	skipz
  2402  02A3  2AA8               	goto	l326
  2403                           
  2404                           ;doprnt.c: 750: _val._str._cp = "(null)";
  2405  02A4  307C               	movlw	(STR_16-__stringbase)& (0+255)
  2406  02A5  00B1               	movwf	??_sprintf
  2407  02A6  0831               	movf	??_sprintf,w
  2408  02A7  00B8               	movwf	sprintf@_val
  2409  02A8                     l326:	
  2410                           ;doprnt.c: 786: while(*_val._str._cp)
  2411                           
  2412  02A8  0838               	movf	sprintf@_val,w
  2413  02A9  0084               	movwf	4
  2414  02AA  120A  118A  240A  120A  118A  	fcall	stringdir
  2415  02AF  3800               	iorlw	0
  2416  02B0  1903               	btfsc	3,2
  2417  02B1  2A74               	goto	l2022
  2418                           
  2419                           ;doprnt.c: 787: ((*sp++ = (*_val._str._cp++)));
  2420  02B2  0838               	movf	sprintf@_val,w
  2421  02B3  0084               	movwf	4
  2422  02B4  120A  118A  240A  120A  118A  	fcall	stringdir
  2423  02B9  00B1               	movwf	??_sprintf
  2424  02BA  0837               	movf	sprintf@sp,w
  2425  02BB  0084               	movwf	4
  2426  02BC  0831               	movf	??_sprintf,w
  2427  02BD  0080               	movwf	0
  2428  02BE  3001               	movlw	1
  2429  02BF  00B1               	movwf	??_sprintf
  2430  02C0  0831               	movf	??_sprintf,w
  2431  02C1  07B8               	addwf	sprintf@_val,f
  2432  02C2  3001               	movlw	1
  2433  02C3  00B1               	movwf	??_sprintf
  2434  02C4  0831               	movf	??_sprintf,w
  2435  02C5  07B7               	addwf	sprintf@sp,f
  2436  02C6  2AA8               	goto	l326
  2437  02C7                     l1982:	
  2438                           ;doprnt.c: 831: }
  2439                           
  2440                           ;doprnt.c: 822: continue;
  2441                           
  2442                           ;doprnt.c: 811: default:
  2443                           
  2444                           ;doprnt.c: 788: continue;
  2445                           
  2446  02C7  3001               	movlw	1
  2447  02C8  07AE               	addwf	sprintf@f,f
  2448  02C9  30FF               	movlw	-1
  2449  02CA  072E               	addwf	sprintf@f,w
  2450  02CB  0084               	movwf	4
  2451  02CC  120A  118A  240A  120A  118A  	fcall	stringdir
  2452  02D1  00BB               	movwf	sprintf@c
  2453                           
  2454                           ; Switch size 1, requested type "space"
  2455                           ; Number of cases is 4, Range of values is 0 to 115
  2456                           ; switch strategies available:
  2457                           ; Name         Instructions Cycles
  2458                           ; simple_byte           13     7 (average)
  2459                           ; jumptable            260     6 (fixed)
  2460                           ;	Chosen strategy is simple_byte
  2461  02D2  3A00               	xorlw	0	; case 0
  2462  02D3  1903               	skipnz
  2463  02D4  2B78               	goto	l2024
  2464  02D5  3A64               	xorlw	100	; case 100
  2465  02D6  1903               	skipnz
  2466  02D7  2ADF               	goto	l1984
  2467  02D8  3A0D               	xorlw	13	; case 105
  2468  02D9  1903               	skipnz
  2469  02DA  2ADF               	goto	l1984
  2470  02DB  3A1A               	xorlw	26	; case 115
  2471  02DC  1903               	skipnz
  2472  02DD  2A96               	goto	l1966
  2473  02DE  2A74               	goto	l2022
  2474  02DF                     l1984:	
  2475                           
  2476                           ;doprnt.c: 1262: {
  2477                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2478  02DF  0836               	movf	sprintf@ap,w
  2479  02E0  0084               	movwf	4
  2480  02E1  1383               	bcf	3,7	;select IRP bank0
  2481  02E2  0800               	movf	0,w
  2482  02E3  00B8               	movwf	sprintf@_val
  2483  02E4  0A84               	incf	4,f
  2484  02E5  0800               	movf	0,w
  2485  02E6  00B9               	movwf	sprintf@_val+1
  2486  02E7  3002               	movlw	2
  2487  02E8  00B1               	movwf	??_sprintf
  2488  02E9  0831               	movf	??_sprintf,w
  2489  02EA  07B6               	addwf	sprintf@ap,f
  2490                           
  2491                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2492  02EB  1FB9               	btfss	sprintf@_val+1,7
  2493  02EC  2AF6               	goto	l1994
  2494                           
  2495                           ;doprnt.c: 1271: flag |= 0x03;
  2496  02ED  3003               	movlw	3
  2497  02EE  00B1               	movwf	??_sprintf
  2498  02EF  0831               	movf	??_sprintf,w
  2499  02F0  04B4               	iorwf	sprintf@flag,f
  2500                           
  2501                           ;doprnt.c: 1272: _val._val = -_val._val;
  2502  02F1  09B8               	comf	sprintf@_val,f
  2503  02F2  09B9               	comf	sprintf@_val+1,f
  2504  02F3  0AB8               	incf	sprintf@_val,f
  2505  02F4  1903               	skipnz
  2506  02F5  0AB9               	incf	sprintf@_val+1,f
  2507  02F6                     l1994:	
  2508                           
  2509                           ;doprnt.c: 1273: }
  2510                           ;doprnt.c: 1275: }
  2511                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2512  02F6  01BB               	clrf	sprintf@c
  2513  02F7  0ABB               	incf	sprintf@c,f
  2514  02F8  083B               	movf	sprintf@c,w
  2515  02F9  3A05               	xorlw	5
  2516  02FA  1903               	btfsc	3,2
  2517  02FB  2B1D               	goto	l2006
  2518  02FC                     l1998:	
  2519                           
  2520                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2521  02FC  083B               	movf	sprintf@c,w
  2522  02FD  00B1               	movwf	??_sprintf
  2523  02FE  0731               	addwf	??_sprintf,w
  2524  02FF  3E01               	addlw	low (_dpowers-__stringbase)
  2525  0300  0084               	movwf	4
  2526  0301  120A  118A  240A  120A  118A  	fcall	stringdir
  2527  0306  00B2               	movwf	??_sprintf+1
  2528  0307  120A  118A  240A  120A  118A  	fcall	stringdir
  2529  030C  00B3               	movwf	??_sprintf+2
  2530  030D  0833               	movf	??_sprintf+2,w
  2531  030E  0239               	subwf	sprintf@_val+1,w
  2532  030F  1D03               	skipz
  2533  0310  2B13               	goto	u1505
  2534  0311  0832               	movf	??_sprintf+1,w
  2535  0312  0238               	subwf	sprintf@_val,w
  2536  0313                     u1505:	
  2537  0313  1C03               	btfss	3,0
  2538  0314  2B1D               	goto	l2006
  2539                           
  2540                           ;doprnt.c: 1316: break;
  2541  0315  3001               	movlw	1
  2542  0316  00B1               	movwf	??_sprintf
  2543  0317  0831               	movf	??_sprintf,w
  2544  0318  07BB               	addwf	sprintf@c,f
  2545  0319  083B               	movf	sprintf@c,w
  2546  031A  3A05               	xorlw	5
  2547  031B  1D03               	skipz
  2548  031C  2AFC               	goto	l1998
  2549  031D                     l2006:	
  2550                           
  2551                           ;doprnt.c: 1431: {
  2552                           ;doprnt.c: 1447: if(flag & 0x03)
  2553  031D  0834               	movf	sprintf@flag,w
  2554  031E  3903               	andlw	3
  2555  031F  1903               	btfsc	3,2
  2556  0320  2B2C               	goto	l2012
  2557                           
  2558                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2559  0321  302D               	movlw	45
  2560  0322  00B1               	movwf	??_sprintf
  2561  0323  0837               	movf	sprintf@sp,w
  2562  0324  0084               	movwf	4
  2563  0325  0831               	movf	??_sprintf,w
  2564  0326  1383               	bcf	3,7	;select IRP bank0
  2565  0327  0080               	movwf	0
  2566  0328  3001               	movlw	1
  2567  0329  00B1               	movwf	??_sprintf
  2568  032A  0831               	movf	??_sprintf,w
  2569  032B  07B7               	addwf	sprintf@sp,f
  2570  032C                     l2012:	
  2571                           
  2572                           ;doprnt.c: 1478: }
  2573                           ;doprnt.c: 1481: prec = c;
  2574  032C  083B               	movf	sprintf@c,w
  2575  032D  00B1               	movwf	??_sprintf
  2576  032E  0831               	movf	??_sprintf,w
  2577  032F  00B5               	movwf	sprintf@prec
  2578  0330                     l2020:	
  2579                           ;doprnt.c: 1483: while(prec--) {
  2580                           
  2581  0330  30FF               	movlw	-1
  2582  0331  00B1               	movwf	??_sprintf
  2583  0332  0831               	movf	??_sprintf,w
  2584  0333  07B5               	addwf	sprintf@prec,f
  2585  0334  0835               	movf	sprintf@prec,w
  2586  0335  3AFF               	xorlw	-1
  2587  0336  1903               	btfsc	3,2
  2588  0337  2A74               	goto	l2022
  2589                           
  2590                           ;doprnt.c: 1487: {
  2591                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2592  0338  300A               	movlw	10
  2593  0339  00A8               	movwf	___lwmod@divisor
  2594  033A  3000               	movlw	0
  2595  033B  00A9               	movwf	___lwmod@divisor+1
  2596  033C  0835               	movf	sprintf@prec,w
  2597  033D  00B1               	movwf	??_sprintf
  2598  033E  0731               	addwf	??_sprintf,w
  2599  033F  3E01               	addlw	low (_dpowers-__stringbase)
  2600  0340  0084               	movwf	4
  2601  0341  120A  118A  240A  120A  118A  	fcall	stringdir
  2602  0346  00A0               	movwf	___lwdiv@divisor
  2603  0347  120A  118A  240A  120A  118A  	fcall	stringdir
  2604  034C  00A1               	movwf	___lwdiv@divisor+1
  2605  034D  0839               	movf	sprintf@_val+1,w
  2606  034E  01A3               	clrf	___lwdiv@dividend+1
  2607  034F  07A3               	addwf	___lwdiv@dividend+1,f
  2608  0350  0838               	movf	sprintf@_val,w
  2609  0351  01A2               	clrf	___lwdiv@dividend
  2610  0352  07A2               	addwf	___lwdiv@dividend,f
  2611  0353  120A  118A  237D  120A  118A  	fcall	___lwdiv
  2612  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2614  035A  0821               	movf	?___lwdiv+1,w
  2615  035B  01AB               	clrf	___lwmod@dividend+1
  2616  035C  07AB               	addwf	___lwmod@dividend+1,f
  2617  035D  0820               	movf	?___lwdiv,w
  2618  035E  01AA               	clrf	___lwmod@dividend
  2619  035F  07AA               	addwf	___lwmod@dividend,f
  2620  0360  120A  118A  23BD  120A  118A  	fcall	___lwmod
  2621  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0367  0828               	movf	?___lwmod,w
  2624  0368  3E30               	addlw	48
  2625  0369  00B2               	movwf	??_sprintf+1
  2626  036A  0832               	movf	??_sprintf+1,w
  2627  036B  00BB               	movwf	sprintf@c
  2628                           
  2629                           ;doprnt.c: 1532: }
  2630                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2631  036C  083B               	movf	sprintf@c,w
  2632  036D  00B1               	movwf	??_sprintf
  2633  036E  0837               	movf	sprintf@sp,w
  2634  036F  0084               	movwf	4
  2635  0370  0831               	movf	??_sprintf,w
  2636  0371  1383               	bcf	3,7	;select IRP bank0
  2637  0372  0080               	movwf	0
  2638  0373  3001               	movlw	1
  2639  0374  00B1               	movwf	??_sprintf
  2640  0375  0831               	movf	??_sprintf,w
  2641  0376  07B7               	addwf	sprintf@sp,f
  2642  0377  2B30               	goto	l2020
  2643  0378                     l2024:	
  2644                           ;doprnt.c: 1534: }
  2645                           ;doprnt.c: 1542: }
  2646                           ;doprnt.c: 1544: alldone:
  2647                           
  2648                           
  2649                           ;doprnt.c: 1547: *sp = 0;
  2650  0378  0837               	movf	sprintf@sp,w
  2651  0379  0084               	movwf	4
  2652  037A  1383               	bcf	3,7	;select IRP bank0
  2653  037B  0180               	clrf	0
  2654  037C  0008               	return
  2655  037D                     __end_of_sprintf:	
  2656                           ;doprnt.c: 1549: return 0;
  2657                           ;	Return value of _sprintf is never used
  2658                           
  2659                           
  2660                           	psect	text8
  2661  03BD                     __ptext8:	
  2662 ;; *************** function ___lwmod *****************
  2663 ;; Defined at:
  2664 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  divisor         2    8[BANK0 ] unsigned int 
  2667 ;;  dividend        2   10[BANK0 ] unsigned int 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  counter         1   13[BANK0 ] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  2    8[BANK0 ] unsigned int 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       4       0       0       0
  2680 ;;      Locals:         0       1       0       0       0
  2681 ;;      Temps:          0       1       0       0       0
  2682 ;;      Totals:         0       6       0       0       0
  2683 ;;Total ram usage:        6 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    2
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_sprintf
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           
  2694                           ;psect for function ___lwmod
  2695  03BD                     ___lwmod:	
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2699  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2700  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2701  03BF  0829               	movf	___lwmod@divisor+1,w
  2702  03C0  0428               	iorwf	___lwmod@divisor,w
  2703  03C1  1903               	skipnz
  2704  03C2  2BEC               	goto	l1888
  2705  03C3  01AD               	clrf	___lwmod@counter
  2706  03C4  0AAD               	incf	___lwmod@counter,f
  2707  03C5                     l1878:	
  2708  03C5  1BA9               	btfsc	___lwmod@divisor+1,7
  2709  03C6  2BD3               	goto	l1880
  2710  03C7  3001               	movlw	1
  2711  03C8                     u1315:	
  2712  03C8  1003               	clrc
  2713  03C9  0DA8               	rlf	___lwmod@divisor,f
  2714  03CA  0DA9               	rlf	___lwmod@divisor+1,f
  2715  03CB  3EFF               	addlw	-1
  2716  03CC  1D03               	skipz
  2717  03CD  2BC8               	goto	u1315
  2718  03CE  3001               	movlw	1
  2719  03CF  00AC               	movwf	??___lwmod
  2720  03D0  082C               	movf	??___lwmod,w
  2721  03D1  07AD               	addwf	___lwmod@counter,f
  2722  03D2  2BC5               	goto	l1878
  2723  03D3                     l1880:	
  2724  03D3  0829               	movf	___lwmod@divisor+1,w
  2725  03D4  022B               	subwf	___lwmod@dividend+1,w
  2726  03D5  1D03               	skipz
  2727  03D6  2BD9               	goto	u1335
  2728  03D7  0828               	movf	___lwmod@divisor,w
  2729  03D8  022A               	subwf	___lwmod@dividend,w
  2730  03D9                     u1335:	
  2731  03D9  1C03               	skipc
  2732  03DA  2BE1               	goto	l1884
  2733  03DB  0828               	movf	___lwmod@divisor,w
  2734  03DC  02AA               	subwf	___lwmod@dividend,f
  2735  03DD  0829               	movf	___lwmod@divisor+1,w
  2736  03DE  1C03               	skipc
  2737  03DF  03AB               	decf	___lwmod@dividend+1,f
  2738  03E0  02AB               	subwf	___lwmod@dividend+1,f
  2739  03E1                     l1884:	
  2740  03E1  3001               	movlw	1
  2741  03E2                     u1345:	
  2742  03E2  1003               	clrc
  2743  03E3  0CA9               	rrf	___lwmod@divisor+1,f
  2744  03E4  0CA8               	rrf	___lwmod@divisor,f
  2745  03E5  3EFF               	addlw	-1
  2746  03E6  1D03               	skipz
  2747  03E7  2BE2               	goto	u1345
  2748  03E8  3001               	movlw	1
  2749  03E9  02AD               	subwf	___lwmod@counter,f
  2750  03EA  1D03               	btfss	3,2
  2751  03EB  2BD3               	goto	l1880
  2752  03EC                     l1888:	
  2753  03EC  082B               	movf	___lwmod@dividend+1,w
  2754  03ED  01A9               	clrf	?___lwmod+1
  2755  03EE  07A9               	addwf	?___lwmod+1,f
  2756  03EF  082A               	movf	___lwmod@dividend,w
  2757  03F0  01A8               	clrf	?___lwmod
  2758  03F1  07A8               	addwf	?___lwmod,f
  2759  03F2  0008               	return
  2760  03F3                     __end_of___lwmod:	
  2761                           
  2762                           	psect	text9
  2763  037D                     __ptext9:	
  2764 ;; *************** function ___lwdiv *****************
  2765 ;; Defined at:
  2766 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  divisor         2    0[BANK0 ] unsigned int 
  2769 ;;  dividend        2    2[BANK0 ] unsigned int 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  quotient        2    5[BANK0 ] unsigned int 
  2772 ;;  counter         1    7[BANK0 ] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    0[BANK0 ] unsigned int 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       4       0       0       0
  2783 ;;      Locals:         0       3       0       0       0
  2784 ;;      Temps:          0       1       0       0       0
  2785 ;;      Totals:         0       8       0       0       0
  2786 ;;Total ram usage:        8 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    2
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_sprintf
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function ___lwdiv
  2798  037D                     ___lwdiv:	
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2802  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2803  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2804  037F  01A5               	clrf	___lwdiv@quotient
  2805  0380  01A6               	clrf	___lwdiv@quotient+1
  2806  0381  0821               	movf	___lwdiv@divisor+1,w
  2807  0382  0420               	iorwf	___lwdiv@divisor,w
  2808  0383  1903               	skipnz
  2809  0384  2BB6               	goto	l1866
  2810  0385  01A7               	clrf	___lwdiv@counter
  2811  0386  0AA7               	incf	___lwdiv@counter,f
  2812  0387                     l1854:	
  2813  0387  1BA1               	btfsc	___lwdiv@divisor+1,7
  2814  0388  2B95               	goto	l1856
  2815  0389  3001               	movlw	1
  2816  038A                     u1245:	
  2817  038A  1003               	clrc
  2818  038B  0DA0               	rlf	___lwdiv@divisor,f
  2819  038C  0DA1               	rlf	___lwdiv@divisor+1,f
  2820  038D  3EFF               	addlw	-1
  2821  038E  1D03               	skipz
  2822  038F  2B8A               	goto	u1245
  2823  0390  3001               	movlw	1
  2824  0391  00A4               	movwf	??___lwdiv
  2825  0392  0824               	movf	??___lwdiv,w
  2826  0393  07A7               	addwf	___lwdiv@counter,f
  2827  0394  2B87               	goto	l1854
  2828  0395                     l1856:	
  2829  0395  3001               	movlw	1
  2830  0396                     u1265:	
  2831  0396  1003               	clrc
  2832  0397  0DA5               	rlf	___lwdiv@quotient,f
  2833  0398  0DA6               	rlf	___lwdiv@quotient+1,f
  2834  0399  3EFF               	addlw	-1
  2835  039A  1D03               	skipz
  2836  039B  2B96               	goto	u1265
  2837  039C  0821               	movf	___lwdiv@divisor+1,w
  2838  039D  0223               	subwf	___lwdiv@dividend+1,w
  2839  039E  1D03               	skipz
  2840  039F  2BA2               	goto	u1275
  2841  03A0  0820               	movf	___lwdiv@divisor,w
  2842  03A1  0222               	subwf	___lwdiv@dividend,w
  2843  03A2                     u1275:	
  2844  03A2  1C03               	skipc
  2845  03A3  2BAB               	goto	l1862
  2846  03A4  0820               	movf	___lwdiv@divisor,w
  2847  03A5  02A2               	subwf	___lwdiv@dividend,f
  2848  03A6  0821               	movf	___lwdiv@divisor+1,w
  2849  03A7  1C03               	skipc
  2850  03A8  03A3               	decf	___lwdiv@dividend+1,f
  2851  03A9  02A3               	subwf	___lwdiv@dividend+1,f
  2852  03AA  1425               	bsf	___lwdiv@quotient,0
  2853  03AB                     l1862:	
  2854  03AB  3001               	movlw	1
  2855  03AC                     u1285:	
  2856  03AC  1003               	clrc
  2857  03AD  0CA1               	rrf	___lwdiv@divisor+1,f
  2858  03AE  0CA0               	rrf	___lwdiv@divisor,f
  2859  03AF  3EFF               	addlw	-1
  2860  03B0  1D03               	skipz
  2861  03B1  2BAC               	goto	u1285
  2862  03B2  3001               	movlw	1
  2863  03B3  02A7               	subwf	___lwdiv@counter,f
  2864  03B4  1D03               	btfss	3,2
  2865  03B5  2B95               	goto	l1856
  2866  03B6                     l1866:	
  2867  03B6  0826               	movf	___lwdiv@quotient+1,w
  2868  03B7  01A1               	clrf	?___lwdiv+1
  2869  03B8  07A1               	addwf	?___lwdiv+1,f
  2870  03B9  0825               	movf	___lwdiv@quotient,w
  2871  03BA  01A0               	clrf	?___lwdiv
  2872  03BB  07A0               	addwf	?___lwdiv,f
  2873  03BC  0008               	return
  2874  03BD                     __end_of___lwdiv:	
  2875                           
  2876                           	psect	text10
  2877  064F                     __ptext10:	
  2878 ;; *************** function _SIM300WaitForResponse *****************
  2879 ;; Defined at:
  2880 ;;		line 154 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\sim300.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  timeout         2    2[BANK0 ] unsigned int 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  n               2    5[BANK0 ] unsigned int 
  2885 ;;  i               1    7[BANK0 ] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      char 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       2       0       0       0
  2896 ;;      Locals:         0       3       0       0       0
  2897 ;;      Temps:          0       1       0       0       0
  2898 ;;      Totals:         0       6       0       0       0
  2899 ;;Total ram usage:        6 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    4
  2902 ;; This function calls:
  2903 ;;		_USARTDataAvailable
  2904 ;;		_USARTFlushBuffer
  2905 ;;		_USARTReadData
  2906 ;; This function is called by:
  2907 ;;		_SIM300DeleteMsg
  2908 ;;		_SIM300SendMsg
  2909 ;;		_SIM300ReadValidMsg
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _SIM300WaitForResponse
  2915  064F                     _SIM300WaitForResponse:	
  2916                           
  2917                           ;sim300.c: 156: uint8_t i=0;
  2918                           
  2919                           ;incstack = 0
  2920                           ; Regs used in _SIM300WaitForResponse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2921  064F  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0650  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0651  01A7               	clrf	SIM300WaitForResponse@i
  2924                           
  2925                           ;sim300.c: 157: uint16_t n=0;
  2926  0652  01A5               	clrf	SIM300WaitForResponse@n
  2927  0653  01A6               	clrf	SIM300WaitForResponse@n+1
  2928                           
  2929                           ;sim300.c: 160: {
  2930                           ;sim300.c: 162: while (USARTDataAvailable()==0 && n<timeout)
  2931                           
  2932                           ;sim300.c: 159: while(1)
  2933  0654  2E62               	goto	l1928
  2934  0655                     l1926:	
  2935                           
  2936                           ;sim300.c: 163: {
  2937                           ;sim300.c: 164: n++;
  2938  0655  3001               	movlw	1
  2939  0656  07A5               	addwf	SIM300WaitForResponse@n,f
  2940  0657  1803               	skipnc
  2941  0658  0AA6               	incf	SIM300WaitForResponse@n+1,f
  2942  0659  3000               	movlw	0
  2943  065A  07A6               	addwf	SIM300WaitForResponse@n+1,f
  2944                           
  2945                           ;sim300.c: 165: _delay((unsigned long)((1)*(4000000/4000.0)));
  2946  065B  30F9               	movlw	249
  2947  065C  00A4               	movwf	??_SIM300WaitForResponse
  2948  065D                     u2597:	
  2949  065D  0000               	nop
  2950  065E  0BA4               	decfsz	??_SIM300WaitForResponse,f
  2951  065F  2E5D               	goto	u2597
  2952  0660  2E61               	nop2	;nop
  2953  0661  0000               	nop
  2954  0662                     l1928:	
  2955  0662  120A  158A  274A  120A  118A  	fcall	_USARTDataAvailable
  2956  0667  3800               	iorlw	0
  2957  0668  1D03               	skipz
  2958  0669  2E74               	goto	l1932
  2959  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2960  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2961  066C  0823               	movf	SIM300WaitForResponse@timeout+1,w
  2962  066D  0226               	subwf	SIM300WaitForResponse@n+1,w
  2963  066E  1D03               	skipz
  2964  066F  2E72               	goto	u1415
  2965  0670  0822               	movf	SIM300WaitForResponse@timeout,w
  2966  0671  0225               	subwf	SIM300WaitForResponse@n,w
  2967  0672                     u1415:	
  2968  0672  1C03               	skipc
  2969  0673  2E55               	goto	l1926
  2970  0674                     l1932:	
  2971                           
  2972                           ;sim300.c: 167: }
  2973                           ;sim300.c: 169: if(n==timeout)
  2974  0674  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0675  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0676  0823               	movf	SIM300WaitForResponse@timeout+1,w
  2977  0677  0626               	xorwf	SIM300WaitForResponse@n+1,w
  2978  0678  1D03               	skipz
  2979  0679  2E7C               	goto	u1425
  2980  067A  0822               	movf	SIM300WaitForResponse@timeout,w
  2981  067B  0625               	xorwf	SIM300WaitForResponse@n,w
  2982  067C                     u1425:	
  2983  067C  1D03               	skipz
  2984  067D  2E80               	goto	l1940
  2985                           
  2986                           ;sim300.c: 170: {
  2987                           ;sim300.c: 172: return 0;
  2988  067E  3000               	movlw	0
  2989  067F  0008               	return
  2990  0680                     l1940:	
  2991                           ;sim300.c: 173: }
  2992                           
  2993                           
  2994                           ;sim300.c: 174: else
  2995                           ;sim300.c: 175: {
  2996                           ;sim300.c: 177: sim300_buffer[i]=USARTReadData();
  2997  0680  120A  158A  276E  120A  118A  	fcall	_USARTReadData
  2998  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0687  00A4               	movwf	??_SIM300WaitForResponse
  3001  0688  0827               	movf	SIM300WaitForResponse@i,w
  3002  0689  3E90               	addlw	_sim300_buffer& (0+255)
  3003  068A  0084               	movwf	4
  3004  068B  0824               	movf	??_SIM300WaitForResponse,w
  3005  068C  1783               	bsf	3,7	;select IRP bank3
  3006  068D  0080               	movwf	0
  3007                           
  3008                           ;sim300.c: 179: if(sim300_buffer[i]==0x0D && i!=0)
  3009  068E  0827               	movf	SIM300WaitForResponse@i,w
  3010  068F  3E90               	addlw	_sim300_buffer& (0+255)
  3011  0690  0084               	movwf	4
  3012  0691  0800               	movf	0,w
  3013  0692  3A0D               	xorlw	13
  3014  0693  1D03               	skipz
  3015  0694  2EA0               	goto	l1954
  3016  0695  0827               	movf	SIM300WaitForResponse@i,w
  3017  0696  1903               	btfsc	3,2
  3018  0697  2EA0               	goto	l1954
  3019                           
  3020                           ;sim300.c: 180: {
  3021                           ;sim300.c: 181: USARTFlushBuffer();
  3022  0698  120A  158A  2701   	fcall	_USARTFlushBuffer
  3023                           
  3024                           ;sim300.c: 182: return i+1;
  3025  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3026  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3027  069D  0827               	movf	SIM300WaitForResponse@i,w
  3028  069E  3E01               	addlw	1
  3029  069F  0008               	return
  3030  06A0                     l1954:	
  3031                           ;sim300.c: 183: }
  3032                           
  3033                           
  3034                           ;sim300.c: 184: else
  3035                           ;sim300.c: 185: i++;
  3036  06A0  3001               	movlw	1
  3037  06A1  00A4               	movwf	??_SIM300WaitForResponse
  3038  06A2  0824               	movf	??_SIM300WaitForResponse,w
  3039  06A3  07A7               	addwf	SIM300WaitForResponse@i,f
  3040  06A4  2E62               	goto	l1928
  3041  06A5                     __end_of_SIM300WaitForResponse:	
  3042                           
  3043                           	psect	text11
  3044  0F01                     __ptext11:	
  3045 ;; *************** function _USARTFlushBuffer *****************
  3046 ;; Defined at:
  3047 ;;		line 233 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;		None               void
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    3
  3068 ;; This function calls:
  3069 ;;		_USARTDataAvailable
  3070 ;;		_USARTReadData
  3071 ;; This function is called by:
  3072 ;;		_SIM300WaitForResponse
  3073 ;;		_SIM300DeleteMsg
  3074 ;;		_SIM300SendMsg
  3075 ;;		_main
  3076 ;;		_SIM300RingResponse
  3077 ;;		_SIM300WaitForValidMsg
  3078 ;;		_SIM300ReadValidMsg
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _USARTFlushBuffer
  3084  0F01                     _USARTFlushBuffer:	
  3085  0F01                     l1830:	
  3086                           ;usart_pic16.c: 235: while(USARTDataAvailable()>0)
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _USARTFlushBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3090                           
  3091  0F01  120A  158A  274A  120A  158A  	fcall	_USARTDataAvailable
  3092  0F06  3800               	iorlw	0
  3093  0F07  1903               	btfsc	3,2
  3094  0F08  0008               	return
  3095                           
  3096                           ;usart_pic16.c: 236: {
  3097                           ;usart_pic16.c: 237: USARTReadData();
  3098  0F09  120A  158A  276E  120A  158A  	fcall	_USARTReadData
  3099  0F0E  2F01               	goto	l1830
  3100  0F0F                     __end_of_USARTFlushBuffer:	
  3101                           
  3102                           	psect	text12
  3103  05F3                     __ptext12:	
  3104 ;; *************** function _SIM300Init *****************
  3105 ;; Defined at:
  3106 ;;		line 59 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\sim300.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  i               2   22[BANK0 ] unsigned int 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      char 
  3113 ;; Registers used:
  3114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         0       0       0       0       0
  3121 ;;      Locals:         0       2       0       0       0
  3122 ;;      Temps:          0       2       0       0       0
  3123 ;;      Totals:         0       4       0       0       0
  3124 ;;Total ram usage:        4 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    5
  3127 ;; This function calls:
  3128 ;;		_SIM300CheckResponse
  3129 ;;		_SIM300Cmd
  3130 ;;		_USARTDataAvailable
  3131 ;;		_USARTInit
  3132 ;;		_USARTReadBuffer
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function _SIM300Init
  3140  05F3                     _SIM300Init:	
  3141                           
  3142                           ;sim300.c: 62: USARTInit(9600);
  3143                           
  3144                           ;incstack = 0
  3145                           ; Regs used in _SIM300Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3146  05F3  3080               	movlw	128
  3147  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3148  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3149  05F6  00A0               	movwf	USARTInit@baud_rate
  3150  05F7  3025               	movlw	37
  3151  05F8  00A1               	movwf	USARTInit@baud_rate+1
  3152  05F9  120A  118A  273E  120A  118A  	fcall	_USARTInit
  3153                           
  3154                           ;sim300.c: 65: SIM300Cmd("AT");
  3155  05FE  309B               	movlw	low (STR_1-__stringbase)
  3156  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0600  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0601  00AD               	movwf	SIM300Cmd@cmd
  3159  0602  3080               	movlw	128
  3160  0603  00AE               	movwf	SIM300Cmd@cmd+1
  3161  0604  120A  118A  2522  120A  118A  	fcall	_SIM300Cmd
  3162                           
  3163                           ;sim300.c: 68: uint16_t i=0;
  3164  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3165  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3166  060B  01B6               	clrf	SIM300Init@i
  3167  060C  01B7               	clrf	SIM300Init@i+1
  3168  060D                     l2230:	
  3169                           ;sim300.c: 74: while(i<10)
  3170                           
  3171  060D  3000               	movlw	0
  3172  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3173  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0610  0237               	subwf	SIM300Init@i+1,w
  3175  0611  300A               	movlw	10
  3176  0612  1903               	skipnz
  3177  0613  0236               	subwf	SIM300Init@i,w
  3178  0614  1803               	btfsc	3,0
  3179  0615  2E4D               	goto	l2232
  3180                           
  3181                           ;sim300.c: 75: {
  3182                           ;sim300.c: 76: if(USARTDataAvailable()<6)
  3183  0616  120A  158A  274A  120A  118A  	fcall	_USARTDataAvailable
  3184  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3185  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3186  061D  00B4               	movwf	??_SIM300Init
  3187  061E  3006               	movlw	6
  3188  061F  0234               	subwf	??_SIM300Init,w
  3189  0620  1803               	skipnc
  3190  0621  2E32               	goto	l2226
  3191                           
  3192                           ;sim300.c: 77: {
  3193                           ;sim300.c: 78: i++;
  3194  0622  3001               	movlw	1
  3195  0623  07B6               	addwf	SIM300Init@i,f
  3196  0624  1803               	skipnc
  3197  0625  0AB7               	incf	SIM300Init@i+1,f
  3198  0626  3000               	movlw	0
  3199  0627  07B7               	addwf	SIM300Init@i+1,f
  3200                           
  3201                           ;sim300.c: 79: _delay((unsigned long)((10)*(4000000/4000.0)));
  3202  0628  300D               	movlw	13
  3203  0629  00B5               	movwf	??_SIM300Init+1
  3204  062A  30FB               	movlw	251
  3205  062B  00B4               	movwf	??_SIM300Init
  3206  062C                     u2607:	
  3207  062C  0BB4               	decfsz	??_SIM300Init,f
  3208  062D  2E2C               	goto	u2607
  3209  062E  0BB5               	decfsz	??_SIM300Init+1,f
  3210  062F  2E2C               	goto	u2607
  3211  0630  2E31               	nop2
  3212                           
  3213                           ;sim300.c: 81: }
  3214                           
  3215                           ;sim300.c: 80: continue;
  3216  0631  2E0D               	goto	l2230
  3217  0632                     l2226:	
  3218                           
  3219                           ;sim300.c: 82: else
  3220                           ;sim300.c: 83: {
  3221                           ;sim300.c: 86: USARTReadBuffer(sim300_buffer,6);
  3222  0632  3006               	movlw	6
  3223  0633  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0635  00A6               	movwf	USARTReadBuffer@len
  3226  0636  3000               	movlw	0
  3227  0637  00A7               	movwf	USARTReadBuffer@len+1
  3228  0638  3090               	movlw	_sim300_buffer& (0+255)
  3229  0639  120A  158A  2792  120A  118A  	fcall	_USARTReadBuffer
  3230                           
  3231                           ;sim300.c: 88: return SIM300CheckResponse(sim300_buffer,"OK",6);
  3232  063E  3098               	movlw	(STR_2-__stringbase)& (0+255)
  3233  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0641  00B4               	movwf	??_SIM300Init
  3236  0642  0834               	movf	??_SIM300Init,w
  3237  0643  00A0               	movwf	SIM300CheckResponse@check
  3238  0644  3006               	movlw	6
  3239  0645  00B5               	movwf	??_SIM300Init+1
  3240  0646  0835               	movf	??_SIM300Init+1,w
  3241  0647  00A1               	movwf	SIM300CheckResponse@len
  3242  0648  3090               	movlw	_sim300_buffer& (0+255)
  3243  0649  120A  118A  26A5   	fcall	_SIM300CheckResponse
  3244  064C  0008               	return
  3245  064D                     l2232:	
  3246                           
  3247                           ;sim300.c: 89: }
  3248                           ;sim300.c: 90: }
  3249                           ;sim300.c: 95: return -3;
  3250  064D  30FD               	movlw	-3
  3251  064E  0008               	return
  3252  064F                     __end_of_SIM300Init:	
  3253                           
  3254                           	psect	text13
  3255  073E                     __ptext13:	
  3256 ;; *************** function _USARTInit *****************
  3257 ;; Defined at:
  3258 ;;		line 31 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  baud_rate       2    0[BANK0 ] unsigned int 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;		None               void
  3265 ;; Registers used:
  3266 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3272 ;;      Params:         0       2       0       0       0
  3273 ;;      Locals:         0       0       0       0       0
  3274 ;;      Temps:          0       1       0       0       0
  3275 ;;      Totals:         0       3       0       0       0
  3276 ;;Total ram usage:        3 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    2
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_SIM300Init
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _USARTInit
  3288  073E                     _USARTInit:	
  3289                           
  3290                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  3294  073E  30FF               	movlw	-1
  3295  073F  00F9               	movwf	_UQEnd	;volatile
  3296  0740  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0741  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0742  00A2               	movwf	??_USARTInit
  3299  0743  0822               	movf	??_USARTInit,w
  3300  0744  00FA               	movwf	_UQFront	;volatile
  3301                           
  3302                           ;usart_pic16.c: 37: switch(baud_rate)
  3303  0745  2F51               	goto	l2070
  3304  0746                     l2060:	
  3305                           ;usart_pic16.c: 38: {
  3306                           ;usart_pic16.c: 39: case 9600:
  3307                           
  3308                           
  3309                           ;usart_pic16.c: 40: SPBRG=25;
  3310  0746  3019               	movlw	25
  3311  0747  2F4D               	goto	L3
  3312  0748                     l2062:	
  3313                           ;usart_pic16.c: 42: case 19200:
  3314                           
  3315                           ;usart_pic16.c: 41: break;
  3316                           
  3317                           
  3318                           ;usart_pic16.c: 43: SPBRG=12;
  3319  0748  300C               	movlw	12
  3320  0749  2F4D               	goto	L3
  3321  074A                     l2064:	
  3322                           ;usart_pic16.c: 45: case 28800:
  3323                           
  3324                           ;usart_pic16.c: 44: break;
  3325                           
  3326                           
  3327                           ;usart_pic16.c: 46: SPBRG=8;
  3328  074A  3008               	movlw	8
  3329  074B  2F4D               	goto	L3
  3330  074C                     l2066:	
  3331                           ;usart_pic16.c: 48: case 33600:
  3332                           
  3333                           ;usart_pic16.c: 47: break;
  3334                           
  3335                           
  3336                           ;usart_pic16.c: 49: SPBRG=6;
  3337  074C  3006               	movlw	6
  3338  074D                     L3:	
  3339  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3340  074E  1303               	bcf	3,6	;RP1=0, select bank1
  3341  074F  0099               	movwf	25	;volatile
  3342                           
  3343                           ;usart_pic16.c: 51: }
  3344                           
  3345                           ;usart_pic16.c: 50: break;
  3346  0750  2F74               	goto	l186
  3347  0751                     l2070:	
  3348                           
  3349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  3350                           ; Switch size 1, requested type "space"
  3351                           ; Number of cases is 4, Range of values is 37 to 131
  3352                           ; switch strategies available:
  3353                           ; Name         Instructions Cycles
  3354                           ; simple_byte           13     7 (average)
  3355                           ; jumptable            263     9 (fixed)
  3356                           ;	Chosen strategy is simple_byte
  3357  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0752  0821               	movf	USARTInit@baud_rate+1,w
  3359  0753  3A25               	xorlw	37	; case 37
  3360  0754  1903               	skipnz
  3361  0755  2F60               	goto	l2780
  3362  0756  3A6E               	xorlw	110	; case 75
  3363  0757  1903               	skipnz
  3364  0758  2F65               	goto	l2782
  3365  0759  3A3B               	xorlw	59	; case 112
  3366  075A  1903               	skipnz
  3367  075B  2F6A               	goto	l2784
  3368  075C  3AF3               	xorlw	243	; case 131
  3369  075D  1903               	skipnz
  3370  075E  2F6F               	goto	l2786
  3371  075F  2F74               	goto	l186
  3372  0760                     l2780:	
  3373                           
  3374                           ; Switch size 1, requested type "space"
  3375                           ; Number of cases is 1, Range of values is 128 to 128
  3376                           ; switch strategies available:
  3377                           ; Name         Instructions Cycles
  3378                           ; simple_byte            4     3 (average)
  3379                           ; direct_byte           14    11 (fixed)
  3380                           ; jumptable            263     9 (fixed)
  3381                           ;	Chosen strategy is simple_byte
  3382  0760  0820               	movf	USARTInit@baud_rate,w
  3383  0761  3A80               	xorlw	128	; case 128
  3384  0762  1903               	skipnz
  3385  0763  2F46               	goto	l2060
  3386  0764  2F74               	goto	l186
  3387  0765                     l2782:	
  3388                           
  3389                           ; Switch size 1, requested type "space"
  3390                           ; Number of cases is 1, Range of values is 0 to 0
  3391                           ; switch strategies available:
  3392                           ; Name         Instructions Cycles
  3393                           ; simple_byte            4     3 (average)
  3394                           ; direct_byte           11     8 (fixed)
  3395                           ; jumptable            260     6 (fixed)
  3396                           ;	Chosen strategy is simple_byte
  3397  0765  0820               	movf	USARTInit@baud_rate,w
  3398  0766  3A00               	xorlw	0	; case 0
  3399  0767  1903               	skipnz
  3400  0768  2F48               	goto	l2062
  3401  0769  2F74               	goto	l186
  3402  076A                     l2784:	
  3403                           
  3404                           ; Switch size 1, requested type "space"
  3405                           ; Number of cases is 1, Range of values is 128 to 128
  3406                           ; switch strategies available:
  3407                           ; Name         Instructions Cycles
  3408                           ; simple_byte            4     3 (average)
  3409                           ; direct_byte           14    11 (fixed)
  3410                           ; jumptable            263     9 (fixed)
  3411                           ;	Chosen strategy is simple_byte
  3412  076A  0820               	movf	USARTInit@baud_rate,w
  3413  076B  3A80               	xorlw	128	; case 128
  3414  076C  1903               	skipnz
  3415  076D  2F4A               	goto	l2064
  3416  076E  2F74               	goto	l186
  3417  076F                     l2786:	
  3418                           
  3419                           ; Switch size 1, requested type "space"
  3420                           ; Number of cases is 1, Range of values is 64 to 64
  3421                           ; switch strategies available:
  3422                           ; Name         Instructions Cycles
  3423                           ; simple_byte            4     3 (average)
  3424                           ; direct_byte           14    11 (fixed)
  3425                           ; jumptable            263     9 (fixed)
  3426                           ;	Chosen strategy is simple_byte
  3427  076F  0820               	movf	USARTInit@baud_rate,w
  3428  0770  3A40               	xorlw	64	; case 64
  3429  0771  1903               	skipnz
  3430  0772  2F4C               	goto	l2066
  3431  0773  2F74               	goto	l186
  3432  0774                     l186:	
  3433                           
  3434                           ;usart_pic16.c: 53: TXSTAbits.TX9=0;
  3435  0774  1683               	bsf	3,5	;RP0=1, select bank1
  3436  0775  1303               	bcf	3,6	;RP1=0, select bank1
  3437  0776  1318               	bcf	24,6	;volatile
  3438                           
  3439                           ;usart_pic16.c: 54: TXSTAbits.TXEN=1;
  3440  0777  1698               	bsf	24,5	;volatile
  3441                           
  3442                           ;usart_pic16.c: 55: TXSTAbits.SYNC=0;
  3443  0778  1218               	bcf	24,4	;volatile
  3444                           
  3445                           ;usart_pic16.c: 56: TXSTAbits.BRGH=1;
  3446  0779  1518               	bsf	24,2	;volatile
  3447                           
  3448                           ;usart_pic16.c: 59: RCSTAbits.SPEN=1;
  3449  077A  1283               	bcf	3,5	;RP0=0, select bank0
  3450  077B  1303               	bcf	3,6	;RP1=0, select bank0
  3451  077C  1798               	bsf	24,7	;volatile
  3452                           
  3453                           ;usart_pic16.c: 60: RCSTAbits.RX9=0;
  3454  077D  1318               	bcf	24,6	;volatile
  3455                           
  3456                           ;usart_pic16.c: 61: RCSTAbits.CREN=1;
  3457  077E  1618               	bsf	24,4	;volatile
  3458                           
  3459                           ;usart_pic16.c: 62: RCSTAbits.ADDEN=0;
  3460  077F  1198               	bcf	24,3	;volatile
  3461                           
  3462                           ;usart_pic16.c: 65: RCIE=1;
  3463  0780  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0781  1303               	bcf	3,6	;RP1=0, select bank1
  3465  0782  168C               	bsf	12,5	;volatile
  3466                           
  3467                           ;usart_pic16.c: 66: PEIE=1;
  3468  0783  170B               	bsf	11,6	;volatile
  3469                           
  3470                           ;usart_pic16.c: 69: (GIE = 1);
  3471  0784  178B               	bsf	11,7	;volatile
  3472  0785  0008               	return
  3473  0786                     __end_of_USARTInit:	
  3474                           
  3475                           	psect	text14
  3476  0522                     __ptext14:	
  3477 ;; *************** function _SIM300Cmd *****************
  3478 ;; Defined at:
  3479 ;;		line 98 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\sim300.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  cmd             2   13[BANK0 ] PTR const unsigned char 
  3482 ;;		 -> STR_13(4), STR_12(15), STR_11(10), STR_10(10), 
  3483 ;;		 -> SIM300SendMsg@cmd(25), SIM300ReadValidMsg@cmd(16), SIM300DeleteMsg@cmd(16), STR_1(3), 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  i               2   17[BANK0 ] unsigned int 
  3486 ;;  len             1   19[BANK0 ] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      char 
  3489 ;; Registers used:
  3490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         0       2       0       0       0
  3497 ;;      Locals:         0       3       0       0       0
  3498 ;;      Temps:          0       2       0       0       0
  3499 ;;      Totals:         0       7       0       0       0
  3500 ;;Total ram usage:        7 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    4
  3503 ;; This function calls:
  3504 ;;		_USARTDataAvailable
  3505 ;;		_USARTReadBuffer
  3506 ;;		_USARTWriteChar
  3507 ;;		_USARTWriteString
  3508 ;;		___wmul
  3509 ;;		_strlen
  3510 ;; This function is called by:
  3511 ;;		_SIM300Init
  3512 ;;		_SIM300DeleteMsg
  3513 ;;		_SIM300SendMsg
  3514 ;;		_main
  3515 ;;		_SIM300ReadValidMsg
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           
  3520                           ;psect for function _SIM300Cmd
  3521  0522                     _SIM300Cmd:	
  3522                           
  3523                           ;sim300.c: 100: USARTWriteString(cmd);
  3524                           
  3525                           ;incstack = 0
  3526                           ; Regs used in _SIM300Cmd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3527  0522  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0523  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0524  082E               	movf	SIM300Cmd@cmd+1,w
  3530  0525  01A2               	clrf	USARTWriteString@str+1
  3531  0526  07A2               	addwf	USARTWriteString@str+1,f
  3532  0527  082D               	movf	SIM300Cmd@cmd,w
  3533  0528  01A1               	clrf	USARTWriteString@str
  3534  0529  07A1               	addwf	USARTWriteString@str,f
  3535  052A  120A  158A  27B6  120A  118A  	fcall	_USARTWriteString
  3536                           
  3537                           ;sim300.c: 101: USARTWriteChar(0x0D);
  3538  052F  300D               	movlw	13
  3539  0530  120A  118A  23F3  120A  118A  	fcall	_USARTWriteChar
  3540                           
  3541                           ;sim300.c: 103: uint8_t len=strlen(cmd);
  3542  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3543  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3544  0537  082E               	movf	SIM300Cmd@cmd+1,w
  3545  0538  01A1               	clrf	strlen@s+1
  3546  0539  07A1               	addwf	strlen@s+1,f
  3547  053A  082D               	movf	SIM300Cmd@cmd,w
  3548  053B  01A0               	clrf	strlen@s
  3549  053C  07A0               	addwf	strlen@s,f
  3550  053D  120A  118A  27CE  120A  118A  	fcall	_strlen
  3551  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0544  0820               	movf	?_strlen,w
  3554  0545  00AF               	movwf	??_SIM300Cmd
  3555  0546  082F               	movf	??_SIM300Cmd,w
  3556  0547  00B3               	movwf	SIM300Cmd@len
  3557                           
  3558                           ;sim300.c: 105: len++;
  3559  0548  3001               	movlw	1
  3560  0549  00AF               	movwf	??_SIM300Cmd
  3561  054A  082F               	movf	??_SIM300Cmd,w
  3562  054B  07B3               	addwf	SIM300Cmd@len,f
  3563                           
  3564                           ;sim300.c: 107: uint16_t i=0;
  3565  054C  01B1               	clrf	SIM300Cmd@i
  3566  054D  01B2               	clrf	SIM300Cmd@i+1
  3567  054E                     l1922:	
  3568                           ;sim300.c: 110: while(i<10*len)
  3569                           
  3570  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3571  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3572  0550  0833               	movf	SIM300Cmd@len,w
  3573  0551  00AF               	movwf	??_SIM300Cmd
  3574  0552  01B0               	clrf	??_SIM300Cmd+1
  3575  0553  082F               	movf	??_SIM300Cmd,w
  3576  0554  00A0               	movwf	___wmul@multiplier
  3577  0555  0830               	movf	??_SIM300Cmd+1,w
  3578  0556  00A1               	movwf	___wmul@multiplier+1
  3579  0557  300A               	movlw	10
  3580  0558  00A2               	movwf	___wmul@multiplicand
  3581  0559  3000               	movlw	0
  3582  055A  00A3               	movwf	___wmul@multiplicand+1
  3583  055B  120A  158A  27DB  120A  118A  	fcall	___wmul
  3584  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0562  0821               	movf	?___wmul+1,w
  3587  0563  0232               	subwf	SIM300Cmd@i+1,w
  3588  0564  1D03               	skipz
  3589  0565  2D68               	goto	u1395
  3590  0566  0820               	movf	?___wmul,w
  3591  0567  0231               	subwf	SIM300Cmd@i,w
  3592  0568                     u1395:	
  3593  0568  1803               	btfsc	3,0
  3594  0569  0008               	return
  3595                           
  3596                           ;sim300.c: 111: {
  3597                           ;sim300.c: 112: if(USARTDataAvailable()<len)
  3598  056A  120A  158A  274A  120A  118A  	fcall	_USARTDataAvailable
  3599  056F  1283               	bcf	3,5	;RP0=0, select bank0
  3600  0570  1303               	bcf	3,6	;RP1=0, select bank0
  3601  0571  00AF               	movwf	??_SIM300Cmd
  3602  0572  0833               	movf	SIM300Cmd@len,w
  3603  0573  022F               	subwf	??_SIM300Cmd,w
  3604  0574  1803               	skipnc
  3605  0575  2D86               	goto	l1918
  3606                           
  3607                           ;sim300.c: 113: {
  3608                           ;sim300.c: 114: i++;
  3609  0576  3001               	movlw	1
  3610  0577  07B1               	addwf	SIM300Cmd@i,f
  3611  0578  1803               	skipnc
  3612  0579  0AB2               	incf	SIM300Cmd@i+1,f
  3613  057A  3000               	movlw	0
  3614  057B  07B2               	addwf	SIM300Cmd@i+1,f
  3615                           
  3616                           ;sim300.c: 115: _delay((unsigned long)((10)*(4000000/4000.0)));
  3617  057C  300D               	movlw	13
  3618  057D  00B0               	movwf	??_SIM300Cmd+1
  3619  057E  30FB               	movlw	251
  3620  057F  00AF               	movwf	??_SIM300Cmd
  3621  0580                     u2617:	
  3622  0580  0BAF               	decfsz	??_SIM300Cmd,f
  3623  0581  2D80               	goto	u2617
  3624  0582  0BB0               	decfsz	??_SIM300Cmd+1,f
  3625  0583  2D80               	goto	u2617
  3626  0584  2D85               	nop2
  3627                           
  3628                           ;sim300.c: 117: }
  3629                           
  3630                           ;sim300.c: 116: continue;
  3631  0585  2D4E               	goto	l1922
  3632  0586                     l1918:	
  3633                           
  3634                           ;sim300.c: 118: else
  3635                           ;sim300.c: 119: {
  3636                           ;sim300.c: 122: USARTReadBuffer(sim300_buffer,len);
  3637  0586  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0587  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0588  0833               	movf	SIM300Cmd@len,w
  3640  0589  00AF               	movwf	??_SIM300Cmd
  3641  058A  01B0               	clrf	??_SIM300Cmd+1
  3642  058B  082F               	movf	??_SIM300Cmd,w
  3643  058C  00A6               	movwf	USARTReadBuffer@len
  3644  058D  0830               	movf	??_SIM300Cmd+1,w
  3645  058E  00A7               	movwf	USARTReadBuffer@len+1
  3646  058F  3090               	movlw	_sim300_buffer& (0+255)
  3647  0590  120A  158A  2792   	fcall	_USARTReadBuffer
  3648                           
  3649                           ;sim300.c: 124: return 1;
  3650                           ;	Return value of _SIM300Cmd is never used
  3651  0593  0008               	return
  3652  0594                     __end_of_SIM300Cmd:	
  3653                           ;sim300.c: 125: }
  3654                           ;sim300.c: 126: }
  3655                           ;sim300.c: 128: return -3;
  3656                           ;	Return value of _SIM300Cmd is never used
  3657                           
  3658                           
  3659                           	psect	text15
  3660  07CE                     __ptext15:	
  3661 ;; *************** function _strlen *****************
  3662 ;; Defined at:
  3663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strlen.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3666 ;;		 -> STR_15(33), STR_13(4), STR_12(15), STR_11(10), 
  3667 ;;		 -> STR_10(10), SIM300SendMsg@cmd(25), STR_7(4), SIM300ReadValidMsg@cmd(16), 
  3668 ;;		 -> SIM300DeleteMsg@cmd(16), STR_1(3), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  3671 ;;		 -> STR_15(33), STR_13(4), STR_12(15), STR_11(10), 
  3672 ;;		 -> STR_10(10), SIM300SendMsg@cmd(25), STR_7(4), SIM300ReadValidMsg@cmd(16), 
  3673 ;;		 -> SIM300DeleteMsg@cmd(16), STR_1(3), 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  2    0[BANK0 ] unsigned int 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       2       0       0       0
  3684 ;;      Locals:         0       2       0       0       0
  3685 ;;      Temps:          0       2       0       0       0
  3686 ;;      Totals:         0       6       0       0       0
  3687 ;;Total ram usage:        6 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    2
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_SIM300Cmd
  3694 ;;		_SIM300SendMsg
  3695 ;;		_strstr
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function _strlen
  3701  07CE                     _strlen:	
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3705  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3706  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  3707  07D0  0821               	movf	strlen@s+1,w
  3708  07D1  01A5               	clrf	strlen@cp+1
  3709  07D2  07A5               	addwf	strlen@cp+1,f
  3710  07D3  0820               	movf	strlen@s,w
  3711  07D4  01A4               	clrf	strlen@cp
  3712  07D5  07A4               	addwf	strlen@cp,f
  3713  07D6                     l1820:	
  3714  07D6  0825               	movf	strlen@cp+1,w
  3715  07D7  00FF               	movwf	127
  3716  07D8  0824               	movf	strlen@cp,w
  3717  07D9  0084               	movwf	4
  3718  07DA  120A  118A  2400  120A  118A  	fcall	stringtab
  3719  07DF  3800               	iorlw	0
  3720  07E0  1903               	btfsc	3,2
  3721  07E1  2FE7               	goto	l1822
  3722  07E2  3001               	movlw	1
  3723  07E3  07A4               	addwf	strlen@cp,f
  3724  07E4  1803               	skipnc
  3725  07E5  0AA5               	incf	strlen@cp+1,f
  3726  07E6  2FD6               	goto	l1820
  3727  07E7                     l1822:	
  3728  07E7  0920               	comf	strlen@s,w
  3729  07E8  00A2               	movwf	??_strlen
  3730  07E9  0921               	comf	strlen@s+1,w
  3731  07EA  00A3               	movwf	??_strlen+1
  3732  07EB  0AA2               	incf	??_strlen,f
  3733  07EC  1903               	skipnz
  3734  07ED  0AA3               	incf	??_strlen+1,f
  3735  07EE  0824               	movf	strlen@cp,w
  3736  07EF  0722               	addwf	??_strlen,w
  3737  07F0  00A0               	movwf	?_strlen
  3738  07F1  0825               	movf	strlen@cp+1,w
  3739  07F2  1803               	skipnc
  3740  07F3  0A25               	incf	strlen@cp+1,w
  3741  07F4  0723               	addwf	??_strlen+1,w
  3742  07F5  00A1               	movwf	?_strlen+1
  3743  07F6  0008               	return
  3744  07F7                     __end_of_strlen:	
  3745                           
  3746                           	psect	text16
  3747  0FDB                     __ptext16:	
  3748 ;; *************** function ___wmul *****************
  3749 ;; Defined at:
  3750 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3753 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  product         2    4[BANK0 ] unsigned int 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  2    0[BANK0 ] unsigned int 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       4       0       0       0
  3766 ;;      Locals:         0       2       0       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         0       6       0       0       0
  3769 ;;Total ram usage:        6 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    2
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_SIM300Cmd
  3776 ;;		_atoi
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function ___wmul
  3782  0FDB                     ___wmul:	
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3786  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0FDD  01A4               	clrf	___wmul@product
  3789  0FDE  01A5               	clrf	___wmul@product+1
  3790  0FDF                     l1834:	
  3791  0FDF  1C20               	btfss	___wmul@multiplier,0
  3792  0FE0  2FE7               	goto	l423
  3793  0FE1  0822               	movf	___wmul@multiplicand,w
  3794  0FE2  07A4               	addwf	___wmul@product,f
  3795  0FE3  1803               	skipnc
  3796  0FE4  0AA5               	incf	___wmul@product+1,f
  3797  0FE5  0823               	movf	___wmul@multiplicand+1,w
  3798  0FE6  07A5               	addwf	___wmul@product+1,f
  3799  0FE7                     l423:	
  3800  0FE7  3001               	movlw	1
  3801  0FE8                     u1205:	
  3802  0FE8  1003               	clrc
  3803  0FE9  0DA2               	rlf	___wmul@multiplicand,f
  3804  0FEA  0DA3               	rlf	___wmul@multiplicand+1,f
  3805  0FEB  3EFF               	addlw	-1
  3806  0FEC  1D03               	skipz
  3807  0FED  2FE8               	goto	u1205
  3808  0FEE  3001               	movlw	1
  3809  0FEF                     u1215:	
  3810  0FEF  1003               	clrc
  3811  0FF0  0CA1               	rrf	___wmul@multiplier+1,f
  3812  0FF1  0CA0               	rrf	___wmul@multiplier,f
  3813  0FF2  3EFF               	addlw	-1
  3814  0FF3  1D03               	skipz
  3815  0FF4  2FEF               	goto	u1215
  3816  0FF5  0821               	movf	___wmul@multiplier+1,w
  3817  0FF6  0420               	iorwf	___wmul@multiplier,w
  3818  0FF7  1D03               	skipz
  3819  0FF8  2FDF               	goto	l1834
  3820  0FF9  0825               	movf	___wmul@product+1,w
  3821  0FFA  01A1               	clrf	?___wmul+1
  3822  0FFB  07A1               	addwf	?___wmul+1,f
  3823  0FFC  0824               	movf	___wmul@product,w
  3824  0FFD  01A0               	clrf	?___wmul
  3825  0FFE  07A0               	addwf	?___wmul,f
  3826  0FFF  0008               	return
  3827  1000                     __end_of___wmul:	
  3828                           
  3829                           	psect	text17
  3830  0FB6                     __ptext17:	
  3831 ;; *************** function _USARTWriteString *****************
  3832 ;; Defined at:
  3833 ;;		line 80 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  str             2    1[BANK0 ] PTR const unsigned char 
  3836 ;;		 -> STR_15(33), STR_13(4), STR_12(15), STR_11(10), 
  3837 ;;		 -> STR_10(10), SIM300SendMsg@cmd(25), SIM300ReadValidMsg@cmd(16), SIM300DeleteMsg@cmd(16), 
  3838 ;;		 -> STR_1(3), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;		None               void
  3843 ;; Registers used:
  3844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       2       0       0       0
  3851 ;;      Locals:         0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0
  3853 ;;      Totals:         0       2       0       0       0
  3854 ;;Total ram usage:        2 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    3
  3857 ;; This function calls:
  3858 ;;		_USARTWriteChar
  3859 ;; This function is called by:
  3860 ;;		_SIM300Cmd
  3861 ;;		_SIM300SendMsg
  3862 ;;		_USARTWriteLine
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _USARTWriteString
  3868  0FB6                     _USARTWriteString:	
  3869  0FB6                     l1816:	
  3870                           ;usart_pic16.c: 82: while(*str!='\0')
  3871                           
  3872                           ;incstack = 0
  3873                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3874                           
  3875  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0FB8  0822               	movf	USARTWriteString@str+1,w
  3878  0FB9  00FF               	movwf	127
  3879  0FBA  0821               	movf	USARTWriteString@str,w
  3880  0FBB  0084               	movwf	4
  3881  0FBC  120A  118A  2400  120A  158A  	fcall	stringtab
  3882  0FC1  3800               	iorlw	0
  3883  0FC2  1903               	btfsc	3,2
  3884  0FC3  0008               	return
  3885                           
  3886                           ;usart_pic16.c: 83: {
  3887                           ;usart_pic16.c: 84: USARTWriteChar(*str);
  3888  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0FC6  0822               	movf	USARTWriteString@str+1,w
  3891  0FC7  00FF               	movwf	127
  3892  0FC8  0821               	movf	USARTWriteString@str,w
  3893  0FC9  0084               	movwf	4
  3894  0FCA  120A  118A  2400  120A  158A  	fcall	stringtab
  3895  0FCF  120A  118A  23F3  120A  158A  	fcall	_USARTWriteChar
  3896                           
  3897                           ;usart_pic16.c: 85: str++;
  3898  0FD4  3001               	movlw	1
  3899  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  3900  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  3901  0FD7  07A1               	addwf	USARTWriteString@str,f
  3902  0FD8  1803               	skipnc
  3903  0FD9  0AA2               	incf	USARTWriteString@str+1,f
  3904  0FDA  2FB6               	goto	l1816
  3905  0FDB                     __end_of_USARTWriteString:	
  3906                           
  3907                           	psect	text18
  3908  03F3                     __ptext18:	
  3909 ;; *************** function _USARTWriteChar *****************
  3910 ;; Defined at:
  3911 ;;		line 73 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  ch              1    wreg     unsigned char 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  ch              1    0[BANK0 ] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;		None               void
  3918 ;; Registers used:
  3919 ;;		wreg
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3925 ;;      Params:         0       0       0       0       0
  3926 ;;      Locals:         0       1       0       0       0
  3927 ;;      Temps:          0       0       0       0       0
  3928 ;;      Totals:         0       1       0       0       0
  3929 ;;Total ram usage:        1 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    2
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_SIM300Cmd
  3936 ;;		_SIM300SendMsg
  3937 ;;		_USARTWriteString
  3938 ;;		_USARTWriteLine
  3939 ;;		_USARTWriteInt
  3940 ;;		_USARTGotoNewLine
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _USARTWriteChar
  3946  03F3                     _USARTWriteChar:	
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in _USARTWriteChar: [wreg]
  3950                           ;USARTWriteChar@ch stored from wreg
  3951  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3952  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3953  03F5  00A0               	movwf	USARTWriteChar@ch
  3954  03F6                     l193:	
  3955                           ;usart_pic16.c: 75: while(!PIR1bits.TXIF);
  3956                           
  3957  03F6  1E0C               	btfss	12,4	;volatile
  3958  03F7  2BF6               	goto	l193
  3959                           
  3960                           ;usart_pic16.c: 76: TXREG=ch;
  3961  03F8  0820               	movf	USARTWriteChar@ch,w
  3962  03F9  0099               	movwf	25	;volatile
  3963  03FA  0008               	return
  3964  03FB                     __end_of_USARTWriteChar:	
  3965                           
  3966                           	psect	text19
  3967  0F92                     __ptext19:	
  3968 ;; *************** function _USARTReadBuffer *****************
  3969 ;; Defined at:
  3970 ;;		line 223 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  buff            1    wreg     PTR unsigned char 
  3973 ;;		 -> sim300_buffer(70), 
  3974 ;;  len             2    6[BANK0 ] unsigned int 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  buff            1   10[BANK0 ] PTR unsigned char 
  3977 ;;		 -> sim300_buffer(70), 
  3978 ;;  i               2   11[BANK0 ] unsigned int 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;		None               void
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3988 ;;      Params:         0       2       0       0       0
  3989 ;;      Locals:         0       3       0       0       0
  3990 ;;      Temps:          0       2       0       0       0
  3991 ;;      Totals:         0       7       0       0       0
  3992 ;;Total ram usage:        7 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    3
  3995 ;; This function calls:
  3996 ;;		_USARTReadData
  3997 ;; This function is called by:
  3998 ;;		_SIM300Init
  3999 ;;		_SIM300Cmd
  4000 ;;		_SIM300SendMsg
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           
  4005                           ;psect for function _USARTReadBuffer
  4006  0F92                     _USARTReadBuffer:	
  4007                           
  4008                           ;incstack = 0
  4009                           ; Regs used in _USARTReadBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4010                           ;USARTReadBuffer@buff stored from wreg
  4011  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4012  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4013  0F94  00AA               	movwf	USARTReadBuffer@buff
  4014                           
  4015                           ;usart_pic16.c: 225: uint16_t i;
  4016                           ;usart_pic16.c: 226: for(i=0;i<len;i++)
  4017  0F95  01AB               	clrf	USARTReadBuffer@i
  4018  0F96  01AC               	clrf	USARTReadBuffer@i+1
  4019  0F97                     l1808:	
  4020  0F97  0827               	movf	USARTReadBuffer@len+1,w
  4021  0F98  022C               	subwf	USARTReadBuffer@i+1,w
  4022  0F99  1D03               	skipz
  4023  0F9A  2F9D               	goto	u1155
  4024  0F9B  0826               	movf	USARTReadBuffer@len,w
  4025  0F9C  022B               	subwf	USARTReadBuffer@i,w
  4026  0F9D                     u1155:	
  4027  0F9D  1803               	btfsc	3,0
  4028  0F9E  0008               	return
  4029                           
  4030                           ;usart_pic16.c: 227: {
  4031                           ;usart_pic16.c: 228: buff[i]=USARTReadData();
  4032  0F9F  120A  158A  276E  120A  158A  	fcall	_USARTReadData
  4033  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0FA6  00A8               	movwf	??_USARTReadBuffer
  4036  0FA7  082B               	movf	USARTReadBuffer@i,w
  4037  0FA8  072A               	addwf	USARTReadBuffer@buff,w
  4038  0FA9  00A9               	movwf	??_USARTReadBuffer+1
  4039  0FAA  0829               	movf	??_USARTReadBuffer+1,w
  4040  0FAB  0084               	movwf	4
  4041  0FAC  0828               	movf	??_USARTReadBuffer,w
  4042  0FAD  1783               	bsf	3,7	;select IRP bank2
  4043  0FAE  0080               	movwf	0
  4044  0FAF  3001               	movlw	1
  4045  0FB0  07AB               	addwf	USARTReadBuffer@i,f
  4046  0FB1  1803               	skipnc
  4047  0FB2  0AAC               	incf	USARTReadBuffer@i+1,f
  4048  0FB3  3000               	movlw	0
  4049  0FB4  07AC               	addwf	USARTReadBuffer@i+1,f
  4050  0FB5  2F97               	goto	l1808
  4051  0FB6                     __end_of_USARTReadBuffer:	
  4052                           
  4053                           	psect	text20
  4054  0F6E                     __ptext20:	
  4055 ;; *************** function _USARTReadData *****************
  4056 ;; Defined at:
  4057 ;;		line 131 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  data            1    1[BANK0 ] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      unsigned char 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         0       0       0       0       0
  4072 ;;      Locals:         0       1       0       0       0
  4073 ;;      Temps:          0       1       0       0       0
  4074 ;;      Totals:         0       2       0       0       0
  4075 ;;Total ram usage:        2 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    2
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_SIM300WaitForResponse
  4082 ;;		_USARTReadBuffer
  4083 ;;		_USARTFlushBuffer
  4084 ;;		_SIM300RingResponse
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           
  4089                           ;psect for function _USARTReadData
  4090  0F6E                     _USARTReadData:	
  4091                           
  4092                           ;usart_pic16.c: 133: char data;
  4093                           ;usart_pic16.c: 136: if(UQFront==-1)
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _USARTReadData: [wreg-fsr0h+status,2+status,0]
  4097  0F6E  087A               	movf	_UQFront,w	;volatile
  4098  0F6F  3AFF               	xorlw	-1
  4099  0F70  1D03               	skipz
  4100  0F71  2F74               	goto	l1786
  4101                           
  4102                           ;usart_pic16.c: 137: return 0;
  4103  0F72  3000               	movlw	0
  4104  0F73  0008               	return
  4105  0F74                     l1786:	
  4106                           
  4107                           ;usart_pic16.c: 139: data=URBuff[UQFront];
  4108  0F74  087A               	movf	_UQFront,w
  4109  0F75  3E10               	addlw	_URBuff& (0+255)
  4110  0F76  0084               	movwf	4
  4111  0F77  1783               	bsf	3,7	;select IRP bank2
  4112  0F78  0800               	movf	0,w
  4113  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  4114  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4115  0F7B  00A0               	movwf	??_USARTReadData
  4116  0F7C  0820               	movf	??_USARTReadData,w
  4117  0F7D  00A1               	movwf	USARTReadData@data
  4118                           
  4119                           ;usart_pic16.c: 141: if(UQFront==UQEnd)
  4120  0F7E  087A               	movf	_UQFront,w	;volatile
  4121  0F7F  0679               	xorwf	_UQEnd,w	;volatile
  4122  0F80  1D03               	skipz
  4123  0F81  2F88               	goto	l1792
  4124                           
  4125                           ;usart_pic16.c: 142: {
  4126                           ;usart_pic16.c: 145: UQFront=UQEnd=-1;
  4127  0F82  30FF               	movlw	-1
  4128  0F83  00F9               	movwf	_UQEnd	;volatile
  4129  0F84  00A0               	movwf	??_USARTReadData
  4130  0F85  0820               	movf	??_USARTReadData,w
  4131  0F86  00FA               	movwf	_UQFront	;volatile
  4132                           
  4133                           ;usart_pic16.c: 146: }
  4134  0F87  2F90               	goto	l1798
  4135  0F88                     l1792:	
  4136                           
  4137                           ;usart_pic16.c: 147: else
  4138                           ;usart_pic16.c: 148: {
  4139                           ;usart_pic16.c: 149: UQFront++;
  4140  0F88  3001               	movlw	1
  4141  0F89  00A0               	movwf	??_USARTReadData
  4142  0F8A  0820               	movf	??_USARTReadData,w
  4143  0F8B  07FA               	addwf	_UQFront,f	;volatile
  4144                           
  4145                           ;usart_pic16.c: 151: if(UQFront==64)
  4146  0F8C  087A               	movf	_UQFront,w	;volatile
  4147  0F8D  3A40               	xorlw	64
  4148  0F8E  1903               	btfsc	3,2
  4149                           
  4150                           ;usart_pic16.c: 152: UQFront=0;
  4151  0F8F  01FA               	clrf	_UQFront	;volatile
  4152  0F90                     l1798:	
  4153                           
  4154                           ;usart_pic16.c: 153: }
  4155                           ;usart_pic16.c: 155: return data;
  4156  0F90  0821               	movf	USARTReadData@data,w
  4157  0F91  0008               	return
  4158  0F92                     __end_of_USARTReadData:	
  4159                           
  4160                           	psect	text21
  4161  0F4A                     __ptext21:	
  4162 ;; *************** function _USARTDataAvailable *****************
  4163 ;; Defined at:
  4164 ;;		line 159 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      unsigned char 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0
  4180 ;;      Temps:          0       1       0       0       0
  4181 ;;      Totals:         0       1       0       0       0
  4182 ;;Total ram usage:        1 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    2
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_SIM300Init
  4189 ;;		_SIM300Cmd
  4190 ;;		_SIM300WaitForResponse
  4191 ;;		_SIM300SendMsg
  4192 ;;		_USARTFlushBuffer
  4193 ;;		_SIM300RingResponse
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _USARTDataAvailable
  4199  0F4A                     _USARTDataAvailable:	
  4200                           
  4201                           ;usart_pic16.c: 161: if(UQFront==-1)
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _USARTDataAvailable: [wreg+status,2+status,0]
  4205  0F4A  087A               	movf	_UQFront,w	;volatile
  4206  0F4B  3AFF               	xorlw	-1
  4207  0F4C  1D03               	skipz
  4208  0F4D  2F50               	goto	l1756
  4209                           
  4210                           ;usart_pic16.c: 162: return 0;
  4211  0F4E  3000               	movlw	0
  4212  0F4F  0008               	return
  4213  0F50                     l1756:	
  4214                           
  4215                           ;usart_pic16.c: 163: if(UQFront<UQEnd)
  4216  0F50  087A               	movf	_UQFront,w	;volatile
  4217  0F51  3A80               	xorlw	128
  4218  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0F54  00A0               	movwf	??_USARTDataAvailable
  4221  0F55  0879               	movf	_UQEnd,w	;volatile
  4222  0F56  3A80               	xorlw	128
  4223  0F57  02A0               	subwf	??_USARTDataAvailable,f
  4224  0F58  1803               	skipnc
  4225  0F59  2F5F               	goto	l1764
  4226                           
  4227                           ;usart_pic16.c: 164: return(UQEnd-UQFront+1);
  4228  0F5A  037A               	decf	_UQFront,w	;volatile
  4229  0F5B  3AFF               	xorlw	255
  4230  0F5C  0779               	addwf	_UQEnd,w	;volatile
  4231  0F5D  3E01               	addlw	1
  4232  0F5E  0008               	return
  4233  0F5F                     l1764:	
  4234                           
  4235                           ;usart_pic16.c: 165: else if(UQFront>UQEnd)
  4236  0F5F  0879               	movf	_UQEnd,w	;volatile
  4237  0F60  3A80               	xorlw	128
  4238  0F61  00A0               	movwf	??_USARTDataAvailable
  4239  0F62  087A               	movf	_UQFront,w	;volatile
  4240  0F63  3A80               	xorlw	128
  4241  0F64  02A0               	subwf	??_USARTDataAvailable,f
  4242  0F65  1803               	skipnc
  4243  0F66  2F6C               	goto	l1772
  4244                           
  4245                           ;usart_pic16.c: 166: return (64-UQFront+UQEnd+1);
  4246  0F67  037A               	decf	_UQFront,w	;volatile
  4247  0F68  3AFF               	xorlw	255
  4248  0F69  0779               	addwf	_UQEnd,w	;volatile
  4249  0F6A  3E41               	addlw	65
  4250  0F6B  0008               	return
  4251  0F6C                     l1772:	
  4252                           
  4253                           ;usart_pic16.c: 167: else
  4254                           ;usart_pic16.c: 168: return 1;
  4255  0F6C  3001               	movlw	1
  4256  0F6D  0008               	return
  4257  0F6E                     __end_of_USARTDataAvailable:	
  4258                           
  4259                           	psect	text22
  4260  06A5                     __ptext22:	
  4261 ;; *************** function _SIM300CheckResponse *****************
  4262 ;; Defined at:
  4263 ;;		line 131 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\sim300.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  response        1    wreg     PTR const unsigned char 
  4266 ;;		 -> sim300_buffer(70), 
  4267 ;;  check           1    0[BANK0 ] PTR const unsigned char 
  4268 ;;		 -> STR_2(3), 
  4269 ;;  len             1    1[BANK0 ] unsigned char 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  response        1    5[BANK0 ] PTR const unsigned char 
  4272 ;;		 -> sim300_buffer(70), 
  4273 ;;  i               1    4[BANK0 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      char 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4283 ;;      Params:         0       2       0       0       0
  4284 ;;      Locals:         0       2       0       0       0
  4285 ;;      Temps:          0       2       0       0       0
  4286 ;;      Totals:         0       6       0       0       0
  4287 ;;Total ram usage:        6 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    2
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_SIM300Init
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _SIM300CheckResponse
  4299  06A5                     _SIM300CheckResponse:	
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in _SIM300CheckResponse: [wreg-fsr0h+status,2+status,0+pclath]
  4303                           ;SIM300CheckResponse@response stored from wreg
  4304  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  4305  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  4306  06A7  00A5               	movwf	SIM300CheckResponse@response
  4307                           
  4308                           ;sim300.c: 133: len-=2;
  4309  06A8  3002               	movlw	2
  4310  06A9  02A1               	subwf	SIM300CheckResponse@len,f
  4311                           
  4312                           ;sim300.c: 136: if(response[0]!=0x0D | response[1]!=0x0A)
  4313  06AA  0825               	movf	SIM300CheckResponse@response,w
  4314  06AB  0084               	movwf	4
  4315  06AC  1783               	bsf	3,7	;select IRP bank2
  4316  06AD  0800               	movf	0,w
  4317  06AE  3A0D               	xorlw	13
  4318  06AF  1D03               	skipz
  4319  06B0  2EB7               	goto	l2094
  4320  06B1  0A25               	incf	SIM300CheckResponse@response,w
  4321  06B2  0084               	movwf	4
  4322  06B3  0800               	movf	0,w
  4323  06B4  3A0A               	xorlw	10
  4324  06B5  1903               	skipnz
  4325  06B6  2EB9               	goto	l2098
  4326  06B7                     l2094:	
  4327                           
  4328                           ;sim300.c: 137: return -1;
  4329  06B7  30FF               	movlw	-1
  4330  06B8  0008               	return
  4331  06B9                     l2098:	
  4332                           
  4333                           ;sim300.c: 140: if(response[len]!=0x0D | response[len+1]!=0x0A)
  4334  06B9  0821               	movf	SIM300CheckResponse@len,w
  4335  06BA  0725               	addwf	SIM300CheckResponse@response,w
  4336  06BB  00A2               	movwf	??_SIM300CheckResponse
  4337  06BC  0822               	movf	??_SIM300CheckResponse,w
  4338  06BD  0084               	movwf	4
  4339  06BE  0800               	movf	0,w
  4340  06BF  3A0D               	xorlw	13
  4341  06C0  1D03               	skipz
  4342  06C1  2ECC               	goto	l2102
  4343  06C2  0821               	movf	SIM300CheckResponse@len,w
  4344  06C3  3E01               	addlw	1
  4345  06C4  0725               	addwf	SIM300CheckResponse@response,w
  4346  06C5  00A2               	movwf	??_SIM300CheckResponse
  4347  06C6  0822               	movf	??_SIM300CheckResponse,w
  4348  06C7  0084               	movwf	4
  4349  06C8  0800               	movf	0,w
  4350  06C9  3A0A               	xorlw	10
  4351  06CA  1903               	skipnz
  4352  06CB  2ECE               	goto	l2106
  4353  06CC                     l2102:	
  4354                           
  4355                           ;sim300.c: 141: return -1;
  4356  06CC  30FF               	movlw	-1
  4357  06CD  0008               	return
  4358  06CE                     l2106:	
  4359                           
  4360                           ;sim300.c: 145: for(uint8_t i=2;i<len;i++)
  4361  06CE  3002               	movlw	2
  4362  06CF  00A2               	movwf	??_SIM300CheckResponse
  4363  06D0  0822               	movf	??_SIM300CheckResponse,w
  4364  06D1  00A4               	movwf	SIM300CheckResponse@i
  4365  06D2                     l2116:	
  4366  06D2  0821               	movf	SIM300CheckResponse@len,w
  4367  06D3  0224               	subwf	SIM300CheckResponse@i,w
  4368  06D4  1803               	btfsc	3,0
  4369  06D5  2EF0               	goto	l2118
  4370                           
  4371                           ;sim300.c: 146: {
  4372                           ;sim300.c: 147: if(response[i]!=check[i-2])
  4373  06D6  0824               	movf	SIM300CheckResponse@i,w
  4374  06D7  3EFE               	addlw	-2
  4375  06D8  0720               	addwf	SIM300CheckResponse@check,w
  4376  06D9  0084               	movwf	4
  4377  06DA  120A  118A  240A  120A  118A  	fcall	stringdir
  4378  06DF  00A2               	movwf	??_SIM300CheckResponse
  4379  06E0  0824               	movf	SIM300CheckResponse@i,w
  4380  06E1  0725               	addwf	SIM300CheckResponse@response,w
  4381  06E2  00A3               	movwf	??_SIM300CheckResponse+1
  4382  06E3  0823               	movf	??_SIM300CheckResponse+1,w
  4383  06E4  0084               	movwf	4
  4384  06E5  0800               	movf	0,w
  4385  06E6  0622               	xorwf	??_SIM300CheckResponse,w
  4386  06E7  1903               	skipnz
  4387  06E8  2EEB               	goto	l2114
  4388                           
  4389                           ;sim300.c: 148: return -2;
  4390  06E9  30FE               	movlw	-2
  4391  06EA  0008               	return
  4392  06EB                     l2114:	
  4393  06EB  3001               	movlw	1
  4394  06EC  00A2               	movwf	??_SIM300CheckResponse
  4395  06ED  0822               	movf	??_SIM300CheckResponse,w
  4396  06EE  07A4               	addwf	SIM300CheckResponse@i,f
  4397  06EF  2ED2               	goto	l2116
  4398  06F0                     l2118:	
  4399                           
  4400                           ;sim300.c: 149: }
  4401                           ;sim300.c: 151: return 1;
  4402  06F0  3001               	movlw	1
  4403  06F1  0008               	return
  4404  06F2                     __end_of_SIM300CheckResponse:	
  4405                           
  4406                           	psect	text23
  4407  0F30                     __ptext23:	
  4408 ;; *************** function _ISR *****************
  4409 ;; Defined at:
  4410 ;;		line 6 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\isr.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;		None               void
  4417 ;; Registers used:
  4418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4424 ;;      Params:         0       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0
  4426 ;;      Temps:          4       0       0       0       0
  4427 ;;      Totals:         4       0       0       0       0
  4428 ;;Total ram usage:        4 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    1
  4431 ;; This function calls:
  4432 ;;		_USARTHandleRxInt
  4433 ;; This function is called by:
  4434 ;;		Interrupt level 1
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _ISR
  4440  0F30                     _ISR:	
  4441                           
  4442                           ;isr.c: 8: if (RCIE && RCIF) {
  4443  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  4444  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  4445  0F32  1E8C               	btfss	12,5	;volatile
  4446  0F33  2F3D               	goto	i1l16
  4447  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  4448  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  4449  0F36  1E8C               	btfss	12,5	;volatile
  4450  0F37  2F3D               	goto	i1l16
  4451                           
  4452                           ;isr.c: 9: USARTHandleRxInt();
  4453  0F38  120A  118A  2786  120A  158A  	fcall	_USARTHandleRxInt
  4454  0F3D                     i1l16:	
  4455                           ;isr.c: 10: return;
  4456                           
  4457  0F3D  0878               	movf	??_ISR+3,w
  4458  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  4459  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  4460  0F40  00FF               	movwf	127
  4461  0F41  0877               	movf	??_ISR+2,w
  4462  0F42  008A               	movwf	10
  4463  0F43  0876               	movf	??_ISR+1,w
  4464  0F44  0084               	movwf	4
  4465  0F45  0E75               	swapf	??_ISR^(0+-128),w
  4466  0F46  0083               	movwf	3
  4467  0F47  0EFE               	swapf	126,f
  4468  0F48  0E7E               	swapf	126,w
  4469  0F49  0009               	retfie
  4470  0F4A                     __end_of_ISR:	
  4471                           
  4472                           	psect	intentry
  4473  0004                     __pintentry:	
  4474                           ;incstack = 0
  4475                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4476                           
  4477  0004                     interrupt_function:	
  4478  007E                     saved_w	set	btemp
  4479  0004  00FE               	movwf	btemp
  4480  0005  0E03               	swapf	3,w
  4481  0006  00F5               	movwf	??_ISR
  4482  0007  0804               	movf	4,w
  4483  0008  00F6               	movwf	??_ISR+1
  4484  0009  080A               	movf	10,w
  4485  000A  00F7               	movwf	??_ISR+2
  4486  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4487  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4488  000D  087F               	movf	btemp+1,w
  4489  000E  00F8               	movwf	??_ISR+3
  4490  000F  120A  158A  2F30   	ljmp	_ISR
  4491                           
  4492                           	psect	text24
  4493  0786                     __ptext24:	
  4494 ;; *************** function _USARTHandleRxInt *****************
  4495 ;; Defined at:
  4496 ;;		line 99 in file "E:\Study Material\XC8 PROJECTS\Security Alarm\usart_pic16.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  data            1    4[COMMON] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;		None               void
  4503 ;; Registers used:
  4504 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0
  4512 ;;      Temps:          4       0       0       0       0
  4513 ;;      Totals:         5       0       0       0       0
  4514 ;;Total ram usage:        5 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_ISR
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _USARTHandleRxInt
  4525  0786                     _USARTHandleRxInt:	
  4526                           
  4527                           ;usart_pic16.c: 102: if(RB1==1)
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in _USARTHandleRxInt: [wreg-fsr0h+status,2+status,0]
  4531  0786  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0787  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0788  1C86               	btfss	6,1	;volatile
  4534  0789  2F8C               	goto	i1l208
  4535                           
  4536                           ;usart_pic16.c: 103: RB1=0;
  4537  078A  1086               	bcf	6,1	;volatile
  4538  078B  2F8D               	goto	i1l2190
  4539  078C                     i1l208:	
  4540                           
  4541                           ;usart_pic16.c: 104: else
  4542                           ;usart_pic16.c: 105: RB1=1;
  4543  078C  1486               	bsf	6,1	;volatile
  4544  078D                     i1l2190:	
  4545                           
  4546                           ;usart_pic16.c: 108: char data=RCREG;
  4547  078D  081A               	movf	26,w	;volatile
  4548  078E  00F0               	movwf	??_USARTHandleRxInt
  4549  078F  0870               	movf	??_USARTHandleRxInt,w
  4550  0790  00F4               	movwf	USARTHandleRxInt@data
  4551                           
  4552                           ;usart_pic16.c: 111: if(((UQEnd==64-1) && UQFront==0) || ((UQEnd+1)==UQFront))
  4553  0791  0879               	movf	_UQEnd,w	;volatile
  4554  0792  3A3F               	xorlw	63
  4555  0793  1903               	btfsc	3,2
  4556  0794  087A               	movf	_UQFront,w	;volatile
  4557  0795  1903               	btfsc	3,2
  4558  0796  2FAE               	goto	i1l2196
  4559  0797  087A               	movf	_UQFront,w	;volatile
  4560  0798  00F0               	movwf	??_USARTHandleRxInt
  4561  0799  01F1               	clrf	??_USARTHandleRxInt+1
  4562  079A  1BF0               	btfsc	??_USARTHandleRxInt,7
  4563  079B  03F1               	decf	??_USARTHandleRxInt+1,f
  4564  079C  3001               	movlw	1
  4565  079D  0779               	addwf	_UQEnd,w	;volatile
  4566  079E  00F2               	movwf	??_USARTHandleRxInt+2
  4567  079F  01F3               	clrf	??_USARTHandleRxInt+3
  4568  07A0  1803               	skipnc
  4569  07A1  0AF3               	incf	??_USARTHandleRxInt+3,f
  4570  07A2  1BF9               	btfsc	_UQEnd,7	;volatile
  4571  07A3  03F3               	decf	??_USARTHandleRxInt+3,f
  4572  07A4  0871               	movf	??_USARTHandleRxInt+1,w
  4573  07A5  0673               	xorwf	??_USARTHandleRxInt+3,w
  4574  07A6  1D03               	skipz
  4575  07A7  2FAA               	goto	u178_25
  4576  07A8  0870               	movf	??_USARTHandleRxInt,w
  4577  07A9  0672               	xorwf	??_USARTHandleRxInt+2,w
  4578  07AA                     u178_25:	
  4579  07AA  1D03               	skipz
  4580  07AB  2FB6               	goto	i1l2202
  4581  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  4582  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  4583  07AE                     i1l2196:	
  4584                           
  4585                           ;usart_pic16.c: 112: {
  4586                           ;usart_pic16.c: 114: UQFront++;
  4587  07AE  3001               	movlw	1
  4588  07AF  00F0               	movwf	??_USARTHandleRxInt
  4589  07B0  0870               	movf	??_USARTHandleRxInt,w
  4590  07B1  07FA               	addwf	_UQFront,f	;volatile
  4591                           
  4592                           ;usart_pic16.c: 115: if(UQFront==64)
  4593  07B2  087A               	movf	_UQFront,w	;volatile
  4594  07B3  3A40               	xorlw	64
  4595  07B4  1903               	btfsc	3,2
  4596                           
  4597                           ;usart_pic16.c: 116: UQFront=0;
  4598  07B5  01FA               	clrf	_UQFront	;volatile
  4599  07B6                     i1l2202:	
  4600                           
  4601                           ;usart_pic16.c: 117: }
  4602                           ;usart_pic16.c: 119: if(UQEnd==64-1)
  4603  07B6  0879               	movf	_UQEnd,w	;volatile
  4604  07B7  3A3F               	xorlw	63
  4605  07B8  1D03               	skipz
  4606  07B9  2FBC               	goto	i1l2206
  4607                           
  4608                           ;usart_pic16.c: 120: UQEnd=0;
  4609  07BA  01F9               	clrf	_UQEnd	;volatile
  4610  07BB  2FC0               	goto	i1l2208
  4611  07BC                     i1l2206:	
  4612                           
  4613                           ;usart_pic16.c: 121: else
  4614                           ;usart_pic16.c: 122: UQEnd++;
  4615  07BC  3001               	movlw	1
  4616  07BD  00F0               	movwf	??_USARTHandleRxInt
  4617  07BE  0870               	movf	??_USARTHandleRxInt,w
  4618  07BF  07F9               	addwf	_UQEnd,f	;volatile
  4619  07C0                     i1l2208:	
  4620                           
  4621                           ;usart_pic16.c: 124: URBuff[UQEnd]=data;
  4622  07C0  0874               	movf	USARTHandleRxInt@data,w
  4623  07C1  00F0               	movwf	??_USARTHandleRxInt
  4624  07C2  0879               	movf	_UQEnd,w
  4625  07C3  3E10               	addlw	_URBuff& (0+255)
  4626  07C4  0084               	movwf	4
  4627  07C5  0870               	movf	??_USARTHandleRxInt,w
  4628  07C6  1783               	bsf	3,7	;select IRP bank2
  4629  07C7  0080               	movwf	0
  4630                           
  4631                           ;usart_pic16.c: 126: if(UQFront==-1)
  4632  07C8  087A               	movf	_UQFront,w	;volatile
  4633  07C9  3AFF               	xorlw	-1
  4634  07CA  1D03               	skipz
  4635  07CB  0008               	return
  4636                           
  4637                           ;usart_pic16.c: 127: UQFront=0;
  4638  07CC  01FA               	clrf	_UQFront	;volatile
  4639  07CD  0008               	return
  4640  07CE                     __end_of_USARTHandleRxInt:	
  4641  007E                     btemp	set	126	;btemp
  4642  007E                     wtemp	set	126
  4643  007E                     wtemp0	set	126
  4644  0080                     wtemp1	set	128
  4645  0082                     wtemp2	set	130
  4646  0084                     wtemp3	set	132
  4647  0086                     wtemp4	set	134
  4648  0088                     wtemp5	set	136
  4649  007F                     wtemp6	set	127
  4650  007E                     ttemp	set	126
  4651  007E                     ttemp0	set	126
  4652  0081                     ttemp1	set	129
  4653  0084                     ttemp2	set	132
  4654  0087                     ttemp3	set	135
  4655  007F                     ttemp4	set	127
  4656  007E                     ltemp	set	126
  4657  007E                     ltemp0	set	126
  4658  0082                     ltemp1	set	130
  4659  0086                     ltemp2	set	134
  4660  0080                     ltemp3	set	128


Data Sizes:
    Strings     147
    Constant    10
    Data        0
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     63      68
    BANK1            80     28      43
    BANK3            96      0      70
    BANK2            96      0      64

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(1) Largest target is 70
		 -> NULL(NULL[0]), sim300_buffer(BANK3[70]), 

    strnicmp@s2	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_9(CODE[6]), STR_5(CODE[7]), STR_4(CODE[3]), 

    strnicmp@s1	PTR const unsigned char  size(1) Largest target is 70
		 -> sim300_buffer(BANK3[70]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_15(CODE[33]), STR_13(CODE[4]), STR_12(CODE[15]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), SIM300SendMsg@cmd(BANK1[25]), STR_7(CODE[4]), SIM300ReadValidMsg@cmd(BANK0[16]), 
		 -> SIM300DeleteMsg@cmd(BANK0[16]), STR_1(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_15(CODE[33]), STR_13(CODE[4]), STR_12(CODE[15]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), SIM300SendMsg@cmd(BANK1[25]), STR_7(CODE[4]), SIM300ReadValidMsg@cmd(BANK0[16]), 
		 -> SIM300DeleteMsg@cmd(BANK0[16]), STR_1(CODE[3]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 70
		 -> sim300_buffer(BANK3[70]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_8(CODE[12]), STR_6(CODE[11]), STR_3(CODE[11]), 

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_16(CODE[7]), STR_14(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 25
		 -> SIM300SendMsg@cmd(BANK1[25]), SIM300ReadValidMsg@cmd(BANK0[16]), SIM300DeleteMsg@cmd(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S385$_cp	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_16(CODE[7]), STR_14(CODE[11]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_16(CODE[7]), STR_14(CODE[11]), 

    USARTReadBuffer@buff	PTR unsigned char  size(1) Largest target is 70
		 -> sim300_buffer(BANK3[70]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_15(CODE[33]), STR_13(CODE[4]), STR_12(CODE[15]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), SIM300SendMsg@cmd(BANK1[25]), SIM300ReadValidMsg@cmd(BANK0[16]), SIM300DeleteMsg@cmd(BANK0[16]), 
		 -> STR_1(CODE[3]), 

    SIM300SendMsg@msg_ref	PTR unsigned char  size(1) Largest target is 1
		 -> main@ref(BANK0[1]), 

    SIM300SendMsg@msg	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_15(CODE[33]), 

    SIM300SendMsg@num	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_14(CODE[11]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 70
		 -> NULL(NULL[0]), sim300_buffer(BANK3[70]), 

    sp__strichr	PTR unsigned char  size(1) Largest target is 70
		 -> NULL(NULL[0]), sim300_buffer(BANK3[70]), 

    sp__strrichr	PTR unsigned char  size(1) Largest target is 70
		 -> NULL(NULL[0]), sim300_buffer(BANK3[70]), 

    SIM300CheckResponse@check	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    SIM300CheckResponse@response	PTR const unsigned char  size(1) Largest target is 70
		 -> sim300_buffer(BANK3[70]), 

    SIM300Cmd@cmd	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_13(CODE[4]), STR_12(CODE[15]), STR_11(CODE[10]), STR_10(CODE[10]), 
		 -> SIM300SendMsg@cmd(BANK1[25]), SIM300ReadValidMsg@cmd(BANK0[16]), SIM300DeleteMsg@cmd(BANK0[16]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK0

    _main->_SIM300SendMsg
    _SIM300SendMsg->_SIM300DeleteMsg
    _atoi->___wmul
    _SIM300DeleteMsg->_sprintf
    _strnicmp->_toupper
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _SIM300WaitForResponse->_USARTReadData
    _USARTFlushBuffer->_USARTReadData
    _SIM300Init->_SIM300Cmd
    _SIM300Cmd->_USARTReadBuffer
    _USARTWriteString->_USARTWriteChar
    _USARTReadBuffer->_strlen

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SIM300SendMsg

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   15263
                                             55 BANK0      8     8      0
                          _SIM300Cmd
                         _SIM300Init
                      _SIM300SendMsg
                   _USARTFlushBuffer
 ---------------------------------------------------------------------------------
 (1) _SIM300SendMsg                                       34    32      2   10652
                                             49 BANK0      6     4      2
                                              0 BANK1     28    28      0
                          _SIM300Cmd
                    _SIM300DeleteMsg
              _SIM300WaitForResponse
                 _USARTDataAvailable
                   _USARTFlushBuffer
                    _USARTReadBuffer
                     _USARTWriteChar
                   _USARTWriteString
                               _atoi
                            _sprintf
                             _strlen
                           _strnicmp
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     627
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SIM300DeleteMsg                                     21    21      0    4337
                                             28 BANK0     21    21      0
                          _SIM300Cmd
              _SIM300WaitForResponse
                   _USARTFlushBuffer
                            _sprintf
                           _strnicmp
 ---------------------------------------------------------------------------------
 (2) _strnicmp                                             7     4      3     579
                                              2 BANK0      7     4      3
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14    11      3    1365
                                             14 BANK0     14    11      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _SIM300WaitForResponse                                6     4      2     438
                                              2 BANK0      6     4      2
                 _USARTDataAvailable
                   _USARTFlushBuffer
                      _USARTReadData
 ---------------------------------------------------------------------------------
 (1) _USARTFlushBuffer                                     0     0      0      23
                 _USARTDataAvailable
                      _USARTReadData
 ---------------------------------------------------------------------------------
 (1) _SIM300Init                                           4     4      0    2660
                                             20 BANK0      4     4      0
                _SIM300CheckResponse
                          _SIM300Cmd
                 _USARTDataAvailable
                          _USARTInit
                    _USARTReadBuffer
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _SIM300Cmd                                            7     5      2    1808
                                             13 BANK0      7     5      2
                 _USARTDataAvailable
                    _USARTReadBuffer
                     _USARTWriteChar
                   _USARTWriteString
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     343
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     304
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USARTWriteString                                     2     0      2     226
                                              1 BANK0      2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (3) _USARTWriteChar                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USARTReadBuffer                                      7     5      2     353
                                              6 BANK0      7     5      2
                      _USARTReadData
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _USARTReadData                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USARTDataAvailable                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIM300CheckResponse                                  6     4      2     400
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      23
                                              5 COMMON     4     4      0
                   _USARTHandleRxInt
 ---------------------------------------------------------------------------------
 (7) _USARTHandleRxInt                                     5     5      0      23
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SIM300Cmd
     _USARTDataAvailable
     _USARTReadBuffer
       _USARTReadData
       _strlen (ARG)
     _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar
     ___wmul
     _strlen
   _SIM300Init
     _SIM300CheckResponse
     _SIM300Cmd
       _USARTDataAvailable
       _USARTReadBuffer
         _USARTReadData
         _strlen (ARG)
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
       ___wmul
       _strlen
     _USARTDataAvailable
     _USARTInit
     _USARTReadBuffer
       _USARTReadData
       _strlen (ARG)
   _SIM300SendMsg
     _SIM300Cmd
       _USARTDataAvailable
       _USARTReadBuffer
         _USARTReadData
         _strlen (ARG)
       _USARTWriteChar
       _USARTWriteString
         _USARTWriteChar
       ___wmul
       _strlen
     _SIM300DeleteMsg
       _SIM300Cmd
         _USARTDataAvailable
         _USARTReadBuffer
           _USARTReadData
           _strlen (ARG)
         _USARTWriteChar
         _USARTWriteString
           _USARTWriteChar
         ___wmul
         _strlen
       _SIM300WaitForResponse
         _USARTDataAvailable
         _USARTFlushBuffer
           _USARTDataAvailable
           _USARTReadData
         _USARTReadData
       _USARTFlushBuffer
         _USARTDataAvailable
         _USARTReadData
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strnicmp
         _toupper
     _SIM300WaitForResponse
       _USARTDataAvailable
       _USARTFlushBuffer
         _USARTDataAvailable
         _USARTReadData
       _USARTReadData
     _USARTDataAvailable
     _USARTFlushBuffer
       _USARTDataAvailable
       _USARTReadData
     _USARTReadBuffer
       _USARTReadData
       _strlen (ARG)
     _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar
     _atoi
       ___wmul
       _isdigit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strlen
     _strnicmp
       _toupper
   _USARTFlushBuffer
     _USARTDataAvailable
     _USARTReadData

 _ISR (ROOT)
   _USARTHandleRxInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     100       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1C      2B       7       53.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      46       9       72.9%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      40      11       66.7%
DATA                 0      0     100      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu May 21 17:03:17 2015

                             pc 0002                              fsr 0004             ___wmul@multiplicand 0022  
            USARTInit@baud_rate 0020                             l326 02A8                             l423 0FE7  
                           l193 03F6                             l186 0774                             l292 0164  
                           l296 01F1            ??_USARTDataAvailable 0020                             _GIE 005F  
                           _RB0 0030                             _RB1 0031                             _RC5 003D  
                           _ISR 0F30                  ?_USARTReadData 0070                             fsr0 0004  
                           indf 0000                     ?_SIM300Init 0070                            ?_ISR 0070  
                          l2020 0330                            l2012 032C                            l2102 06CC  
                          l2006 031D                            l2022 0274                            l2024 0378  
                          l2040 06F5                            l2114 06EB                            l2106 06CE  
                          l2042 073B                            l2034 072C                            l2116 06D2  
                          l2060 0746                            l2118 06F0                            l2062 0748  
                          l2070 0751                            l2230 060D                            l2038 0732  
                          l2134 05CF                            l2054 0F1D                            l2064 074A  
                          l2232 064D                            l2066 074C                            l2226 0632  
                          l2146 05EE                            l2154 04B7                            l2172 04D6  
                          l2156 04B0                            l2094 06B7                            l2182 051B  
                          l2174 04DA                            l2166 04D0                            l2158 04BC  
                          l2176 050A                            l2256 00AB                            l2098 06B9  
                          l1820 07D6                            l2268 0101                            l1822 07E7  
                          l1830 0F01                            l2286 0142                            l1808 0F97  
                          l1816 0FB6                            l1834 0FDF                            l1922 054E  
                          l2570 020A                            l1772 0F6C                            l1764 0F5F  
                          l1756 0F50                            l1940 0680                            l1932 0674  
                          l2548 018C                            l1918 0586                            l1926 0655  
                          l1862 03AB                            l1854 0387                            l1792 0F88  
                          l1928 0662                            l1856 0395                            l1880 03D3  
                          l2584 0267                            l1786 0F74                            l1954 06A0  
                          l1866 03B6                            l2780 0760                            l1884 03E1  
                          l1964 0294                            l1798 0F90                            l2782 0765  
                          l1878 03C5                            l1966 0296                            l1982 02C7  
                          l2784 076A                            l1888 03EC                            l1984 02DF  
                          l2786 076F                            l1994 02F6                            l1898 0F2E  
                          l1998 02FC                            STR_1 04AA                            STR_2 04A7  
                          STR_3 0461                            STR_4 04A7                            STR_5 0492  
                          STR_6 046C                            STR_7 04A3                            STR_8 044A  
                          STR_9 0499                            u1205 0FE8                            u1215 0FEF  
                          u1155 0F9D                            u1315 03C8                            u1245 038A  
                          u1415 0672                            u1335 03D9                            u1425 067C  
                          u1265 0396                            u1345 03E2                            u1505 0313  
                          u1275 03A2                            u1285 03AC                            u1395 0568  
                          u2507 01BA                            u2517 01D4                            u2607 062C  
                          u1575 0701                            u2527 01E9                            u2617 0580  
                          u2537 01F8                            u2547 0204                            u1845 00CF  
                          u2557 021D                            u2477 016B                            u2567 0237  
                          u2487 017B                            u2577 025C                            u2497 019C  
                          u2587 0095                            _PEIE 005E                            u2597 065D  
                          i1l16 0F3D                            _RCIE 0465                            _RCIF 0065  
        __end_of_USARTWriteChar 03FB                            _atoi 04AD                            _main 0156  
                          btemp 007E               USARTReadData@data 0021                            ltemp 007E  
                          start 0012                            ttemp 007E                            wtemp 007E  
            __size_of_SIM300Cmd 0072                           ??_ISR 0075               ?_USARTHandleRxInt 0070  
                         ?_atoi 0026                           ?_main 0070              ??_USARTHandleRxInt 0070  
                         STR_10 0481                           STR_11 0477                           STR_12 043B  
                         STR_13 049F                           STR_14 0456                           STR_15 041A  
                         STR_16 048B                USARTWriteChar@ch 0020                 __end_of___lwdiv 03BD  
                         i1l208 078C                 __end_of___lwmod 03F3                           _RCREG 001A  
                         _SPBRG 0099          __size_of_SIM300SendMsg 011E                           _TRISB 0086  
                         _TRISC 0087                           _TXREG 0019                           _UQEnd 0079  
              ?_USARTReadBuffer 0026                 __end_of_dpowers 041A                 __end_of_isdigit 0F1F  
                         atoi@a 002B                           atoi@s 002D                           main@r 005B  
                         pclath 000A                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080              __size_of_USARTInit 0048  
               ?_USARTWriteChar 0070                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __end_of_sprintf 037D  
               __end_of_toupper 0F30         ??_SIM300WaitForResponse 0024                 __initialization 0015  
           __size_of_SIM300Init 005C                    __end_of_atoi 0522                    __end_of_main 026D  
               ??_USARTReadData 0020                          ??_atoi 0028                          ??_main 0057  
                   SIM300Init@i 0036               __end_of_SIM300Cmd 0594              USARTReadBuffer@len 0026  
                        i1l2202 07B6                          i1l2206 07BC                          i1l2208 07C0  
                        i1l2190 078D                          i1l2196 07AE                          u178_25 07AA  
             ?_USARTFlushBuffer 0070                          _URBuff 0110                   _SIM300SendMsg 0038  
            ??_USARTFlushBuffer 0022                          ___wmul 0FDB             _SIM300CheckResponse 06A5  
                     ??___lwdiv 0024                       ??___lwmod 002C        __end_of_USARTWriteString 0FDB  
             __end_of_USARTInit 0786                          _strlen 07CE                SIM300SendMsg@cmd 00A0  
                     ??_isdigit 0020                SIM300SendMsg@len 00BA                SIM300SendMsg@msg 0051  
              SIM300SendMsg@num 00B9                          saved_w 007E                       ??_sprintf 0031  
          ?_SIM300CheckResponse 0020                       ??_toupper 0020                __end_of_strnicmp 073E  
       __end_of__initialization 0034                  ?_SIM300SendMsg 0051                  __pcstackCOMMON 0070  
        SIM300WaitForResponse@i 0027          SIM300WaitForResponse@n 0025                    ??_SIM300Init 0034  
         ??_SIM300CheckResponse 0022                  SIM300SendMsg@n 00BB                    SIM300Cmd@cmd 002D  
                  SIM300Cmd@len 0033                      __pbssBANK0 005F                      __pbssBANK1 00BC  
                    __pbssBANK2 0110                      __pbssBANK3 0190        __size_of_SIM300DeleteMsg 005F  
                    __pmaintext 0156                         ?___wmul 0020              __end_of_SIM300Init 064F  
                    __pintentry 0004             USARTReadBuffer@buff 002A                         ?_strlen 0020  
   __size_of_USARTDataAvailable 0024                ??_USARTWriteChar 0020              USARTWriteInt@F1040 005F  
   SIM300CheckResponse@response 0025       __size_of_USARTHandleRxInt 0048                      __stringtab 0400  
               ??_SIM300SendMsg 0053                         _UQFront 007A  __size_of_SIM300WaitForResponse 0056  
 __end_of_SIM300WaitForResponse 06A5            SIM300CheckResponse@i 0024                 __size_of___wmul 0025  
                       ___lwdiv 037D                         ___lwmod 03BD                       ?_strnicmp 0022  
                       __ptext1 0038                         __ptext2 04AD                         __ptext3 0F0F  
                       __ptext4 0594                         __ptext5 06F2                         __ptext6 0F1F  
                       __ptext7 026D                         __ptext8 03BD                         __ptext9 037D  
               __size_of_strlen 0029                    __size_of_ISR 001A                         _dpowers 0410  
                       _isdigit 0F0F                         _sprintf 026D                         main@ref 005C  
                       clrloop0 07F8                         _toupper 0F1F            end_of_initialization 0034  
                     _SIM300Cmd 0522        __size_of_USARTReadBuffer 0024               ??_SIM300DeleteMsg 003C  
                     _RCSTAbits 0018                         strlen@s 0020       __size_of_USARTFlushBuffer 000E  
             ?_USARTWriteString 0021                      ??_strnicmp 0025           __end_of_USARTReadData 0F92  
            ??_USARTWriteString 0023        SIM300CheckResponse@check 0020                       _USARTInit 073E  
                    ?_SIM300Cmd 002D                       _TXSTAbits 0098                      main@result 005A  
              USARTReadBuffer@i 002B                  __end_of___wmul 1000                  __end_of_strlen 07F7  
           start_initialization 0015                      ?_USARTInit 0020                     __end_of_ISR 0F4A  
              _USARTHandleRxInt 0786                      SIM300Cmd@i 0031               ??_USARTReadBuffer 0028  
                      ??___wmul 0024                        ??_strlen 0022     __end_of_SIM300CheckResponse 06F2  
        SIM300CheckResponse@len 0021                     __pbssCOMMON 0079                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0             __end_of__stringdata 04AD  
          SIM300SendMsg@msg_ref 0052                     ??_SIM300Cmd 002F                     sprintf@_val 0038  
                   sprintf@flag 0034                     sprintf@prec 0035                ___lwdiv@dividend 0022  
                      ?___lwdiv 0020                        ?___lwmod 0028                _USARTFlushBuffer 0F01  
    __end_of_USARTDataAvailable 0F6E                       __pstrings 0400                        ?_isdigit 0070  
             __size_of_strnicmp 004C                     ??_USARTInit 0022                ___lwdiv@quotient 0025  
                      ?_sprintf 002E                        ?_toupper 0070                 _SIM300DeleteMsg 0594  
             interrupt_function 0004                  ___wmul@product 0024           __end_of_SIM300SendMsg 0156  
                   strnicmp@len 0023                       clear_ram0 07F7                        _PIR1bits 000C  
         _SIM300WaitForResponse 064F                     __stringbase 040F                     __stringdata 041A  
             ___wmul@multiplier 0020                       main@count 005E    SIM300WaitForResponse@timeout 0022  
     __size_of_USARTWriteString 0025         __size_of_USARTWriteChar 0008        __end_of_USARTHandleRxInt 07CE  
              __size_of___lwdiv 0040                __size_of___lwmod 0036              __end_of__stringtab 0410  
                   _isdigit$594 0020         __end_of_SIM300DeleteMsg 05F3                __size_of_isdigit 0010  
               ___lwdiv@divisor 0020                 ___lwdiv@counter 0027                        __ptext10 064F  
                      __ptext11 0F01                        __ptext20 0F6E                        __ptext12 05F3  
                      __ptext21 0F4A                        __ptext13 073E                        __ptext22 06A5  
                      __ptext14 0522                        __ptext23 0F30                        __ptext15 07CE  
                      __ptext24 0786                        __ptext16 0FDB                        __ptext17 0FB6  
                      __ptext18 03F3                        __ptext19 0F92                __size_of_sprintf 0110  
               _USARTReadBuffer 0F92                __size_of_toupper 0011                   __size_of_atoi 0075  
                 __size_of_main 0117                      strnicmp@s1 0028                      strnicmp@s2 0022  
        __size_of_USARTReadData 0024                        atoi@sign 002A          ?_SIM300WaitForResponse 0022  
                      _strnicmp 06F2                      _SIM300Init 05F3                        isdigit@c 0021  
                      intlevel1 0000                       sprintf@ap 0036                       sprintf@sp 0037  
      __end_of_USARTFlushBuffer 0F0F                ___lwmod@dividend 002A                       stringcode 040A  
                     strnicmp@r 0027             USARTWriteString@str 0021                        sprintf@c 003B  
                      sprintf@f 002E                 ___lwmod@divisor 0028                   _USARTReadData 0F6E  
              ?_SIM300DeleteMsg 0070                        strlen@cp 0024                 ___lwmod@counter 002D  
       __end_of_USARTReadBuffer 0FB6            USARTHandleRxInt@data 0074                        stringdir 040A  
                      toupper@c 0021                        stringtab 0400              _USARTDataAvailable 0F4A  
  __size_of_SIM300CheckResponse 004D                      _MSG_number 00BC                _USARTWriteString 0FB6  
           ?_USARTDataAvailable 0070                  _USARTWriteChar 03F3                    main@SMS_Sent 005D  
            SIM300DeleteMsg@cmd 003F              SIM300DeleteMsg@len 0050                   _sim300_buffer 0190  
              SIM300DeleteMsg@i 004F  
