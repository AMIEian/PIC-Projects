Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\HC12_Motor.X.production.sym \
  --cmf=dist/default/production\HC12_Motor.X.production.cmf -z -Q16F870 \
  -oC:\Users\AMIEian\AppData\Local\Temp\s8us.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/HC12_Motor.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0A0h-0BFh -pstack=STACK -ACODE=00h-07FFh \
  -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 \
  -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ARAM=020h-06Fh,0A0h-0BFh -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-03Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\AMIEian\AppData\Local\Temp\s8us.o \
  dist/default/production\HC12_Motor.X.production.o 

Object code version is 3.11

Machine type is 16F870



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\AMIEian\AppData\Local\Temp\s8us.o
                end_init                              C        C        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1     400E       0
dist/default/production\HC12_Motor.X.production.o
                cinit                                 D        D        9        8       0
                intentry                              4        4        8        8       0
                text10                               E7       E7       45        8       0
                text9                               1D7      1D7       12        8       0
                text8                               19B      19B       21        8       0
                text7                                96       96       51        8       0
                text6                               178      178       23        8       0
                text5                               1FC      1FC        8        8       0
                text4                               1E9      1E9        B        8       0
                text3                               1BC      1BC       1B        8       0
                text2                               152      152       26        8       0
                text1                               12C      12C       26        8       0
                maintext                             16       16       80        8       0
                cstackBANK0                          67       67        8       20       1
                cstackCOMMON                         70       70        8       70       1
                clrtext                             1F4      1F4        8        8       0
                bssBANK0                             20       20       47       20       1
                bssCOMMON                            78       78        2       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        1         0
                cinit                                 D        D        9         0
                intentry                              4        4        8         0
                reset_vec                             0        0        1         0
                text10                               E7       E7       45         0
                text9                               1D7      1D7       12         0
                text8                               19B      19B       21         0
                text7                                96       96       51         0
                text6                               178      178       23         0
                text5                               1FC      1FC        8         0
                text4                               1E9      1E9        B         0
                text3                               1BC      1BC       1B         0
                text2                               152      152       26         0
                text1                               12C      12C       26         0
                maintext                             16       16       80         0
                clrtext                             1F4      1F4        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        2         1

        CLASS   BANK0          
                cstackBANK0                          67       67        8         1
                bssBANK0                             20       20       47         1

        CLASS   BANK1          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          

        CLASS   BANK2          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  000200  000204         8       0  CODE        2
                bssBANK0                       000020  00004F  00006F        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006F-006F              1           1
        BANK1            00A0-00BF             20           1
        CODE             0001-0003              3           2
                         0204-07FF            5FC
        COMMON           007A-007D              4           1
        CONST            0001-0003              3           2
                         0204-07FF            100
        EEDATA           2100-213F             40           2
        ENTRY            0001-0003              3           2
                         0204-07FF            100
        IDLOC            2000-2003              4           2
        RAM              006F-006F              1           1
                         00A0-00BF             20
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-016F             70           1
        SFR3             0180-01EF             70           1
        STACK            00A0-00BF             20           1
        STRCODE          0001-0003              3           2
                         0204-07FF            5FC
        STRING           0001-0003              3           2
                         0204-07FF            100

                                  Symbol Table

USARTHandleRxInt@data        cstackCOMMON 0074
USARTInit@baud_rate          cstackBANK0  0067
USARTReadData@data           cstackBANK0  0068
USARTWriteChar@ch            cstackBANK0  0067
_ADCON1                      (abs)        009F
_INTCONbits                  (abs)        000B
_LP_FLAG                     bssBANK0     0065
_MOTOR_FLAG                  bssBANK0     0066
_PEIE                        (abs)        005E
_PIR1bits                    (abs)        000C
_RB1                         (abs)        0031
_RC0                         (abs)        0038
_RC1                         (abs)        0039
_RC2                         (abs)        003A
_RC3                         (abs)        003B
_RC4                         (abs)        003C
_RC5                         (abs)        003D
_RCIE                        (abs)        0465
_RCIF                        (abs)        0065
_RCREG                       (abs)        001A
_RCSTAbits                   (abs)        0018
_SPBRG                       (abs)        0099
_TRISA                       (abs)        0085
_TRISB                       (abs)        0086
_TRISC                       (abs)        0087
_TXREG                       (abs)        0019
_TXSTAbits                   (abs)        0098
_UQEnd                       bssCOMMON    0078
_UQFront                     bssCOMMON    0079
_URBuff                      bssBANK0     0020
_USARTDataAvailable          text8        019B
_USARTHandleRxInt            text10       00E7
_USARTInit                   text7        0096
_USARTReadData               text6        0178
_USARTWriteChar              text5        01FC
__CFG_BOREN$OFF              (abs)        0000
__CFG_CP$OFF                 (abs)        0000
__CFG_CPD$OFF                (abs)        0000
__CFG_FOSC$XT                (abs)        0000
__CFG_LVP$OFF                (abs)        0000
__CFG_PWRTE$OFF              (abs)        0000
__CFG_WDTE$OFF               (abs)        0000
__CFG_WRT$OFF                (abs)        0000
__Habs1                      abs1         0000
__Hbank0                     bank0        0000
__Hbank1                     bank1        0000
__Hbank2                     bank2        0000
__Hbank3                     bank3        0000
__HbssBANK0                  bssBANK0     0000
__HbssCOMMON                 bssCOMMON    0000
__Hcinit                     cinit        0016
__Hclrtext                   clrtext      0000
__Hcode                      code         0000
__Hcommon                    common       0000
__Hconfig                    config       2008
__HcstackBANK0               cstackBANK0  0000
__HcstackCOMMON              cstackCOMMON 0000
__Heeprom_data               eeprom_data  0000
__Hend_init                  end_init     000D
__Hfunctab                   functab      0000
__Hidloc                     idloc        0000
__Hinit                      init         000C
__Hintentry                  intentry     000C
__Hmaintext                  maintext     0000
__Hpowerup                   powerup      0000
__Hram                       ram          0000
__Hreset_vec                 reset_vec    0001
__Hsfr0                      sfr0         0000
__Hsfr1                      sfr1         0000
__Hsfr2                      sfr2         0000
__Hsfr3                      sfr3         0000
__Hspace_0                   (abs)        2008
__Hspace_1                   (abs)        007A
__Hspace_2                   (abs)        0000
__Hspace_3                   (abs)        0000
__Hstack                     stack        0000
__Hstrings                   strings      0000
__Htext                      text         0000
__Labs1                      abs1         0000
__Lbank0                     bank0        0000
__Lbank1                     bank1        0000
__Lbank2                     bank2        0000
__Lbank3                     bank3        0000
__LbssBANK0                  bssBANK0     0000
__LbssCOMMON                 bssCOMMON    0000
__Lcinit                     cinit        000D
__Lclrtext                   clrtext      0000
__Lcode                      code         0000
__Lcommon                    common       0000
__Lconfig                    config       2007
__LcstackBANK0               cstackBANK0  0000
__LcstackCOMMON              cstackCOMMON 0000
__Leeprom_data               eeprom_data  0000
__Lend_init                  end_init     000C
__Lfunctab                   functab      0000
__Lidloc                     idloc        0000
__Linit                      init         000C
__Lintentry                  intentry     0004
__Lmaintext                  maintext     0000
__Lpowerup                   powerup      0000
__Lram                       ram          0000
__Lreset_vec                 reset_vec    0000
__Lsfr0                      sfr0         0000
__Lsfr1                      sfr1         0000
__Lsfr2                      sfr2         0000
__Lsfr3                      sfr3         0000
__Lspace_0                   (abs)        0000
__Lspace_1                   (abs)        0000
__Lspace_2                   (abs)        0000
__Lspace_3                   (abs)        0000
__Lstack                     stack        0000
__Lstrings                   strings      0000
__Ltext                      text         0000
__S0                         (abs)        2008
__S1                         (abs)        007A
__S2                         (abs)        0000
__S3                         (abs)        0000
___int_sp                    stack        0000
___latbits                   (abs)        0000
___sp                        stack        0000
___stackhi                   (abs)        0000
___stacklo                   (abs)        0000
__end_of_USARTDataAvailable  text8        01BC
__end_of_USARTHandleRxInt    text10       012C
__end_of_USARTInit           text7        00E7
__end_of_USARTReadData       text6        019B
__end_of_USARTWriteChar      text5        0204
__end_of__initialization     cinit        0014
__end_of_main                maintext     0096
__end_of_my_isr_routine      text9        01E9
__end_of_phase_check         text4        01F4
__end_of_sendStatus          text3        01D7
__end_of_start               text2        0178
__end_of_stop                text1        0152
__initialization             cinit        000D
__pbssBANK0                  bssBANK0     0020
__pbssCOMMON                 bssCOMMON    0078
__pcstackBANK0               cstackBANK0  0067
__pcstackCOMMON              cstackCOMMON 0070
__pintentry                  intentry     0004
__pmaintext                  maintext     0016
__ptext1                     text1        012C
__ptext10                    text10       00E7
__ptext2                     text2        0152
__ptext3                     text3        01BC
__ptext4                     text4        01E9
__ptext5                     text5        01FC
__ptext6                     text6        0178
__ptext7                     text7        0096
__ptext8                     text8        019B
__ptext9                     text9        01D7
__size_of_USARTDataAvailable (abs)        0000
__size_of_USARTHandleRxInt   (abs)        0000
__size_of_USARTInit          (abs)        0000
__size_of_USARTReadData      (abs)        0000
__size_of_USARTWriteChar     (abs)        0000
__size_of_main               (abs)        0000
__size_of_my_isr_routine     (abs)        0000
__size_of_phase_check        (abs)        0000
__size_of_sendStatus         (abs)        0000
__size_of_start              (abs)        0000
__size_of_stop               (abs)        0000
_main                        maintext     0016
_my_isr_routine              text9        01D7
_phase_check                 text4        01E9
_sendStatus                  text3        01BC
_start                       text2        0152
_stop                        text1        012C
btemp                        (abs)        007E
clear_ram0                   clrtext      01F4
end_of_initialization        cinit        0014
interrupt_function           intentry     0004
intlevel0                    functab      0000
intlevel1                    functab      0000
intlevel2                    functab      0000
intlevel3                    functab      0000
intlevel4                    functab      0000
intlevel5                    functab      0000
main@count                   cstackBANK0  006D
main@data                    cstackBANK0  006E
reset_vec                    reset_vec    0000
saved_w                      (abs)        007E
sendStatus@motorData         cstackBANK0  0069
start                        init         000C
start_initialization         cinit        000D
wtemp0                       (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 35 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            1    7[BANK0 ] unsigned char 
  count           1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       2       0
      Temps:          0       3       0
      Totals:         0       5       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_USARTDataAvailable
		_USARTInit
		_USARTReadData
		_phase_check
		_sendStatus
		_start
		_stop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 139 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       3       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _start *****************
 Defined at:
		line 127 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       3       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sendStatus *****************
 Defined at:
		line 116 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  motorData       1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       1       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_USARTWriteChar
		_phase_check
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _phase_check *****************
 Defined at:
		line 151 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_sendStatus
 This function uses a non-reentrant model


 *************** function _USARTWriteChar *****************
 Defined at:
		line 76 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       0       0
      Totals:         0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sendStatus
		_USARTWriteString
		_USARTWriteLine
		_USARTWriteInt
		_USARTGotoNewLine
 This function uses a non-reentrant model


 *************** function _USARTReadData *****************
 Defined at:
		line 134 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       1       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_USARTReadBuffer
		_USARTFlushBuffer
 This function uses a non-reentrant model


 *************** function _USARTInit *****************
 Defined at:
		line 31 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
  baud_rate       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       0       0
      Temps:          0       1       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _USARTDataAvailable *****************
 Defined at:
		line 162 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       1       0
      Totals:         0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_USARTFlushBuffer
 This function uses a non-reentrant model


 *************** function _my_isr_routine *****************
 Defined at:
		line 107 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          3       0       0
      Totals:         3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_USARTHandleRxInt
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _USARTHandleRxInt *****************
 Defined at:
		line 102 in file "usart_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          4       0       0
      Totals:         5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_my_isr_routine
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
usart_pic16.c
		_USARTDataAvailable		CODE           	019B	0000	34
		_USARTWriteChar		CODE           	01FC	0000	9
		_USARTHandleRxInt		CODE           	00E7	0000	70
		_USARTInit     		CODE           	0096	0000	82
		_USARTReadData 		CODE           	0178	0000	36

usart_pic16.c estimated size: 231

shared
		__initialization		CODE           	000D	0000	8

shared estimated size: 8

main.c
		_stop          		CODE           	012C	0000	39
		_main          		CODE           	0016	0000	129
		_my_isr_routine		CODE           	01D7	0000	19
		_start         		CODE           	0152	0000	39
		_sendStatus    		CODE           	01BC	0000	28
		_phase_check   		CODE           	01E9	0000	12

main.c estimated size: 266

