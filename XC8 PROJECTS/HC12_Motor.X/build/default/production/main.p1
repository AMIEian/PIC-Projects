Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
"1047 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1047: extern volatile unsigned char TRISA __attribute__((address(0x085)));
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1097
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1097: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1159: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1429
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1429: extern volatile unsigned char ADCON1 __attribute__((address(0x09F)));
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"1766
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1766: extern volatile __bit RC5 __attribute__((address(0x3D)));
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
[v F554 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic.h
[v __delay `JF554 ~T0 @X0 0 e ]
[p i __delay ]
"42 ./usart_pic16.h
[; ;./usart_pic16.h: 42: void USARTInit(uint16_t baud_rate);
[v _USARTInit `(v ~T0 @X0 0 ef1`ui ]
"366 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 366:     struct {
[s S14 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S14 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"376
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 376:     struct {
[s S15 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S15 . . TMR0IF . TMR0IE ]
"365
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 365: typedef union {
[u S13 `S14 1 `S15 1 ]
[n S13 . . . ]
"383
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 383: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS13 ~T0 @X0 0 e@11 ]
"30 main.c
[; ;main.c: 30: char phase_check();
[v _phase_check `(uc ~T0 @X0 0 e? ]
"27
[; ;main.c: 27: void start();
[v _start `(v ~T0 @X0 0 e? ]
"29
[; ;main.c: 29: void sendStatus();
[v _sendStatus `(v ~T0 @X0 0 e? ]
"28
[; ;main.c: 28: void stop();
[v _stop `(v ~T0 @X0 0 e? ]
"49 ./usart_pic16.h
[; ;./usart_pic16.h: 49: uint8_t USARTDataAvailable();
[v _USARTDataAvailable `(uc ~T0 @X0 0 e? ]
"48
[; ;./usart_pic16.h: 48: char USARTReadData();
[v _USARTReadData `(uc ~T0 @X0 0 e? ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"1784 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1784: extern volatile __bit RCIE __attribute__((address(0x465)));
[v _RCIE `Vb ~T0 @X0 0 e@1125 ]
"1787
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1787: extern volatile __bit RCIF __attribute__((address(0x65)));
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"47 ./usart_pic16.h
[; ;./usart_pic16.h: 47: void USARTHandleRxInt();
[v _USARTHandleRxInt `(v ~T0 @X0 0 e? ]
"43
[; ;./usart_pic16.h: 43: void USARTWriteChar(char ch);
[v _USARTWriteChar `(v ~T0 @X0 0 ef1`uc ]
"1760 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1760: extern volatile __bit RC3 __attribute__((address(0x3B)));
[v _RC3 `Vb ~T0 @X0 0 e@59 ]
"1763
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1763: extern volatile __bit RC4 __attribute__((address(0x3C)));
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
"1751
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1751: extern volatile __bit RC0 __attribute__((address(0x38)));
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"1754
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1754: extern volatile __bit RC1 __attribute__((address(0x39)));
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"1757
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1757: extern volatile __bit RC2 __attribute__((address(0x3A)));
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"2 main.c
[p x FOSC = XT ]
"3
[p x WDTE = OFF ]
"4
[p x PWRTE = OFF ]
"5
[p x CP = OFF ]
"6
[p x BOREN = OFF ]
"7
[p x LVP = OFF ]
"8
[p x CPD = OFF ]
"9
[p x WRT = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 342: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"362
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 362: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"440
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 440: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"491
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 491: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"512
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 512: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"519
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 519: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"526
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 526: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"533
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 533: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"610
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 610: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"617
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 617: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"688
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 688: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"695
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 695: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"702
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 702: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"709
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 709: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 767: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"862
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 862: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"869
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 869: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"876
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 876: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"883
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 883: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 979: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1049
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1049: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1099
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1099: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1161: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1223
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1223: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1274
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1274: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1295
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1295: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1329
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1329: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1336
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1336: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"1417
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1417: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"1424
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1424: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"1431
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1431: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"1484
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1484: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"1491
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1491: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"1498
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1498: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"1505
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1505: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"1512
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1512: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"1557
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f870.h: 1557: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"38 ./usart_pic16.h
[; ;./usart_pic16.h: 38: volatile char URBuff[64];
[v _URBuff `Vuc ~T0 @X0 -> 64 `i e ]
"39
[; ;./usart_pic16.h: 39: volatile int8_t UQFront;
[v _UQFront `Vc ~T0 @X0 1 e ]
"40
[; ;./usart_pic16.h: 40: volatile int8_t UQEnd;
[v _UQEnd `Vc ~T0 @X0 1 e ]
"33 main.c
[; ;main.c: 33: unsigned char MOTOR_FLAG = 0, LP_FLAG = 0;
[v _MOTOR_FLAG `uc ~T0 @X0 1 e ]
[i _MOTOR_FLAG
-> -> 0 `i `uc
]
[v _LP_FLAG `uc ~T0 @X0 1 e ]
[i _LP_FLAG
-> -> 0 `i `uc
]
[v $root$_main `(v ~T0 @X0 0 e ]
"35
[; ;main.c: 35: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"36
[; ;main.c: 36:  {
{
[e :U _main ]
[f ]
"37
[; ;main.c: 37:   TRISA = 0xFE;
[e = _TRISA -> -> 254 `i `uc ]
"38
[; ;main.c: 38:         TRISB = 0x00;
[e = _TRISB -> -> 0 `i `uc ]
"39
[; ;main.c: 39:         TRISC = 0x87;
[e = _TRISC -> -> 135 `i `uc ]
"40
[; ;main.c: 40:         ADCON1 = 0x06;
[e = _ADCON1 -> -> 6 `i `uc ]
"41
[; ;main.c: 41:   char count = 0;
[v _count `uc ~T0 @X0 1 a ]
[e = _count -> -> 0 `i `uc ]
"44
[; ;main.c: 44:   for(count = 0; count <= 4; count++)
{
[e = _count -> -> 0 `i `uc ]
[e $ <= -> _count `i -> 4 `i 67  ]
[e $U 68  ]
[e :U 67 ]
"45
[; ;main.c: 45:    {
{
"46
[; ;main.c: 46:     RC5 = 1;
[e = _RC5 -> -> 1 `i `b ]
"47
[; ;main.c: 47:     _delay(1000000);
[e ( __delay (1 -> -> 1000000 `l `ul ]
"48
[; ;main.c: 48:     RC5 = 0;
[e = _RC5 -> -> 0 `i `b ]
"49
[; ;main.c: 49:     _delay(1000000);
[e ( __delay (1 -> -> 1000000 `l `ul ]
"50
[; ;main.c: 50:    }
}
[e ++ _count -> -> 1 `i `uc ]
[e $ <= -> _count `i -> 4 `i 67  ]
[e :U 68 ]
}
"53
[; ;main.c: 53:   USARTInit(1200);
[e ( _USARTInit (1 -> -> 1200 `i `ui ]
"55
[; ;main.c: 55:   while(1)
[e :U 71 ]
"56
[; ;main.c: 56:    {
{
"58
[; ;main.c: 58:     if(MOTOR_FLAG == 1)
[e $ ! == -> _MOTOR_FLAG `i -> 1 `i 73  ]
"59
[; ;main.c: 59:      {
{
"61
[; ;main.c: 61:       (INTCONbits.GIE = 0);
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"62
[; ;main.c: 62:       if(phase_check() == 1)
[e $ ! == -> ( _phase_check ..  `i -> 1 `i 74  ]
"63
[; ;main.c: 63:                             {
{
"65
[; ;main.c: 65:                                 if(LP_FLAG == 0)
[e $ ! == -> _LP_FLAG `i -> 0 `i 75  ]
"66
[; ;main.c: 66:                                     {
{
"67
[; ;main.c: 67:                                         start();
[e ( _start ..  ]
"68
[; ;main.c: 68:                                         sendStatus();
[e ( _sendStatus ..  ]
"69
[; ;main.c: 69:                                         LP_FLAG = 1;
[e = _LP_FLAG -> -> 1 `i `uc ]
"70
[; ;main.c: 70:                                     }
}
[e :U 75 ]
"71
[; ;main.c: 71:                             }
}
[e $U 76  ]
"73
[; ;main.c: 73:                         else
[e :U 74 ]
"74
[; ;main.c: 74:                             {
{
"76
[; ;main.c: 76:                                 if(LP_FLAG == 1)
[e $ ! == -> _LP_FLAG `i -> 1 `i 77  ]
"77
[; ;main.c: 77:                                     {
{
"78
[; ;main.c: 78:                                         stop();
[e ( _stop ..  ]
"79
[; ;main.c: 79:                                         sendStatus();
[e ( _sendStatus ..  ]
"80
[; ;main.c: 80:                                         LP_FLAG = 0;
[e = _LP_FLAG -> -> 0 `i `uc ]
"81
[; ;main.c: 81:                                     }
}
[e :U 77 ]
"82
[; ;main.c: 82:                             }
}
[e :U 76 ]
"84
[; ;main.c: 84:                         (INTCONbits.GIE = 1);
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"85
[; ;main.c: 85:                     }
}
[e :U 73 ]
"87
[; ;main.c: 87:                 if(USARTDataAvailable() > 0)
[e $ ! > -> ( _USARTDataAvailable ..  `i -> 0 `i 78  ]
"88
[; ;main.c: 88:                    {
{
"91
[; ;main.c: 91:                         char data = USARTReadData();
[v _data `uc ~T0 @X0 1 a ]
[e = _data ( _USARTReadData ..  ]
"92
[; ;main.c: 92:                         if(data == '#')
[e $ ! == -> _data `ui -> 35 `ui 79  ]
"93
[; ;main.c: 93:                             sendStatus();
[e ( _sendStatus ..  ]
[e $U 80  ]
"94
[; ;main.c: 94:                         else if(data == 'C')
[e :U 79 ]
[e $ ! == -> _data `ui -> 67 `ui 81  ]
"95
[; ;main.c: 95:                             MOTOR_FLAG = 1;
[e = _MOTOR_FLAG -> -> 1 `i `uc ]
[e $U 82  ]
"96
[; ;main.c: 96:                         else if(data == 'B')
[e :U 81 ]
[e $ ! == -> _data `ui -> 66 `ui 83  ]
"97
[; ;main.c: 97:                             {
{
"98
[; ;main.c: 98:                                 stop();
[e ( _stop ..  ]
"99
[; ;main.c: 99:                                 MOTOR_FLAG = 0;
[e = _MOTOR_FLAG -> -> 0 `i `uc ]
"100
[; ;main.c: 100:                                 LP_FLAG = 0;
[e = _LP_FLAG -> -> 0 `i `uc ]
"101
[; ;main.c: 101:                                 sendStatus();
[e ( _sendStatus ..  ]
"102
[; ;main.c: 102:                             }
}
[e :U 83 ]
[e :U 82 ]
[e :U 80 ]
"103
[; ;main.c: 103:                    }
}
[e :U 78 ]
"104
[; ;main.c: 104:             }
}
[e :U 70 ]
[e $U 71  ]
[e :U 72 ]
"105
[; ;main.c: 105:     }
[e :UE 66 ]
}
[v $root$_my_isr_routine `(v ~T0 @X0 0 e ]
"107
[; ;main.c: 107: void __attribute__((picinterrupt(("")))) my_isr_routine (void)
[v _my_isr_routine `(v ~T1 @X0 1 ef ]
"108
[; ;main.c: 108:     {
{
[e :U _my_isr_routine ]
[f ]
"109
[; ;main.c: 109:         if (RCIE && RCIF)
[e $ ! && _RCIE _RCIF 85  ]
"110
[; ;main.c: 110:             {
{
"111
[; ;main.c: 111:                 USARTHandleRxInt();
[e ( _USARTHandleRxInt ..  ]
"112
[; ;main.c: 112:                 return;
[e $UE 84  ]
"113
[; ;main.c: 113:             }
}
[e :U 85 ]
"114
[; ;main.c: 114:     }
[e :UE 84 ]
}
"116
[; ;main.c: 116: void sendStatus()
[v _sendStatus `(v ~T0 @X0 1 ef ]
"117
[; ;main.c: 117:   {
{
[e :U _sendStatus ]
[f ]
"118
[; ;main.c: 118:     char motorData = 0;
[v _motorData `uc ~T0 @X0 1 a ]
[e = _motorData -> -> 0 `i `uc ]
"119
[; ;main.c: 119:     if(MOTOR_FLAG == 1)
[e $ ! == -> _MOTOR_FLAG `i -> 1 `i 87  ]
"120
[; ;main.c: 120:       motorData = motorData | 0x01;
[e = _motorData -> | -> _motorData `i -> 1 `i `uc ]
[e :U 87 ]
"121
[; ;main.c: 121:     if(phase_check() == 1)
[e $ ! == -> ( _phase_check ..  `i -> 1 `i 88  ]
"122
[; ;main.c: 122:       motorData = motorData | 0x02;
[e = _motorData -> | -> _motorData `i -> 2 `i `uc ]
[e :U 88 ]
"123
[; ;main.c: 123:     USARTWriteChar(motorData);
[e ( _USARTWriteChar (1 _motorData ]
"124
[; ;main.c: 124:   }
[e :UE 86 ]
}
"127
[; ;main.c: 127: void start()
[v _start `(v ~T0 @X0 1 ef ]
"128
[; ;main.c: 128:    {
{
[e :U _start ]
[f ]
"130
[; ;main.c: 130:        _delay(1000000);
[e ( __delay (1 -> -> 1000000 `l `ul ]
"131
[; ;main.c: 131:        RC3 = 1;
[e = _RC3 -> -> 1 `i `b ]
"132
[; ;main.c: 132:        _delay(10000000);
[e ( __delay (1 -> -> 10000000 `l `ul ]
"133
[; ;main.c: 133:        RC3 = 0;
[e = _RC3 -> -> 0 `i `b ]
"134
[; ;main.c: 134:        RC5 = 1;
[e = _RC5 -> -> 1 `i `b ]
"135
[; ;main.c: 135:        return;
[e $UE 89  ]
"136
[; ;main.c: 136:    }
[e :UE 89 ]
}
"139
[; ;main.c: 139: void stop()
[v _stop `(v ~T0 @X0 1 ef ]
"140
[; ;main.c: 140:    {
{
[e :U _stop ]
[f ]
"142
[; ;main.c: 142:       _delay(1000000);
[e ( __delay (1 -> -> 1000000 `l `ul ]
"143
[; ;main.c: 143:       RC4 = 1;
[e = _RC4 -> -> 1 `i `b ]
"144
[; ;main.c: 144:       _delay(10000000);
[e ( __delay (1 -> -> 10000000 `l `ul ]
"145
[; ;main.c: 145:       RC4 = 0;
[e = _RC4 -> -> 0 `i `b ]
"146
[; ;main.c: 146:       RC5 = 0;
[e = _RC5 -> -> 0 `i `b ]
"147
[; ;main.c: 147:       return;
[e $UE 90  ]
"148
[; ;main.c: 148:    }
[e :UE 90 ]
}
"151
[; ;main.c: 151: char phase_check()
[v _phase_check `(uc ~T0 @X0 1 ef ]
"152
[; ;main.c: 152:    {
{
[e :U _phase_check ]
[f ]
"154
[; ;main.c: 154:       if( RC0 == 1 && RC1 == 1 && RC2 == 1 )
[e $ ! && && == -> _RC0 `i -> 1 `i == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 1 `i 92  ]
"155
[; ;main.c: 155:          {
{
"157
[; ;main.c: 157:             return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 91  ]
"158
[; ;main.c: 158:          }
}
[e $U 93  ]
"159
[; ;main.c: 159:       else
[e :U 92 ]
"160
[; ;main.c: 160:          {
{
"162
[; ;main.c: 162:             return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 91  ]
"163
[; ;main.c: 163:          }
}
[e :U 93 ]
"164
[; ;main.c: 164:    }
[e :UE 91 ]
}
