

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Sep 20 17:30:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	idataCOMRAM
    33  001C3C                     __pidataCOMRAM:
    34                           	opt stack 0
    35                           
    36                           ;initializer for _R1
    37  001C3C  11                 	db	17
    38  0000                     _TMR0	set	4054
    39  0000                     _ADCON1	set	4033
    40  0000                     _EEADR	set	4009
    41  0000                     _EECON1bits	set	4006
    42  0000                     _EECON2	set	4007
    43  0000                     _EEDATA	set	4008
    44  0000                     _INTCON	set	4082
    45  0000                     _INTCONbits	set	4082
    46  0000                     _PORTB	set	3969
    47  0000                     _PORTC	set	3970
    48  0000                     _PORTD	set	3971
    49  0000                     _PORTE	set	3972
    50  0000                     _RCON	set	4048
    51  0000                     _T0CON	set	4053
    52  0000                     _TRISA	set	3986
    53  0000                     _TRISB	set	3987
    54  0000                     _TRISC	set	3988
    55  0000                     _TRISD	set	3989
    56  0000                     _TRISE	set	3990
    57  0000                     _CARRY	set	32448
    58  0000                     _GIE	set	32663
    59  0000                     _RA0	set	31744
    60  0000                     _RA1	set	31745
    61  0000                     _RA2	set	31746
    62  0000                     _RA3	set	31747
    63  0000                     _RA4	set	31748
    64  0000                     _RA5	set	31749
    65  0000                     _RB0	set	31752
    66  0000                     _RB1	set	31753
    67  0000                     _RB2	set	31754
    68  0000                     _RB3	set	31755
    69  0000                     _RC0	set	31760
    70  0000                     _RC1	set	31761
    71  0000                     _RC2	set	31762
    72  0000                     _RC5	set	31765
    73  0000                     _RC6	set	31766
    74  0000                     _RC7	set	31767
    75  0000                     _RD0	set	31768
    76  0000                     _RD1	set	31769
    77  0000                     _RD2	set	31770
    78  0000                     _RD3	set	31771
    79  0000                     _RD4	set	31772
    80  0000                     _RD5	set	31773
    81  0000                     _RD6	set	31774
    82  0000                     _RD7	set	31775
    83  0000                     _T0IF	set	32658
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  001B98                     __pcinit:
    89                           	opt stack 0
    90  001B98                     start_initialization:
    91                           	opt stack 0
    92  001B98                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Clear objects allocated to BANK0 (7 bytes)
    96  001B98  EE00  F08F         	lfsr	0,__pbssBANK0
    97  001B9C  0E07               	movlw	7
    98  001B9E                     clear_0:
    99  001B9E  6AEE               	clrf	postinc0,c
   100  001BA0  06E8               	decf	wreg,f,c
   101  001BA2  E1FD               	bnz	clear_0
   102                           
   103                           ; Clear objects allocated to COMRAM (48 bytes)
   104  001BA4  EE00  F040         	lfsr	0,__pbssCOMRAM
   105  001BA8  0E30               	movlw	48
   106  001BAA                     clear_1:
   107  001BAA  6AEE               	clrf	postinc0,c
   108  001BAC  06E8               	decf	wreg,f,c
   109  001BAE  E1FD               	bnz	clear_1
   110                           
   111                           ; Initialize objects allocated to COMRAM (1 bytes)
   112                           ; load TBLPTR registers with __pidataCOMRAM
   113  001BB0  0E3C               	movlw	low __pidataCOMRAM
   114  001BB2  6EF6               	movwf	tblptrl,c
   115  001BB4  0E1C               	movlw	high __pidataCOMRAM
   116  001BB6  6EF7               	movwf	tblptrh,c
   117  001BB8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   118  001BBA  6EF8               	movwf	tblptru,c
   119  001BBC  0009               	tblrd		*+	;fetch initializer
   120  001BBE  CFF5 F070          	movff	tablat,__pdataCOMRAM
   121  001BC2                     end_of_initialization:
   122                           	opt stack 0
   123  001BC2                     __end_of__initialization:
   124                           	opt stack 0
   125  001BC2  0100               	movlb	0
   126  001BC4  EF6A  F000         	goto	_main	;jump to C main() function
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           postinc0	equ	0xFEE
   132                           wreg	equ	0xFE8
   133                           
   134                           	psect	bssCOMRAM
   135  000040                     __pbssCOMRAM:
   136                           	opt stack 0
   137  000040                     _values:
   138                           	opt stack 0
   139  000040                     	ds	14
   140  00004E                     _cutpower:
   141                           	opt stack 0
   142  00004E                     	ds	2
   143  000050                     _DATAI:
   144                           	opt stack 0
   145  000050                     	ds	1
   146  000051                     _RXBUF:
   147                           	opt stack 0
   148  000051                     	ds	1
   149  000052                     __txbuf:
   150                           	opt stack 0
   151  000052                     	ds	1
   152  000053                     _addrh:
   153                           	opt stack 0
   154  000053                     	ds	1
   155  000054                     _addrl:
   156                           	opt stack 0
   157  000054                     	ds	1
   158  000055                     _adr:
   159                           	opt stack 0
   160  000055                     	ds	1
   161  000056                     _bipomode:
   162                           	opt stack 0
   163  000056                     	ds	1
   164  000057                     _bipopower:
   165                           	opt stack 0
   166  000057                     	ds	1
   167  000058                     _cnt:
   168                           	opt stack 0
   169  000058                     	ds	1
   170  000059                     _coagmode:
   171                           	opt stack 0
   172  000059                     	ds	1
   173  00005A                     _coagpower:
   174                           	opt stack 0
   175  00005A                     	ds	1
   176  00005B                     _count:
   177                           	opt stack 0
   178  00005B                     	ds	1
   179  00005C                     _cutmode:
   180                           	opt stack 0
   181  00005C                     	ds	1
   182  00005D                     _cutpowerh:
   183                           	opt stack 0
   184  00005D                     	ds	1
   185  00005E                     _cutpowerl:
   186                           	opt stack 0
   187  00005E                     	ds	1
   188  00005F                     _datao:
   189                           	opt stack 0
   190  00005F                     	ds	1
   191  000060                     _debounce:
   192                           	opt stack 0
   193  000060                     	ds	1
   194  000061                     _dry_fl:
   195                           	opt stack 0
   196  000061                     	ds	1
   197  000062                     _hold:
   198                           	opt stack 0
   199  000062                     	ds	1
   200  000063                     _hundreds:
   201                           	opt stack 0
   202  000063                     	ds	1
   203  000064                     _i:
   204                           	opt stack 0
   205  000064                     	ds	1
   206  000065                     _j:
   207                           	opt stack 0
   208  000065                     	ds	1
   209  000066                     _progno:
   210                           	opt stack 0
   211  000066                     	ds	1
   212  000067                     _rdfl:
   213                           	opt stack 0
   214  000067                     	ds	1
   215  000068                     _rxbuf:
   216                           	opt stack 0
   217  000068                     	ds	1
   218  000069                     _step:
   219                           	opt stack 0
   220  000069                     	ds	1
   221  00006A                     _temp:
   222                           	opt stack 0
   223  00006A                     	ds	1
   224  00006B                     _tens:
   225                           	opt stack 0
   226  00006B                     	ds	1
   227  00006C                     _train:
   228                           	opt stack 0
   229  00006C                     	ds	1
   230  00006D                     _txbuf:
   231                           	opt stack 0
   232  00006D                     	ds	1
   233  00006E                     _units:
   234                           	opt stack 0
   235  00006E                     	ds	1
   236  00006F                     _wrfl:
   237                           	opt stack 0
   238  00006F                     	ds	1
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           	psect	dataCOMRAM
   247  000070                     __pdataCOMRAM:
   248                           	opt stack 0
   249  000070                     _R1:
   250                           	opt stack 0
   251  000070                     	ds	1
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259                           	psect	bssBANK0
   260  00008F                     __pbssBANK0:
   261                           	opt stack 0
   262  00008F                     _errno:
   263                           	opt stack 0
   264  00008F                     	ds	2
   265  000091                     _temp_a:
   266                           	opt stack 0
   267  000091                     	ds	2
   268  000093                     _wait:
   269                           	opt stack 0
   270  000093                     	ds	2
   271  000095                     _R2:
   272                           	opt stack 0
   273  000095                     	ds	1
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	cstackBANK0
   282  000080                     __pcstackBANK0:
   283                           	opt stack 0
   284  000080                     ??___fttol:
   285                           
   286                           ; 0 bytes @ 0x0
   287  000080                     	ds	5
   288  000085                     ___fttol@sign1:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x5
   292  000085                     	ds	1
   293  000086                     ___fttol@lval:
   294                           	opt stack 0
   295                           
   296                           ; 4 bytes @ 0x6
   297  000086                     	ds	4
   298  00008A                     ___fttol@exp1:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0xA
   302  00008A                     	ds	1
   303  00008B                     ??_main:
   304                           
   305                           ; 0 bytes @ 0xB
   306  00008B                     	ds	4
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           
   314                           	psect	cstackCOMRAM
   315  000001                     __pcstackCOMRAM:
   316                           	opt stack 0
   317  000001                     ??_tmr_int:
   318                           
   319                           ; 0 bytes @ 0x0
   320  000001                     	ds	14
   321  00000F                     ?___awdiv:
   322                           	opt stack 0
   323  00000F                     ?___awmod:
   324                           	opt stack 0
   325  00000F                     ?___lwdiv:
   326                           	opt stack 0
   327  00000F                     ?___ftpack:
   328                           	opt stack 0
   329  00000F                     Read_b_eep@badd:
   330                           	opt stack 0
   331  00000F                     Write_b_eep@badd:
   332                           	opt stack 0
   333  00000F                     ___awdiv@dividend:
   334                           	opt stack 0
   335  00000F                     ___awmod@dividend:
   336                           	opt stack 0
   337  00000F                     ___lwdiv@dividend:
   338                           	opt stack 0
   339  00000F                     ___ftpack@arg:
   340                           	opt stack 0
   341  00000F                     ___ftge@ff1:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0xE
   345  00000F                     	ds	2
   346  000011                     Write_b_eep@bdat:
   347                           	opt stack 0
   348  000011                     ___awdiv@divisor:
   349                           	opt stack 0
   350  000011                     ___awmod@divisor:
   351                           	opt stack 0
   352  000011                     ___lwdiv@divisor:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x10
   356  000011                     	ds	1
   357  000012                     Write_b_eep@GIE_BIT_VAL:
   358                           	opt stack 0
   359  000012                     ___ftpack@exp:
   360                           	opt stack 0
   361  000012                     ___ftge@ff2:
   362                           	opt stack 0
   363                           
   364                           ; 3 bytes @ 0x11
   365  000012                     	ds	1
   366  000013                     ___awdiv@counter:
   367                           	opt stack 0
   368  000013                     ___awmod@counter:
   369                           	opt stack 0
   370  000013                     ___ftpack@sign:
   371                           	opt stack 0
   372  000013                     ___lwdiv@quotient:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x12
   376  000013                     	ds	1
   377  000014                     ??___ftpack:
   378  000014                     ___awdiv@sign:
   379                           	opt stack 0
   380  000014                     ___awmod@sign:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x13
   384  000014                     	ds	1
   385  000015                     ??___ftge:
   386  000015                     ___lwdiv@counter:
   387                           	opt stack 0
   388  000015                     ___awdiv@quotient:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x14
   392  000015                     	ds	2
   393  000017                     ?___ftadd:
   394                           	opt stack 0
   395  000017                     ?___ftmul:
   396                           	opt stack 0
   397  000017                     ?___lbtoft:
   398                           	opt stack 0
   399  000017                     ?___lwtoft:
   400                           	opt stack 0
   401  000017                     ___lwtoft@c:
   402                           	opt stack 0
   403  000017                     ___ftadd@f1:
   404                           	opt stack 0
   405  000017                     ___ftmul@f1:
   406                           	opt stack 0
   407                           
   408                           ; 3 bytes @ 0x16
   409  000017                     	ds	3
   410  00001A                     ___lbtoft@c:
   411                           	opt stack 0
   412  00001A                     ___ftadd@f2:
   413                           	opt stack 0
   414  00001A                     ___ftmul@f2:
   415                           	opt stack 0
   416                           
   417                           ; 3 bytes @ 0x19
   418  00001A                     	ds	3
   419  00001D                     ??___ftadd:
   420  00001D                     ??___ftmul:
   421                           
   422                           ; 0 bytes @ 0x1C
   423  00001D                     	ds	3
   424  000020                     ___ftadd@sign:
   425                           	opt stack 0
   426  000020                     ___ftmul@exp:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x1F
   430  000020                     	ds	1
   431  000021                     ___ftadd@exp2:
   432                           	opt stack 0
   433  000021                     ___ftmul@f3_as_product:
   434                           	opt stack 0
   435                           
   436                           ; 3 bytes @ 0x20
   437  000021                     	ds	1
   438  000022                     ___ftadd@exp1:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x21
   442  000022                     	ds	1
   443  000023                     ?___ftsub:
   444                           	opt stack 0
   445  000023                     ___ftsub@f1:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x22
   449  000023                     	ds	1
   450  000024                     ___ftmul@cntr:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x23
   454  000024                     	ds	1
   455  000025                     ___ftmul@sign:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x24
   459  000025                     	ds	1
   460  000026                     ___ftsub@f2:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0x25
   464  000026                     	ds	3
   465  000029                     ?_sqrt:
   466                           	opt stack 0
   467  000029                     sqrt@y:
   468                           	opt stack 0
   469                           
   470                           ; 3 bytes @ 0x28
   471  000029                     	ds	3
   472  00002C                     ??_sqrt:
   473                           
   474                           ; 0 bytes @ 0x2B
   475  00002C                     	ds	3
   476  00002F                     sqrt@og:
   477                           	opt stack 0
   478                           
   479                           ; 3 bytes @ 0x2E
   480  00002F                     	ds	3
   481  000032                     sqrt@z:
   482                           	opt stack 0
   483                           
   484                           ; 3 bytes @ 0x31
   485  000032                     	ds	3
   486  000035                     sqrt@i:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x34
   490  000035                     	ds	1
   491  000036                     sqrt@q:
   492                           	opt stack 0
   493                           
   494                           ; 3 bytes @ 0x35
   495  000036                     	ds	3
   496  000039                     sqrt@x:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x38
   500  000039                     	ds	3
   501  00003C                     ?___fttol:
   502                           	opt stack 0
   503  00003C                     ___fttol@f1:
   504                           	opt stack 0
   505                           
   506                           ; 3 bytes @ 0x3B
   507  00003C                     	ds	4
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           
   515 ;;
   516 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   517 ;;
   518 ;; *************** function _main *****************
   519 ;; Defined at:
   520 ;;		line 20 in file "E:\Study Material\XC8 PROJECTS\Cautry Machine\digi.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;		None               void
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   534 ;;      Params:         0       0       0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0       0       0
   536 ;;      Temps:          0       4       0       0       0       0       0
   537 ;;      Totals:         0       4       0       0       0       0       0
   538 ;;Total ram usage:        4 bytes
   539 ;; Hardware stack levels required when called:    5
   540 ;; This function calls:
   541 ;;		_Busy_eep
   542 ;;		_Read_b_eep
   543 ;;		_Write_b_eep
   544 ;;		___awdiv
   545 ;;		___awmod
   546 ;;		___fttol
   547 ;;		___lbtoft
   548 ;;		___lwdiv
   549 ;;		___lwtoft
   550 ;;		_sqrt
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text0
   557  0000D4                     __ptext0:
   558                           	opt stack 0
   559  0000D4                     _main:
   560                           	opt stack 26
   561                           
   562                           ;incstack = 0
   563  0000D4  FFFF               	dw	65535
   564                           
   565                           ;digi.c: 22: TRISA = 0xFF;
   566  0000D6  6892               	setf	3986,c	;volatile
   567                           
   568                           ;digi.c: 23: TRISE = 0x00;
   569  0000D8  0E00               	movlw	0
   570  0000DA  6E96               	movwf	3990,c	;volatile
   571                           
   572                           ;digi.c: 24: TRISB = 0x00;
   573  0000DC  0E00               	movlw	0
   574  0000DE  6E93               	movwf	3987,c	;volatile
   575                           
   576                           ;digi.c: 25: TRISD = 0x1F;
   577  0000E0  0E1F               	movlw	31
   578  0000E2  6E95               	movwf	3989,c	;volatile
   579                           
   580                           ;digi.c: 26: TRISC = 0xF7;
   581  0000E4  0EF7               	movlw	247
   582  0000E6  6E94               	movwf	3988,c	;volatile
   583                           
   584                           ;digi.c: 28: ADCON1 = 0x07;
   585  0000E8  0E07               	movlw	7
   586  0000EA  6EC1               	movwf	4033,c	;volatile
   587                           
   588                           ;digi.c: 29: RCON = 0x9F;
   589  0000EC  0E9F               	movlw	159
   590  0000EE  6ED0               	movwf	4048,c	;volatile
   591                           
   592                           ;digi.c: 30: INTCON = 0xA0;
   593  0000F0  0EA0               	movlw	160
   594  0000F2  6EF2               	movwf	intcon,c	;volatile
   595                           
   596                           ;digi.c: 31: T0CON = 0xC2;
   597  0000F4  0EC2               	movlw	194
   598  0000F6  6ED5               	movwf	4053,c	;volatile
   599                           
   600                           ;digi.c: 32: TMR0 = 0x00;
   601  0000F8  0E00               	movlw	0
   602  0000FA  6ED7               	movwf	4055,c	;volatile
   603  0000FC  0E00               	movlw	0
   604  0000FE  6ED6               	movwf	4054,c	;volatile
   605                           
   606                           ;digi.c: 35: cutmode = 0;
   607  000100  0E00               	movlw	0
   608  000102  6E5C               	movwf	_cutmode,c
   609                           
   610                           ;digi.c: 36: coagmode = 0;
   611  000104  0E00               	movlw	0
   612  000106  6E59               	movwf	_coagmode,c
   613                           
   614                           ;digi.c: 37: bipomode = 0;
   615  000108  0E00               	movlw	0
   616  00010A  6E56               	movwf	_bipomode,c
   617                           
   618                           ;digi.c: 38: values[5] = 0x20;
   619  00010C  0E20               	movlw	32
   620  00010E  6E45               	movwf	_values+5,c	;volatile
   621                           
   622                           ;digi.c: 39: values[4] = 0x10;
   623  000110  0E10               	movlw	16
   624  000112  6E44               	movwf	_values+4,c	;volatile
   625                           
   626                           ;digi.c: 40: values[11] = 0x20;
   627  000114  0E20               	movlw	32
   628  000116  6E4B               	movwf	_values+11,c	;volatile
   629                           
   630                           ;digi.c: 41: values[7] = 0x20;
   631  000118  0E20               	movlw	32
   632  00011A  6E47               	movwf	_values+7,c	;volatile
   633                           
   634                           ;digi.c: 43: values[8] = 0x80;
   635  00011C  0E80               	movlw	128
   636  00011E  6E48               	movwf	_values+8,c	;volatile
   637                           
   638                           ;digi.c: 44: values[3] = 0x30;
   639  000120  0E30               	movlw	48
   640  000122  6E43               	movwf	_values+3,c	;volatile
   641                           
   642                           ;digi.c: 45: values[2] = 0x20;
   643  000124  0E20               	movlw	32
   644  000126  6E42               	movwf	_values+2,c	;volatile
   645                           
   646                           ;digi.c: 48: RB0 = 0;
   647  000128  9081               	bcf	3969,0,c	;volatile
   648                           
   649                           ;digi.c: 49: RB1 = 0;
   650  00012A  9281               	bcf	3969,1,c	;volatile
   651                           
   652                           ;digi.c: 52: RB2 = 0;
   653  00012C  9481               	bcf	3969,2,c	;volatile
   654                           
   655                           ;digi.c: 53: RB3 = 0;
   656  00012E  9681               	bcf	3969,3,c	;volatile
   657                           
   658                           ;digi.c: 54: RB1 = 0;
   659  000130  9281               	bcf	3969,1,c	;volatile
   660                           
   661                           ;digi.c: 55: RC7 = 0;
   662  000132  9E82               	bcf	3970,7,c	;volatile
   663                           
   664                           ;digi.c: 56: RD5 = 1;
   665  000134  8A83               	bsf	3971,5,c	;volatile
   666  000136                     l4434:
   667                           
   668                           ;digi.c: 58: {
   669                           ;digi.c: 60: RB1 = 0;
   670  000136  9281               	bcf	3969,1,c	;volatile
   671                           
   672                           ;digi.c: 61: if(RA3 == 1)
   673  000138  A680               	btfss	3968,3,c	;volatile
   674  00013A  D008               	goto	l4440
   675                           
   676                           ;digi.c: 62: {
   677                           ;digi.c: 63: dry_fl = 0;
   678  00013C  0E00               	movlw	0
   679  00013E  6E61               	movwf	_dry_fl,c
   680                           
   681                           ;digi.c: 64: wait = 0;
   682  000140  0E00               	movlw	0
   683  000142  0100               	movlb	0	; () banked
   684  000144  6F94               	movwf	(_wait+1)& (0+255),b
   685  000146  0E00               	movlw	0
   686  000148  0100               	movlb	0	; () banked
   687  00014A  6F93               	movwf	_wait& (0+255),b
   688  00014C                     l4440:
   689                           
   690                           ;digi.c: 65: }
   691                           ;digi.c: 68: if( rdfl == 1 )
   692  00014C  0467               	decf	_rdfl,w,c
   693  00014E  A4D8               	btfss	status,2,c
   694  000150  D14B               	goto	l173
   695                           
   696                           ;digi.c: 69: {
   697                           ;digi.c: 70: addrh = progno * 8;
   698  000152  5066               	movf	_progno,w,c
   699  000154  0D08               	mullw	8
   700  000156  CFF3 F053          	movff	prodl,_addrh
   701                           
   702                           ;digi.c: 71: addrl = addrh + 1;
   703  00015A  2853               	incf	_addrh,w,c
   704  00015C  6E54               	movwf	_addrl,c
   705                           
   706                           ;digi.c: 72: DATAI = Read_b_eep(addrl);
   707  00015E  C054  F00F         	movff	_addrl,Read_b_eep@badd
   708  000162  6A10               	clrf	Read_b_eep@badd+1,c
   709  000164  EC0C  F00E         	call	_Read_b_eep	;wreg free
   710  000168  6E50               	movwf	_DATAI,c
   711                           
   712                           ;digi.c: 73: _delay(1000);
   713  00016A  0EFA               	movlw	250
   714  00016C                     u7297:
   715  00016C  2EE8               	decfsz	wreg,f,c
   716  00016E  D7FE               	goto	u7297
   717                           
   718                           ;digi.c: 74: cutpowerh = DATAI;
   719  000170  C050  F05D         	movff	_DATAI,_cutpowerh
   720                           
   721                           ;digi.c: 76: addrl = addrh + 2;
   722  000174  5053               	movf	_addrh,w,c
   723  000176  0F02               	addlw	2
   724  000178  6E54               	movwf	_addrl,c
   725                           
   726                           ;digi.c: 77: DATAI = Read_b_eep(addrl);
   727  00017A  C054  F00F         	movff	_addrl,Read_b_eep@badd
   728  00017E  6A10               	clrf	Read_b_eep@badd+1,c
   729  000180  EC0C  F00E         	call	_Read_b_eep	;wreg free
   730  000184  6E50               	movwf	_DATAI,c
   731                           
   732                           ;digi.c: 78: _delay(1000);
   733  000186  0EFA               	movlw	250
   734  000188                     u7307:
   735  000188  2EE8               	decfsz	wreg,f,c
   736  00018A  D7FE               	goto	u7307
   737                           
   738                           ;digi.c: 79: cutpowerl = DATAI;
   739  00018C  C050  F05E         	movff	_DATAI,_cutpowerl
   740                           
   741                           ;digi.c: 81: addrl = addrh + 3;
   742  000190  5053               	movf	_addrh,w,c
   743  000192  0F03               	addlw	3
   744  000194  6E54               	movwf	_addrl,c
   745                           
   746                           ;digi.c: 82: DATAI = Read_b_eep(addrl);
   747  000196  C054  F00F         	movff	_addrl,Read_b_eep@badd
   748  00019A  6A10               	clrf	Read_b_eep@badd+1,c
   749  00019C  EC0C  F00E         	call	_Read_b_eep	;wreg free
   750  0001A0  6E50               	movwf	_DATAI,c
   751                           
   752                           ;digi.c: 83: _delay(1000);
   753  0001A2  0EFA               	movlw	250
   754  0001A4                     u7317:
   755  0001A4  2EE8               	decfsz	wreg,f,c
   756  0001A6  D7FE               	goto	u7317
   757                           
   758                           ;digi.c: 84: cutmode = DATAI;
   759  0001A8  C050  F05C         	movff	_DATAI,_cutmode
   760                           
   761                           ;digi.c: 86: addrl = addrh + 4;
   762  0001AC  5053               	movf	_addrh,w,c
   763  0001AE  0F04               	addlw	4
   764  0001B0  6E54               	movwf	_addrl,c
   765                           
   766                           ;digi.c: 87: DATAI = Read_b_eep(addrl);
   767  0001B2  C054  F00F         	movff	_addrl,Read_b_eep@badd
   768  0001B6  6A10               	clrf	Read_b_eep@badd+1,c
   769  0001B8  EC0C  F00E         	call	_Read_b_eep	;wreg free
   770  0001BC  6E50               	movwf	_DATAI,c
   771                           
   772                           ;digi.c: 88: _delay(1000);
   773  0001BE  0EFA               	movlw	250
   774  0001C0                     u7327:
   775  0001C0  2EE8               	decfsz	wreg,f,c
   776  0001C2  D7FE               	goto	u7327
   777                           
   778                           ;digi.c: 89: coagpower = DATAI;
   779  0001C4  C050  F05A         	movff	_DATAI,_coagpower
   780                           
   781                           ;digi.c: 91: addrl = addrh + 5;
   782  0001C8  5053               	movf	_addrh,w,c
   783  0001CA  0F05               	addlw	5
   784  0001CC  6E54               	movwf	_addrl,c
   785                           
   786                           ;digi.c: 92: DATAI = Read_b_eep(addrl);
   787  0001CE  C054  F00F         	movff	_addrl,Read_b_eep@badd
   788  0001D2  6A10               	clrf	Read_b_eep@badd+1,c
   789  0001D4  EC0C  F00E         	call	_Read_b_eep	;wreg free
   790  0001D8  6E50               	movwf	_DATAI,c
   791                           
   792                           ;digi.c: 93: _delay(1000);
   793  0001DA  0EFA               	movlw	250
   794  0001DC                     u7337:
   795  0001DC  2EE8               	decfsz	wreg,f,c
   796  0001DE  D7FE               	goto	u7337
   797                           
   798                           ;digi.c: 94: coagmode = DATAI;
   799  0001E0  C050  F059         	movff	_DATAI,_coagmode
   800                           
   801                           ;digi.c: 96: addrl = addrh + 6;
   802  0001E4  5053               	movf	_addrh,w,c
   803  0001E6  0F06               	addlw	6
   804  0001E8  6E54               	movwf	_addrl,c
   805                           
   806                           ;digi.c: 97: DATAI = Read_b_eep(addrl);
   807  0001EA  C054  F00F         	movff	_addrl,Read_b_eep@badd
   808  0001EE  6A10               	clrf	Read_b_eep@badd+1,c
   809  0001F0  EC0C  F00E         	call	_Read_b_eep	;wreg free
   810  0001F4  6E50               	movwf	_DATAI,c
   811                           
   812                           ;digi.c: 98: _delay(1000);
   813  0001F6  0EFA               	movlw	250
   814  0001F8                     u7347:
   815  0001F8  2EE8               	decfsz	wreg,f,c
   816  0001FA  D7FE               	goto	u7347
   817                           
   818                           ;digi.c: 99: bipopower = DATAI;
   819  0001FC  C050  F057         	movff	_DATAI,_bipopower
   820                           
   821                           ;digi.c: 101: addrl = addrh + 7;
   822  000200  5053               	movf	_addrh,w,c
   823  000202  0F07               	addlw	7
   824  000204  6E54               	movwf	_addrl,c
   825                           
   826                           ;digi.c: 102: DATAI = Read_b_eep(addrl);
   827  000206  C054  F00F         	movff	_addrl,Read_b_eep@badd
   828  00020A  6A10               	clrf	Read_b_eep@badd+1,c
   829  00020C  EC0C  F00E         	call	_Read_b_eep	;wreg free
   830  000210  6E50               	movwf	_DATAI,c
   831                           
   832                           ;digi.c: 103: _delay(1000);
   833  000212  0EFA               	movlw	250
   834  000214                     u7357:
   835  000214  2EE8               	decfsz	wreg,f,c
   836  000216  D7FE               	goto	u7357
   837                           
   838                           ;digi.c: 104: bipomode = DATAI;
   839  000218  C050  F056         	movff	_DATAI,_bipomode
   840                           
   841                           ;digi.c: 105: rdfl = 0;
   842  00021C  0E00               	movlw	0
   843  00021E  6E67               	movwf	_rdfl,c
   844                           
   845                           ;digi.c: 109: if( bipomode == 0X03 )
   846  000220  5056               	movf	_bipomode,w,c
   847  000222  0A03               	xorlw	3
   848  000224  A4D8               	btfss	status,2,c
   849  000226  D002               	goto	l4506
   850                           
   851                           ;digi.c: 110: {
   852                           ;digi.c: 111: bipomode = 0x00;
   853  000228  0E00               	movlw	0
   854  00022A  6E56               	movwf	_bipomode,c
   855  00022C                     l4506:
   856                           
   857                           ;digi.c: 112: }
   858                           ;digi.c: 114: if( bipomode == 0x00 )
   859  00022C  6656               	tstfsz	_bipomode,c
   860  00022E  D002               	goto	l4510
   861                           
   862                           ;digi.c: 115: {
   863                           ;digi.c: 116: values[7] = 0x20;
   864  000230  0E20               	movlw	32
   865  000232  6E47               	movwf	_values+7,c	;volatile
   866  000234                     l4510:
   867                           
   868                           ;digi.c: 117: }
   869                           ;digi.c: 119: if( bipomode == 0x01 )
   870  000234  0456               	decf	_bipomode,w,c
   871  000236  A4D8               	btfss	status,2,c
   872  000238  D002               	goto	l4514
   873                           
   874                           ;digi.c: 120: {
   875                           ;digi.c: 121: values[7] = 0x40;
   876  00023A  0E40               	movlw	64
   877  00023C  6E47               	movwf	_values+7,c	;volatile
   878  00023E                     l4514:
   879                           
   880                           ;digi.c: 122: }
   881                           ;digi.c: 124: if( bipomode == 0x02 )
   882  00023E  5056               	movf	_bipomode,w,c
   883  000240  0A02               	xorlw	2
   884  000242  A4D8               	btfss	status,2,c
   885  000244  D002               	goto	l4518
   886                           
   887                           ;digi.c: 125: {
   888                           ;digi.c: 126: values[7] = 0x10;
   889  000246  0E10               	movlw	16
   890  000248  6E47               	movwf	_values+7,c	;volatile
   891  00024A                     l4518:
   892                           
   893                           ;digi.c: 127: }
   894                           ;digi.c: 130: if( coagmode == 0x03 )
   895  00024A  5059               	movf	_coagmode,w,c
   896  00024C  0A03               	xorlw	3
   897  00024E  A4D8               	btfss	status,2,c
   898  000250  D002               	goto	l4522
   899                           
   900                           ;digi.c: 131: {
   901                           ;digi.c: 132: coagmode = 0x00;
   902  000252  0E00               	movlw	0
   903  000254  6E59               	movwf	_coagmode,c
   904  000256                     l4522:
   905                           
   906                           ;digi.c: 133: }
   907                           ;digi.c: 135: if( coagmode == 0x00 )
   908  000256  6659               	tstfsz	_coagmode,c
   909  000258  D002               	goto	l4526
   910                           
   911                           ;digi.c: 136: {
   912                           ;digi.c: 137: values[11] = 0x20;
   913  00025A  0E20               	movlw	32
   914  00025C  6E4B               	movwf	_values+11,c	;volatile
   915  00025E                     l4526:
   916                           
   917                           ;digi.c: 138: }
   918                           ;digi.c: 140: if( coagmode == 0x01 )
   919  00025E  0459               	decf	_coagmode,w,c
   920  000260  A4D8               	btfss	status,2,c
   921  000262  D002               	goto	l4530
   922                           
   923                           ;digi.c: 141: {
   924                           ;digi.c: 142: values[11] = 0x40;
   925  000264  0E40               	movlw	64
   926  000266  6E4B               	movwf	_values+11,c	;volatile
   927  000268                     l4530:
   928                           
   929                           ;digi.c: 143: }
   930                           ;digi.c: 145: if( coagmode == 0x02 )
   931  000268  5059               	movf	_coagmode,w,c
   932  00026A  0A02               	xorlw	2
   933  00026C  A4D8               	btfss	status,2,c
   934  00026E  D002               	goto	l4534
   935                           
   936                           ;digi.c: 146: {
   937                           ;digi.c: 147: values[11] = 0x10;
   938  000270  0E10               	movlw	16
   939  000272  6E4B               	movwf	_values+11,c	;volatile
   940  000274                     l4534:
   941                           
   942                           ;digi.c: 148: }
   943                           ;digi.c: 150: if(cutmode == 0x04)
   944  000274  505C               	movf	_cutmode,w,c
   945  000276  0A04               	xorlw	4
   946  000278  A4D8               	btfss	status,2,c
   947  00027A  D002               	goto	l4538
   948                           
   949                           ;digi.c: 151: {
   950                           ;digi.c: 152: cutmode = 0x00;
   951  00027C  0E00               	movlw	0
   952  00027E  6E5C               	movwf	_cutmode,c
   953  000280                     l4538:
   954                           
   955                           ;digi.c: 153: }
   956                           ;digi.c: 156: if( cutmode == 0x00 )
   957  000280  665C               	tstfsz	_cutmode,c
   958  000282  D004               	goto	l4542
   959                           
   960                           ;digi.c: 157: {
   961                           ;digi.c: 158: values[5] = 0x20;
   962  000284  0E20               	movlw	32
   963  000286  6E45               	movwf	_values+5,c	;volatile
   964                           
   965                           ;digi.c: 159: values[4] = 0x10;
   966  000288  0E10               	movlw	16
   967  00028A  6E44               	movwf	_values+4,c	;volatile
   968  00028C                     l4542:
   969                           
   970                           ;digi.c: 160: }
   971                           ;digi.c: 162: if( cutmode == 0x01 )
   972  00028C  045C               	decf	_cutmode,w,c
   973  00028E  A4D8               	btfss	status,2,c
   974  000290  D004               	goto	l4546
   975                           
   976                           ;digi.c: 163: {
   977                           ;digi.c: 164: values[5] = 0x40;
   978  000292  0E40               	movlw	64
   979  000294  6E45               	movwf	_values+5,c	;volatile
   980                           
   981                           ;digi.c: 165: values[4] = 0x10;
   982  000296  0E10               	movlw	16
   983  000298  6E44               	movwf	_values+4,c	;volatile
   984  00029A                     l4546:
   985                           
   986                           ;digi.c: 166: }
   987                           ;digi.c: 168: if( cutmode == 0x02 )
   988  00029A  505C               	movf	_cutmode,w,c
   989  00029C  0A02               	xorlw	2
   990  00029E  A4D8               	btfss	status,2,c
   991  0002A0  D004               	goto	l4550
   992                           
   993                           ;digi.c: 169: {
   994                           ;digi.c: 170: values[4] = 0x20;
   995  0002A2  0E20               	movlw	32
   996  0002A4  6E44               	movwf	_values+4,c	;volatile
   997                           
   998                           ;digi.c: 171: values[5] = 0x10;
   999  0002A6  0E10               	movlw	16
  1000  0002A8  6E45               	movwf	_values+5,c	;volatile
  1001  0002AA                     l4550:
  1002                           
  1003                           ;digi.c: 172: }
  1004                           ;digi.c: 174: if( cutmode == 0x03 )
  1005  0002AA  505C               	movf	_cutmode,w,c
  1006  0002AC  0A03               	xorlw	3
  1007  0002AE  A4D8               	btfss	status,2,c
  1008  0002B0  D004               	goto	l186
  1009                           
  1010                           ;digi.c: 175: {
  1011                           ;digi.c: 176: values[4] = 0x40;
  1012  0002B2  0E40               	movlw	64
  1013  0002B4  6E44               	movwf	_values+4,c	;volatile
  1014                           
  1015                           ;digi.c: 177: values[5] = 0x10;
  1016  0002B6  0E10               	movlw	16
  1017  0002B8  6E45               	movwf	_values+5,c	;volatile
  1018  0002BA                     l186:
  1019                           
  1020                           ;digi.c: 178: }
  1021                           ;digi.c: 182: cutpower = cutpowerh << 8;
  1022  0002BA  505D               	movf	_cutpowerh,w,c
  1023  0002BC  6E4F               	movwf	_cutpower+1,c
  1024  0002BE  6A4E               	clrf	_cutpower,c
  1025                           
  1026                           ;digi.c: 183: cutpower = cutpower + cutpowerl;
  1027  0002C0  505E               	movf	_cutpowerl,w,c
  1028  0002C2  244E               	addwf	_cutpower,w,c
  1029  0002C4  6E4E               	movwf	_cutpower,c
  1030  0002C6  0E00               	movlw	0
  1031  0002C8  204F               	addwfc	_cutpower+1,w,c
  1032  0002CA  6E4F               	movwf	_cutpower+1,c
  1033                           
  1034                           ;digi.c: 184: hundreds = cutpower / 100;
  1035  0002CC  C04E  F00F         	movff	_cutpower,___lwdiv@dividend
  1036  0002D0  C04F  F010         	movff	_cutpower+1,___lwdiv@dividend+1
  1037  0002D4  0E00               	movlw	0
  1038  0002D6  6E12               	movwf	___lwdiv@divisor+1,c
  1039  0002D8  0E64               	movlw	100
  1040  0002DA  6E11               	movwf	___lwdiv@divisor,c
  1041  0002DC  EC66  F00D         	call	___lwdiv	;wreg free
  1042  0002E0  500F               	movf	?___lwdiv,w,c
  1043  0002E2  6E63               	movwf	_hundreds,c
  1044                           
  1045                           ;digi.c: 185: temp = (cutpower - ( hundreds * 100 ));
  1046  0002E4  5063               	movf	_hundreds,w,c
  1047  0002E6  0D64               	mullw	100
  1048  0002E8  50F3               	movf	prodl,w,c
  1049  0002EA  0800               	sublw	0
  1050  0002EC  244E               	addwf	_cutpower,w,c
  1051  0002EE  6E6A               	movwf	_temp,c
  1052                           
  1053                           ;digi.c: 186: units = temp % 10;
  1054  0002F0  C06A  F00F         	movff	_temp,___awmod@dividend
  1055  0002F4  6A10               	clrf	___awmod@dividend+1,c
  1056  0002F6  0E00               	movlw	0
  1057  0002F8  6E12               	movwf	___awmod@divisor+1,c
  1058  0002FA  0E0A               	movlw	10
  1059  0002FC  6E11               	movwf	___awmod@divisor,c
  1060  0002FE  EC1C  F00D         	call	___awmod	;wreg free
  1061  000302  500F               	movf	?___awmod,w,c
  1062  000304  6E6E               	movwf	_units,c
  1063                           
  1064                           ;digi.c: 187: units = units << 4;
  1065  000306  386E               	swapf	_units,w,c
  1066  000308  0BF0               	andlw	240
  1067  00030A  6E6E               	movwf	_units,c
  1068                           
  1069                           ;digi.c: 188: values[8] = units;
  1070  00030C  C06E  F048         	movff	_units,_values+8	;volatile
  1071                           
  1072                           ;digi.c: 189: tens = temp / 10;
  1073  000310  C06A  F00F         	movff	_temp,___awdiv@dividend
  1074  000314  6A10               	clrf	___awdiv@dividend+1,c
  1075  000316  0E00               	movlw	0
  1076  000318  6E12               	movwf	___awdiv@divisor+1,c
  1077  00031A  0E0A               	movlw	10
  1078  00031C  6E11               	movwf	___awdiv@divisor,c
  1079  00031E  EC7E  F00C         	call	___awdiv	;wreg free
  1080  000322  500F               	movf	?___awdiv,w,c
  1081  000324  6E6B               	movwf	_tens,c
  1082                           
  1083                           ;digi.c: 190: tens = tens << 4;
  1084  000326  386B               	swapf	_tens,w,c
  1085  000328  0BF0               	andlw	240
  1086  00032A  6E6B               	movwf	_tens,c
  1087                           
  1088                           ;digi.c: 191: values[3] = tens;
  1089  00032C  C06B  F043         	movff	_tens,_values+3	;volatile
  1090                           
  1091                           ;digi.c: 192: hundreds = hundreds << 4;
  1092  000330  3863               	swapf	_hundreds,w,c
  1093  000332  0BF0               	andlw	240
  1094  000334  6E63               	movwf	_hundreds,c
  1095                           
  1096                           ;digi.c: 193: values[2] = hundreds;
  1097  000336  C063  F042         	movff	_hundreds,_values+2	;volatile
  1098                           
  1099                           ;digi.c: 196: hundreds = coagpower / 100;
  1100  00033A  C05A  F00F         	movff	_coagpower,___awdiv@dividend
  1101  00033E  6A10               	clrf	___awdiv@dividend+1,c
  1102  000340  0E00               	movlw	0
  1103  000342  6E12               	movwf	___awdiv@divisor+1,c
  1104  000344  0E64               	movlw	100
  1105  000346  6E11               	movwf	___awdiv@divisor,c
  1106  000348  EC7E  F00C         	call	___awdiv	;wreg free
  1107  00034C  500F               	movf	?___awdiv,w,c
  1108  00034E  6E63               	movwf	_hundreds,c
  1109                           
  1110                           ;digi.c: 197: temp = (coagpower - ( hundreds * 100 ));
  1111  000350  5063               	movf	_hundreds,w,c
  1112  000352  0D64               	mullw	100
  1113  000354  50F3               	movf	prodl,w,c
  1114  000356  0800               	sublw	0
  1115  000358  245A               	addwf	_coagpower,w,c
  1116  00035A  6E6A               	movwf	_temp,c
  1117                           
  1118                           ;digi.c: 198: units = temp % 10;
  1119  00035C  C06A  F00F         	movff	_temp,___awmod@dividend
  1120  000360  6A10               	clrf	___awmod@dividend+1,c
  1121  000362  0E00               	movlw	0
  1122  000364  6E12               	movwf	___awmod@divisor+1,c
  1123  000366  0E0A               	movlw	10
  1124  000368  6E11               	movwf	___awmod@divisor,c
  1125  00036A  EC1C  F00D         	call	___awmod	;wreg free
  1126  00036E  500F               	movf	?___awmod,w,c
  1127  000370  6E6E               	movwf	_units,c
  1128                           
  1129                           ;digi.c: 199: units = units << 4;
  1130  000372  386E               	swapf	_units,w,c
  1131  000374  0BF0               	andlw	240
  1132  000376  6E6E               	movwf	_units,c
  1133                           
  1134                           ;digi.c: 200: values[12] = units;
  1135  000378  C06E  F04C         	movff	_units,_values+12	;volatile
  1136                           
  1137                           ;digi.c: 201: tens = temp / 10;
  1138  00037C  C06A  F00F         	movff	_temp,___awdiv@dividend
  1139  000380  6A10               	clrf	___awdiv@dividend+1,c
  1140  000382  0E00               	movlw	0
  1141  000384  6E12               	movwf	___awdiv@divisor+1,c
  1142  000386  0E0A               	movlw	10
  1143  000388  6E11               	movwf	___awdiv@divisor,c
  1144  00038A  EC7E  F00C         	call	___awdiv	;wreg free
  1145  00038E  500F               	movf	?___awdiv,w,c
  1146  000390  6E6B               	movwf	_tens,c
  1147                           
  1148                           ;digi.c: 202: tens = tens << 4;
  1149  000392  386B               	swapf	_tens,w,c
  1150  000394  0BF0               	andlw	240
  1151  000396  6E6B               	movwf	_tens,c
  1152                           
  1153                           ;digi.c: 203: values[10] = tens;
  1154  000398  C06B  F04A         	movff	_tens,_values+10	;volatile
  1155                           
  1156                           ;digi.c: 204: hundreds = hundreds << 4;
  1157  00039C  3863               	swapf	_hundreds,w,c
  1158  00039E  0BF0               	andlw	240
  1159  0003A0  6E63               	movwf	_hundreds,c
  1160                           
  1161                           ;digi.c: 205: values[9] = hundreds;
  1162  0003A2  C063  F049         	movff	_hundreds,_values+9	;volatile
  1163                           
  1164                           ;digi.c: 208: tens = bipopower / 10;
  1165  0003A6  C057  F00F         	movff	_bipopower,___awdiv@dividend
  1166  0003AA  6A10               	clrf	___awdiv@dividend+1,c
  1167  0003AC  0E00               	movlw	0
  1168  0003AE  6E12               	movwf	___awdiv@divisor+1,c
  1169  0003B0  0E0A               	movlw	10
  1170  0003B2  6E11               	movwf	___awdiv@divisor,c
  1171  0003B4  EC7E  F00C         	call	___awdiv	;wreg free
  1172  0003B8  500F               	movf	?___awdiv,w,c
  1173  0003BA  6E6B               	movwf	_tens,c
  1174                           
  1175                           ;digi.c: 209: tens = tens << 4;
  1176  0003BC  386B               	swapf	_tens,w,c
  1177  0003BE  0BF0               	andlw	240
  1178  0003C0  6E6B               	movwf	_tens,c
  1179                           
  1180                           ;digi.c: 210: values[13] = tens;
  1181  0003C2  C06B  F04D         	movff	_tens,_values+13	;volatile
  1182                           
  1183                           ;digi.c: 211: units = bipopower % 10;
  1184  0003C6  C057  F00F         	movff	_bipopower,___awmod@dividend
  1185  0003CA  6A10               	clrf	___awmod@dividend+1,c
  1186  0003CC  0E00               	movlw	0
  1187  0003CE  6E12               	movwf	___awmod@divisor+1,c
  1188  0003D0  0E0A               	movlw	10
  1189  0003D2  6E11               	movwf	___awmod@divisor,c
  1190  0003D4  EC1C  F00D         	call	___awmod	;wreg free
  1191  0003D8  500F               	movf	?___awmod,w,c
  1192  0003DA  6E6E               	movwf	_units,c
  1193                           
  1194                           ;digi.c: 212: units = units << 4;
  1195  0003DC  386E               	swapf	_units,w,c
  1196  0003DE  0BF0               	andlw	240
  1197  0003E0  6E6E               	movwf	_units,c
  1198                           
  1199                           ;digi.c: 213: values[6] = units;
  1200  0003E2  C06E  F046         	movff	_units,_values+6	;volatile
  1201                           
  1202                           ;digi.c: 214: }
  1203  0003E6  D033               	goto	l4644
  1204  0003E8                     l173:
  1205                           
  1206                           ;digi.c: 215: else
  1207                           ;digi.c: 216: {
  1208                           ;digi.c: 222: temp = 0xFF;
  1209  0003E8  686A               	setf	_temp,c
  1210                           
  1211                           ;digi.c: 223: RD5 = 0;
  1212  0003EA  9A83               	bcf	3971,5,c	;volatile
  1213                           
  1214                           ;digi.c: 224: _delay(25);
  1215  0003EC  0E05               	movlw	5
  1216  0003EE                     u7367:
  1217  0003EE  F000               	nop	
  1218  0003F0  2EE8               	decfsz	wreg,f,c
  1219  0003F2  D7FD               	goto	u7367
  1220                           
  1221                           ;digi.c: 225: for( j = 0;j <= 7;j ++ )
  1222  0003F4  0E00               	movlw	0
  1223  0003F6  6E65               	movwf	_j,c
  1224  0003F8  D00F               	goto	L14
  1225  0003FA                     l4616:
  1226                           
  1227                           ;digi.c: 226: {
  1228                           ;digi.c: 227: R1 = R1 << 1;
  1229  0003FA  5070               	movf	_R1,w,c
  1230  0003FC  2470               	addwf	_R1,w,c
  1231  0003FE  6E70               	movwf	_R1,c
  1232                           
  1233                           ;digi.c: 228: if(CARRY == 1)
  1234  000400  A0D8               	btfss	status,0,c	;volatile
  1235  000402  D002               	goto	l190
  1236                           
  1237                           ;digi.c: 229: {
  1238                           ;digi.c: 230: RD7 = 1;
  1239  000404  8E83               	bsf	3971,7,c	;volatile
  1240                           
  1241                           ;digi.c: 231: }
  1242  000406  D001               	goto	l191
  1243  000408                     l190:
  1244                           
  1245                           ;digi.c: 232: else
  1246                           ;digi.c: 233: {
  1247                           ;digi.c: 234: RD7 = 0;
  1248  000408  9E83               	bcf	3971,7,c	;volatile
  1249  00040A                     l191:
  1250                           
  1251                           ;digi.c: 235: }
  1252                           ;digi.c: 236: RD6 = 1;
  1253  00040A  8C83               	bsf	3971,6,c	;volatile
  1254                           
  1255                           ;digi.c: 237: _delay(5);
  1256  00040C  F000               	nop	
  1257  00040E  D000               	nop2		;2 cycle nop
  1258  000410  D000               	nop2		;2 cycle nop
  1259                           
  1260                           ;digi.c: 238: RD6 = 0;
  1261  000412  9C83               	bcf	3971,6,c	;volatile
  1262                           
  1263                           ;digi.c: 239: RD7 = 0;
  1264  000414  9E83               	bcf	3971,7,c	;volatile
  1265  000416  2A65               	incf	_j,f,c
  1266  000418                     L14:
  1267  000418  0E07               	movlw	7
  1268  00041A  6465               	cpfsgt	_j,c
  1269  00041C  D7EE               	goto	l4616
  1270                           
  1271                           ;digi.c: 240: }
  1272                           ;digi.c: 241: for(i = 0;i <= 7;i ++ )
  1273  00041E  0E00               	movlw	0
  1274  000420  6E64               	movwf	_i,c
  1275  000422  D00F               	goto	L9
  1276  000424                     l4632:
  1277                           
  1278                           ;digi.c: 242: {
  1279                           ;digi.c: 243: temp = temp << 1;
  1280  000424  506A               	movf	_temp,w,c
  1281  000426  246A               	addwf	_temp,w,c
  1282  000428  6E6A               	movwf	_temp,c
  1283                           
  1284                           ;digi.c: 244: if(CARRY == 1)
  1285  00042A  A0D8               	btfss	status,0,c	;volatile
  1286  00042C  D002               	goto	l194
  1287                           
  1288                           ;digi.c: 245: {
  1289                           ;digi.c: 246: RD7 = 1;
  1290  00042E  8E83               	bsf	3971,7,c	;volatile
  1291                           
  1292                           ;digi.c: 247: }
  1293  000430  D001               	goto	l195
  1294  000432                     l194:
  1295                           
  1296                           ;digi.c: 248: else
  1297                           ;digi.c: 249: {
  1298                           ;digi.c: 250: RD7 = 0;
  1299  000432  9E83               	bcf	3971,7,c	;volatile
  1300  000434                     l195:
  1301                           
  1302                           ;digi.c: 251: }
  1303                           ;digi.c: 252: RD6 = 1;
  1304  000434  8C83               	bsf	3971,6,c	;volatile
  1305                           
  1306                           ;digi.c: 253: _delay(5);
  1307  000436  F000               	nop	
  1308  000438  D000               	nop2		;2 cycle nop
  1309  00043A  D000               	nop2		;2 cycle nop
  1310                           
  1311                           ;digi.c: 254: RD6 = 0;
  1312  00043C  9C83               	bcf	3971,6,c	;volatile
  1313                           
  1314                           ;digi.c: 255: RD7 = 0;
  1315  00043E  9E83               	bcf	3971,7,c	;volatile
  1316  000440  2A64               	incf	_i,f,c
  1317  000442                     L9:
  1318  000442  0E07               	movlw	7
  1319  000444  6464               	cpfsgt	_i,c
  1320  000446  D7EE               	goto	l4632
  1321                           
  1322                           ;digi.c: 256: }
  1323                           ;digi.c: 257: RD5 = 1;
  1324  000448  8A83               	bsf	3971,5,c	;volatile
  1325                           
  1326                           ;digi.c: 258: R1 = 0x11;
  1327  00044A  0E11               	movlw	17
  1328  00044C  6E70               	movwf	_R1,c
  1329  00044E                     l4644:
  1330                           
  1331                           ;digi.c: 259: }
  1332                           ;digi.c: 263: if(RA1 == 0)
  1333  00044E  A280               	btfss	3968,1,c	;volatile
  1334                           
  1335                           ;digi.c: 264: {
  1336                           ;digi.c: 265: RB2 = 0;
  1337  000450  9481               	bcf	3969,2,c	;volatile
  1338                           
  1339                           ;digi.c: 266: }
  1340                           ;digi.c: 267: if(( RA2 || RA3 )== 0)
  1341  000452  A480               	btfss	3968,2,c	;volatile
  1342  000454  B680               	btfsc	3968,3,c	;volatile
  1343  000456  D001               	goto	l197
  1344                           
  1345                           ;digi.c: 268: {
  1346                           ;digi.c: 269: RB3 = 0;
  1347  000458  9681               	bcf	3969,3,c	;volatile
  1348  00045A                     l197:
  1349                           
  1350                           ;digi.c: 270: }
  1351                           ;digi.c: 273: if( RA0 == 0 )
  1352  00045A  B080               	btfsc	3968,0,c	;volatile
  1353  00045C  D09E               	goto	l198
  1354                           
  1355                           ;digi.c: 274: {
  1356                           ;digi.c: 275: RB2 = 0;
  1357  00045E  9481               	bcf	3969,2,c	;volatile
  1358                           
  1359                           ;digi.c: 276: _delay(100);
  1360  000460  0E19               	movlw	25
  1361  000462                     u7377:
  1362  000462  2EE8               	decfsz	wreg,f,c
  1363  000464  D7FE               	goto	u7377
  1364                           
  1365                           ;digi.c: 277: RB3 = 0;
  1366  000466  9681               	bcf	3969,3,c	;volatile
  1367                           
  1368                           ;digi.c: 278: _delay(100);
  1369  000468  0E19               	movlw	25
  1370  00046A                     u7387:
  1371  00046A  2EE8               	decfsz	wreg,f,c
  1372  00046C  D7FE               	goto	u7387
  1373                           
  1374                           ;digi.c: 280: if( RA4 == 0 )
  1375  00046E  B880               	btfsc	3968,4,c	;volatile
  1376  000470  D00A               	goto	l4662
  1377                           
  1378                           ;digi.c: 281: {
  1379                           ;digi.c: 283: _delay(10000);
  1380  000472  0E0A               	movlw	10
  1381  000474  0100               	movlb	0	; () banked
  1382  000476  6F8B               	movwf	??_main& (0+255),b
  1383  000478  0EBE               	movlw	190
  1384  00047A                     u7397:
  1385  00047A  2EE8               	decfsz	wreg,f,c
  1386  00047C  D7FE               	goto	u7397
  1387  00047E  2F8B               	decfsz	??_main& (0+255),f,b
  1388  000480  D7FC               	goto	u7397
  1389  000482  D000               	nop2	
  1390                           
  1391                           ;digi.c: 284: }
  1392  000484  D08A               	goto	l198
  1393  000486                     l4662:
  1394                           
  1395                           ;digi.c: 285: else
  1396                           ;digi.c: 286: {
  1397                           ;digi.c: 288: temp = sqrt(cutpower);
  1398  000486  C04E  F017         	movff	_cutpower,___lwtoft@c
  1399  00048A  C04F  F018         	movff	_cutpower+1,___lwtoft@c+1
  1400  00048E  ECE4  F00D         	call	___lwtoft	;wreg free
  1401  000492  C017  F029         	movff	?___lwtoft,sqrt@y
  1402  000496  C018  F02A         	movff	?___lwtoft+1,sqrt@y+1
  1403  00049A  C019  F02B         	movff	?___lwtoft+2,sqrt@y+2
  1404  00049E  EC49  F00A         	call	_sqrt	;wreg free
  1405  0004A2  C029  F03C         	movff	?_sqrt,___fttol@f1
  1406  0004A6  C02A  F03D         	movff	?_sqrt+1,___fttol@f1+1
  1407  0004AA  C02B  F03E         	movff	?_sqrt+2,___fttol@f1+2
  1408  0004AE  EC1C  F00B         	call	___fttol	;wreg free
  1409  0004B2  C03C  F08B         	movff	?___fttol,??_main
  1410  0004B6  C03D  F08C         	movff	?___fttol+1,??_main+1
  1411  0004BA  C03E  F08D         	movff	?___fttol+2,??_main+2
  1412  0004BE  C03F  F08E         	movff	?___fttol+3,??_main+3
  1413  0004C2  0100               	movlb	0	; () banked
  1414  0004C4  518B               	movf	??_main& (0+255),w,b
  1415  0004C6  6E6A               	movwf	_temp,c
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;digi.c: 289: temp = temp * 4;
  1419  0004C8  506A               	movf	_temp,w,c
  1420  0004CA  0D04               	mullw	4
  1421  0004CC  CFF3 F06A          	movff	prodl,_temp
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;digi.c: 290: temp = ~temp;
  1425  0004D0  1E6A               	comf	_temp,f,c
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;digi.c: 297: RD5 = 0;
  1429  0004D2  9A83               	bcf	3971,5,c	;volatile
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;digi.c: 298: _delay(25);
  1433  0004D4  0E05               	movlw	5
  1434  0004D6                     u7407:
  1435  0004D6  F000               	nop	
  1436  0004D8  2EE8               	decfsz	wreg,f,c
  1437  0004DA  D7FD               	goto	u7407
  1438                           
  1439                           ;digi.c: 299: for( j = 0;j <= 7;j ++ )
  1440  0004DC  0E00               	movlw	0
  1441  0004DE  6E65               	movwf	_j,c
  1442  0004E0  D00F               	goto	L15
  1443  0004E2                     l4678:
  1444                           
  1445                           ;digi.c: 300: {
  1446                           ;digi.c: 301: R1 = R1 << 1;
  1447  0004E2  5070               	movf	_R1,w,c
  1448  0004E4  2470               	addwf	_R1,w,c
  1449  0004E6  6E70               	movwf	_R1,c
  1450                           
  1451                           ;digi.c: 302: if(CARRY == 1)
  1452  0004E8  A0D8               	btfss	status,0,c	;volatile
  1453  0004EA  D002               	goto	l203
  1454                           
  1455                           ;digi.c: 303: {
  1456                           ;digi.c: 304: RD7 = 1;
  1457  0004EC  8E83               	bsf	3971,7,c	;volatile
  1458                           
  1459                           ;digi.c: 305: }
  1460  0004EE  D001               	goto	l204
  1461  0004F0                     l203:
  1462                           
  1463                           ;digi.c: 306: else
  1464                           ;digi.c: 307: {
  1465                           ;digi.c: 308: RD7 = 0;
  1466  0004F0  9E83               	bcf	3971,7,c	;volatile
  1467  0004F2                     l204:
  1468                           
  1469                           ;digi.c: 309: }
  1470                           ;digi.c: 310: RD6 = 1;
  1471  0004F2  8C83               	bsf	3971,6,c	;volatile
  1472                           
  1473                           ;digi.c: 311: _delay(5);
  1474  0004F4  F000               	nop	
  1475  0004F6  D000               	nop2		;2 cycle nop
  1476  0004F8  D000               	nop2		;2 cycle nop
  1477                           
  1478                           ;digi.c: 312: RD6 = 0;
  1479  0004FA  9C83               	bcf	3971,6,c	;volatile
  1480                           
  1481                           ;digi.c: 313: RD7 = 0;
  1482  0004FC  9E83               	bcf	3971,7,c	;volatile
  1483  0004FE  2A65               	incf	_j,f,c
  1484  000500                     L15:
  1485  000500  0E07               	movlw	7
  1486  000502  6465               	cpfsgt	_j,c
  1487  000504  D7EE               	goto	l4678
  1488                           
  1489                           ;digi.c: 314: }
  1490                           ;digi.c: 315: for(i = 0;i <= 7;i ++ )
  1491  000506  0E00               	movlw	0
  1492  000508  6E64               	movwf	_i,c
  1493  00050A  D00F               	goto	L10
  1494  00050C                     l4694:
  1495                           
  1496                           ;digi.c: 316: {
  1497                           ;digi.c: 317: temp = temp << 1;
  1498  00050C  506A               	movf	_temp,w,c
  1499  00050E  246A               	addwf	_temp,w,c
  1500  000510  6E6A               	movwf	_temp,c
  1501                           
  1502                           ;digi.c: 318: if(CARRY == 1)
  1503  000512  A0D8               	btfss	status,0,c	;volatile
  1504  000514  D002               	goto	l207
  1505                           
  1506                           ;digi.c: 319: {
  1507                           ;digi.c: 320: RD7 = 1;
  1508  000516  8E83               	bsf	3971,7,c	;volatile
  1509                           
  1510                           ;digi.c: 321: }
  1511  000518  D001               	goto	l208
  1512  00051A                     l207:
  1513                           
  1514                           ;digi.c: 322: else
  1515                           ;digi.c: 323: {
  1516                           ;digi.c: 324: RD7 = 0;
  1517  00051A  9E83               	bcf	3971,7,c	;volatile
  1518  00051C                     l208:
  1519                           
  1520                           ;digi.c: 325: }
  1521                           ;digi.c: 326: RD6 = 1;
  1522  00051C  8C83               	bsf	3971,6,c	;volatile
  1523                           
  1524                           ;digi.c: 327: _delay(5);
  1525  00051E  F000               	nop	
  1526  000520  D000               	nop2		;2 cycle nop
  1527  000522  D000               	nop2		;2 cycle nop
  1528                           
  1529                           ;digi.c: 328: RD6 = 0;
  1530  000524  9C83               	bcf	3971,6,c	;volatile
  1531                           
  1532                           ;digi.c: 329: RD7 = 0;
  1533  000526  9E83               	bcf	3971,7,c	;volatile
  1534  000528  2A64               	incf	_i,f,c
  1535  00052A                     L10:
  1536  00052A  0E07               	movlw	7
  1537  00052C  6464               	cpfsgt	_i,c
  1538  00052E  D7EE               	goto	l4694
  1539                           
  1540                           ;digi.c: 330: }
  1541                           ;digi.c: 331: RD5 = 1;
  1542  000530  8A83               	bsf	3971,5,c	;volatile
  1543                           
  1544                           ;digi.c: 332: R1 = 0x11;
  1545  000532  0E11               	movlw	17
  1546  000534  6E70               	movwf	_R1,c
  1547                           
  1548                           ;digi.c: 338: while(RA0 == 0)
  1549  000536  D02F               	goto	l4720
  1550  000538                     l210:
  1551  000538  0E0A               	movlw	10	;# 
  1552  00053A  6F6C               	movwf	_train,b	;# 
  1553  00053C                     loop:
  1554                           
  1555                           ;# 
  1556  00053C  8281               	bsf	3969,1,c	;# 
  1557  00053E  F000               	nop		;# 
  1558  000540  F000               	nop		;# 
  1559  000542  F000               	nop		;# 
  1560  000544  F000               	nop		;# 
  1561  000546  F000               	nop		;# 
  1562  000548  F000               	nop		;# 
  1563  00054A  F000               	nop		;# 
  1564  00054C  F000               	nop		;# 
  1565  00054E  F000               	nop		;# 
  1566  000550  9281               	bcf	3969,1,c	;# 
  1567  000552  F000               	nop		;# 
  1568  000554  F000               	nop		;# 
  1569  000556  F000               	nop		;# 
  1570  000558  F000               	nop		;# 
  1571  00055A  F000               	nop		;# 
  1572  00055C  F000               	nop		;# 
  1573  00055E  2F6C               	decfsz	_train,f,b	;# 
  1574  000560  EF9E  F002         	goto	loop	;# 
  1575                           
  1576                           ;digi.c: 366: if( cutmode == 0 )
  1577  000564  665C               	tstfsz	_cutmode,c
  1578  000566  D003               	goto	l4708
  1579                           
  1580                           ;digi.c: 367: {
  1581                           ;digi.c: 368: _delay(5);
  1582  000568  F000               	nop	
  1583  00056A  D000               	nop2		;2 cycle nop
  1584  00056C  D000               	nop2		;2 cycle nop
  1585  00056E                     l4708:
  1586                           
  1587                           ;digi.c: 369: }
  1588                           ;digi.c: 371: if( cutmode == 1 )
  1589  00056E  045C               	decf	_cutmode,w,c
  1590  000570  A4D8               	btfss	status,2,c
  1591  000572  D003               	goto	l4712
  1592                           
  1593                           ;digi.c: 372: {
  1594                           ;digi.c: 373: _delay(40);
  1595  000574  0E0A               	movlw	10
  1596  000576                     u7417:
  1597  000576  2EE8               	decfsz	wreg,f,c
  1598  000578  D7FE               	goto	u7417
  1599  00057A                     l4712:
  1600                           
  1601                           ;digi.c: 374: }
  1602                           ;digi.c: 376: if( cutmode == 2 )
  1603  00057A  505C               	movf	_cutmode,w,c
  1604  00057C  0A02               	xorlw	2
  1605  00057E  A4D8               	btfss	status,2,c
  1606  000580  D003               	goto	l4716
  1607                           
  1608                           ;digi.c: 377: {
  1609                           ;digi.c: 378: _delay(60);
  1610  000582  0E0F               	movlw	15
  1611  000584                     u7427:
  1612  000584  2EE8               	decfsz	wreg,f,c
  1613  000586  D7FE               	goto	u7427
  1614  000588                     l4716:
  1615                           
  1616                           ;digi.c: 379: }
  1617                           ;digi.c: 381: if( cutmode == 3 )
  1618  000588  505C               	movf	_cutmode,w,c
  1619  00058A  0A03               	xorlw	3
  1620  00058C  A4D8               	btfss	status,2,c
  1621  00058E  D003               	goto	l4720
  1622                           
  1623                           ;digi.c: 382: {
  1624                           ;digi.c: 383: _delay(100);
  1625  000590  0E19               	movlw	25
  1626  000592                     u7437:
  1627  000592  2EE8               	decfsz	wreg,f,c
  1628  000594  D7FE               	goto	u7437
  1629  000596                     l4720:
  1630  000596  A080               	btfss	3968,0,c	;volatile
  1631  000598  D7CF               	goto	l210
  1632  00059A                     l198:
  1633                           
  1634                           ;digi.c: 384: }
  1635                           ;digi.c: 385: }
  1636                           ;digi.c: 386: }
  1637                           ;digi.c: 387: }
  1638                           ;digi.c: 390: if(RA1 == 0)
  1639  00059A  B280               	btfsc	3968,1,c	;volatile
  1640  00059C  D0C2               	goto	l216
  1641                           
  1642                           ;digi.c: 391: {
  1643                           ;digi.c: 392: if(RA4 == 0)
  1644  00059E  B880               	btfsc	3968,4,c	;volatile
  1645  0005A0  D00A               	goto	l217
  1646                           
  1647                           ;digi.c: 393: {
  1648                           ;digi.c: 394: _delay(10000);
  1649  0005A2  0E0A               	movlw	10
  1650  0005A4  0100               	movlb	0	; () banked
  1651  0005A6  6F8B               	movwf	??_main& (0+255),b
  1652  0005A8  0EBE               	movlw	190
  1653  0005AA                     u7447:
  1654  0005AA  2EE8               	decfsz	wreg,f,c
  1655  0005AC  D7FE               	goto	u7447
  1656  0005AE  2F8B               	decfsz	??_main& (0+255),f,b
  1657  0005B0  D7FC               	goto	u7447
  1658  0005B2  D000               	nop2	
  1659                           
  1660                           ;digi.c: 395: }
  1661  0005B4  D0B6               	goto	l216
  1662  0005B6                     l217:
  1663                           
  1664                           ;digi.c: 396: else
  1665                           ;digi.c: 397: {
  1666                           ;digi.c: 399: RB3 = 1;
  1667  0005B6  8681               	bsf	3969,3,c	;volatile
  1668                           
  1669                           ;digi.c: 400: _delay(25);
  1670  0005B8  0E05               	movlw	5
  1671  0005BA                     u7457:
  1672  0005BA  F000               	nop	
  1673  0005BC  2EE8               	decfsz	wreg,f,c
  1674  0005BE  D7FD               	goto	u7457
  1675                           
  1676                           ;digi.c: 401: temp = sqrt(coagpower);
  1677  0005C0  505A               	movf	_coagpower,w,c
  1678  0005C2  ECF8  F00D         	call	___lbtoft
  1679  0005C6  C017  F029         	movff	?___lbtoft,sqrt@y
  1680  0005CA  C018  F02A         	movff	?___lbtoft+1,sqrt@y+1
  1681  0005CE  C019  F02B         	movff	?___lbtoft+2,sqrt@y+2
  1682  0005D2  EC49  F00A         	call	_sqrt	;wreg free
  1683  0005D6  C029  F03C         	movff	?_sqrt,___fttol@f1
  1684  0005DA  C02A  F03D         	movff	?_sqrt+1,___fttol@f1+1
  1685  0005DE  C02B  F03E         	movff	?_sqrt+2,___fttol@f1+2
  1686  0005E2  EC1C  F00B         	call	___fttol	;wreg free
  1687  0005E6  C03C  F08B         	movff	?___fttol,??_main
  1688  0005EA  C03D  F08C         	movff	?___fttol+1,??_main+1
  1689  0005EE  C03E  F08D         	movff	?___fttol+2,??_main+2
  1690  0005F2  C03F  F08E         	movff	?___fttol+3,??_main+3
  1691  0005F6  0100               	movlb	0	; () banked
  1692  0005F8  518B               	movf	??_main& (0+255),w,b
  1693  0005FA  6E6A               	movwf	_temp,c
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;digi.c: 402: temp = temp * 10;
  1697  0005FC  506A               	movf	_temp,w,c
  1698  0005FE  0D0A               	mullw	10
  1699  000600  CFF3 F06A          	movff	prodl,_temp
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;digi.c: 403: temp = ~temp;
  1703  000604  1E6A               	comf	_temp,f,c
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;digi.c: 410: RD5 = 0;
  1707  000606  9A83               	bcf	3971,5,c	;volatile
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;digi.c: 411: _delay(25);
  1711  000608  0E05               	movlw	5
  1712  00060A                     u7467:
  1713  00060A  F000               	nop	
  1714  00060C  2EE8               	decfsz	wreg,f,c
  1715  00060E  D7FD               	goto	u7467
  1716                           
  1717                           ;digi.c: 412: R1 = 0x11;
  1718  000610  0E11               	movlw	17
  1719  000612  6E70               	movwf	_R1,c
  1720                           
  1721                           ;digi.c: 413: for( j = 0; j <= 7; j ++ )
  1722  000614  0E00               	movlw	0
  1723  000616  6E65               	movwf	_j,c
  1724  000618  D00F               	goto	L16
  1725  00061A                     l4746:
  1726                           
  1727                           ;digi.c: 414: {
  1728                           ;digi.c: 415: R1 = R1 << 1;
  1729  00061A  5070               	movf	_R1,w,c
  1730  00061C  2470               	addwf	_R1,w,c
  1731  00061E  6E70               	movwf	_R1,c
  1732                           
  1733                           ;digi.c: 416: if(CARRY == 1)
  1734  000620  A0D8               	btfss	status,0,c	;volatile
  1735  000622  D002               	goto	l221
  1736                           
  1737                           ;digi.c: 417: {
  1738                           ;digi.c: 418: RD7 = 1;
  1739  000624  8E83               	bsf	3971,7,c	;volatile
  1740                           
  1741                           ;digi.c: 419: }
  1742  000626  D001               	goto	l222
  1743  000628                     l221:
  1744                           
  1745                           ;digi.c: 420: else
  1746                           ;digi.c: 421: {
  1747                           ;digi.c: 422: RD7 = 0;
  1748  000628  9E83               	bcf	3971,7,c	;volatile
  1749  00062A                     l222:
  1750                           
  1751                           ;digi.c: 423: }
  1752                           ;digi.c: 424: RD6 = 1;
  1753  00062A  8C83               	bsf	3971,6,c	;volatile
  1754                           
  1755                           ;digi.c: 425: _delay(5);
  1756  00062C  F000               	nop	
  1757  00062E  D000               	nop2		;2 cycle nop
  1758  000630  D000               	nop2		;2 cycle nop
  1759                           
  1760                           ;digi.c: 426: RD6 = 0;
  1761  000632  9C83               	bcf	3971,6,c	;volatile
  1762                           
  1763                           ;digi.c: 427: RD7 = 0;
  1764  000634  9E83               	bcf	3971,7,c	;volatile
  1765  000636  2A65               	incf	_j,f,c
  1766  000638                     L16:
  1767  000638  0E07               	movlw	7
  1768  00063A  6465               	cpfsgt	_j,c
  1769  00063C  D7EE               	goto	l4746
  1770                           
  1771                           ;digi.c: 428: }
  1772                           ;digi.c: 429: for( i = 0; i <= 7; i ++ )
  1773  00063E  0E00               	movlw	0
  1774  000640  6E64               	movwf	_i,c
  1775  000642  D00F               	goto	L11
  1776  000644                     l4762:
  1777                           
  1778                           ;digi.c: 430: {
  1779                           ;digi.c: 431: temp = temp << 1;
  1780  000644  506A               	movf	_temp,w,c
  1781  000646  246A               	addwf	_temp,w,c
  1782  000648  6E6A               	movwf	_temp,c
  1783                           
  1784                           ;digi.c: 432: if(CARRY == 1)
  1785  00064A  A0D8               	btfss	status,0,c	;volatile
  1786  00064C  D002               	goto	l225
  1787                           
  1788                           ;digi.c: 433: {
  1789                           ;digi.c: 434: RD7 = 1;
  1790  00064E  8E83               	bsf	3971,7,c	;volatile
  1791                           
  1792                           ;digi.c: 435: }
  1793  000650  D001               	goto	l226
  1794  000652                     l225:
  1795                           
  1796                           ;digi.c: 436: else
  1797                           ;digi.c: 437: {
  1798                           ;digi.c: 438: RD7 = 0;
  1799  000652  9E83               	bcf	3971,7,c	;volatile
  1800  000654                     l226:
  1801                           
  1802                           ;digi.c: 439: }
  1803                           ;digi.c: 440: RD6 = 1;
  1804  000654  8C83               	bsf	3971,6,c	;volatile
  1805                           
  1806                           ;digi.c: 441: _delay(5);
  1807  000656  F000               	nop	
  1808  000658  D000               	nop2		;2 cycle nop
  1809  00065A  D000               	nop2		;2 cycle nop
  1810                           
  1811                           ;digi.c: 442: RD6 = 0;
  1812  00065C  9C83               	bcf	3971,6,c	;volatile
  1813                           
  1814                           ;digi.c: 443: RD7 = 0;
  1815  00065E  9E83               	bcf	3971,7,c	;volatile
  1816  000660  2A64               	incf	_i,f,c
  1817  000662                     L11:
  1818  000662  0E07               	movlw	7
  1819  000664  6464               	cpfsgt	_i,c
  1820  000666  D7EE               	goto	l4762
  1821                           
  1822                           ;digi.c: 444: }
  1823                           ;digi.c: 445: RD5 = 1;
  1824  000668  8A83               	bsf	3971,5,c	;volatile
  1825                           
  1826                           ;digi.c: 446: R1 = 0x11;
  1827  00066A  0E11               	movlw	17
  1828  00066C  6E70               	movwf	_R1,c
  1829                           
  1830                           ;digi.c: 452: while(RA1 == 0)
  1831  00066E  D057               	goto	l4790
  1832  000670                     l228:
  1833                           
  1834                           ;digi.c: 453: {
  1835                           ;digi.c: 454: if(coagmode == 0)
  1836  000670  6659               	tstfsz	_coagmode,c
  1837  000672  D01A               	goto	l4778
  1838  000674  0E01               	movlw	1	;# 
  1839  000676  6F6C               	movwf	_train,b	;# 
  1840  000678                     loop_1:
  1841                           
  1842                           ;# 
  1843  000678  8281               	bsf	3969,1,c	;# 
  1844  00067A  F000               	nop		;# 
  1845  00067C  F000               	nop		;# 
  1846  00067E  F000               	nop		;# 
  1847  000680  F000               	nop		;# 
  1848  000682  F000               	nop		;# 
  1849  000684  F000               	nop		;# 
  1850  000686  F000               	nop		;# 
  1851  000688  F000               	nop		;# 
  1852  00068A  F000               	nop		;# 
  1853  00068C  9281               	bcf	3969,1,c	;# 
  1854  00068E  F000               	nop		;# 
  1855  000690  F000               	nop		;# 
  1856  000692  F000               	nop		;# 
  1857  000694  F000               	nop		;# 
  1858  000696  F000               	nop		;# 
  1859  000698  F000               	nop		;# 
  1860  00069A  2F6C               	decfsz	_train,f,b	;# 
  1861  00069C  EF3C  F003         	goto	loop_1	;# 
  1862                           
  1863                           ;digi.c: 480: _delay(50);
  1864  0006A0  0E0A               	movlw	10
  1865  0006A2                     u7477:
  1866  0006A2  F000               	nop	
  1867  0006A4  2EE8               	decfsz	wreg,f,c
  1868  0006A6  D7FD               	goto	u7477
  1869  0006A8                     l4778:
  1870                           
  1871                           ;digi.c: 481: }
  1872                           ;digi.c: 483: if( coagmode == 1 )
  1873  0006A8  0459               	decf	_coagmode,w,c
  1874  0006AA  A4D8               	btfss	status,2,c
  1875  0006AC  D01A               	goto	l4784
  1876  0006AE  0E03               	movlw	3	;# 
  1877  0006B0  6F6C               	movwf	_train,b	;# 
  1878  0006B2                     loop_2:
  1879                           
  1880                           ;# 
  1881  0006B2  8281               	bsf	3969,1,c	;# 
  1882  0006B4  F000               	nop		;# 
  1883  0006B6  F000               	nop		;# 
  1884  0006B8  F000               	nop		;# 
  1885  0006BA  F000               	nop		;# 
  1886  0006BC  F000               	nop		;# 
  1887  0006BE  F000               	nop		;# 
  1888  0006C0  F000               	nop		;# 
  1889  0006C2  F000               	nop		;# 
  1890  0006C4  F000               	nop		;# 
  1891  0006C6  9281               	bcf	3969,1,c	;# 
  1892  0006C8  F000               	nop		;# 
  1893  0006CA  F000               	nop		;# 
  1894  0006CC  F000               	nop		;# 
  1895  0006CE  F000               	nop		;# 
  1896  0006D0  F000               	nop		;# 
  1897  0006D2  F000               	nop		;# 
  1898  0006D4  2F6C               	decfsz	_train,f,b	;# 
  1899  0006D6  EF59  F003         	goto	loop_2	;# 
  1900                           
  1901                           ;digi.c: 509: _delay(50);
  1902  0006DA  0E0A               	movlw	10
  1903  0006DC                     u7487:
  1904  0006DC  F000               	nop	
  1905  0006DE  2EE8               	decfsz	wreg,f,c
  1906  0006E0  D7FD               	goto	u7487
  1907  0006E2                     l4784:
  1908                           
  1909                           ;digi.c: 510: }
  1910                           ;digi.c: 512: if( coagmode == 2 )
  1911  0006E2  5059               	movf	_coagmode,w,c
  1912  0006E4  0A02               	xorlw	2
  1913  0006E6  A4D8               	btfss	status,2,c
  1914  0006E8  D01A               	goto	l4790
  1915  0006EA  0E03               	movlw	3	;# 
  1916  0006EC  6F6C               	movwf	_train,b	;# 
  1917  0006EE                     loop_3:
  1918                           
  1919                           ;# 
  1920  0006EE  8281               	bsf	3969,1,c	;# 
  1921  0006F0  F000               	nop		;# 
  1922  0006F2  F000               	nop		;# 
  1923  0006F4  F000               	nop		;# 
  1924  0006F6  F000               	nop		;# 
  1925  0006F8  F000               	nop		;# 
  1926  0006FA  F000               	nop		;# 
  1927  0006FC  F000               	nop		;# 
  1928  0006FE  F000               	nop		;# 
  1929  000700  F000               	nop		;# 
  1930  000702  9281               	bcf	3969,1,c	;# 
  1931  000704  F000               	nop		;# 
  1932  000706  F000               	nop		;# 
  1933  000708  F000               	nop		;# 
  1934  00070A  F000               	nop		;# 
  1935  00070C  F000               	nop		;# 
  1936  00070E  F000               	nop		;# 
  1937  000710  2F6C               	decfsz	_train,f,b	;# 
  1938  000712  EF77  F003         	goto	loop_3	;# 
  1939                           
  1940                           ;digi.c: 538: _delay(50);
  1941  000716  0E0A               	movlw	10
  1942  000718                     u7497:
  1943  000718  F000               	nop	
  1944  00071A  2EE8               	decfsz	wreg,f,c
  1945  00071C  D7FD               	goto	u7497
  1946  00071E                     l4790:
  1947  00071E  A280               	btfss	3968,1,c	;volatile
  1948  000720  D7A7               	goto	l228
  1949  000722                     l216:
  1950                           
  1951                           ;digi.c: 539: }
  1952                           ;digi.c: 540: }
  1953                           ;digi.c: 541: }
  1954                           ;digi.c: 542: }
  1955                           ;digi.c: 545: if(RA2 == 0 )
  1956  000722  B480               	btfsc	3968,2,c	;volatile
  1957  000724  D087               	goto	l233
  1958                           
  1959                           ;digi.c: 546: {
  1960                           ;digi.c: 547: if(bipomode == 2)
  1961  000726  5056               	movf	_bipomode,w,c
  1962  000728  0A02               	xorlw	2
  1963  00072A  A4D8               	btfss	status,2,c
  1964  00072C  D003               	goto	l234
  1965                           
  1966                           ;digi.c: 548: {
  1967                           ;digi.c: 549: bipomode = 0;
  1968  00072E  0E00               	movlw	0
  1969  000730  6E56               	movwf	_bipomode,c
  1970                           
  1971                           ;digi.c: 550: }
  1972  000732  D080               	goto	l233
  1973  000734                     l234:
  1974                           
  1975                           ;digi.c: 551: else
  1976                           ;digi.c: 552: {
  1977                           ;digi.c: 554: RB2 = 1;
  1978  000734  8481               	bsf	3969,2,c	;volatile
  1979                           
  1980                           ;digi.c: 555: _delay(25);
  1981  000736  0E05               	movlw	5
  1982  000738                     u7507:
  1983  000738  F000               	nop	
  1984  00073A  2EE8               	decfsz	wreg,f,c
  1985  00073C  D7FD               	goto	u7507
  1986                           
  1987                           ;digi.c: 557: temp = sqrt(bipopower);
  1988  00073E  5057               	movf	_bipopower,w,c
  1989  000740  ECF8  F00D         	call	___lbtoft
  1990  000744  C017  F029         	movff	?___lbtoft,sqrt@y
  1991  000748  C018  F02A         	movff	?___lbtoft+1,sqrt@y+1
  1992  00074C  C019  F02B         	movff	?___lbtoft+2,sqrt@y+2
  1993  000750  EC49  F00A         	call	_sqrt	;wreg free
  1994  000754  C029  F03C         	movff	?_sqrt,___fttol@f1
  1995  000758  C02A  F03D         	movff	?_sqrt+1,___fttol@f1+1
  1996  00075C  C02B  F03E         	movff	?_sqrt+2,___fttol@f1+2
  1997  000760  EC1C  F00B         	call	___fttol	;wreg free
  1998  000764  C03C  F08B         	movff	?___fttol,??_main
  1999  000768  C03D  F08C         	movff	?___fttol+1,??_main+1
  2000  00076C  C03E  F08D         	movff	?___fttol+2,??_main+2
  2001  000770  C03F  F08E         	movff	?___fttol+3,??_main+3
  2002  000774  0100               	movlb	0	; () banked
  2003  000776  518B               	movf	??_main& (0+255),w,b
  2004  000778  6E6A               	movwf	_temp,c
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;digi.c: 558: temp = temp * 10;
  2008  00077A  506A               	movf	_temp,w,c
  2009  00077C  0D0A               	mullw	10
  2010  00077E  CFF3 F06A          	movff	prodl,_temp
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;digi.c: 559: temp = ~temp;
  2014  000782  1E6A               	comf	_temp,f,c
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;digi.c: 566: RD5 = 0;
  2018  000784  9A83               	bcf	3971,5,c	;volatile
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;digi.c: 567: _delay(25);
  2022  000786  0E05               	movlw	5
  2023  000788                     u7517:
  2024  000788  F000               	nop	
  2025  00078A  2EE8               	decfsz	wreg,f,c
  2026  00078C  D7FD               	goto	u7517
  2027                           
  2028                           ;digi.c: 568: R1 = 0x11;
  2029  00078E  0E11               	movlw	17
  2030  000790  6E70               	movwf	_R1,c
  2031                           
  2032                           ;digi.c: 569: for( j = 0;j <= 7;j ++ )
  2033  000792  0E00               	movlw	0
  2034  000794  6E65               	movwf	_j,c
  2035  000796  D00F               	goto	L17
  2036  000798                     l4816:
  2037                           
  2038                           ;digi.c: 570: {
  2039                           ;digi.c: 571: R1 = R1 << 1;
  2040  000798  5070               	movf	_R1,w,c
  2041  00079A  2470               	addwf	_R1,w,c
  2042  00079C  6E70               	movwf	_R1,c
  2043                           
  2044                           ;digi.c: 572: if(CARRY == 1)
  2045  00079E  A0D8               	btfss	status,0,c	;volatile
  2046  0007A0  D002               	goto	l238
  2047                           
  2048                           ;digi.c: 573: {
  2049                           ;digi.c: 574: RD7 = 1;
  2050  0007A2  8E83               	bsf	3971,7,c	;volatile
  2051                           
  2052                           ;digi.c: 575: }
  2053  0007A4  D001               	goto	l239
  2054  0007A6                     l238:
  2055                           
  2056                           ;digi.c: 576: else
  2057                           ;digi.c: 577: {
  2058                           ;digi.c: 578: RD7 = 0;
  2059  0007A6  9E83               	bcf	3971,7,c	;volatile
  2060  0007A8                     l239:
  2061                           
  2062                           ;digi.c: 579: }
  2063                           ;digi.c: 580: RD6 = 1;
  2064  0007A8  8C83               	bsf	3971,6,c	;volatile
  2065                           
  2066                           ;digi.c: 581: _delay(5);
  2067  0007AA  F000               	nop	
  2068  0007AC  D000               	nop2		;2 cycle nop
  2069  0007AE  D000               	nop2		;2 cycle nop
  2070                           
  2071                           ;digi.c: 582: RD6 = 0;
  2072  0007B0  9C83               	bcf	3971,6,c	;volatile
  2073                           
  2074                           ;digi.c: 583: RD7 = 0;
  2075  0007B2  9E83               	bcf	3971,7,c	;volatile
  2076  0007B4  2A65               	incf	_j,f,c
  2077  0007B6                     L17:
  2078  0007B6  0E07               	movlw	7
  2079  0007B8  6465               	cpfsgt	_j,c
  2080  0007BA  D7EE               	goto	l4816
  2081                           
  2082                           ;digi.c: 584: }
  2083                           ;digi.c: 585: for(i = 0;i <= 7;i ++ )
  2084  0007BC  0E00               	movlw	0
  2085  0007BE  6E64               	movwf	_i,c
  2086  0007C0  D00F               	goto	L12
  2087  0007C2                     l4832:
  2088                           
  2089                           ;digi.c: 586: {
  2090                           ;digi.c: 587: temp = temp << 1;
  2091  0007C2  506A               	movf	_temp,w,c
  2092  0007C4  246A               	addwf	_temp,w,c
  2093  0007C6  6E6A               	movwf	_temp,c
  2094                           
  2095                           ;digi.c: 588: if(CARRY == 1)
  2096  0007C8  A0D8               	btfss	status,0,c	;volatile
  2097  0007CA  D002               	goto	l242
  2098                           
  2099                           ;digi.c: 589: {
  2100                           ;digi.c: 590: RD7 = 1;
  2101  0007CC  8E83               	bsf	3971,7,c	;volatile
  2102                           
  2103                           ;digi.c: 591: }
  2104  0007CE  D001               	goto	l243
  2105  0007D0                     l242:
  2106                           
  2107                           ;digi.c: 592: else
  2108                           ;digi.c: 593: {
  2109                           ;digi.c: 594: RD7 = 0;
  2110  0007D0  9E83               	bcf	3971,7,c	;volatile
  2111  0007D2                     l243:
  2112                           
  2113                           ;digi.c: 595: }
  2114                           ;digi.c: 596: RD6 = 1;
  2115  0007D2  8C83               	bsf	3971,6,c	;volatile
  2116                           
  2117                           ;digi.c: 597: _delay(5);
  2118  0007D4  F000               	nop	
  2119  0007D6  D000               	nop2		;2 cycle nop
  2120  0007D8  D000               	nop2		;2 cycle nop
  2121                           
  2122                           ;digi.c: 598: RD6 = 0;
  2123  0007DA  9C83               	bcf	3971,6,c	;volatile
  2124                           
  2125                           ;digi.c: 599: RD7 = 0;
  2126  0007DC  9E83               	bcf	3971,7,c	;volatile
  2127  0007DE  2A64               	incf	_i,f,c
  2128  0007E0                     L12:
  2129  0007E0  0E07               	movlw	7
  2130  0007E2  6464               	cpfsgt	_i,c
  2131  0007E4  D7EE               	goto	l4832
  2132                           
  2133                           ;digi.c: 600: }
  2134                           ;digi.c: 601: RD5 = 1;
  2135  0007E6  8A83               	bsf	3971,5,c	;volatile
  2136                           
  2137                           ;digi.c: 602: R1 = 0x11;
  2138  0007E8  0E11               	movlw	17
  2139  0007EA  6E70               	movwf	_R1,c
  2140                           
  2141                           ;digi.c: 608: while(RA2 == 0)
  2142  0007EC  D021               	goto	l4850
  2143  0007EE                     l245:
  2144  0007EE  0E0A               	movlw	10	;# 
  2145  0007F0  6F6C               	movwf	_train,b	;# 
  2146  0007F2                     loop_4:
  2147                           
  2148                           ;# 
  2149  0007F2  8281               	bsf	3969,1,c	;# 
  2150  0007F4  F000               	nop		;# 
  2151  0007F6  F000               	nop		;# 
  2152  0007F8  F000               	nop		;# 
  2153  0007FA  F000               	nop		;# 
  2154  0007FC  F000               	nop		;# 
  2155  0007FE  F000               	nop		;# 
  2156  000800  F000               	nop		;# 
  2157  000802  F000               	nop		;# 
  2158  000804  F000               	nop		;# 
  2159  000806  9281               	bcf	3969,1,c	;# 
  2160  000808  F000               	nop		;# 
  2161  00080A  F000               	nop		;# 
  2162  00080C  F000               	nop		;# 
  2163  00080E  F000               	nop		;# 
  2164  000810  F000               	nop		;# 
  2165  000812  F000               	nop		;# 
  2166  000814  2F6C               	decfsz	_train,f,b	;# 
  2167  000816  EFF9  F003         	goto	loop_4	;# 
  2168                           
  2169                           ;digi.c: 635: if( bipomode == 0 )
  2170  00081A  6656               	tstfsz	_bipomode,c
  2171  00081C  D003               	goto	l4846
  2172                           
  2173                           ;digi.c: 636: {
  2174                           ;digi.c: 637: _delay(100);
  2175  00081E  0E19               	movlw	25
  2176  000820                     u7527:
  2177  000820  2EE8               	decfsz	wreg,f,c
  2178  000822  D7FE               	goto	u7527
  2179  000824                     l4846:
  2180                           
  2181                           ;digi.c: 638: }
  2182                           ;digi.c: 639: if(bipomode == 1)
  2183  000824  0456               	decf	_bipomode,w,c
  2184  000826  A4D8               	btfss	status,2,c
  2185  000828  D003               	goto	l4850
  2186                           
  2187                           ;digi.c: 640: {
  2188                           ;digi.c: 641: _delay(600);
  2189  00082A  0E96               	movlw	150
  2190  00082C                     u7537:
  2191  00082C  2EE8               	decfsz	wreg,f,c
  2192  00082E  D7FE               	goto	u7537
  2193  000830                     l4850:
  2194  000830  A480               	btfss	3968,2,c	;volatile
  2195  000832  D7DD               	goto	l245
  2196  000834                     l233:
  2197                           
  2198                           ;digi.c: 642: }
  2199                           ;digi.c: 643: }
  2200                           ;digi.c: 644: }
  2201                           ;digi.c: 646: }
  2202                           ;digi.c: 649: if( RA3 == 0 )
  2203  000834  B680               	btfsc	3968,3,c	;volatile
  2204  000836  D098               	goto	l4920
  2205                           
  2206                           ;digi.c: 650: {
  2207                           ;digi.c: 651: bipomode = 2;
  2208  000838  0E02               	movlw	2
  2209  00083A  6E56               	movwf	_bipomode,c
  2210                           
  2211                           ;digi.c: 654: RB2 = 1;
  2212  00083C  8481               	bsf	3969,2,c	;volatile
  2213                           
  2214                           ;digi.c: 655: _delay(25);
  2215  00083E  0E05               	movlw	5
  2216  000840                     u7547:
  2217  000840  F000               	nop	
  2218  000842  2EE8               	decfsz	wreg,f,c
  2219  000844  D7FD               	goto	u7547
  2220                           
  2221                           ;digi.c: 657: temp = sqrt(bipopower);
  2222  000846  5057               	movf	_bipopower,w,c
  2223  000848  ECF8  F00D         	call	___lbtoft
  2224  00084C  C017  F029         	movff	?___lbtoft,sqrt@y
  2225  000850  C018  F02A         	movff	?___lbtoft+1,sqrt@y+1
  2226  000854  C019  F02B         	movff	?___lbtoft+2,sqrt@y+2
  2227  000858  EC49  F00A         	call	_sqrt	;wreg free
  2228  00085C  C029  F03C         	movff	?_sqrt,___fttol@f1
  2229  000860  C02A  F03D         	movff	?_sqrt+1,___fttol@f1+1
  2230  000864  C02B  F03E         	movff	?_sqrt+2,___fttol@f1+2
  2231  000868  EC1C  F00B         	call	___fttol	;wreg free
  2232  00086C  C03C  F08B         	movff	?___fttol,??_main
  2233  000870  C03D  F08C         	movff	?___fttol+1,??_main+1
  2234  000874  C03E  F08D         	movff	?___fttol+2,??_main+2
  2235  000878  C03F  F08E         	movff	?___fttol+3,??_main+3
  2236  00087C  0100               	movlb	0	; () banked
  2237  00087E  518B               	movf	??_main& (0+255),w,b
  2238  000880  6E6A               	movwf	_temp,c
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;digi.c: 658: temp = temp * 12;
  2242  000882  506A               	movf	_temp,w,c
  2243  000884  0D0C               	mullw	12
  2244  000886  CFF3 F06A          	movff	prodl,_temp
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;digi.c: 659: temp = ~temp;
  2248  00088A  1E6A               	comf	_temp,f,c
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;digi.c: 666: RD5 = 0;
  2252  00088C  9A83               	bcf	3971,5,c	;volatile
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;digi.c: 667: R1 = 0x11;
  2256  00088E  0E11               	movlw	17
  2257  000890  6E70               	movwf	_R1,c
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;digi.c: 668: for( j = 0;j <= 7;j ++ )
  2261  000892  0E00               	movlw	0
  2262  000894  6E65               	movwf	_j,c
  2263  000896  D00F               	goto	L18
  2264  000898                     l4874:
  2265                           
  2266                           ;digi.c: 669: {
  2267                           ;digi.c: 670: R1 = R1 << 1;
  2268  000898  5070               	movf	_R1,w,c
  2269  00089A  2470               	addwf	_R1,w,c
  2270  00089C  6E70               	movwf	_R1,c
  2271                           
  2272                           ;digi.c: 671: if(CARRY == 1)
  2273  00089E  A0D8               	btfss	status,0,c	;volatile
  2274  0008A0  D002               	goto	l252
  2275                           
  2276                           ;digi.c: 672: {
  2277                           ;digi.c: 673: RD7 = 1;
  2278  0008A2  8E83               	bsf	3971,7,c	;volatile
  2279                           
  2280                           ;digi.c: 674: }
  2281  0008A4  D001               	goto	l253
  2282  0008A6                     l252:
  2283                           
  2284                           ;digi.c: 675: else
  2285                           ;digi.c: 676: {
  2286                           ;digi.c: 677: RD7 = 0;
  2287  0008A6  9E83               	bcf	3971,7,c	;volatile
  2288  0008A8                     l253:
  2289                           
  2290                           ;digi.c: 678: }
  2291                           ;digi.c: 679: RD6 = 1;
  2292  0008A8  8C83               	bsf	3971,6,c	;volatile
  2293                           
  2294                           ;digi.c: 680: _delay(5);
  2295  0008AA  F000               	nop	
  2296  0008AC  D000               	nop2		;2 cycle nop
  2297  0008AE  D000               	nop2		;2 cycle nop
  2298                           
  2299                           ;digi.c: 681: RD6 = 0;
  2300  0008B0  9C83               	bcf	3971,6,c	;volatile
  2301                           
  2302                           ;digi.c: 682: RD7 =0;
  2303  0008B2  9E83               	bcf	3971,7,c	;volatile
  2304  0008B4  2A65               	incf	_j,f,c
  2305  0008B6                     L18:
  2306  0008B6  0E07               	movlw	7
  2307  0008B8  6465               	cpfsgt	_j,c
  2308  0008BA  D7EE               	goto	l4874
  2309                           
  2310                           ;digi.c: 683: }
  2311                           ;digi.c: 684: for(i = 0;i <= 7;i ++ )
  2312  0008BC  0E00               	movlw	0
  2313  0008BE  6E64               	movwf	_i,c
  2314  0008C0  D00F               	goto	L13
  2315  0008C2                     l4890:
  2316                           
  2317                           ;digi.c: 685: {
  2318                           ;digi.c: 686: temp = temp << 1;
  2319  0008C2  506A               	movf	_temp,w,c
  2320  0008C4  246A               	addwf	_temp,w,c
  2321  0008C6  6E6A               	movwf	_temp,c
  2322                           
  2323                           ;digi.c: 687: if(CARRY == 1)
  2324  0008C8  A0D8               	btfss	status,0,c	;volatile
  2325  0008CA  D002               	goto	l256
  2326                           
  2327                           ;digi.c: 688: {
  2328                           ;digi.c: 689: RD7 = 1;
  2329  0008CC  8E83               	bsf	3971,7,c	;volatile
  2330                           
  2331                           ;digi.c: 690: }
  2332  0008CE  D001               	goto	l257
  2333  0008D0                     l256:
  2334                           
  2335                           ;digi.c: 691: else
  2336                           ;digi.c: 692: {
  2337                           ;digi.c: 693: RD7 = 0;
  2338  0008D0  9E83               	bcf	3971,7,c	;volatile
  2339  0008D2                     l257:
  2340                           
  2341                           ;digi.c: 694: }
  2342                           ;digi.c: 695: RD6 = 1;
  2343  0008D2  8C83               	bsf	3971,6,c	;volatile
  2344                           
  2345                           ;digi.c: 696: _delay(5);
  2346  0008D4  F000               	nop	
  2347  0008D6  D000               	nop2		;2 cycle nop
  2348  0008D8  D000               	nop2		;2 cycle nop
  2349                           
  2350                           ;digi.c: 697: RD6 = 0;
  2351  0008DA  9C83               	bcf	3971,6,c	;volatile
  2352                           
  2353                           ;digi.c: 698: RD7 = 0;
  2354  0008DC  9E83               	bcf	3971,7,c	;volatile
  2355  0008DE  2A64               	incf	_i,f,c
  2356  0008E0                     L13:
  2357  0008E0  0E07               	movlw	7
  2358  0008E2  6464               	cpfsgt	_i,c
  2359  0008E4  D7EE               	goto	l4890
  2360                           
  2361                           ;digi.c: 699: }
  2362                           ;digi.c: 700: RD5 = 1;
  2363  0008E6  8A83               	bsf	3971,5,c	;volatile
  2364                           
  2365                           ;digi.c: 701: _delay(25);
  2366  0008E8  0E05               	movlw	5
  2367  0008EA                     u7557:
  2368  0008EA  F000               	nop	
  2369  0008EC  2EE8               	decfsz	wreg,f,c
  2370  0008EE  D7FD               	goto	u7557
  2371                           
  2372                           ;digi.c: 702: R1 = 0x11;
  2373  0008F0  0E11               	movlw	17
  2374  0008F2  6E70               	movwf	_R1,c
  2375                           
  2376                           ;digi.c: 708: wait = 0;
  2377  0008F4  0E00               	movlw	0
  2378  0008F6  0100               	movlb	0	; () banked
  2379  0008F8  6F94               	movwf	(_wait+1)& (0+255),b
  2380  0008FA  0E00               	movlw	0
  2381  0008FC  0100               	movlb	0	; () banked
  2382  0008FE  6F93               	movwf	_wait& (0+255),b
  2383                           
  2384                           ;digi.c: 709: while(RA3 == 0)
  2385  000900  D031               	goto	l4918
  2386  000902                     l259:
  2387                           
  2388                           ;digi.c: 710: {
  2389                           ;digi.c: 711: if(dry_fl == 0)
  2390  000902  6661               	tstfsz	_dry_fl,c
  2391  000904  D02B               	goto	l4914
  2392  000906  0E05               	movlw	5	;# 
  2393  000908  6F6C               	movwf	_train,b	;# 
  2394  00090A                     loop_5:
  2395                           
  2396                           ;# 
  2397  00090A  8281               	bsf	3969,1,c	;# 
  2398  00090C  F000               	nop		;# 
  2399  00090E  F000               	nop		;# 
  2400  000910  F000               	nop		;# 
  2401  000912  F000               	nop		;# 
  2402  000914  F000               	nop		;# 
  2403  000916  F000               	nop		;# 
  2404  000918  F000               	nop		;# 
  2405  00091A  F000               	nop		;# 
  2406  00091C  F000               	nop		;# 
  2407  00091E  9281               	bcf	3969,1,c	;# 
  2408  000920  F000               	nop		;# 
  2409  000922  F000               	nop		;# 
  2410  000924  F000               	nop		;# 
  2411  000926  F000               	nop		;# 
  2412  000928  F000               	nop		;# 
  2413  00092A  F000               	nop		;# 
  2414  00092C  2F6C               	decfsz	_train,f,b	;# 
  2415  00092E  EF85  F004         	goto	loop_5	;# 
  2416                           
  2417                           ;digi.c: 738: wait = wait + 1;
  2418  000932  0E01               	movlw	1
  2419  000934  0100               	movlb	0	; () banked
  2420  000936  2593               	addwf	_wait& (0+255),w,b
  2421  000938  0100               	movlb	0	; () banked
  2422  00093A  6F93               	movwf	_wait& (0+255),b
  2423  00093C  0E00               	movlw	0
  2424  00093E  0100               	movlb	0	; () banked
  2425  000940  2194               	addwfc	(_wait+1)& (0+255),w,b
  2426  000942  0100               	movlb	0	; () banked
  2427  000944  6F94               	movwf	(_wait+1)& (0+255),b
  2428                           
  2429                           ;digi.c: 739: if(wait > 5000)
  2430  000946  0E89               	movlw	137
  2431  000948  0100               	movlb	0	; () banked
  2432  00094A  5D93               	subwf	_wait& (0+255),w,b
  2433  00094C  0E13               	movlw	19
  2434  00094E  0100               	movlb	0	; () banked
  2435  000950  5994               	subwfb	(_wait+1)& (0+255),w,b
  2436  000952  B0D8               	btfsc	status,0,c
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;digi.c: 740: {
  2440                           ;digi.c: 741: if(RA5 == 1)
  2441  000954  AA80               	btfss	3968,5,c	;volatile
  2442  000956  D002               	goto	l4914
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;digi.c: 742: {
  2446                           ;digi.c: 743: dry_fl = 1;
  2447  000958  0E01               	movlw	1
  2448  00095A  6E61               	movwf	_dry_fl,c
  2449  00095C                     l4914:
  2450                           
  2451                           ;digi.c: 744: }
  2452                           ;digi.c: 745: }
  2453                           ;digi.c: 746: }
  2454                           ;digi.c: 747: RB1 = 0;
  2455  00095C  9281               	bcf	3969,1,c	;volatile
  2456                           
  2457                           ;digi.c: 748: _delay(600);
  2458  00095E  0E96               	movlw	150
  2459  000960                     u7567:
  2460  000960  2EE8               	decfsz	wreg,f,c
  2461  000962  D7FE               	goto	u7567
  2462  000964                     l4918:
  2463  000964  A680               	btfss	3968,3,c	;volatile
  2464  000966  D7CD               	goto	l259
  2465  000968                     l4920:
  2466                           
  2467                           ;digi.c: 749: }
  2468                           ;digi.c: 750: }
  2469                           ;digi.c: 755: PORTD = PORTD & 0x1F;
  2470  000968  5083               	movf	3971,w,c	;volatile
  2471  00096A  0B1F               	andlw	31
  2472  00096C  6E83               	movwf	3971,c	;volatile
  2473                           
  2474                           ;digi.c: 756: PORTC = PORTC & 0xF7;
  2475  00096E  5082               	movf	3970,w,c	;volatile
  2476  000970  0BF7               	andlw	247
  2477  000972  6E82               	movwf	3970,c	;volatile
  2478                           
  2479                           ;digi.c: 759: if (( PORTC == 0xF7 ) &&( PORTD == 0x1F))
  2480  000974  5082               	movf	3970,w,c	;volatile
  2481  000976  0AF7               	xorlw	247
  2482  000978  A4D8               	btfss	status,2,c
  2483  00097A  D006               	goto	l4926
  2484  00097C  5083               	movf	3971,w,c	;volatile
  2485  00097E  0A1F               	xorlw	31
  2486  000980  A4D8               	btfss	status,2,c
  2487  000982  D002               	goto	l4926
  2488                           
  2489                           ;digi.c: 760: {
  2490                           ;digi.c: 761: {
  2491                           ;digi.c: 762: cnt = 0;
  2492  000984  0E00               	movlw	0
  2493  000986  6E58               	movwf	_cnt,c
  2494  000988                     l4926:
  2495                           
  2496                           ;digi.c: 763: }
  2497                           ;digi.c: 764: }
  2498                           ;digi.c: 765: if(( RC0 == 0 ) && ( cnt == 0 ))
  2499  000988  B082               	btfsc	3970,0,c	;volatile
  2500  00098A  D00D               	goto	l265
  2501  00098C  6658               	tstfsz	_cnt,c
  2502  00098E  D00B               	goto	l265
  2503                           
  2504                           ;digi.c: 766: {
  2505                           ;digi.c: 767: for (debounce = 0; debounce <= 99; debounce ++)
  2506  000990  0E00               	movlw	0
  2507  000992  6E60               	movwf	_debounce,c
  2508  000994  D005               	goto	L19
  2509  000996                     l4936:
  2510                           
  2511                           ;digi.c: 768: {
  2512                           ;digi.c: 769: _delay(250);
  2513  000996  0E32               	movlw	50
  2514  000998                     u7577:
  2515  000998  F000               	nop	
  2516  00099A  2EE8               	decfsz	wreg,f,c
  2517  00099C  D7FD               	goto	u7577
  2518  00099E  2A60               	incf	_debounce,f,c
  2519  0009A0                     L19:
  2520  0009A0  0E63               	movlw	99
  2521  0009A2  6460               	cpfsgt	_debounce,c
  2522  0009A4  D7F8               	goto	l4936
  2523  0009A6                     l265:
  2524                           
  2525                           ;digi.c: 770: }
  2526                           ;digi.c: 771: }
  2527                           ;digi.c: 773: if( RC0 == 0 )
  2528  0009A6  A082               	btfss	3970,0,c	;volatile
  2529  0009A8  D04B               	goto	l269
  2530  0009AA  D04E               	goto	l4988
  2531  0009AC                     l4944:
  2532                           
  2533                           ;digi.c: 776: {
  2534                           ;digi.c: 777: if( progno < 99 )
  2535  0009AC  0E63               	movlw	99
  2536  0009AE  5C66               	subwf	_progno,w,c
  2537  0009B0  B0D8               	btfsc	status,0,c
  2538  0009B2  D022               	goto	l4958
  2539                           
  2540                           ;digi.c: 778: {
  2541                           ;digi.c: 779: progno = progno + 1;
  2542  0009B4  2866               	incf	_progno,w,c
  2543  0009B6  6E66               	movwf	_progno,c
  2544                           
  2545                           ;digi.c: 780: tens = progno / 10;
  2546  0009B8  C066  F00F         	movff	_progno,___awdiv@dividend
  2547  0009BC  6A10               	clrf	___awdiv@dividend+1,c
  2548  0009BE  0E00               	movlw	0
  2549  0009C0  6E12               	movwf	___awdiv@divisor+1,c
  2550  0009C2  0E0A               	movlw	10
  2551  0009C4  6E11               	movwf	___awdiv@divisor,c
  2552  0009C6  EC7E  F00C         	call	___awdiv	;wreg free
  2553  0009CA  500F               	movf	?___awdiv,w,c
  2554  0009CC  6E6B               	movwf	_tens,c
  2555                           
  2556                           ;digi.c: 781: tens = tens << 4;
  2557  0009CE  386B               	swapf	_tens,w,c
  2558  0009D0  0BF0               	andlw	240
  2559  0009D2  6E6B               	movwf	_tens,c
  2560                           
  2561                           ;digi.c: 782: values[0] = tens;
  2562  0009D4  C06B  F040         	movff	_tens,_values	;volatile
  2563                           
  2564                           ;digi.c: 783: units = progno % 10;
  2565  0009D8  C066  F00F         	movff	_progno,___awmod@dividend
  2566  0009DC  6A10               	clrf	___awmod@dividend+1,c
  2567  0009DE  0E00               	movlw	0
  2568  0009E0  6E12               	movwf	___awmod@divisor+1,c
  2569  0009E2  0E0A               	movlw	10
  2570  0009E4  6E11               	movwf	___awmod@divisor,c
  2571  0009E6  EC1C  F00D         	call	___awmod	;wreg free
  2572  0009EA  500F               	movf	?___awmod,w,c
  2573  0009EC  6E6E               	movwf	_units,c
  2574                           
  2575                           ;digi.c: 784: units = units << 4;
  2576  0009EE  386E               	swapf	_units,w,c
  2577  0009F0  0BF0               	andlw	240
  2578  0009F2  6E6E               	movwf	_units,c
  2579                           
  2580                           ;digi.c: 785: values[1] = units;
  2581  0009F4  C06E  F041         	movff	_units,_values+1	;volatile
  2582  0009F8                     l4958:
  2583                           
  2584                           ;digi.c: 786: }
  2585                           ;digi.c: 787: if(cnt == 0)
  2586  0009F8  6658               	tstfsz	_cnt,c
  2587  0009FA  D013               	goto	l4974
  2588                           
  2589                           ;digi.c: 788: {
  2590                           ;digi.c: 789: for (debounce = 0; debounce <= 200; debounce ++)
  2591  0009FC  0E00               	movlw	0
  2592  0009FE  6E60               	movwf	_debounce,c
  2593  000A00  D00A               	goto	L20
  2594  000A02                     l4966:
  2595                           
  2596                           ;digi.c: 790: {
  2597                           ;digi.c: 791: _delay(30000);
  2598  000A02  0E1E               	movlw	30
  2599  000A04  0100               	movlb	0	; () banked
  2600  000A06  6F8B               	movwf	??_main& (0+255),b
  2601  000A08  0E3C               	movlw	60
  2602  000A0A                     u7587:
  2603  000A0A  2EE8               	decfsz	wreg,f,c
  2604  000A0C  D7FE               	goto	u7587
  2605  000A0E  2F8B               	decfsz	??_main& (0+255),f,b
  2606  000A10  D7FC               	goto	u7587
  2607  000A12  D000               	nop2	
  2608  000A14  2A60               	incf	_debounce,f,c
  2609  000A16                     L20:
  2610  000A16  0EC8               	movlw	200
  2611  000A18  6460               	cpfsgt	_debounce,c
  2612  000A1A  D7F3               	goto	l4966
  2613                           
  2614                           ;digi.c: 792: }
  2615                           ;digi.c: 793: cnt = cnt + 1;
  2616  000A1C  2858               	incf	_cnt,w,c
  2617  000A1E  6E58               	movwf	_cnt,c
  2618                           
  2619                           ;digi.c: 794: }
  2620  000A20  D00F               	goto	l269
  2621  000A22                     l4974:
  2622                           
  2623                           ;digi.c: 795: else
  2624                           ;digi.c: 796: {
  2625                           ;digi.c: 797: for (debounce = 0; debounce <= 200; debounce ++)
  2626  000A22  0E00               	movlw	0
  2627  000A24  6E60               	movwf	_debounce,c
  2628  000A26  D009               	goto	L21
  2629  000A28                     l4980:
  2630                           
  2631                           ;digi.c: 798: {
  2632                           ;digi.c: 799: _delay(3000);
  2633  000A28  0E03               	movlw	3
  2634  000A2A  0100               	movlb	0	; () banked
  2635  000A2C  6F8B               	movwf	??_main& (0+255),b
  2636  000A2E  0EEC               	movlw	236
  2637  000A30                     u7597:
  2638  000A30  2EE8               	decfsz	wreg,f,c
  2639  000A32  D7FE               	goto	u7597
  2640  000A34  2F8B               	decfsz	??_main& (0+255),f,b
  2641  000A36  D7FC               	goto	u7597
  2642  000A38  2A60               	incf	_debounce,f,c
  2643  000A3A                     L21:
  2644  000A3A  0EC8               	movlw	200
  2645  000A3C  6460               	cpfsgt	_debounce,c
  2646  000A3E  D7F4               	goto	l4980
  2647  000A40                     l269:
  2648  000A40  A082               	btfss	3970,0,c	;volatile
  2649  000A42  D7B4               	goto	l4944
  2650                           
  2651                           ;digi.c: 800: }
  2652                           ;digi.c: 801: }
  2653                           ;digi.c: 802: }
  2654                           ;digi.c: 803: rdfl = 1;
  2655  000A44  0E01               	movlw	1
  2656  000A46  6E67               	movwf	_rdfl,c
  2657  000A48                     l4988:
  2658                           
  2659                           ;digi.c: 804: }
  2660                           ;digi.c: 807: if(( RC1 == 0 ) && ( cnt == 0 ))
  2661  000A48  B282               	btfsc	3970,1,c	;volatile
  2662  000A4A  D00D               	goto	l279
  2663  000A4C  6658               	tstfsz	_cnt,c
  2664  000A4E  D00B               	goto	l279
  2665                           
  2666                           ;digi.c: 808: {
  2667                           ;digi.c: 809: for (debounce = 0; debounce <= 99; debounce ++)
  2668  000A50  0E00               	movlw	0
  2669  000A52  6E60               	movwf	_debounce,c
  2670  000A54  D005               	goto	L22
  2671  000A56                     l4998:
  2672                           
  2673                           ;digi.c: 810: {
  2674                           ;digi.c: 811: _delay(250);
  2675  000A56  0E32               	movlw	50
  2676  000A58                     u7607:
  2677  000A58  F000               	nop	
  2678  000A5A  2EE8               	decfsz	wreg,f,c
  2679  000A5C  D7FD               	goto	u7607
  2680  000A5E  2A60               	incf	_debounce,f,c
  2681  000A60                     L22:
  2682  000A60  0E63               	movlw	99
  2683  000A62  6460               	cpfsgt	_debounce,c
  2684  000A64  D7F8               	goto	l4998
  2685  000A66                     l279:
  2686                           
  2687                           ;digi.c: 812: }
  2688                           ;digi.c: 813: }
  2689                           ;digi.c: 814: if( RC1 == 0 )
  2690  000A66  A282               	btfss	3970,1,c	;volatile
  2691  000A68  D04A               	goto	l283
  2692  000A6A  D04D               	goto	l5050
  2693  000A6C                     l5006:
  2694                           
  2695                           ;digi.c: 817: {
  2696                           ;digi.c: 818: if( progno > 0 )
  2697  000A6C  5066               	movf	_progno,w,c
  2698  000A6E  B4D8               	btfsc	status,2,c
  2699  000A70  D022               	goto	l5020
  2700                           
  2701                           ;digi.c: 819: {
  2702                           ;digi.c: 820: progno = progno - 1;
  2703  000A72  0466               	decf	_progno,w,c
  2704  000A74  6E66               	movwf	_progno,c
  2705                           
  2706                           ;digi.c: 821: tens = progno / 10;
  2707  000A76  C066  F00F         	movff	_progno,___awdiv@dividend
  2708  000A7A  6A10               	clrf	___awdiv@dividend+1,c
  2709  000A7C  0E00               	movlw	0
  2710  000A7E  6E12               	movwf	___awdiv@divisor+1,c
  2711  000A80  0E0A               	movlw	10
  2712  000A82  6E11               	movwf	___awdiv@divisor,c
  2713  000A84  EC7E  F00C         	call	___awdiv	;wreg free
  2714  000A88  500F               	movf	?___awdiv,w,c
  2715  000A8A  6E6B               	movwf	_tens,c
  2716                           
  2717                           ;digi.c: 822: tens = tens << 4;
  2718  000A8C  386B               	swapf	_tens,w,c
  2719  000A8E  0BF0               	andlw	240
  2720  000A90  6E6B               	movwf	_tens,c
  2721                           
  2722                           ;digi.c: 823: values[0] = tens;
  2723  000A92  C06B  F040         	movff	_tens,_values	;volatile
  2724                           
  2725                           ;digi.c: 824: units = progno % 10;
  2726  000A96  C066  F00F         	movff	_progno,___awmod@dividend
  2727  000A9A  6A10               	clrf	___awmod@dividend+1,c
  2728  000A9C  0E00               	movlw	0
  2729  000A9E  6E12               	movwf	___awmod@divisor+1,c
  2730  000AA0  0E0A               	movlw	10
  2731  000AA2  6E11               	movwf	___awmod@divisor,c
  2732  000AA4  EC1C  F00D         	call	___awmod	;wreg free
  2733  000AA8  500F               	movf	?___awmod,w,c
  2734  000AAA  6E6E               	movwf	_units,c
  2735                           
  2736                           ;digi.c: 825: units = units << 4;
  2737  000AAC  386E               	swapf	_units,w,c
  2738  000AAE  0BF0               	andlw	240
  2739  000AB0  6E6E               	movwf	_units,c
  2740                           
  2741                           ;digi.c: 826: values[1] = units;
  2742  000AB2  C06E  F041         	movff	_units,_values+1	;volatile
  2743  000AB6                     l5020:
  2744                           
  2745                           ;digi.c: 827: }
  2746                           ;digi.c: 828: if(cnt == 0)
  2747  000AB6  6658               	tstfsz	_cnt,c
  2748  000AB8  D013               	goto	l5036
  2749                           
  2750                           ;digi.c: 829: {
  2751                           ;digi.c: 830: for (debounce = 0; debounce <= 200; debounce ++)
  2752  000ABA  0E00               	movlw	0
  2753  000ABC  6E60               	movwf	_debounce,c
  2754  000ABE  D00A               	goto	L23
  2755  000AC0                     l5028:
  2756                           
  2757                           ;digi.c: 831: {
  2758                           ;digi.c: 832: _delay(30000);
  2759  000AC0  0E1E               	movlw	30
  2760  000AC2  0100               	movlb	0	; () banked
  2761  000AC4  6F8B               	movwf	??_main& (0+255),b
  2762  000AC6  0E3C               	movlw	60
  2763  000AC8                     u7617:
  2764  000AC8  2EE8               	decfsz	wreg,f,c
  2765  000ACA  D7FE               	goto	u7617
  2766  000ACC  2F8B               	decfsz	??_main& (0+255),f,b
  2767  000ACE  D7FC               	goto	u7617
  2768  000AD0  D000               	nop2	
  2769  000AD2  2A60               	incf	_debounce,f,c
  2770  000AD4                     L23:
  2771  000AD4  0EC8               	movlw	200
  2772  000AD6  6460               	cpfsgt	_debounce,c
  2773  000AD8  D7F3               	goto	l5028
  2774                           
  2775                           ;digi.c: 833: }
  2776                           ;digi.c: 834: cnt = cnt + 1;
  2777  000ADA  2858               	incf	_cnt,w,c
  2778  000ADC  6E58               	movwf	_cnt,c
  2779                           
  2780                           ;digi.c: 835: }
  2781  000ADE  D00F               	goto	l283
  2782  000AE0                     l5036:
  2783                           
  2784                           ;digi.c: 836: else
  2785                           ;digi.c: 837: {
  2786                           ;digi.c: 838: for (debounce = 0; debounce <= 200; debounce ++)
  2787  000AE0  0E00               	movlw	0
  2788  000AE2  6E60               	movwf	_debounce,c
  2789  000AE4  D009               	goto	L24
  2790  000AE6                     l5042:
  2791                           
  2792                           ;digi.c: 839: {
  2793                           ;digi.c: 840: _delay(3000);
  2794  000AE6  0E03               	movlw	3
  2795  000AE8  0100               	movlb	0	; () banked
  2796  000AEA  6F8B               	movwf	??_main& (0+255),b
  2797  000AEC  0EEC               	movlw	236
  2798  000AEE                     u7627:
  2799  000AEE  2EE8               	decfsz	wreg,f,c
  2800  000AF0  D7FE               	goto	u7627
  2801  000AF2  2F8B               	decfsz	??_main& (0+255),f,b
  2802  000AF4  D7FC               	goto	u7627
  2803  000AF6  2A60               	incf	_debounce,f,c
  2804  000AF8                     L24:
  2805  000AF8  0EC8               	movlw	200
  2806  000AFA  6460               	cpfsgt	_debounce,c
  2807  000AFC  D7F4               	goto	l5042
  2808  000AFE                     l283:
  2809  000AFE  A282               	btfss	3970,1,c	;volatile
  2810  000B00  D7B5               	goto	l5006
  2811                           
  2812                           ;digi.c: 841: }
  2813                           ;digi.c: 842: }
  2814                           ;digi.c: 843: }
  2815                           ;digi.c: 844: rdfl = 1;
  2816  000B02  0E01               	movlw	1
  2817  000B04  6E67               	movwf	_rdfl,c
  2818  000B06                     l5050:
  2819                           
  2820                           ;digi.c: 845: }
  2821                           ;digi.c: 848: if(( RC2 == 0 ) && ( cnt == 0 ))
  2822  000B06  B482               	btfsc	3970,2,c	;volatile
  2823  000B08  D00D               	goto	l293
  2824  000B0A  6658               	tstfsz	_cnt,c
  2825  000B0C  D00B               	goto	l293
  2826                           
  2827                           ;digi.c: 849: {
  2828                           ;digi.c: 850: for (debounce = 0; debounce <= 99; debounce ++)
  2829  000B0E  0E00               	movlw	0
  2830  000B10  6E60               	movwf	_debounce,c
  2831  000B12  D005               	goto	L25
  2832  000B14                     l5060:
  2833                           
  2834                           ;digi.c: 851: {
  2835                           ;digi.c: 852: _delay(250);
  2836  000B14  0E32               	movlw	50
  2837  000B16                     u7637:
  2838  000B16  F000               	nop	
  2839  000B18  2EE8               	decfsz	wreg,f,c
  2840  000B1A  D7FD               	goto	u7637
  2841  000B1C  2A60               	incf	_debounce,f,c
  2842  000B1E                     L25:
  2843  000B1E  0E63               	movlw	99
  2844  000B20  6460               	cpfsgt	_debounce,c
  2845  000B22  D7F8               	goto	l5060
  2846  000B24                     l293:
  2847                           
  2848                           ;digi.c: 853: }
  2849                           ;digi.c: 854: }
  2850                           ;digi.c: 855: if( RC2 == 0 )
  2851  000B24  A482               	btfss	3970,2,c	;volatile
  2852  000B26  D073               	goto	l297
  2853  000B28  D094               	goto	l5142
  2854  000B2A                     l5068:
  2855                           
  2856                           ;digi.c: 858: {
  2857                           ;digi.c: 859: if( cutpower < 400 )
  2858  000B2A  0E90               	movlw	144
  2859  000B2C  5C4E               	subwf	_cutpower,w,c
  2860  000B2E  0E01               	movlw	1
  2861  000B30  584F               	subwfb	_cutpower+1,w,c
  2862  000B32  B0D8               	btfsc	status,0,c
  2863  000B34  D048               	goto	l5096
  2864                           
  2865                           ;digi.c: 860: {
  2866                           ;digi.c: 863: cutpower = cutpower + 1;
  2867  000B36  0E01               	movlw	1
  2868  000B38  244E               	addwf	_cutpower,w,c
  2869  000B3A  6E4E               	movwf	_cutpower,c
  2870  000B3C  0E00               	movlw	0
  2871  000B3E  204F               	addwfc	_cutpower+1,w,c
  2872  000B40  6E4F               	movwf	_cutpower+1,c
  2873                           
  2874                           ;digi.c: 864: hundreds = cutpower / 100;
  2875  000B42  C04E  F00F         	movff	_cutpower,___lwdiv@dividend
  2876  000B46  C04F  F010         	movff	_cutpower+1,___lwdiv@dividend+1
  2877  000B4A  0E00               	movlw	0
  2878  000B4C  6E12               	movwf	___lwdiv@divisor+1,c
  2879  000B4E  0E64               	movlw	100
  2880  000B50  6E11               	movwf	___lwdiv@divisor,c
  2881  000B52  EC66  F00D         	call	___lwdiv	;wreg free
  2882  000B56  500F               	movf	?___lwdiv,w,c
  2883  000B58  6E63               	movwf	_hundreds,c
  2884                           
  2885                           ;digi.c: 865: temp = (cutpower - ( hundreds * 100 ));
  2886  000B5A  5063               	movf	_hundreds,w,c
  2887  000B5C  0D64               	mullw	100
  2888  000B5E  50F3               	movf	prodl,w,c
  2889  000B60  0800               	sublw	0
  2890  000B62  244E               	addwf	_cutpower,w,c
  2891  000B64  6E6A               	movwf	_temp,c
  2892                           
  2893                           ;digi.c: 866: units = temp % 10;
  2894  000B66  C06A  F00F         	movff	_temp,___awmod@dividend
  2895  000B6A  6A10               	clrf	___awmod@dividend+1,c
  2896  000B6C  0E00               	movlw	0
  2897  000B6E  6E12               	movwf	___awmod@divisor+1,c
  2898  000B70  0E0A               	movlw	10
  2899  000B72  6E11               	movwf	___awmod@divisor,c
  2900  000B74  EC1C  F00D         	call	___awmod	;wreg free
  2901  000B78  500F               	movf	?___awmod,w,c
  2902  000B7A  6E6E               	movwf	_units,c
  2903                           
  2904                           ;digi.c: 867: units = units << 4;
  2905  000B7C  386E               	swapf	_units,w,c
  2906  000B7E  0BF0               	andlw	240
  2907  000B80  6E6E               	movwf	_units,c
  2908                           
  2909                           ;digi.c: 868: values[8] = units;
  2910  000B82  C06E  F048         	movff	_units,_values+8	;volatile
  2911                           
  2912                           ;digi.c: 869: tens = temp / 10;
  2913  000B86  C06A  F00F         	movff	_temp,___awdiv@dividend
  2914  000B8A  6A10               	clrf	___awdiv@dividend+1,c
  2915  000B8C  0E00               	movlw	0
  2916  000B8E  6E12               	movwf	___awdiv@divisor+1,c
  2917  000B90  0E0A               	movlw	10
  2918  000B92  6E11               	movwf	___awdiv@divisor,c
  2919  000B94  EC7E  F00C         	call	___awdiv	;wreg free
  2920  000B98  500F               	movf	?___awdiv,w,c
  2921  000B9A  6E6B               	movwf	_tens,c
  2922                           
  2923                           ;digi.c: 870: tens = tens << 4;
  2924  000B9C  386B               	swapf	_tens,w,c
  2925  000B9E  0BF0               	andlw	240
  2926  000BA0  6E6B               	movwf	_tens,c
  2927                           
  2928                           ;digi.c: 871: values[3] = tens;
  2929  000BA2  C06B  F043         	movff	_tens,_values+3	;volatile
  2930                           
  2931                           ;digi.c: 872: hundreds = hundreds << 4;
  2932  000BA6  3863               	swapf	_hundreds,w,c
  2933  000BA8  0BF0               	andlw	240
  2934  000BAA  6E63               	movwf	_hundreds,c
  2935                           
  2936                           ;digi.c: 873: values[2] = hundreds;
  2937  000BAC  C063  F042         	movff	_hundreds,_values+2	;volatile
  2938                           
  2939                           ;digi.c: 874: cutpowerl =cutpower & 0x00FF;
  2940  000BB0  C04E  F05E         	movff	_cutpower,_cutpowerl
  2941                           
  2942                           ;digi.c: 875: cutpowerh =cutpower >> 8;
  2943  000BB4  C04F  F08B         	movff	_cutpower+1,??_main
  2944  000BB8  C08B  F08C         	movff	??_main,??_main+1
  2945  000BBC  0100               	movlb	0	; () banked
  2946  000BBE  6B8D               	clrf	(??_main+2)& (0+255),b
  2947  000BC0  0100               	movlb	0	; () banked
  2948  000BC2  518C               	movf	(??_main+1)& (0+255),w,b
  2949  000BC4  6E5D               	movwf	_cutpowerh,c
  2950  000BC6                     l5096:
  2951                           
  2952                           ;digi.c: 880: }
  2953                           ;digi.c: 881: if(cnt == 0)
  2954  000BC6  6658               	tstfsz	_cnt,c
  2955  000BC8  D013               	goto	l5112
  2956                           
  2957                           ;digi.c: 882: {
  2958                           ;digi.c: 883: for (debounce = 0; debounce <= 200; debounce ++)
  2959  000BCA  0E00               	movlw	0
  2960  000BCC  6E60               	movwf	_debounce,c
  2961  000BCE  D00A               	goto	L26
  2962  000BD0                     l5104:
  2963                           
  2964                           ;digi.c: 884: {
  2965                           ;digi.c: 885: _delay(30000);
  2966  000BD0  0E1E               	movlw	30
  2967  000BD2  0100               	movlb	0	; () banked
  2968  000BD4  6F8B               	movwf	??_main& (0+255),b
  2969  000BD6  0E3C               	movlw	60
  2970  000BD8                     u7647:
  2971  000BD8  2EE8               	decfsz	wreg,f,c
  2972  000BDA  D7FE               	goto	u7647
  2973  000BDC  2F8B               	decfsz	??_main& (0+255),f,b
  2974  000BDE  D7FC               	goto	u7647
  2975  000BE0  D000               	nop2	
  2976  000BE2  2A60               	incf	_debounce,f,c
  2977  000BE4                     L26:
  2978  000BE4  0EC8               	movlw	200
  2979  000BE6  6460               	cpfsgt	_debounce,c
  2980  000BE8  D7F3               	goto	l5104
  2981                           
  2982                           ;digi.c: 886: }
  2983                           ;digi.c: 887: cnt = cnt + 1;
  2984  000BEA  2858               	incf	_cnt,w,c
  2985  000BEC  6E58               	movwf	_cnt,c
  2986                           
  2987                           ;digi.c: 888: }
  2988  000BEE  D00F               	goto	l297
  2989  000BF0                     l5112:
  2990                           
  2991                           ;digi.c: 889: else
  2992                           ;digi.c: 890: {
  2993                           ;digi.c: 892: for (debounce = 0; debounce <= 200; debounce ++)
  2994  000BF0  0E00               	movlw	0
  2995  000BF2  6E60               	movwf	_debounce,c
  2996  000BF4  D009               	goto	L27
  2997  000BF6                     l5118:
  2998                           
  2999                           ;digi.c: 893: {
  3000                           ;digi.c: 894: _delay(3000);
  3001  000BF6  0E03               	movlw	3
  3002  000BF8  0100               	movlb	0	; () banked
  3003  000BFA  6F8B               	movwf	??_main& (0+255),b
  3004  000BFC  0EEC               	movlw	236
  3005  000BFE                     u7657:
  3006  000BFE  2EE8               	decfsz	wreg,f,c
  3007  000C00  D7FE               	goto	u7657
  3008  000C02  2F8B               	decfsz	??_main& (0+255),f,b
  3009  000C04  D7FC               	goto	u7657
  3010  000C06  2A60               	incf	_debounce,f,c
  3011  000C08                     L27:
  3012  000C08  0EC8               	movlw	200
  3013  000C0A  6460               	cpfsgt	_debounce,c
  3014  000C0C  D7F4               	goto	l5118
  3015  000C0E                     l297:
  3016  000C0E  A482               	btfss	3970,2,c	;volatile
  3017  000C10  D78C               	goto	l5068
  3018                           
  3019                           ;digi.c: 895: }
  3020                           ;digi.c: 896: }
  3021                           ;digi.c: 897: }
  3022                           ;digi.c: 898: addrl = (progno * 8) + 1;
  3023  000C12  5066               	movf	_progno,w,c
  3024  000C14  0D08               	mullw	8
  3025  000C16  28F3               	incf	prodl,w,c
  3026  000C18  6E54               	movwf	_addrl,c
  3027                           
  3028                           ;digi.c: 899: GIE = 0;
  3029  000C1A  9EF2               	bcf	intcon,7,c	;volatile
  3030                           
  3031                           ;digi.c: 900: Write_b_eep(addrl,cutpowerh);
  3032  000C1C  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3033  000C20  6A10               	clrf	Write_b_eep@badd+1,c
  3034  000C22  C05D  F011         	movff	_cutpowerh,Write_b_eep@bdat
  3035  000C26  EC91  F00D         	call	_Write_b_eep	;wreg free
  3036                           
  3037                           ;digi.c: 901: Busy_eep();
  3038  000C2A  EC17  F00E         	call	_Busy_eep	;wreg free
  3039                           
  3040                           ;digi.c: 902: _delay(100);
  3041  000C2E  0E19               	movlw	25
  3042  000C30                     u7667:
  3043  000C30  2EE8               	decfsz	wreg,f,c
  3044  000C32  D7FE               	goto	u7667
  3045                           
  3046                           ;digi.c: 903: addrl = (progno * 8) + 2;
  3047  000C34  5066               	movf	_progno,w,c
  3048  000C36  0D08               	mullw	8
  3049  000C38  50F3               	movf	prodl,w,c
  3050  000C3A  0F02               	addlw	2
  3051  000C3C  6E54               	movwf	_addrl,c
  3052                           
  3053                           ;digi.c: 904: Write_b_eep(addrl,cutpowerl);
  3054  000C3E  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3055  000C42  6A10               	clrf	Write_b_eep@badd+1,c
  3056  000C44  C05E  F011         	movff	_cutpowerl,Write_b_eep@bdat
  3057  000C48  EC91  F00D         	call	_Write_b_eep	;wreg free
  3058                           
  3059                           ;digi.c: 905: Busy_eep();
  3060  000C4C  EC17  F00E         	call	_Busy_eep	;wreg free
  3061                           
  3062                           ;digi.c: 906: GIE = 1;
  3063  000C50  8EF2               	bsf	intcon,7,c	;volatile
  3064  000C52                     l5142:
  3065                           
  3066                           ;digi.c: 910: }
  3067                           ;digi.c: 911: if(( RD0 == 0 ) && ( cnt == 0 ))
  3068  000C52  B083               	btfsc	3971,0,c	;volatile
  3069  000C54  D00D               	goto	l307
  3070  000C56  6658               	tstfsz	_cnt,c
  3071  000C58  D00B               	goto	l307
  3072                           
  3073                           ;digi.c: 912: {
  3074                           ;digi.c: 914: for (debounce = 0; debounce <= 99; debounce ++)
  3075  000C5A  0E00               	movlw	0
  3076  000C5C  6E60               	movwf	_debounce,c
  3077  000C5E  D005               	goto	L28
  3078  000C60                     l5152:
  3079                           
  3080                           ;digi.c: 915: {
  3081                           ;digi.c: 916: _delay(250);
  3082  000C60  0E32               	movlw	50
  3083  000C62                     u7677:
  3084  000C62  F000               	nop	
  3085  000C64  2EE8               	decfsz	wreg,f,c
  3086  000C66  D7FD               	goto	u7677
  3087  000C68  2A60               	incf	_debounce,f,c
  3088  000C6A                     L28:
  3089  000C6A  0E63               	movlw	99
  3090  000C6C  6460               	cpfsgt	_debounce,c
  3091  000C6E  D7F8               	goto	l5152
  3092  000C70                     l307:
  3093                           
  3094                           ;digi.c: 917: }
  3095                           ;digi.c: 918: }
  3096                           ;digi.c: 919: if( RD0 == 0 )
  3097  000C70  A083               	btfss	3971,0,c	;volatile
  3098  000C72  D071               	goto	l311
  3099  000C74  D092               	goto	l5234
  3100  000C76                     l5160:
  3101                           
  3102                           ;digi.c: 922: {
  3103                           ;digi.c: 923: if( cutpower > 0 )
  3104  000C76  504F               	movf	_cutpower+1,w,c
  3105  000C78  104E               	iorwf	_cutpower,w,c
  3106  000C7A  B4D8               	btfsc	status,2,c
  3107  000C7C  D048               	goto	l5188
  3108                           
  3109                           ;digi.c: 924: {
  3110                           ;digi.c: 925: cutpower = cutpower - 1;
  3111  000C7E  0EFF               	movlw	255
  3112  000C80  244E               	addwf	_cutpower,w,c
  3113  000C82  6E4E               	movwf	_cutpower,c
  3114  000C84  0EFF               	movlw	255
  3115  000C86  204F               	addwfc	_cutpower+1,w,c
  3116  000C88  6E4F               	movwf	_cutpower+1,c
  3117                           
  3118                           ;digi.c: 926: hundreds = cutpower / 100;
  3119  000C8A  C04E  F00F         	movff	_cutpower,___lwdiv@dividend
  3120  000C8E  C04F  F010         	movff	_cutpower+1,___lwdiv@dividend+1
  3121  000C92  0E00               	movlw	0
  3122  000C94  6E12               	movwf	___lwdiv@divisor+1,c
  3123  000C96  0E64               	movlw	100
  3124  000C98  6E11               	movwf	___lwdiv@divisor,c
  3125  000C9A  EC66  F00D         	call	___lwdiv	;wreg free
  3126  000C9E  500F               	movf	?___lwdiv,w,c
  3127  000CA0  6E63               	movwf	_hundreds,c
  3128                           
  3129                           ;digi.c: 927: temp = (cutpower - ( hundreds * 100 ));
  3130  000CA2  5063               	movf	_hundreds,w,c
  3131  000CA4  0D64               	mullw	100
  3132  000CA6  50F3               	movf	prodl,w,c
  3133  000CA8  0800               	sublw	0
  3134  000CAA  244E               	addwf	_cutpower,w,c
  3135  000CAC  6E6A               	movwf	_temp,c
  3136                           
  3137                           ;digi.c: 928: units = temp % 10;
  3138  000CAE  C06A  F00F         	movff	_temp,___awmod@dividend
  3139  000CB2  6A10               	clrf	___awmod@dividend+1,c
  3140  000CB4  0E00               	movlw	0
  3141  000CB6  6E12               	movwf	___awmod@divisor+1,c
  3142  000CB8  0E0A               	movlw	10
  3143  000CBA  6E11               	movwf	___awmod@divisor,c
  3144  000CBC  EC1C  F00D         	call	___awmod	;wreg free
  3145  000CC0  500F               	movf	?___awmod,w,c
  3146  000CC2  6E6E               	movwf	_units,c
  3147                           
  3148                           ;digi.c: 929: units = units << 4;
  3149  000CC4  386E               	swapf	_units,w,c
  3150  000CC6  0BF0               	andlw	240
  3151  000CC8  6E6E               	movwf	_units,c
  3152                           
  3153                           ;digi.c: 930: values[8] = units;
  3154  000CCA  C06E  F048         	movff	_units,_values+8	;volatile
  3155                           
  3156                           ;digi.c: 931: tens = temp / 10;
  3157  000CCE  C06A  F00F         	movff	_temp,___awdiv@dividend
  3158  000CD2  6A10               	clrf	___awdiv@dividend+1,c
  3159  000CD4  0E00               	movlw	0
  3160  000CD6  6E12               	movwf	___awdiv@divisor+1,c
  3161  000CD8  0E0A               	movlw	10
  3162  000CDA  6E11               	movwf	___awdiv@divisor,c
  3163  000CDC  EC7E  F00C         	call	___awdiv	;wreg free
  3164  000CE0  500F               	movf	?___awdiv,w,c
  3165  000CE2  6E6B               	movwf	_tens,c
  3166                           
  3167                           ;digi.c: 932: tens = tens << 4;
  3168  000CE4  386B               	swapf	_tens,w,c
  3169  000CE6  0BF0               	andlw	240
  3170  000CE8  6E6B               	movwf	_tens,c
  3171                           
  3172                           ;digi.c: 933: values[3] = tens;
  3173  000CEA  C06B  F043         	movff	_tens,_values+3	;volatile
  3174                           
  3175                           ;digi.c: 934: hundreds = hundreds << 4;
  3176  000CEE  3863               	swapf	_hundreds,w,c
  3177  000CF0  0BF0               	andlw	240
  3178  000CF2  6E63               	movwf	_hundreds,c
  3179                           
  3180                           ;digi.c: 935: values[2] = hundreds;
  3181  000CF4  C063  F042         	movff	_hundreds,_values+2	;volatile
  3182                           
  3183                           ;digi.c: 936: cutpowerl =cutpower & 0x00FF;
  3184  000CF8  C04E  F05E         	movff	_cutpower,_cutpowerl
  3185                           
  3186                           ;digi.c: 937: cutpowerh =cutpower >> 8;
  3187  000CFC  C04F  F08B         	movff	_cutpower+1,??_main
  3188  000D00  C08B  F08C         	movff	??_main,??_main+1
  3189  000D04  0100               	movlb	0	; () banked
  3190  000D06  6B8D               	clrf	(??_main+2)& (0+255),b
  3191  000D08  0100               	movlb	0	; () banked
  3192  000D0A  518C               	movf	(??_main+1)& (0+255),w,b
  3193  000D0C  6E5D               	movwf	_cutpowerh,c
  3194  000D0E                     l5188:
  3195                           
  3196                           ;digi.c: 940: }
  3197                           ;digi.c: 941: if(cnt == 0)
  3198  000D0E  6658               	tstfsz	_cnt,c
  3199  000D10  D013               	goto	l5204
  3200                           
  3201                           ;digi.c: 942: {
  3202                           ;digi.c: 943: for (debounce = 0; debounce <= 200; debounce ++)
  3203  000D12  0E00               	movlw	0
  3204  000D14  6E60               	movwf	_debounce,c
  3205  000D16  D00A               	goto	L29
  3206  000D18                     l5196:
  3207                           
  3208                           ;digi.c: 944: {
  3209                           ;digi.c: 945: _delay(30000);
  3210  000D18  0E1E               	movlw	30
  3211  000D1A  0100               	movlb	0	; () banked
  3212  000D1C  6F8B               	movwf	??_main& (0+255),b
  3213  000D1E  0E3C               	movlw	60
  3214  000D20                     u7687:
  3215  000D20  2EE8               	decfsz	wreg,f,c
  3216  000D22  D7FE               	goto	u7687
  3217  000D24  2F8B               	decfsz	??_main& (0+255),f,b
  3218  000D26  D7FC               	goto	u7687
  3219  000D28  D000               	nop2	
  3220  000D2A  2A60               	incf	_debounce,f,c
  3221  000D2C                     L29:
  3222  000D2C  0EC8               	movlw	200
  3223  000D2E  6460               	cpfsgt	_debounce,c
  3224  000D30  D7F3               	goto	l5196
  3225                           
  3226                           ;digi.c: 946: }
  3227                           ;digi.c: 947: cnt = cnt + 1;
  3228  000D32  2858               	incf	_cnt,w,c
  3229  000D34  6E58               	movwf	_cnt,c
  3230                           
  3231                           ;digi.c: 948: }
  3232  000D36  D00F               	goto	l311
  3233  000D38                     l5204:
  3234                           
  3235                           ;digi.c: 949: else
  3236                           ;digi.c: 950: {
  3237                           ;digi.c: 952: for (debounce = 0; debounce <= 200; debounce ++)
  3238  000D38  0E00               	movlw	0
  3239  000D3A  6E60               	movwf	_debounce,c
  3240  000D3C  D009               	goto	L30
  3241  000D3E                     l5210:
  3242                           
  3243                           ;digi.c: 953: {
  3244                           ;digi.c: 954: _delay(3000);
  3245  000D3E  0E03               	movlw	3
  3246  000D40  0100               	movlb	0	; () banked
  3247  000D42  6F8B               	movwf	??_main& (0+255),b
  3248  000D44  0EEC               	movlw	236
  3249  000D46                     u7697:
  3250  000D46  2EE8               	decfsz	wreg,f,c
  3251  000D48  D7FE               	goto	u7697
  3252  000D4A  2F8B               	decfsz	??_main& (0+255),f,b
  3253  000D4C  D7FC               	goto	u7697
  3254  000D4E  2A60               	incf	_debounce,f,c
  3255  000D50                     L30:
  3256  000D50  0EC8               	movlw	200
  3257  000D52  6460               	cpfsgt	_debounce,c
  3258  000D54  D7F4               	goto	l5210
  3259  000D56                     l311:
  3260  000D56  A083               	btfss	3971,0,c	;volatile
  3261  000D58  D78E               	goto	l5160
  3262                           
  3263                           ;digi.c: 955: }
  3264                           ;digi.c: 956: }
  3265                           ;digi.c: 957: }
  3266                           ;digi.c: 958: addrl = (progno * 8) + 1;
  3267  000D5A  5066               	movf	_progno,w,c
  3268  000D5C  0D08               	mullw	8
  3269  000D5E  28F3               	incf	prodl,w,c
  3270  000D60  6E54               	movwf	_addrl,c
  3271                           
  3272                           ;digi.c: 959: GIE = 0;
  3273  000D62  9EF2               	bcf	intcon,7,c	;volatile
  3274                           
  3275                           ;digi.c: 960: Write_b_eep(addrl,cutpowerh);
  3276  000D64  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3277  000D68  6A10               	clrf	Write_b_eep@badd+1,c
  3278  000D6A  C05D  F011         	movff	_cutpowerh,Write_b_eep@bdat
  3279  000D6E  EC91  F00D         	call	_Write_b_eep	;wreg free
  3280                           
  3281                           ;digi.c: 961: Busy_eep();
  3282  000D72  EC17  F00E         	call	_Busy_eep	;wreg free
  3283                           
  3284                           ;digi.c: 962: _delay(100);
  3285  000D76  0E19               	movlw	25
  3286  000D78                     u7707:
  3287  000D78  2EE8               	decfsz	wreg,f,c
  3288  000D7A  D7FE               	goto	u7707
  3289                           
  3290                           ;digi.c: 963: addrl = (progno * 8) + 2;
  3291  000D7C  5066               	movf	_progno,w,c
  3292  000D7E  0D08               	mullw	8
  3293  000D80  50F3               	movf	prodl,w,c
  3294  000D82  0F02               	addlw	2
  3295  000D84  6E54               	movwf	_addrl,c
  3296                           
  3297                           ;digi.c: 964: Write_b_eep(addrl,cutpowerl);
  3298  000D86  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3299  000D8A  6A10               	clrf	Write_b_eep@badd+1,c
  3300  000D8C  C05E  F011         	movff	_cutpowerl,Write_b_eep@bdat
  3301  000D90  EC91  F00D         	call	_Write_b_eep	;wreg free
  3302                           
  3303                           ;digi.c: 965: Busy_eep();
  3304  000D94  EC17  F00E         	call	_Busy_eep	;wreg free
  3305                           
  3306                           ;digi.c: 966: GIE = 1;
  3307  000D98  8EF2               	bsf	intcon,7,c	;volatile
  3308  000D9A                     l5234:
  3309                           
  3310                           ;digi.c: 972: }
  3311                           ;digi.c: 973: if(( RD1 == 0 ) && ( cnt == 0 ))
  3312  000D9A  B283               	btfsc	3971,1,c	;volatile
  3313  000D9C  D00D               	goto	l321
  3314  000D9E  6658               	tstfsz	_cnt,c
  3315  000DA0  D00B               	goto	l321
  3316                           
  3317                           ;digi.c: 974: {
  3318                           ;digi.c: 976: for (debounce = 0; debounce <= 99; debounce ++)
  3319  000DA2  0E00               	movlw	0
  3320  000DA4  6E60               	movwf	_debounce,c
  3321  000DA6  D005               	goto	L31
  3322  000DA8                     l5244:
  3323                           
  3324                           ;digi.c: 977: {
  3325                           ;digi.c: 978: _delay(250);
  3326  000DA8  0E32               	movlw	50
  3327  000DAA                     u7717:
  3328  000DAA  F000               	nop	
  3329  000DAC  2EE8               	decfsz	wreg,f,c
  3330  000DAE  D7FD               	goto	u7717
  3331  000DB0  2A60               	incf	_debounce,f,c
  3332  000DB2                     L31:
  3333  000DB2  0E63               	movlw	99
  3334  000DB4  6460               	cpfsgt	_debounce,c
  3335  000DB6  D7F8               	goto	l5244
  3336  000DB8                     l321:
  3337                           
  3338                           ;digi.c: 979: }
  3339                           ;digi.c: 980: }
  3340                           ;digi.c: 981: if( RD1 == 0 )
  3341  000DB8  B283               	btfsc	3971,1,c	;volatile
  3342  000DBA  D047               	goto	l5292
  3343                           
  3344                           ;digi.c: 982: {
  3345                           ;digi.c: 983: cutmode = cutmode + 1;
  3346  000DBC  285C               	incf	_cutmode,w,c
  3347  000DBE  6E5C               	movwf	_cutmode,c
  3348                           
  3349                           ;digi.c: 984: while(RD1 == 0)
  3350  000DC0  D032               	goto	l325
  3351  000DC2                     l5252:
  3352                           
  3353                           ;digi.c: 985: {
  3354                           ;digi.c: 987: if(cutmode == 0x04)
  3355  000DC2  505C               	movf	_cutmode,w,c
  3356  000DC4  0A04               	xorlw	4
  3357  000DC6  A4D8               	btfss	status,2,c
  3358  000DC8  D002               	goto	l5256
  3359                           
  3360                           ;digi.c: 988: {
  3361                           ;digi.c: 989: cutmode = 0x00;
  3362  000DCA  0E00               	movlw	0
  3363  000DCC  6E5C               	movwf	_cutmode,c
  3364  000DCE                     l5256:
  3365                           
  3366                           ;digi.c: 991: }
  3367                           ;digi.c: 993: if( cutmode == 0x00 )
  3368  000DCE  665C               	tstfsz	_cutmode,c
  3369  000DD0  D004               	goto	l5260
  3370                           
  3371                           ;digi.c: 994: {
  3372                           ;digi.c: 995: values[5] = 0x20;
  3373  000DD2  0E20               	movlw	32
  3374  000DD4  6E45               	movwf	_values+5,c	;volatile
  3375                           
  3376                           ;digi.c: 996: values[4] = 0x10;
  3377  000DD6  0E10               	movlw	16
  3378  000DD8  6E44               	movwf	_values+4,c	;volatile
  3379  000DDA                     l5260:
  3380                           
  3381                           ;digi.c: 998: }
  3382                           ;digi.c: 999: if( cutmode == 0x01 )
  3383  000DDA  045C               	decf	_cutmode,w,c
  3384  000DDC  A4D8               	btfss	status,2,c
  3385  000DDE  D004               	goto	l5264
  3386                           
  3387                           ;digi.c: 1000: {
  3388                           ;digi.c: 1002: values[5] = 0x40;
  3389  000DE0  0E40               	movlw	64
  3390  000DE2  6E45               	movwf	_values+5,c	;volatile
  3391                           
  3392                           ;digi.c: 1003: values[4] = 0x10;
  3393  000DE4  0E10               	movlw	16
  3394  000DE6  6E44               	movwf	_values+4,c	;volatile
  3395  000DE8                     l5264:
  3396                           
  3397                           ;digi.c: 1004: }
  3398                           ;digi.c: 1005: if( cutmode == 0x02 )
  3399  000DE8  505C               	movf	_cutmode,w,c
  3400  000DEA  0A02               	xorlw	2
  3401  000DEC  A4D8               	btfss	status,2,c
  3402  000DEE  D004               	goto	l5268
  3403                           
  3404                           ;digi.c: 1006: {
  3405                           ;digi.c: 1007: values[4] = 0x20;
  3406  000DF0  0E20               	movlw	32
  3407  000DF2  6E44               	movwf	_values+4,c	;volatile
  3408                           
  3409                           ;digi.c: 1008: values[5] = 0x10;
  3410  000DF4  0E10               	movlw	16
  3411  000DF6  6E45               	movwf	_values+5,c	;volatile
  3412  000DF8                     l5268:
  3413                           
  3414                           ;digi.c: 1010: }
  3415                           ;digi.c: 1012: if( cutmode == 0x03 )
  3416  000DF8  505C               	movf	_cutmode,w,c
  3417  000DFA  0A03               	xorlw	3
  3418  000DFC  A4D8               	btfss	status,2,c
  3419  000DFE  D004               	goto	l331
  3420                           
  3421                           ;digi.c: 1013: {
  3422                           ;digi.c: 1014: values[4] = 0x40;
  3423  000E00  0E40               	movlw	64
  3424  000E02  6E44               	movwf	_values+4,c	;volatile
  3425                           
  3426                           ;digi.c: 1015: values[5] = 0x10;
  3427  000E04  0E10               	movlw	16
  3428  000E06  6E45               	movwf	_values+5,c	;volatile
  3429  000E08                     l331:
  3430                           
  3431                           ;digi.c: 1016: }
  3432                           ;digi.c: 1019: for (debounce = 0; debounce <= 200; debounce ++)
  3433  000E08  0E00               	movlw	0
  3434  000E0A  6E60               	movwf	_debounce,c
  3435  000E0C  D009               	goto	L32
  3436  000E0E                     l5276:
  3437                           
  3438                           ;digi.c: 1020: {
  3439                           ;digi.c: 1021: _delay(25000);
  3440  000E0E  0E19               	movlw	25
  3441  000E10  0100               	movlb	0	; () banked
  3442  000E12  6F8B               	movwf	??_main& (0+255),b
  3443  000E14  0E5D               	movlw	93
  3444  000E16                     u7727:
  3445  000E16  2EE8               	decfsz	wreg,f,c
  3446  000E18  D7FE               	goto	u7727
  3447  000E1A  2F8B               	decfsz	??_main& (0+255),f,b
  3448  000E1C  D7FC               	goto	u7727
  3449  000E1E  2A60               	incf	_debounce,f,c
  3450  000E20                     L32:
  3451  000E20  0EC8               	movlw	200
  3452  000E22  6460               	cpfsgt	_debounce,c
  3453  000E24  D7F4               	goto	l5276
  3454  000E26                     l325:
  3455  000E26  A283               	btfss	3971,1,c	;volatile
  3456  000E28  D7CC               	goto	l5252
  3457                           
  3458                           ;digi.c: 1022: }
  3459                           ;digi.c: 1023: }
  3460                           ;digi.c: 1024: addrl = (progno * 8) + 3;
  3461  000E2A  5066               	movf	_progno,w,c
  3462  000E2C  0D08               	mullw	8
  3463  000E2E  50F3               	movf	prodl,w,c
  3464  000E30  0F03               	addlw	3
  3465  000E32  6E54               	movwf	_addrl,c
  3466                           
  3467                           ;digi.c: 1025: GIE = 0;
  3468  000E34  9EF2               	bcf	intcon,7,c	;volatile
  3469                           
  3470                           ;digi.c: 1026: Write_b_eep(addrl,cutmode);
  3471  000E36  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3472  000E3A  6A10               	clrf	Write_b_eep@badd+1,c
  3473  000E3C  C05C  F011         	movff	_cutmode,Write_b_eep@bdat
  3474  000E40  EC91  F00D         	call	_Write_b_eep	;wreg free
  3475                           
  3476                           ;digi.c: 1027: Busy_eep();
  3477  000E44  EC17  F00E         	call	_Busy_eep	;wreg free
  3478                           
  3479                           ;digi.c: 1028: GIE = 1;
  3480  000E48  8EF2               	bsf	intcon,7,c	;volatile
  3481  000E4A                     l5292:
  3482                           
  3483                           ;digi.c: 1031: }
  3484                           ;digi.c: 1032: if( RD2 == 0 )
  3485  000E4A  A483               	btfss	3971,2,c	;volatile
  3486  000E4C  D061               	goto	l336
  3487  000E4E  D072               	goto	l5358
  3488  000E50                     l5296:
  3489                           
  3490                           ;digi.c: 1035: {
  3491                           ;digi.c: 1036: if( coagpower < 150 )
  3492  000E50  0E96               	movlw	150
  3493  000E52  5C5A               	subwf	_coagpower,w,c
  3494  000E54  B0D8               	btfsc	status,0,c
  3495  000E56  D038               	goto	l5320
  3496                           
  3497                           ;digi.c: 1037: {
  3498                           ;digi.c: 1039: coagpower = coagpower + 1;
  3499  000E58  285A               	incf	_coagpower,w,c
  3500  000E5A  6E5A               	movwf	_coagpower,c
  3501                           
  3502                           ;digi.c: 1041: hundreds = coagpower / 100;
  3503  000E5C  C05A  F00F         	movff	_coagpower,___awdiv@dividend
  3504  000E60  6A10               	clrf	___awdiv@dividend+1,c
  3505  000E62  0E00               	movlw	0
  3506  000E64  6E12               	movwf	___awdiv@divisor+1,c
  3507  000E66  0E64               	movlw	100
  3508  000E68  6E11               	movwf	___awdiv@divisor,c
  3509  000E6A  EC7E  F00C         	call	___awdiv	;wreg free
  3510  000E6E  500F               	movf	?___awdiv,w,c
  3511  000E70  6E63               	movwf	_hundreds,c
  3512                           
  3513                           ;digi.c: 1042: temp = (coagpower - ( hundreds * 100 ));
  3514  000E72  5063               	movf	_hundreds,w,c
  3515  000E74  0D64               	mullw	100
  3516  000E76  50F3               	movf	prodl,w,c
  3517  000E78  0800               	sublw	0
  3518  000E7A  245A               	addwf	_coagpower,w,c
  3519  000E7C  6E6A               	movwf	_temp,c
  3520                           
  3521                           ;digi.c: 1043: units = temp % 10;
  3522  000E7E  C06A  F00F         	movff	_temp,___awmod@dividend
  3523  000E82  6A10               	clrf	___awmod@dividend+1,c
  3524  000E84  0E00               	movlw	0
  3525  000E86  6E12               	movwf	___awmod@divisor+1,c
  3526  000E88  0E0A               	movlw	10
  3527  000E8A  6E11               	movwf	___awmod@divisor,c
  3528  000E8C  EC1C  F00D         	call	___awmod	;wreg free
  3529  000E90  500F               	movf	?___awmod,w,c
  3530  000E92  6E6E               	movwf	_units,c
  3531                           
  3532                           ;digi.c: 1044: units = units << 4;
  3533  000E94  386E               	swapf	_units,w,c
  3534  000E96  0BF0               	andlw	240
  3535  000E98  6E6E               	movwf	_units,c
  3536                           
  3537                           ;digi.c: 1045: values[12] = units;
  3538  000E9A  C06E  F04C         	movff	_units,_values+12	;volatile
  3539                           
  3540                           ;digi.c: 1046: tens = temp / 10;
  3541  000E9E  C06A  F00F         	movff	_temp,___awdiv@dividend
  3542  000EA2  6A10               	clrf	___awdiv@dividend+1,c
  3543  000EA4  0E00               	movlw	0
  3544  000EA6  6E12               	movwf	___awdiv@divisor+1,c
  3545  000EA8  0E0A               	movlw	10
  3546  000EAA  6E11               	movwf	___awdiv@divisor,c
  3547  000EAC  EC7E  F00C         	call	___awdiv	;wreg free
  3548  000EB0  500F               	movf	?___awdiv,w,c
  3549  000EB2  6E6B               	movwf	_tens,c
  3550                           
  3551                           ;digi.c: 1047: tens = tens << 4;
  3552  000EB4  386B               	swapf	_tens,w,c
  3553  000EB6  0BF0               	andlw	240
  3554  000EB8  6E6B               	movwf	_tens,c
  3555                           
  3556                           ;digi.c: 1048: values[10] = tens;
  3557  000EBA  C06B  F04A         	movff	_tens,_values+10	;volatile
  3558                           
  3559                           ;digi.c: 1049: hundreds = hundreds << 4;
  3560  000EBE  3863               	swapf	_hundreds,w,c
  3561  000EC0  0BF0               	andlw	240
  3562  000EC2  6E63               	movwf	_hundreds,c
  3563                           
  3564                           ;digi.c: 1050: values[9] = hundreds;
  3565  000EC4  C063  F049         	movff	_hundreds,_values+9	;volatile
  3566  000EC8                     l5320:
  3567                           
  3568                           ;digi.c: 1052: }
  3569                           ;digi.c: 1053: if(cnt == 0)
  3570  000EC8  6658               	tstfsz	_cnt,c
  3571  000ECA  D013               	goto	l5336
  3572                           
  3573                           ;digi.c: 1054: {
  3574                           ;digi.c: 1055: for (debounce = 0; debounce <= 200; debounce ++)
  3575  000ECC  0E00               	movlw	0
  3576  000ECE  6E60               	movwf	_debounce,c
  3577  000ED0  D00A               	goto	L33
  3578  000ED2                     l5328:
  3579                           
  3580                           ;digi.c: 1056: {
  3581                           ;digi.c: 1057: _delay(30000);
  3582  000ED2  0E1E               	movlw	30
  3583  000ED4  0100               	movlb	0	; () banked
  3584  000ED6  6F8B               	movwf	??_main& (0+255),b
  3585  000ED8  0E3C               	movlw	60
  3586  000EDA                     u7737:
  3587  000EDA  2EE8               	decfsz	wreg,f,c
  3588  000EDC  D7FE               	goto	u7737
  3589  000EDE  2F8B               	decfsz	??_main& (0+255),f,b
  3590  000EE0  D7FC               	goto	u7737
  3591  000EE2  D000               	nop2	
  3592  000EE4  2A60               	incf	_debounce,f,c
  3593  000EE6                     L33:
  3594  000EE6  0EC8               	movlw	200
  3595  000EE8  6460               	cpfsgt	_debounce,c
  3596  000EEA  D7F3               	goto	l5328
  3597                           
  3598                           ;digi.c: 1058: }
  3599                           ;digi.c: 1059: cnt = cnt + 1;
  3600  000EEC  2858               	incf	_cnt,w,c
  3601  000EEE  6E58               	movwf	_cnt,c
  3602                           
  3603                           ;digi.c: 1060: }
  3604  000EF0  D00F               	goto	l336
  3605  000EF2                     l5336:
  3606                           
  3607                           ;digi.c: 1061: else
  3608                           ;digi.c: 1062: {
  3609                           ;digi.c: 1064: for (debounce = 0; debounce <= 200; debounce ++)
  3610  000EF2  0E00               	movlw	0
  3611  000EF4  6E60               	movwf	_debounce,c
  3612  000EF6  D009               	goto	L34
  3613  000EF8                     l5342:
  3614                           
  3615                           ;digi.c: 1065: {
  3616                           ;digi.c: 1066: _delay(3000);
  3617  000EF8  0E03               	movlw	3
  3618  000EFA  0100               	movlb	0	; () banked
  3619  000EFC  6F8B               	movwf	??_main& (0+255),b
  3620  000EFE  0EEC               	movlw	236
  3621  000F00                     u7747:
  3622  000F00  2EE8               	decfsz	wreg,f,c
  3623  000F02  D7FE               	goto	u7747
  3624  000F04  2F8B               	decfsz	??_main& (0+255),f,b
  3625  000F06  D7FC               	goto	u7747
  3626  000F08  2A60               	incf	_debounce,f,c
  3627  000F0A                     L34:
  3628  000F0A  0EC8               	movlw	200
  3629  000F0C  6460               	cpfsgt	_debounce,c
  3630  000F0E  D7F4               	goto	l5342
  3631  000F10                     l336:
  3632  000F10  A483               	btfss	3971,2,c	;volatile
  3633  000F12  D79E               	goto	l5296
  3634                           
  3635                           ;digi.c: 1067: }
  3636                           ;digi.c: 1068: }
  3637                           ;digi.c: 1069: }
  3638                           ;digi.c: 1070: addrl = (progno * 8) + 4;
  3639  000F14  5066               	movf	_progno,w,c
  3640  000F16  0D08               	mullw	8
  3641  000F18  50F3               	movf	prodl,w,c
  3642  000F1A  0F04               	addlw	4
  3643  000F1C  6E54               	movwf	_addrl,c
  3644                           
  3645                           ;digi.c: 1071: GIE = 0;
  3646  000F1E  9EF2               	bcf	intcon,7,c	;volatile
  3647                           
  3648                           ;digi.c: 1072: Write_b_eep(addrl,coagpower);
  3649  000F20  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3650  000F24  6A10               	clrf	Write_b_eep@badd+1,c
  3651  000F26  C05A  F011         	movff	_coagpower,Write_b_eep@bdat
  3652  000F2A  EC91  F00D         	call	_Write_b_eep	;wreg free
  3653                           
  3654                           ;digi.c: 1073: Busy_eep();
  3655  000F2E  EC17  F00E         	call	_Busy_eep	;wreg free
  3656                           
  3657                           ;digi.c: 1074: GIE = 1;
  3658  000F32  8EF2               	bsf	intcon,7,c	;volatile
  3659  000F34                     l5358:
  3660                           
  3661                           ;digi.c: 1080: }
  3662                           ;digi.c: 1081: if( RD3 == 0 )
  3663  000F34  A683               	btfss	3971,3,c	;volatile
  3664  000F36  D060               	goto	l347
  3665  000F38  D071               	goto	l5424
  3666  000F3A                     l5362:
  3667                           
  3668                           ;digi.c: 1084: {
  3669                           ;digi.c: 1085: if( coagpower > 0 )
  3670  000F3A  505A               	movf	_coagpower,w,c
  3671  000F3C  B4D8               	btfsc	status,2,c
  3672  000F3E  D038               	goto	l5386
  3673                           
  3674                           ;digi.c: 1086: {
  3675                           ;digi.c: 1088: coagpower = coagpower - 1;
  3676  000F40  045A               	decf	_coagpower,w,c
  3677  000F42  6E5A               	movwf	_coagpower,c
  3678                           
  3679                           ;digi.c: 1089: hundreds = coagpower / 100;
  3680  000F44  C05A  F00F         	movff	_coagpower,___awdiv@dividend
  3681  000F48  6A10               	clrf	___awdiv@dividend+1,c
  3682  000F4A  0E00               	movlw	0
  3683  000F4C  6E12               	movwf	___awdiv@divisor+1,c
  3684  000F4E  0E64               	movlw	100
  3685  000F50  6E11               	movwf	___awdiv@divisor,c
  3686  000F52  EC7E  F00C         	call	___awdiv	;wreg free
  3687  000F56  500F               	movf	?___awdiv,w,c
  3688  000F58  6E63               	movwf	_hundreds,c
  3689                           
  3690                           ;digi.c: 1090: temp = (coagpower - ( hundreds * 100 ));
  3691  000F5A  5063               	movf	_hundreds,w,c
  3692  000F5C  0D64               	mullw	100
  3693  000F5E  50F3               	movf	prodl,w,c
  3694  000F60  0800               	sublw	0
  3695  000F62  245A               	addwf	_coagpower,w,c
  3696  000F64  6E6A               	movwf	_temp,c
  3697                           
  3698                           ;digi.c: 1091: units = temp % 10;
  3699  000F66  C06A  F00F         	movff	_temp,___awmod@dividend
  3700  000F6A  6A10               	clrf	___awmod@dividend+1,c
  3701  000F6C  0E00               	movlw	0
  3702  000F6E  6E12               	movwf	___awmod@divisor+1,c
  3703  000F70  0E0A               	movlw	10
  3704  000F72  6E11               	movwf	___awmod@divisor,c
  3705  000F74  EC1C  F00D         	call	___awmod	;wreg free
  3706  000F78  500F               	movf	?___awmod,w,c
  3707  000F7A  6E6E               	movwf	_units,c
  3708                           
  3709                           ;digi.c: 1092: units = units << 4;
  3710  000F7C  386E               	swapf	_units,w,c
  3711  000F7E  0BF0               	andlw	240
  3712  000F80  6E6E               	movwf	_units,c
  3713                           
  3714                           ;digi.c: 1093: values[12] = units;
  3715  000F82  C06E  F04C         	movff	_units,_values+12	;volatile
  3716                           
  3717                           ;digi.c: 1094: tens = temp / 10;
  3718  000F86  C06A  F00F         	movff	_temp,___awdiv@dividend
  3719  000F8A  6A10               	clrf	___awdiv@dividend+1,c
  3720  000F8C  0E00               	movlw	0
  3721  000F8E  6E12               	movwf	___awdiv@divisor+1,c
  3722  000F90  0E0A               	movlw	10
  3723  000F92  6E11               	movwf	___awdiv@divisor,c
  3724  000F94  EC7E  F00C         	call	___awdiv	;wreg free
  3725  000F98  500F               	movf	?___awdiv,w,c
  3726  000F9A  6E6B               	movwf	_tens,c
  3727                           
  3728                           ;digi.c: 1095: tens = tens << 4;
  3729  000F9C  386B               	swapf	_tens,w,c
  3730  000F9E  0BF0               	andlw	240
  3731  000FA0  6E6B               	movwf	_tens,c
  3732                           
  3733                           ;digi.c: 1096: values[10] = tens;
  3734  000FA2  C06B  F04A         	movff	_tens,_values+10	;volatile
  3735                           
  3736                           ;digi.c: 1097: hundreds = hundreds << 4;
  3737  000FA6  3863               	swapf	_hundreds,w,c
  3738  000FA8  0BF0               	andlw	240
  3739  000FAA  6E63               	movwf	_hundreds,c
  3740                           
  3741                           ;digi.c: 1098: values[9] = hundreds;
  3742  000FAC  C063  F049         	movff	_hundreds,_values+9	;volatile
  3743  000FB0                     l5386:
  3744                           
  3745                           ;digi.c: 1101: }
  3746                           ;digi.c: 1102: if(cnt == 0)
  3747  000FB0  6658               	tstfsz	_cnt,c
  3748  000FB2  D013               	goto	l5402
  3749                           
  3750                           ;digi.c: 1103: {
  3751                           ;digi.c: 1104: for (debounce = 0; debounce <= 200; debounce ++)
  3752  000FB4  0E00               	movlw	0
  3753  000FB6  6E60               	movwf	_debounce,c
  3754  000FB8  D00A               	goto	L35
  3755  000FBA                     l5394:
  3756                           
  3757                           ;digi.c: 1105: {
  3758                           ;digi.c: 1106: _delay(30000);
  3759  000FBA  0E1E               	movlw	30
  3760  000FBC  0100               	movlb	0	; () banked
  3761  000FBE  6F8B               	movwf	??_main& (0+255),b
  3762  000FC0  0E3C               	movlw	60
  3763  000FC2                     u7757:
  3764  000FC2  2EE8               	decfsz	wreg,f,c
  3765  000FC4  D7FE               	goto	u7757
  3766  000FC6  2F8B               	decfsz	??_main& (0+255),f,b
  3767  000FC8  D7FC               	goto	u7757
  3768  000FCA  D000               	nop2	
  3769  000FCC  2A60               	incf	_debounce,f,c
  3770  000FCE                     L35:
  3771  000FCE  0EC8               	movlw	200
  3772  000FD0  6460               	cpfsgt	_debounce,c
  3773  000FD2  D7F3               	goto	l5394
  3774                           
  3775                           ;digi.c: 1107: }
  3776                           ;digi.c: 1108: cnt = cnt + 1;
  3777  000FD4  2858               	incf	_cnt,w,c
  3778  000FD6  6E58               	movwf	_cnt,c
  3779                           
  3780                           ;digi.c: 1109: }
  3781  000FD8  D00F               	goto	l347
  3782  000FDA                     l5402:
  3783                           
  3784                           ;digi.c: 1110: else
  3785                           ;digi.c: 1111: {
  3786                           ;digi.c: 1113: for (debounce = 0; debounce <= 200; debounce ++)
  3787  000FDA  0E00               	movlw	0
  3788  000FDC  6E60               	movwf	_debounce,c
  3789  000FDE  D009               	goto	L36
  3790  000FE0                     l5408:
  3791                           
  3792                           ;digi.c: 1114: {
  3793                           ;digi.c: 1115: _delay(3000);
  3794  000FE0  0E03               	movlw	3
  3795  000FE2  0100               	movlb	0	; () banked
  3796  000FE4  6F8B               	movwf	??_main& (0+255),b
  3797  000FE6  0EEC               	movlw	236
  3798  000FE8                     u7767:
  3799  000FE8  2EE8               	decfsz	wreg,f,c
  3800  000FEA  D7FE               	goto	u7767
  3801  000FEC  2F8B               	decfsz	??_main& (0+255),f,b
  3802  000FEE  D7FC               	goto	u7767
  3803  000FF0  2A60               	incf	_debounce,f,c
  3804  000FF2                     L36:
  3805  000FF2  0EC8               	movlw	200
  3806  000FF4  6460               	cpfsgt	_debounce,c
  3807  000FF6  D7F4               	goto	l5408
  3808  000FF8                     l347:
  3809  000FF8  A683               	btfss	3971,3,c	;volatile
  3810  000FFA  D79F               	goto	l5362
  3811                           
  3812                           ;digi.c: 1116: }
  3813                           ;digi.c: 1117: }
  3814                           ;digi.c: 1118: }
  3815                           ;digi.c: 1119: addrl = (progno * 8) + 4;
  3816  000FFC  5066               	movf	_progno,w,c
  3817  000FFE  0D08               	mullw	8
  3818  001000  50F3               	movf	prodl,w,c
  3819  001002  0F04               	addlw	4
  3820  001004  6E54               	movwf	_addrl,c
  3821                           
  3822                           ;digi.c: 1120: GIE = 0;
  3823  001006  9EF2               	bcf	intcon,7,c	;volatile
  3824                           
  3825                           ;digi.c: 1121: Write_b_eep(addrl,coagpower);
  3826  001008  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3827  00100C  6A10               	clrf	Write_b_eep@badd+1,c
  3828  00100E  C05A  F011         	movff	_coagpower,Write_b_eep@bdat
  3829  001012  EC91  F00D         	call	_Write_b_eep	;wreg free
  3830                           
  3831                           ;digi.c: 1122: Busy_eep();
  3832  001016  EC17  F00E         	call	_Busy_eep	;wreg free
  3833                           
  3834                           ;digi.c: 1123: GIE = 1;
  3835  00101A  8EF2               	bsf	intcon,7,c	;volatile
  3836  00101C                     l5424:
  3837                           
  3838                           ;digi.c: 1126: }
  3839                           ;digi.c: 1130: if(( RC5 == 0 ) && ( cnt == 0 ))
  3840  00101C  BA82               	btfsc	3970,5,c	;volatile
  3841  00101E  D00D               	goto	l357
  3842  001020  6658               	tstfsz	_cnt,c
  3843  001022  D00B               	goto	l357
  3844                           
  3845                           ;digi.c: 1131: {
  3846                           ;digi.c: 1133: for (debounce = 0; debounce <= 200; debounce ++)
  3847  001024  0E00               	movlw	0
  3848  001026  6E60               	movwf	_debounce,c
  3849  001028  D005               	goto	L37
  3850  00102A                     l5434:
  3851                           
  3852                           ;digi.c: 1134: {
  3853                           ;digi.c: 1135: _delay(250);
  3854  00102A  0E32               	movlw	50
  3855  00102C                     u7777:
  3856  00102C  F000               	nop	
  3857  00102E  2EE8               	decfsz	wreg,f,c
  3858  001030  D7FD               	goto	u7777
  3859  001032  2A60               	incf	_debounce,f,c
  3860  001034                     L37:
  3861  001034  0EC8               	movlw	200
  3862  001036  6460               	cpfsgt	_debounce,c
  3863  001038  D7F8               	goto	l5434
  3864  00103A                     l357:
  3865                           
  3866                           ;digi.c: 1136: }
  3867                           ;digi.c: 1137: }
  3868                           ;digi.c: 1138: if( RC5 == 0 )
  3869  00103A  BA82               	btfsc	3970,5,c	;volatile
  3870  00103C  D02A               	goto	l5470
  3871                           
  3872                           ;digi.c: 1139: {
  3873                           ;digi.c: 1140: coagmode = coagmode + 1;
  3874  00103E  2859               	incf	_coagmode,w,c
  3875  001040  6E59               	movwf	_coagmode,c
  3876                           
  3877                           ;digi.c: 1142: while(RC5 == 0)
  3878  001042  D015               	goto	l5458
  3879  001044                     l5442:
  3880                           
  3881                           ;digi.c: 1143: {
  3882                           ;digi.c: 1145: if( coagmode == 0x03 )
  3883  001044  5059               	movf	_coagmode,w,c
  3884  001046  0A03               	xorlw	3
  3885  001048  A4D8               	btfss	status,2,c
  3886  00104A  D002               	goto	l5446
  3887                           
  3888                           ;digi.c: 1146: {
  3889                           ;digi.c: 1147: coagmode = 0x00;
  3890  00104C  0E00               	movlw	0
  3891  00104E  6E59               	movwf	_coagmode,c
  3892  001050                     l5446:
  3893                           
  3894                           ;digi.c: 1149: }
  3895                           ;digi.c: 1150: if( coagmode == 0x00 )
  3896  001050  6659               	tstfsz	_coagmode,c
  3897  001052  D002               	goto	l5450
  3898                           
  3899                           ;digi.c: 1151: {
  3900                           ;digi.c: 1152: values[7] = 0x20;
  3901  001054  0E20               	movlw	32
  3902  001056  6E47               	movwf	_values+7,c	;volatile
  3903  001058                     l5450:
  3904                           
  3905                           ;digi.c: 1154: }
  3906                           ;digi.c: 1155: if( coagmode == 0x01 )
  3907  001058  0459               	decf	_coagmode,w,c
  3908  00105A  A4D8               	btfss	status,2,c
  3909  00105C  D002               	goto	l5454
  3910                           
  3911                           ;digi.c: 1156: {
  3912                           ;digi.c: 1157: values[7] = 0x40;
  3913  00105E  0E40               	movlw	64
  3914  001060  6E47               	movwf	_values+7,c	;volatile
  3915  001062                     l5454:
  3916                           
  3917                           ;digi.c: 1159: }
  3918                           ;digi.c: 1160: if( coagmode == 0x02 )
  3919  001062  5059               	movf	_coagmode,w,c
  3920  001064  0A02               	xorlw	2
  3921  001066  A4D8               	btfss	status,2,c
  3922  001068  D002               	goto	l5458
  3923                           
  3924                           ;digi.c: 1161: {
  3925                           ;digi.c: 1162: values[7] = 0x10;
  3926  00106A  0E10               	movlw	16
  3927  00106C  6E47               	movwf	_values+7,c	;volatile
  3928  00106E                     l5458:
  3929  00106E  AA82               	btfss	3970,5,c	;volatile
  3930  001070  D7E9               	goto	l5442
  3931                           
  3932                           ;digi.c: 1164: }
  3933                           ;digi.c: 1168: }
  3934                           ;digi.c: 1169: addrl = (progno * 8) + 5;
  3935  001072  5066               	movf	_progno,w,c
  3936  001074  0D08               	mullw	8
  3937  001076  50F3               	movf	prodl,w,c
  3938  001078  0F05               	addlw	5
  3939  00107A  6E54               	movwf	_addrl,c
  3940                           
  3941                           ;digi.c: 1170: GIE = 0;
  3942  00107C  9EF2               	bcf	intcon,7,c	;volatile
  3943                           
  3944                           ;digi.c: 1171: Write_b_eep(addrl,coagmode);
  3945  00107E  C054  F00F         	movff	_addrl,Write_b_eep@badd
  3946  001082  6A10               	clrf	Write_b_eep@badd+1,c
  3947  001084  C059  F011         	movff	_coagmode,Write_b_eep@bdat
  3948  001088  EC91  F00D         	call	_Write_b_eep	;wreg free
  3949                           
  3950                           ;digi.c: 1172: Busy_eep();
  3951  00108C  EC17  F00E         	call	_Busy_eep	;wreg free
  3952                           
  3953                           ;digi.c: 1173: GIE =1;
  3954  001090  8EF2               	bsf	intcon,7,c	;volatile
  3955  001092                     l5470:
  3956                           
  3957                           ;digi.c: 1177: }
  3958                           ;digi.c: 1178: if(( RC6 == 0 ) && ( cnt == 0 ))
  3959  001092  BC82               	btfsc	3970,6,c	;volatile
  3960  001094  D00D               	goto	l368
  3961  001096  6658               	tstfsz	_cnt,c
  3962  001098  D00B               	goto	l368
  3963                           
  3964                           ;digi.c: 1179: {
  3965                           ;digi.c: 1181: for (debounce = 0; debounce <= 99; debounce ++)
  3966  00109A  0E00               	movlw	0
  3967  00109C  6E60               	movwf	_debounce,c
  3968  00109E  D005               	goto	L38
  3969  0010A0                     l5480:
  3970                           
  3971                           ;digi.c: 1182: {
  3972                           ;digi.c: 1183: _delay(250);
  3973  0010A0  0E32               	movlw	50
  3974  0010A2                     u7787:
  3975  0010A2  F000               	nop	
  3976  0010A4  2EE8               	decfsz	wreg,f,c
  3977  0010A6  D7FD               	goto	u7787
  3978  0010A8  2A60               	incf	_debounce,f,c
  3979  0010AA                     L38:
  3980  0010AA  0E63               	movlw	99
  3981  0010AC  6460               	cpfsgt	_debounce,c
  3982  0010AE  D7F8               	goto	l5480
  3983  0010B0                     l368:
  3984                           
  3985                           ;digi.c: 1184: }
  3986                           ;digi.c: 1185: }
  3987                           ;digi.c: 1186: if( RC6 == 0 )
  3988  0010B0  AC82               	btfss	3970,6,c	;volatile
  3989  0010B2  D04B               	goto	l372
  3990  0010B4  D05C               	goto	l5540
  3991  0010B6                     l5488:
  3992                           
  3993                           ;digi.c: 1189: {
  3994                           ;digi.c: 1190: if( bipopower < 99 )
  3995  0010B6  0E63               	movlw	99
  3996  0010B8  5C57               	subwf	_bipopower,w,c
  3997  0010BA  B0D8               	btfsc	status,0,c
  3998  0010BC  D022               	goto	l5502
  3999                           
  4000                           ;digi.c: 1191: {
  4001                           ;digi.c: 1192: bipopower = bipopower + 1;
  4002  0010BE  2857               	incf	_bipopower,w,c
  4003  0010C0  6E57               	movwf	_bipopower,c
  4004                           
  4005                           ;digi.c: 1193: tens = bipopower / 10;
  4006  0010C2  C057  F00F         	movff	_bipopower,___awdiv@dividend
  4007  0010C6  6A10               	clrf	___awdiv@dividend+1,c
  4008  0010C8  0E00               	movlw	0
  4009  0010CA  6E12               	movwf	___awdiv@divisor+1,c
  4010  0010CC  0E0A               	movlw	10
  4011  0010CE  6E11               	movwf	___awdiv@divisor,c
  4012  0010D0  EC7E  F00C         	call	___awdiv	;wreg free
  4013  0010D4  500F               	movf	?___awdiv,w,c
  4014  0010D6  6E6B               	movwf	_tens,c
  4015                           
  4016                           ;digi.c: 1194: tens = tens << 4;
  4017  0010D8  386B               	swapf	_tens,w,c
  4018  0010DA  0BF0               	andlw	240
  4019  0010DC  6E6B               	movwf	_tens,c
  4020                           
  4021                           ;digi.c: 1195: values[13] = tens;
  4022  0010DE  C06B  F04D         	movff	_tens,_values+13	;volatile
  4023                           
  4024                           ;digi.c: 1196: units = bipopower % 10;
  4025  0010E2  C057  F00F         	movff	_bipopower,___awmod@dividend
  4026  0010E6  6A10               	clrf	___awmod@dividend+1,c
  4027  0010E8  0E00               	movlw	0
  4028  0010EA  6E12               	movwf	___awmod@divisor+1,c
  4029  0010EC  0E0A               	movlw	10
  4030  0010EE  6E11               	movwf	___awmod@divisor,c
  4031  0010F0  EC1C  F00D         	call	___awmod	;wreg free
  4032  0010F4  500F               	movf	?___awmod,w,c
  4033  0010F6  6E6E               	movwf	_units,c
  4034                           
  4035                           ;digi.c: 1197: units = units << 4;
  4036  0010F8  386E               	swapf	_units,w,c
  4037  0010FA  0BF0               	andlw	240
  4038  0010FC  6E6E               	movwf	_units,c
  4039                           
  4040                           ;digi.c: 1198: values[6] = units;
  4041  0010FE  C06E  F046         	movff	_units,_values+6	;volatile
  4042  001102                     l5502:
  4043                           
  4044                           ;digi.c: 1199: }
  4045                           ;digi.c: 1200: if(cnt == 0)
  4046  001102  6658               	tstfsz	_cnt,c
  4047  001104  D013               	goto	l5518
  4048                           
  4049                           ;digi.c: 1201: {
  4050                           ;digi.c: 1202: for (debounce = 0; debounce <= 200; debounce ++)
  4051  001106  0E00               	movlw	0
  4052  001108  6E60               	movwf	_debounce,c
  4053  00110A  D00A               	goto	L39
  4054  00110C                     l5510:
  4055                           
  4056                           ;digi.c: 1203: {
  4057                           ;digi.c: 1204: _delay(30000);
  4058  00110C  0E1E               	movlw	30
  4059  00110E  0100               	movlb	0	; () banked
  4060  001110  6F8B               	movwf	??_main& (0+255),b
  4061  001112  0E3C               	movlw	60
  4062  001114                     u7797:
  4063  001114  2EE8               	decfsz	wreg,f,c
  4064  001116  D7FE               	goto	u7797
  4065  001118  2F8B               	decfsz	??_main& (0+255),f,b
  4066  00111A  D7FC               	goto	u7797
  4067  00111C  D000               	nop2	
  4068  00111E  2A60               	incf	_debounce,f,c
  4069  001120                     L39:
  4070  001120  0EC8               	movlw	200
  4071  001122  6460               	cpfsgt	_debounce,c
  4072  001124  D7F3               	goto	l5510
  4073                           
  4074                           ;digi.c: 1205: }
  4075                           ;digi.c: 1206: cnt = cnt + 1;
  4076  001126  2858               	incf	_cnt,w,c
  4077  001128  6E58               	movwf	_cnt,c
  4078                           
  4079                           ;digi.c: 1207: }
  4080  00112A  D00F               	goto	l372
  4081  00112C                     l5518:
  4082                           
  4083                           ;digi.c: 1208: else
  4084                           ;digi.c: 1209: {
  4085                           ;digi.c: 1211: for (debounce = 0; debounce <= 200; debounce ++)
  4086  00112C  0E00               	movlw	0
  4087  00112E  6E60               	movwf	_debounce,c
  4088  001130  D009               	goto	L40
  4089  001132                     l5524:
  4090                           
  4091                           ;digi.c: 1212: {
  4092                           ;digi.c: 1213: _delay(3000);
  4093  001132  0E03               	movlw	3
  4094  001134  0100               	movlb	0	; () banked
  4095  001136  6F8B               	movwf	??_main& (0+255),b
  4096  001138  0EEC               	movlw	236
  4097  00113A                     u7807:
  4098  00113A  2EE8               	decfsz	wreg,f,c
  4099  00113C  D7FE               	goto	u7807
  4100  00113E  2F8B               	decfsz	??_main& (0+255),f,b
  4101  001140  D7FC               	goto	u7807
  4102  001142  2A60               	incf	_debounce,f,c
  4103  001144                     L40:
  4104  001144  0EC8               	movlw	200
  4105  001146  6460               	cpfsgt	_debounce,c
  4106  001148  D7F4               	goto	l5524
  4107  00114A                     l372:
  4108  00114A  AC82               	btfss	3970,6,c	;volatile
  4109  00114C  D7B4               	goto	l5488
  4110                           
  4111                           ;digi.c: 1214: }
  4112                           ;digi.c: 1215: }
  4113                           ;digi.c: 1216: }
  4114                           ;digi.c: 1217: addrl = (progno * 8) + 6;
  4115  00114E  5066               	movf	_progno,w,c
  4116  001150  0D08               	mullw	8
  4117  001152  50F3               	movf	prodl,w,c
  4118  001154  0F06               	addlw	6
  4119  001156  6E54               	movwf	_addrl,c
  4120                           
  4121                           ;digi.c: 1218: GIE = 0;
  4122  001158  9EF2               	bcf	intcon,7,c	;volatile
  4123                           
  4124                           ;digi.c: 1219: Write_b_eep(addrl,bipopower);
  4125  00115A  C054  F00F         	movff	_addrl,Write_b_eep@badd
  4126  00115E  6A10               	clrf	Write_b_eep@badd+1,c
  4127  001160  C057  F011         	movff	_bipopower,Write_b_eep@bdat
  4128  001164  EC91  F00D         	call	_Write_b_eep	;wreg free
  4129                           
  4130                           ;digi.c: 1220: Busy_eep();
  4131  001168  EC17  F00E         	call	_Busy_eep	;wreg free
  4132                           
  4133                           ;digi.c: 1221: GIE = 1;
  4134  00116C  8EF2               	bsf	intcon,7,c	;volatile
  4135  00116E                     l5540:
  4136                           
  4137                           ;digi.c: 1225: }
  4138                           ;digi.c: 1227: if(( RC7 == 0 ) && ( cnt == 0 ))
  4139  00116E  BE82               	btfsc	3970,7,c	;volatile
  4140  001170  D00D               	goto	l382
  4141  001172  6658               	tstfsz	_cnt,c
  4142  001174  D00B               	goto	l382
  4143                           
  4144                           ;digi.c: 1228: {
  4145                           ;digi.c: 1230: for (debounce = 0; debounce <= 99; debounce ++)
  4146  001176  0E00               	movlw	0
  4147  001178  6E60               	movwf	_debounce,c
  4148  00117A  D005               	goto	L41
  4149  00117C                     l5550:
  4150                           
  4151                           ;digi.c: 1231: {
  4152                           ;digi.c: 1232: _delay(250);
  4153  00117C  0E32               	movlw	50
  4154  00117E                     u7817:
  4155  00117E  F000               	nop	
  4156  001180  2EE8               	decfsz	wreg,f,c
  4157  001182  D7FD               	goto	u7817
  4158  001184  2A60               	incf	_debounce,f,c
  4159  001186                     L41:
  4160  001186  0E63               	movlw	99
  4161  001188  6460               	cpfsgt	_debounce,c
  4162  00118A  D7F8               	goto	l5550
  4163  00118C                     l382:
  4164                           
  4165                           ;digi.c: 1233: }
  4166                           ;digi.c: 1234: }
  4167                           ;digi.c: 1235: if( RC7 == 0 )
  4168  00118C  AE82               	btfss	3970,7,c	;volatile
  4169  00118E  D04A               	goto	l386
  4170  001190  D05B               	goto	l5610
  4171  001192                     l5558:
  4172                           
  4173                           ;digi.c: 1238: {
  4174                           ;digi.c: 1239: if( bipopower > 0 )
  4175  001192  5057               	movf	_bipopower,w,c
  4176  001194  B4D8               	btfsc	status,2,c
  4177  001196  D022               	goto	l5572
  4178                           
  4179                           ;digi.c: 1240: {
  4180                           ;digi.c: 1241: bipopower = bipopower - 1;
  4181  001198  0457               	decf	_bipopower,w,c
  4182  00119A  6E57               	movwf	_bipopower,c
  4183                           
  4184                           ;digi.c: 1242: tens = bipopower / 10;
  4185  00119C  C057  F00F         	movff	_bipopower,___awdiv@dividend
  4186  0011A0  6A10               	clrf	___awdiv@dividend+1,c
  4187  0011A2  0E00               	movlw	0
  4188  0011A4  6E12               	movwf	___awdiv@divisor+1,c
  4189  0011A6  0E0A               	movlw	10
  4190  0011A8  6E11               	movwf	___awdiv@divisor,c
  4191  0011AA  EC7E  F00C         	call	___awdiv	;wreg free
  4192  0011AE  500F               	movf	?___awdiv,w,c
  4193  0011B0  6E6B               	movwf	_tens,c
  4194                           
  4195                           ;digi.c: 1243: tens = tens << 4;
  4196  0011B2  386B               	swapf	_tens,w,c
  4197  0011B4  0BF0               	andlw	240
  4198  0011B6  6E6B               	movwf	_tens,c
  4199                           
  4200                           ;digi.c: 1244: values[13] = tens;
  4201  0011B8  C06B  F04D         	movff	_tens,_values+13	;volatile
  4202                           
  4203                           ;digi.c: 1245: units = bipopower % 10;
  4204  0011BC  C057  F00F         	movff	_bipopower,___awmod@dividend
  4205  0011C0  6A10               	clrf	___awmod@dividend+1,c
  4206  0011C2  0E00               	movlw	0
  4207  0011C4  6E12               	movwf	___awmod@divisor+1,c
  4208  0011C6  0E0A               	movlw	10
  4209  0011C8  6E11               	movwf	___awmod@divisor,c
  4210  0011CA  EC1C  F00D         	call	___awmod	;wreg free
  4211  0011CE  500F               	movf	?___awmod,w,c
  4212  0011D0  6E6E               	movwf	_units,c
  4213                           
  4214                           ;digi.c: 1246: units = units << 4;
  4215  0011D2  386E               	swapf	_units,w,c
  4216  0011D4  0BF0               	andlw	240
  4217  0011D6  6E6E               	movwf	_units,c
  4218                           
  4219                           ;digi.c: 1247: values[6] = units;
  4220  0011D8  C06E  F046         	movff	_units,_values+6	;volatile
  4221  0011DC                     l5572:
  4222                           
  4223                           ;digi.c: 1248: }
  4224                           ;digi.c: 1249: if(cnt == 0)
  4225  0011DC  6658               	tstfsz	_cnt,c
  4226  0011DE  D013               	goto	l5588
  4227                           
  4228                           ;digi.c: 1250: {
  4229                           ;digi.c: 1251: for (debounce = 0; debounce <= 200; debounce ++)
  4230  0011E0  0E00               	movlw	0
  4231  0011E2  6E60               	movwf	_debounce,c
  4232  0011E4  D00A               	goto	L42
  4233  0011E6                     l5580:
  4234                           
  4235                           ;digi.c: 1252: {
  4236                           ;digi.c: 1253: _delay(30000);
  4237  0011E6  0E1E               	movlw	30
  4238  0011E8  0100               	movlb	0	; () banked
  4239  0011EA  6F8B               	movwf	??_main& (0+255),b
  4240  0011EC  0E3C               	movlw	60
  4241  0011EE                     u7827:
  4242  0011EE  2EE8               	decfsz	wreg,f,c
  4243  0011F0  D7FE               	goto	u7827
  4244  0011F2  2F8B               	decfsz	??_main& (0+255),f,b
  4245  0011F4  D7FC               	goto	u7827
  4246  0011F6  D000               	nop2	
  4247  0011F8  2A60               	incf	_debounce,f,c
  4248  0011FA                     L42:
  4249  0011FA  0EC8               	movlw	200
  4250  0011FC  6460               	cpfsgt	_debounce,c
  4251  0011FE  D7F3               	goto	l5580
  4252                           
  4253                           ;digi.c: 1254: }
  4254                           ;digi.c: 1255: cnt = cnt + 1;
  4255  001200  2858               	incf	_cnt,w,c
  4256  001202  6E58               	movwf	_cnt,c
  4257                           
  4258                           ;digi.c: 1256: }
  4259  001204  D00F               	goto	l386
  4260  001206                     l5588:
  4261                           
  4262                           ;digi.c: 1257: else
  4263                           ;digi.c: 1258: {
  4264                           ;digi.c: 1260: for (debounce = 0; debounce <= 200; debounce ++)
  4265  001206  0E00               	movlw	0
  4266  001208  6E60               	movwf	_debounce,c
  4267  00120A  D009               	goto	L43
  4268  00120C                     l5594:
  4269                           
  4270                           ;digi.c: 1261: {
  4271                           ;digi.c: 1262: _delay(3000);
  4272  00120C  0E03               	movlw	3
  4273  00120E  0100               	movlb	0	; () banked
  4274  001210  6F8B               	movwf	??_main& (0+255),b
  4275  001212  0EEC               	movlw	236
  4276  001214                     u7837:
  4277  001214  2EE8               	decfsz	wreg,f,c
  4278  001216  D7FE               	goto	u7837
  4279  001218  2F8B               	decfsz	??_main& (0+255),f,b
  4280  00121A  D7FC               	goto	u7837
  4281  00121C  2A60               	incf	_debounce,f,c
  4282  00121E                     L43:
  4283  00121E  0EC8               	movlw	200
  4284  001220  6460               	cpfsgt	_debounce,c
  4285  001222  D7F4               	goto	l5594
  4286  001224                     l386:
  4287  001224  AE82               	btfss	3970,7,c	;volatile
  4288  001226  D7B5               	goto	l5558
  4289                           
  4290                           ;digi.c: 1263: }
  4291                           ;digi.c: 1264: }
  4292                           ;digi.c: 1265: }
  4293                           ;digi.c: 1266: addrl = (progno * 8) + 6;
  4294  001228  5066               	movf	_progno,w,c
  4295  00122A  0D08               	mullw	8
  4296  00122C  50F3               	movf	prodl,w,c
  4297  00122E  0F06               	addlw	6
  4298  001230  6E54               	movwf	_addrl,c
  4299                           
  4300                           ;digi.c: 1267: GIE = 0;
  4301  001232  9EF2               	bcf	intcon,7,c	;volatile
  4302                           
  4303                           ;digi.c: 1268: Write_b_eep(addrl,bipopower);
  4304  001234  C054  F00F         	movff	_addrl,Write_b_eep@badd
  4305  001238  6A10               	clrf	Write_b_eep@badd+1,c
  4306  00123A  C057  F011         	movff	_bipopower,Write_b_eep@bdat
  4307  00123E  EC91  F00D         	call	_Write_b_eep	;wreg free
  4308                           
  4309                           ;digi.c: 1269: Busy_eep();
  4310  001242  EC17  F00E         	call	_Busy_eep	;wreg free
  4311                           
  4312                           ;digi.c: 1270: GIE = 1;
  4313  001246  8EF2               	bsf	intcon,7,c	;volatile
  4314  001248                     l5610:
  4315                           
  4316                           ;digi.c: 1275: }
  4317                           ;digi.c: 1276: if((RD4 == 0 ) && ( cnt == 0 ))
  4318  001248  B883               	btfsc	3971,4,c	;volatile
  4319  00124A  D00D               	goto	l396
  4320  00124C  6658               	tstfsz	_cnt,c
  4321  00124E  D00B               	goto	l396
  4322                           
  4323                           ;digi.c: 1277: {
  4324                           ;digi.c: 1279: for (debounce = 0; debounce <= 99; debounce ++)
  4325  001250  0E00               	movlw	0
  4326  001252  6E60               	movwf	_debounce,c
  4327  001254  D005               	goto	L44
  4328  001256                     l5620:
  4329                           
  4330                           ;digi.c: 1280: {
  4331                           ;digi.c: 1281: _delay(250);
  4332  001256  0E32               	movlw	50
  4333  001258                     u7847:
  4334  001258  F000               	nop	
  4335  00125A  2EE8               	decfsz	wreg,f,c
  4336  00125C  D7FD               	goto	u7847
  4337  00125E  2A60               	incf	_debounce,f,c
  4338  001260                     L44:
  4339  001260  0E63               	movlw	99
  4340  001262  6460               	cpfsgt	_debounce,c
  4341  001264  D7F8               	goto	l5620
  4342  001266                     l396:
  4343                           
  4344                           ;digi.c: 1282: }
  4345                           ;digi.c: 1283: }
  4346                           ;digi.c: 1284: if(RD4 == 0 )
  4347  001266  B883               	btfsc	3971,4,c	;volatile
  4348  001268  EF9B  F000         	goto	l4434
  4349                           
  4350                           ;digi.c: 1285: {
  4351                           ;digi.c: 1286: bipomode = bipomode + 1;
  4352  00126C  2856               	incf	_bipomode,w,c
  4353  00126E  6E56               	movwf	_bipomode,c
  4354  001270                     l400:
  4355  001270  9883               	bcf	3971,4,c	;volatile
  4356  001272  B883               	btfsc	3971,4,c	;volatile
  4357  001274  D7FD               	goto	l400
  4358                           
  4359                           ;digi.c: 1288: {
  4360                           ;digi.c: 1291: if( bipomode == 0X03 )
  4361  001276  5056               	movf	_bipomode,w,c
  4362  001278  0A03               	xorlw	3
  4363  00127A  A4D8               	btfss	status,2,c
  4364  00127C  D002               	goto	l5632
  4365                           
  4366                           ;digi.c: 1292: {
  4367                           ;digi.c: 1293: bipomode = 0x00;
  4368  00127E  0E00               	movlw	0
  4369  001280  6E56               	movwf	_bipomode,c
  4370  001282                     l5632:
  4371                           
  4372                           ;digi.c: 1295: }
  4373                           ;digi.c: 1296: if( bipomode == 0x00 )
  4374  001282  6656               	tstfsz	_bipomode,c
  4375  001284  D002               	goto	l5636
  4376                           
  4377                           ;digi.c: 1297: {
  4378                           ;digi.c: 1298: values[11] = 0x20;
  4379  001286  0E20               	movlw	32
  4380  001288  6E4B               	movwf	_values+11,c	;volatile
  4381  00128A                     l5636:
  4382                           
  4383                           ;digi.c: 1300: }
  4384                           ;digi.c: 1301: if( bipomode == 0x01 )
  4385  00128A  0456               	decf	_bipomode,w,c
  4386  00128C  A4D8               	btfss	status,2,c
  4387  00128E  D002               	goto	l5640
  4388                           
  4389                           ;digi.c: 1302: {
  4390                           ;digi.c: 1303: values[11] = 0x40;
  4391  001290  0E40               	movlw	64
  4392  001292  6E4B               	movwf	_values+11,c	;volatile
  4393  001294                     l5640:
  4394                           
  4395                           ;digi.c: 1305: }
  4396                           ;digi.c: 1306: if( bipomode == 0x02 )
  4397  001294  5056               	movf	_bipomode,w,c
  4398  001296  0A02               	xorlw	2
  4399  001298  A4D8               	btfss	status,2,c
  4400  00129A  D002               	goto	l406
  4401                           
  4402                           ;digi.c: 1307: {
  4403                           ;digi.c: 1308: values[11] = 0x10;
  4404  00129C  0E10               	movlw	16
  4405  00129E  6E4B               	movwf	_values+11,c	;volatile
  4406  0012A0                     l406:
  4407                           
  4408                           ;digi.c: 1310: }
  4409                           ;digi.c: 1313: for (debounce = 0; debounce <= 200; debounce ++)
  4410  0012A0  0E00               	movlw	0
  4411  0012A2  6E60               	movwf	_debounce,c
  4412  0012A4  D009               	goto	L45
  4413  0012A6                     l5648:
  4414                           
  4415                           ;digi.c: 1314: {
  4416                           ;digi.c: 1315: _delay(25000);
  4417  0012A6  0E19               	movlw	25
  4418  0012A8  0100               	movlb	0	; () banked
  4419  0012AA  6F8B               	movwf	??_main& (0+255),b
  4420  0012AC  0E5D               	movlw	93
  4421  0012AE                     u7857:
  4422  0012AE  2EE8               	decfsz	wreg,f,c
  4423  0012B0  D7FE               	goto	u7857
  4424  0012B2  2F8B               	decfsz	??_main& (0+255),f,b
  4425  0012B4  D7FC               	goto	u7857
  4426  0012B6  2A60               	incf	_debounce,f,c
  4427  0012B8                     L45:
  4428  0012B8  0EC8               	movlw	200
  4429  0012BA  6460               	cpfsgt	_debounce,c
  4430  0012BC  D7F4               	goto	l5648
  4431                           
  4432                           ;digi.c: 1317: }
  4433                           ;digi.c: 1318: }
  4434                           ;digi.c: 1319: addrl = (progno * 8) + 7;
  4435  0012BE  5066               	movf	_progno,w,c
  4436  0012C0  0D08               	mullw	8
  4437  0012C2  50F3               	movf	prodl,w,c
  4438  0012C4  0F07               	addlw	7
  4439  0012C6  6E54               	movwf	_addrl,c
  4440                           
  4441                           ;digi.c: 1320: GIE = 0;
  4442  0012C8  9EF2               	bcf	intcon,7,c	;volatile
  4443                           
  4444                           ;digi.c: 1321: Write_b_eep(addrl,bipomode);
  4445  0012CA  C054  F00F         	movff	_addrl,Write_b_eep@badd
  4446  0012CE  6A10               	clrf	Write_b_eep@badd+1,c
  4447  0012D0  C056  F011         	movff	_bipomode,Write_b_eep@bdat
  4448  0012D4  EC91  F00D         	call	_Write_b_eep	;wreg free
  4449                           
  4450                           ;digi.c: 1322: Busy_eep();
  4451  0012D8  EC17  F00E         	call	_Busy_eep	;wreg free
  4452                           
  4453                           ;digi.c: 1323: GIE = 1;
  4454  0012DC  8EF2               	bsf	intcon,7,c	;volatile
  4455  0012DE  EF9B  F000         	goto	l4434
  4456  0012E2                     __end_of_main:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodl	equ	0xFF3
  4463                           intcon	equ	0xFF2
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _sqrt *****************
  4469 ;; Defined at:
  4470 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\sqrt.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  y               3   40[COMRAM] 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  x               3   56[COMRAM] 
  4475 ;;  q               3   53[COMRAM] 
  4476 ;;  z               3   49[COMRAM] 
  4477 ;;  og              3   46[COMRAM] 
  4478 ;;  i               1   52[COMRAM] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  3   40[COMRAM] unsigned char 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4488 ;;      Params:         3       0       0       0       0       0       0
  4489 ;;      Locals:        13       0       0       0       0       0       0
  4490 ;;      Temps:          3       0       0       0       0       0       0
  4491 ;;      Totals:        19       0       0       0       0       0       0
  4492 ;;Total ram usage:       19 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    4
  4495 ;; This function calls:
  4496 ;;		___ftge
  4497 ;;		___ftmul
  4498 ;;		___ftsub
  4499 ;; This function is called by:
  4500 ;;		_main
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text1
  4505  001492                     __ptext1:
  4506                           	opt stack 0
  4507  001492                     _sqrt:
  4508                           	opt stack 26
  4509                           
  4510                           ;incstack = 0
  4511  001492  FFFF               	dw	65535
  4512  001494  0E00               	movlw	0
  4513  001496  6E0F               	movwf	___ftge@ff1,c
  4514  001498  0E00               	movlw	0
  4515  00149A  6E10               	movwf	___ftge@ff1+1,c
  4516  00149C  0E00               	movlw	0
  4517  00149E  6E11               	movwf	___ftge@ff1+2,c
  4518  0014A0  C029  F012         	movff	sqrt@y,___ftge@ff2
  4519  0014A4  C02A  F013         	movff	sqrt@y+1,___ftge@ff2+1
  4520  0014A8  C02B  F014         	movff	sqrt@y+2,___ftge@ff2+2
  4521  0014AC  ECD2  F00C         	call	___ftge	;wreg free
  4522  0014B0  A0D8               	btfss	status,0,c
  4523  0014B2  D018               	goto	l998
  4524  0014B4  502B               	movf	sqrt@y+2,w,c
  4525  0014B6  0A80               	xorlw	128
  4526  0014B8  0F80               	addlw	128
  4527  0014BA  E105               	bnz	u3025
  4528  0014BC  0E00               	movlw	0
  4529  0014BE  5C2A               	subwf	sqrt@y+1,w,c
  4530  0014C0  E102               	bnz	u3025
  4531  0014C2  0E00               	movlw	0
  4532  0014C4  5C29               	subwf	sqrt@y,w,c
  4533  0014C6                     u3025:
  4534  0014C6  B0D8               	btfsc	status,0,c
  4535  0014C8  D006               	goto	l999
  4536  0014CA  0E00               	movlw	0
  4537  0014CC  0100               	movlb	0	; () banked
  4538  0014CE  6F90               	movwf	(_errno+1)& (0+255),b
  4539  0014D0  0E21               	movlw	33
  4540  0014D2  0100               	movlb	0	; () banked
  4541  0014D4  6F8F               	movwf	_errno& (0+255),b
  4542  0014D6                     l999:
  4543  0014D6  0E00               	movlw	0
  4544  0014D8  6E29               	movwf	?_sqrt,c
  4545  0014DA  0E00               	movlw	0
  4546  0014DC  6E2A               	movwf	?_sqrt+1,c
  4547  0014DE  0E00               	movlw	0
  4548  0014E0  6E2B               	movwf	?_sqrt+2,c
  4549  0014E2  D0A8               	goto	l1000
  4550  0014E4                     l998:
  4551  0014E4  C029  F032         	movff	sqrt@y,sqrt@z
  4552  0014E8  C02A  F033         	movff	sqrt@y+1,sqrt@z+1
  4553  0014EC  C02B  F034         	movff	sqrt@y+2,sqrt@z+2
  4554  0014F0  C029  F02C         	movff	sqrt@y,??_sqrt
  4555  0014F4  C02A  F02D         	movff	sqrt@y+1,??_sqrt+1
  4556  0014F8  C02B  F02E         	movff	sqrt@y+2,??_sqrt+2
  4557  0014FC  1E2C               	comf	??_sqrt,f,c
  4558  0014FE  1E2D               	comf	??_sqrt+1,f,c
  4559  001500  1E2E               	comf	??_sqrt+2,f,c
  4560  001502  2A2C               	incf	??_sqrt,f,c
  4561  001504  0E00               	movlw	0
  4562  001506  222D               	addwfc	??_sqrt+1,f,c
  4563  001508  222E               	addwfc	??_sqrt+2,f,c
  4564  00150A  0EC8               	movlw	200
  4565  00150C  242C               	addwf	??_sqrt,w,c
  4566  00150E  6E39               	movwf	sqrt@x,c
  4567  001510  0E6E               	movlw	110
  4568  001512  202D               	addwfc	??_sqrt+1,w,c
  4569  001514  6E3A               	movwf	sqrt@x+1,c
  4570  001516  0EBE               	movlw	190
  4571  001518  202E               	addwfc	??_sqrt+2,w,c
  4572  00151A  6E3B               	movwf	sqrt@x+2,c
  4573  00151C  90D8               	bcf	status,0,c
  4574  00151E  323B               	rrcf	sqrt@x+2,f,c
  4575  001520  323A               	rrcf	sqrt@x+1,f,c
  4576  001522  3239               	rrcf	sqrt@x,f,c
  4577  001524  0E00               	movlw	0
  4578  001526  5E32               	subwf	sqrt@z,f,c
  4579  001528  0E80               	movlw	128
  4580  00152A  5A33               	subwfb	sqrt@z+1,f,c
  4581  00152C  0E00               	movlw	0
  4582  00152E  5A34               	subwfb	sqrt@z+2,f,c
  4583  001530  0E04               	movlw	4
  4584  001532  6E35               	movwf	sqrt@i,c
  4585  001534                     l2924:
  4586  001534  C039  F02F         	movff	sqrt@x,sqrt@og
  4587  001538  C03A  F030         	movff	sqrt@x+1,sqrt@og+1
  4588  00153C  C03B  F031         	movff	sqrt@x+2,sqrt@og+2
  4589  001540  C039  F017         	movff	sqrt@x,___ftmul@f1
  4590  001544  C03A  F018         	movff	sqrt@x+1,___ftmul@f1+1
  4591  001548  C03B  F019         	movff	sqrt@x+2,___ftmul@f1+2
  4592  00154C  C032  F01A         	movff	sqrt@z,___ftmul@f2
  4593  001550  C033  F01B         	movff	sqrt@z+1,___ftmul@f2+1
  4594  001554  C034  F01C         	movff	sqrt@z+2,___ftmul@f2+2
  4595  001558  ECB4  F00B         	call	___ftmul	;wreg free
  4596  00155C  C017  F036         	movff	?___ftmul,sqrt@q
  4597  001560  C018  F037         	movff	?___ftmul+1,sqrt@q+1
  4598  001564  C019  F038         	movff	?___ftmul+2,sqrt@q+2
  4599  001568  C036  F017         	movff	sqrt@q,___ftmul@f1
  4600  00156C  C037  F018         	movff	sqrt@q+1,___ftmul@f1+1
  4601  001570  C038  F019         	movff	sqrt@q+2,___ftmul@f1+2
  4602  001574  C039  F01A         	movff	sqrt@x,___ftmul@f2
  4603  001578  C03A  F01B         	movff	sqrt@x+1,___ftmul@f2+1
  4604  00157C  C03B  F01C         	movff	sqrt@x+2,___ftmul@f2+2
  4605  001580  ECB4  F00B         	call	___ftmul	;wreg free
  4606  001584  C017  F036         	movff	?___ftmul,sqrt@q
  4607  001588  C018  F037         	movff	?___ftmul+1,sqrt@q+1
  4608  00158C  C019  F038         	movff	?___ftmul+2,sqrt@q+2
  4609  001590  C036  F017         	movff	sqrt@q,___ftmul@f1
  4610  001594  C037  F018         	movff	sqrt@q+1,___ftmul@f1+1
  4611  001598  C038  F019         	movff	sqrt@q+2,___ftmul@f1+2
  4612  00159C  C039  F01A         	movff	sqrt@x,___ftmul@f2
  4613  0015A0  C03A  F01B         	movff	sqrt@x+1,___ftmul@f2+1
  4614  0015A4  C03B  F01C         	movff	sqrt@x+2,___ftmul@f2+2
  4615  0015A8  ECB4  F00B         	call	___ftmul	;wreg free
  4616  0015AC  C017  F036         	movff	?___ftmul,sqrt@q
  4617  0015B0  C018  F037         	movff	?___ftmul+1,sqrt@q+1
  4618  0015B4  C019  F038         	movff	?___ftmul+2,sqrt@q+2
  4619  0015B8  C039  F017         	movff	sqrt@x,___ftmul@f1
  4620  0015BC  C03A  F018         	movff	sqrt@x+1,___ftmul@f1+1
  4621  0015C0  C03B  F019         	movff	sqrt@x+2,___ftmul@f1+2
  4622  0015C4  0E00               	movlw	0
  4623  0015C6  6E1A               	movwf	___ftmul@f2,c
  4624  0015C8  0EC0               	movlw	192
  4625  0015CA  6E1B               	movwf	___ftmul@f2+1,c
  4626  0015CC  0E3F               	movlw	63
  4627  0015CE  6E1C               	movwf	___ftmul@f2+2,c
  4628  0015D0  ECB4  F00B         	call	___ftmul	;wreg free
  4629  0015D4  C017  F039         	movff	?___ftmul,sqrt@x
  4630  0015D8  C018  F03A         	movff	?___ftmul+1,sqrt@x+1
  4631  0015DC  C019  F03B         	movff	?___ftmul+2,sqrt@x+2
  4632  0015E0  C039  F023         	movff	sqrt@x,___ftsub@f1
  4633  0015E4  C03A  F024         	movff	sqrt@x+1,___ftsub@f1+1
  4634  0015E8  C03B  F025         	movff	sqrt@x+2,___ftsub@f1+2
  4635  0015EC  C036  F026         	movff	sqrt@q,___ftsub@f2
  4636  0015F0  C037  F027         	movff	sqrt@q+1,___ftsub@f2+1
  4637  0015F4  C038  F028         	movff	sqrt@q+2,___ftsub@f2+2
  4638  0015F8  ECAF  F00D         	call	___ftsub	;wreg free
  4639  0015FC  C023  F039         	movff	?___ftsub,sqrt@x
  4640  001600  C024  F03A         	movff	?___ftsub+1,sqrt@x+1
  4641  001604  C025  F03B         	movff	?___ftsub+2,sqrt@x+2
  4642  001608  2E35               	decfsz	sqrt@i,f,c
  4643  00160A  D794               	goto	l2924
  4644  00160C  C039  F017         	movff	sqrt@x,___ftmul@f1
  4645  001610  C03A  F018         	movff	sqrt@x+1,___ftmul@f1+1
  4646  001614  C03B  F019         	movff	sqrt@x+2,___ftmul@f1+2
  4647  001618  C029  F01A         	movff	sqrt@y,___ftmul@f2
  4648  00161C  C02A  F01B         	movff	sqrt@y+1,___ftmul@f2+1
  4649  001620  C02B  F01C         	movff	sqrt@y+2,___ftmul@f2+2
  4650  001624  ECB4  F00B         	call	___ftmul	;wreg free
  4651  001628  C017  F029         	movff	?___ftmul,?_sqrt
  4652  00162C  C018  F02A         	movff	?___ftmul+1,?_sqrt+1
  4653  001630  C019  F02B         	movff	?___ftmul+2,?_sqrt+2
  4654  001634                     l1000:
  4655  001634  0012               	return	
  4656  001636  FFFF               	dw	65535	; errata NOP
  4657  001638                     __end_of_sqrt:
  4658                           	opt stack 0
  4659                           tblptru	equ	0xFF8
  4660                           tblptrh	equ	0xFF7
  4661                           tblptrl	equ	0xFF6
  4662                           tablat	equ	0xFF5
  4663                           prodl	equ	0xFF3
  4664                           intcon	equ	0xFF2
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           status	equ	0xFD8
  4668                           
  4669 ;; *************** function ___ftsub *****************
  4670 ;; Defined at:
  4671 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  f1              3   34[COMRAM] float 
  4674 ;;  f2              3   37[COMRAM] float 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  3   34[COMRAM] float 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4686 ;;      Params:         6       0       0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0
  4689 ;;      Totals:         6       0       0       0       0       0       0
  4690 ;;Total ram usage:        6 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    3
  4693 ;; This function calls:
  4694 ;;		___ftadd
  4695 ;; This function is called by:
  4696 ;;		_sqrt
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text2
  4701  001B5E                     __ptext2:
  4702                           	opt stack 0
  4703  001B5E                     ___ftsub:
  4704                           	opt stack 26
  4705                           
  4706                           ;incstack = 0
  4707  001B5E  FFFF               	dw	65535
  4708  001B60  0E00               	movlw	0
  4709  001B62  1A26               	xorwf	___ftsub@f2,f,c
  4710  001B64  0E00               	movlw	0
  4711  001B66  1A27               	xorwf	___ftsub@f2+1,f,c
  4712  001B68  0E80               	movlw	128
  4713  001B6A  1A28               	xorwf	___ftsub@f2+2,f,c
  4714  001B6C  C023  F017         	movff	___ftsub@f1,___ftadd@f1
  4715  001B70  C024  F018         	movff	___ftsub@f1+1,___ftadd@f1+1
  4716  001B74  C025  F019         	movff	___ftsub@f1+2,___ftadd@f1+2
  4717  001B78  C026  F01A         	movff	___ftsub@f2,___ftadd@f2
  4718  001B7C  C027  F01B         	movff	___ftsub@f2+1,___ftadd@f2+1
  4719  001B80  C028  F01C         	movff	___ftsub@f2+2,___ftadd@f2+2
  4720  001B84  EC71  F009         	call	___ftadd	;wreg free
  4721  001B88  C017  F023         	movff	?___ftadd,?___ftsub
  4722  001B8C  C018  F024         	movff	?___ftadd+1,?___ftsub+1
  4723  001B90  C019  F025         	movff	?___ftadd+2,?___ftsub+2
  4724  001B94  0012               	return	
  4725  001B96  FFFF               	dw	65535	; errata NOP
  4726  001B98                     __end_of___ftsub:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           prodl	equ	0xFF3
  4733                           intcon	equ	0xFF2
  4734                           postinc0	equ	0xFEE
  4735                           wreg	equ	0xFE8
  4736                           status	equ	0xFD8
  4737                           
  4738 ;; *************** function ___ftadd *****************
  4739 ;; Defined at:
  4740 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  f1              3   22[COMRAM] float 
  4743 ;;  f2              3   25[COMRAM] float 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  exp1            1   33[COMRAM] unsigned char 
  4746 ;;  exp2            1   32[COMRAM] unsigned char 
  4747 ;;  sign            1   31[COMRAM] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  3   22[COMRAM] float 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4757 ;;      Params:         6       0       0       0       0       0       0
  4758 ;;      Locals:         3       0       0       0       0       0       0
  4759 ;;      Temps:          3       0       0       0       0       0       0
  4760 ;;      Totals:        12       0       0       0       0       0       0
  4761 ;;Total ram usage:       12 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    2
  4764 ;; This function calls:
  4765 ;;		___ftpack
  4766 ;; This function is called by:
  4767 ;;		___ftsub
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text3
  4772  0012E2                     __ptext3:
  4773                           	opt stack 0
  4774  0012E2                     ___ftadd:
  4775                           	opt stack 26
  4776                           
  4777                           ;incstack = 0
  4778  0012E2  FFFF               	dw	65535
  4779  0012E4  C019  F01D         	movff	___ftadd@f1+2,??___ftadd
  4780  0012E8  6A1E               	clrf	(??___ftadd+1)& (0+255),c
  4781  0012EA  6A1F               	clrf	(??___ftadd+2)& (0+255),c
  4782  0012EC  3418               	rlcf	___ftadd@f1+1,w,c
  4783  0012EE  361D               	rlcf	??___ftadd& (0+255),f,c
  4784  0012F0  E301               	bnc	u2711
  4785  0012F2  801E               	bsf	(??___ftadd+1)& (0+255),0,c
  4786  0012F4                     u2711:
  4787  0012F4  501D               	movf	??___ftadd,w,c
  4788  0012F6  6E22               	movwf	___ftadd@exp1,c
  4789  0012F8  C01C  F01D         	movff	___ftadd@f2+2,??___ftadd
  4790  0012FC  6A1E               	clrf	(??___ftadd+1)& (0+255),c
  4791  0012FE  6A1F               	clrf	(??___ftadd+2)& (0+255),c
  4792  001300  341B               	rlcf	___ftadd@f2+1,w,c
  4793  001302  361D               	rlcf	??___ftadd& (0+255),f,c
  4794  001304  E301               	bnc	u2721
  4795  001306  801E               	bsf	(??___ftadd+1)& (0+255),0,c
  4796  001308                     u2721:
  4797  001308  501D               	movf	??___ftadd,w,c
  4798  00130A  6E21               	movwf	___ftadd@exp2,c
  4799  00130C  5022               	movf	___ftadd@exp1,w,c
  4800  00130E  B4D8               	btfsc	status,2,c
  4801  001310  D00C               	goto	l797
  4802  001312  5021               	movf	___ftadd@exp2,w,c
  4803  001314  5C22               	subwf	___ftadd@exp1,w,c
  4804  001316  B0D8               	btfsc	status,0,c
  4805  001318  D00F               	goto	l2768
  4806  00131A  5022               	movf	___ftadd@exp1,w,c
  4807  00131C  0800               	sublw	0
  4808  00131E  2421               	addwf	___ftadd@exp2,w,c
  4809  001320  6E1D               	movwf	??___ftadd& (0+255),c
  4810  001322  0E19               	movlw	25
  4811  001324  5C1D               	subwf	??___ftadd,w,c
  4812  001326  A0D8               	btfss	status,0,c
  4813  001328  D007               	goto	l2768
  4814  00132A                     l797:
  4815  00132A  C01A  F017         	movff	___ftadd@f2,?___ftadd
  4816  00132E  C01B  F018         	movff	___ftadd@f2+1,?___ftadd+1
  4817  001332  C01C  F019         	movff	___ftadd@f2+2,?___ftadd+2
  4818  001336  D0AB               	goto	l798
  4819  001338                     l2768:
  4820  001338  5021               	movf	___ftadd@exp2,w,c
  4821  00133A  B4D8               	btfsc	status,2,c
  4822  00133C  D00C               	goto	l801
  4823  00133E  5022               	movf	___ftadd@exp1,w,c
  4824  001340  5C21               	subwf	___ftadd@exp2,w,c
  4825  001342  B0D8               	btfsc	status,0,c
  4826  001344  D00F               	goto	l2774
  4827  001346  5021               	movf	___ftadd@exp2,w,c
  4828  001348  0800               	sublw	0
  4829  00134A  2422               	addwf	___ftadd@exp1,w,c
  4830  00134C  6E1D               	movwf	??___ftadd& (0+255),c
  4831  00134E  0E19               	movlw	25
  4832  001350  5C1D               	subwf	??___ftadd,w,c
  4833  001352  A0D8               	btfss	status,0,c
  4834  001354  D007               	goto	l2774
  4835  001356                     l801:
  4836  001356  C017  F017         	movff	___ftadd@f1,?___ftadd
  4837  00135A  C018  F018         	movff	___ftadd@f1+1,?___ftadd+1
  4838  00135E  C019  F019         	movff	___ftadd@f1+2,?___ftadd+2
  4839  001362  D095               	goto	l798
  4840  001364                     l2774:
  4841  001364  0E06               	movlw	6
  4842  001366  6E20               	movwf	___ftadd@sign,c
  4843  001368  BE19               	btfsc	___ftadd@f1+2,7,c
  4844  00136A  8E20               	bsf	___ftadd@sign,7,c
  4845  00136C  BE1C               	btfsc	___ftadd@f2+2,7,c
  4846  00136E  8C20               	bsf	___ftadd@sign,6,c
  4847  001370  8E18               	bsf	___ftadd@f1+1,7,c
  4848  001372  0EFF               	movlw	255
  4849  001374  1617               	andwf	___ftadd@f1,f,c
  4850  001376  0EFF               	movlw	255
  4851  001378  1618               	andwf	___ftadd@f1+1,f,c
  4852  00137A  0E00               	movlw	0
  4853  00137C  1619               	andwf	___ftadd@f1+2,f,c
  4854  00137E  8E1B               	bsf	___ftadd@f2+1,7,c
  4855  001380  0EFF               	movlw	255
  4856  001382  161A               	andwf	___ftadd@f2,f,c
  4857  001384  0EFF               	movlw	255
  4858  001386  161B               	andwf	___ftadd@f2+1,f,c
  4859  001388  0E00               	movlw	0
  4860  00138A  161C               	andwf	___ftadd@f2+2,f,c
  4861  00138C  5021               	movf	___ftadd@exp2,w,c
  4862  00138E  5C22               	subwf	___ftadd@exp1,w,c
  4863  001390  B0D8               	btfsc	status,0,c
  4864  001392  D01A               	goto	l2800
  4865  001394                     l2790:
  4866  001394  90D8               	bcf	status,0,c
  4867  001396  361A               	rlcf	___ftadd@f2,f,c
  4868  001398  361B               	rlcf	___ftadd@f2+1,f,c
  4869  00139A  361C               	rlcf	___ftadd@f2+2,f,c
  4870  00139C  0621               	decf	___ftadd@exp2,f,c
  4871  00139E  5021               	movf	___ftadd@exp2,w,c
  4872  0013A0  1822               	xorwf	___ftadd@exp1,w,c
  4873  0013A2  B4D8               	btfsc	status,2,c
  4874  0013A4  D00D               	goto	l2798
  4875  0013A6  0620               	decf	___ftadd@sign,f,c
  4876  0013A8  C020  F01D         	movff	___ftadd@sign,??___ftadd
  4877  0013AC  0E07               	movlw	7
  4878  0013AE  161D               	andwf	??___ftadd,f,c
  4879  0013B0  B4D8               	btfsc	status,2,c
  4880  0013B2  D006               	goto	l2798
  4881  0013B4  D7EF               	goto	l2790
  4882  0013B6                     l2796:
  4883  0013B6  90D8               	bcf	status,0,c
  4884  0013B8  3219               	rrcf	___ftadd@f1+2,f,c
  4885  0013BA  3218               	rrcf	___ftadd@f1+1,f,c
  4886  0013BC  3217               	rrcf	___ftadd@f1,f,c
  4887  0013BE  2A22               	incf	___ftadd@exp1,f,c
  4888  0013C0                     l2798:
  4889  0013C0  5021               	movf	___ftadd@exp2,w,c
  4890  0013C2  6222               	cpfseq	___ftadd@exp1,c
  4891  0013C4  D7F8               	goto	l2796
  4892  0013C6  D01D               	goto	l812
  4893  0013C8                     l2800:
  4894  0013C8  5022               	movf	___ftadd@exp1,w,c
  4895  0013CA  5C21               	subwf	___ftadd@exp2,w,c
  4896  0013CC  B0D8               	btfsc	status,0,c
  4897  0013CE  D019               	goto	l812
  4898  0013D0                     l2802:
  4899  0013D0  90D8               	bcf	status,0,c
  4900  0013D2  3617               	rlcf	___ftadd@f1,f,c
  4901  0013D4  3618               	rlcf	___ftadd@f1+1,f,c
  4902  0013D6  3619               	rlcf	___ftadd@f1+2,f,c
  4903  0013D8  0622               	decf	___ftadd@exp1,f,c
  4904  0013DA  5021               	movf	___ftadd@exp2,w,c
  4905  0013DC  1822               	xorwf	___ftadd@exp1,w,c
  4906  0013DE  B4D8               	btfsc	status,2,c
  4907  0013E0  D00D               	goto	l2810
  4908  0013E2  0620               	decf	___ftadd@sign,f,c
  4909  0013E4  C020  F01D         	movff	___ftadd@sign,??___ftadd
  4910  0013E8  0E07               	movlw	7
  4911  0013EA  161D               	andwf	??___ftadd,f,c
  4912  0013EC  B4D8               	btfsc	status,2,c
  4913  0013EE  D006               	goto	l2810
  4914  0013F0  D7EF               	goto	l2802
  4915  0013F2                     l2808:
  4916  0013F2  90D8               	bcf	status,0,c
  4917  0013F4  321C               	rrcf	___ftadd@f2+2,f,c
  4918  0013F6  321B               	rrcf	___ftadd@f2+1,f,c
  4919  0013F8  321A               	rrcf	___ftadd@f2,f,c
  4920  0013FA  2A21               	incf	___ftadd@exp2,f,c
  4921  0013FC                     l2810:
  4922  0013FC  5021               	movf	___ftadd@exp2,w,c
  4923  0013FE  6222               	cpfseq	___ftadd@exp1,c
  4924  001400  D7F8               	goto	l2808
  4925  001402                     l812:
  4926  001402  AE20               	btfss	___ftadd@sign,7,c
  4927  001404  D00C               	goto	l821
  4928  001406  0EFF               	movlw	255
  4929  001408  1A17               	xorwf	___ftadd@f1,f,c
  4930  00140A  0EFF               	movlw	255
  4931  00140C  1A18               	xorwf	___ftadd@f1+1,f,c
  4932  00140E  0EFF               	movlw	255
  4933  001410  1A19               	xorwf	___ftadd@f1+2,f,c
  4934  001412  0E01               	movlw	1
  4935  001414  2617               	addwf	___ftadd@f1,f,c
  4936  001416  0E00               	movlw	0
  4937  001418  2218               	addwfc	___ftadd@f1+1,f,c
  4938  00141A  0E00               	movlw	0
  4939  00141C  2219               	addwfc	___ftadd@f1+2,f,c
  4940  00141E                     l821:
  4941  00141E  AC20               	btfss	___ftadd@sign,6,c
  4942  001420  D00C               	goto	l2816
  4943  001422  0EFF               	movlw	255
  4944  001424  1A1A               	xorwf	___ftadd@f2,f,c
  4945  001426  0EFF               	movlw	255
  4946  001428  1A1B               	xorwf	___ftadd@f2+1,f,c
  4947  00142A  0EFF               	movlw	255
  4948  00142C  1A1C               	xorwf	___ftadd@f2+2,f,c
  4949  00142E  0E01               	movlw	1
  4950  001430  261A               	addwf	___ftadd@f2,f,c
  4951  001432  0E00               	movlw	0
  4952  001434  221B               	addwfc	___ftadd@f2+1,f,c
  4953  001436  0E00               	movlw	0
  4954  001438  221C               	addwfc	___ftadd@f2+2,f,c
  4955  00143A                     l2816:
  4956  00143A  0E00               	movlw	0
  4957  00143C  6E20               	movwf	___ftadd@sign,c
  4958  00143E  5017               	movf	___ftadd@f1,w,c
  4959  001440  261A               	addwf	___ftadd@f2,f,c
  4960  001442  5018               	movf	___ftadd@f1+1,w,c
  4961  001444  221B               	addwfc	___ftadd@f2+1,f,c
  4962  001446  5019               	movf	___ftadd@f1+2,w,c
  4963  001448  221C               	addwfc	___ftadd@f2+2,f,c
  4964  00144A  AE1C               	btfss	___ftadd@f2+2,7,c
  4965  00144C  D00E               	goto	l2826
  4966  00144E  0EFF               	movlw	255
  4967  001450  1A1A               	xorwf	___ftadd@f2,f,c
  4968  001452  0EFF               	movlw	255
  4969  001454  1A1B               	xorwf	___ftadd@f2+1,f,c
  4970  001456  0EFF               	movlw	255
  4971  001458  1A1C               	xorwf	___ftadd@f2+2,f,c
  4972  00145A  0E01               	movlw	1
  4973  00145C  261A               	addwf	___ftadd@f2,f,c
  4974  00145E  0E00               	movlw	0
  4975  001460  221B               	addwfc	___ftadd@f2+1,f,c
  4976  001462  0E00               	movlw	0
  4977  001464  221C               	addwfc	___ftadd@f2+2,f,c
  4978  001466  0E01               	movlw	1
  4979  001468  6E20               	movwf	___ftadd@sign,c
  4980  00146A                     l2826:
  4981  00146A  C01A  F00F         	movff	___ftadd@f2,___ftpack@arg
  4982  00146E  C01B  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  4983  001472  C01C  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  4984  001476  C022  F012         	movff	___ftadd@exp1,___ftpack@exp
  4985  00147A  C020  F013         	movff	___ftadd@sign,___ftpack@sign
  4986  00147E  EC28  F00C         	call	___ftpack	;wreg free
  4987  001482  C00F  F017         	movff	?___ftpack,?___ftadd
  4988  001486  C010  F018         	movff	?___ftpack+1,?___ftadd+1
  4989  00148A  C011  F019         	movff	?___ftpack+2,?___ftadd+2
  4990  00148E                     l798:
  4991  00148E  0012               	return	
  4992  001490  FFFF               	dw	65535	; errata NOP
  4993  001492                     __end_of___ftadd:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodl	equ	0xFF3
  5000                           intcon	equ	0xFF2
  5001                           postinc0	equ	0xFEE
  5002                           wreg	equ	0xFE8
  5003                           status	equ	0xFD8
  5004                           
  5005 ;; *************** function ___ftmul *****************
  5006 ;; Defined at:
  5007 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  f1              3   22[COMRAM] float 
  5010 ;;  f2              3   25[COMRAM] float 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  f3_as_produc    3   32[COMRAM] unsigned um
  5013 ;;  sign            1   36[COMRAM] unsigned char 
  5014 ;;  cntr            1   35[COMRAM] unsigned char 
  5015 ;;  exp             1   31[COMRAM] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  3   22[COMRAM] float 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5025 ;;      Params:         6       0       0       0       0       0       0
  5026 ;;      Locals:         6       0       0       0       0       0       0
  5027 ;;      Temps:          3       0       0       0       0       0       0
  5028 ;;      Totals:        15       0       0       0       0       0       0
  5029 ;;Total ram usage:       15 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    2
  5032 ;; This function calls:
  5033 ;;		___ftpack
  5034 ;; This function is called by:
  5035 ;;		_sqrt
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text4
  5040  001768                     __ptext4:
  5041                           	opt stack 0
  5042  001768                     ___ftmul:
  5043                           	opt stack 27
  5044                           
  5045                           ;incstack = 0
  5046  001768  FFFF               	dw	65535
  5047  00176A  C019  F01D         	movff	___ftmul@f1+2,??___ftmul
  5048  00176E  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  5049  001770  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  5050  001772  3418               	rlcf	___ftmul@f1+1,w,c
  5051  001774  361D               	rlcf	??___ftmul& (0+255),f,c
  5052  001776  E301               	bnc	u2921
  5053  001778  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  5054  00177A                     u2921:
  5055  00177A  501D               	movf	??___ftmul,w,c
  5056  00177C  6E20               	movwf	___ftmul@exp,c
  5057  00177E  6620               	tstfsz	___ftmul@exp& (0+255),c
  5058  001780  D001               	goto	l2836
  5059  001782  D00C               	goto	u2950
  5060  001784                     l2836:
  5061  001784  C01C  F01D         	movff	___ftmul@f2+2,??___ftmul
  5062  001788  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  5063  00178A  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  5064  00178C  341B               	rlcf	___ftmul@f2+1,w,c
  5065  00178E  361D               	rlcf	??___ftmul& (0+255),f,c
  5066  001790  E301               	bnc	u2941
  5067  001792  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  5068  001794                     u2941:
  5069  001794  501D               	movf	??___ftmul,w,c
  5070  001796  6E25               	movwf	___ftmul@sign,c
  5071  001798  6625               	tstfsz	___ftmul@sign& (0+255),c
  5072  00179A  D007               	goto	l2842
  5073  00179C                     u2950:
  5074  00179C  0E00               	movlw	0
  5075  00179E  6E17               	movwf	?___ftmul,c
  5076  0017A0  0E00               	movlw	0
  5077  0017A2  6E18               	movwf	?___ftmul+1,c
  5078  0017A4  0E00               	movlw	0
  5079  0017A6  6E19               	movwf	?___ftmul+2,c
  5080  0017A8  D051               	goto	l844
  5081  0017AA                     l2842:
  5082  0017AA  5025               	movf	___ftmul@sign,w,c
  5083  0017AC  0F7B               	addlw	123
  5084  0017AE  2620               	addwf	___ftmul@exp,f,c
  5085  0017B0  C019  F025         	movff	___ftmul@f1+2,___ftmul@sign
  5086  0017B4  501C               	movf	___ftmul@f2+2,w,c
  5087  0017B6  1A25               	xorwf	___ftmul@sign,f,c
  5088  0017B8  0E80               	movlw	128
  5089  0017BA  1625               	andwf	___ftmul@sign,f,c
  5090  0017BC  8E18               	bsf	___ftmul@f1+1,7,c
  5091  0017BE  8E1B               	bsf	___ftmul@f2+1,7,c
  5092  0017C0  0EFF               	movlw	255
  5093  0017C2  161A               	andwf	___ftmul@f2,f,c
  5094  0017C4  0EFF               	movlw	255
  5095  0017C6  161B               	andwf	___ftmul@f2+1,f,c
  5096  0017C8  0E00               	movlw	0
  5097  0017CA  161C               	andwf	___ftmul@f2+2,f,c
  5098  0017CC  0E00               	movlw	0
  5099  0017CE  6E21               	movwf	___ftmul@f3_as_product,c
  5100  0017D0  0E00               	movlw	0
  5101  0017D2  6E22               	movwf	___ftmul@f3_as_product+1,c
  5102  0017D4  0E00               	movlw	0
  5103  0017D6  6E23               	movwf	___ftmul@f3_as_product+2,c
  5104  0017D8  0E07               	movlw	7
  5105  0017DA  6E24               	movwf	___ftmul@cntr,c
  5106  0017DC                     l2856:
  5107  0017DC  A017               	btfss	___ftmul@f1,0,c
  5108  0017DE  D006               	goto	l2860
  5109  0017E0  501A               	movf	___ftmul@f2,w,c
  5110  0017E2  2621               	addwf	___ftmul@f3_as_product,f,c
  5111  0017E4  501B               	movf	___ftmul@f2+1,w,c
  5112  0017E6  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  5113  0017E8  501C               	movf	___ftmul@f2+2,w,c
  5114  0017EA  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  5115  0017EC                     l2860:
  5116  0017EC  90D8               	bcf	status,0,c
  5117  0017EE  3219               	rrcf	___ftmul@f1+2,f,c
  5118  0017F0  3218               	rrcf	___ftmul@f1+1,f,c
  5119  0017F2  3217               	rrcf	___ftmul@f1,f,c
  5120  0017F4  90D8               	bcf	status,0,c
  5121  0017F6  361A               	rlcf	___ftmul@f2,f,c
  5122  0017F8  361B               	rlcf	___ftmul@f2+1,f,c
  5123  0017FA  361C               	rlcf	___ftmul@f2+2,f,c
  5124  0017FC  2E24               	decfsz	___ftmul@cntr,f,c
  5125  0017FE  D7EE               	goto	l2856
  5126  001800  0E09               	movlw	9
  5127  001802  6E24               	movwf	___ftmul@cntr,c
  5128  001804                     l2866:
  5129  001804  A017               	btfss	___ftmul@f1,0,c
  5130  001806  D006               	goto	l2870
  5131  001808  501A               	movf	___ftmul@f2,w,c
  5132  00180A  2621               	addwf	___ftmul@f3_as_product,f,c
  5133  00180C  501B               	movf	___ftmul@f2+1,w,c
  5134  00180E  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  5135  001810  501C               	movf	___ftmul@f2+2,w,c
  5136  001812  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  5137  001814                     l2870:
  5138  001814  90D8               	bcf	status,0,c
  5139  001816  3219               	rrcf	___ftmul@f1+2,f,c
  5140  001818  3218               	rrcf	___ftmul@f1+1,f,c
  5141  00181A  3217               	rrcf	___ftmul@f1,f,c
  5142  00181C  90D8               	bcf	status,0,c
  5143  00181E  3223               	rrcf	___ftmul@f3_as_product+2,f,c
  5144  001820  3222               	rrcf	___ftmul@f3_as_product+1,f,c
  5145  001822  3221               	rrcf	___ftmul@f3_as_product,f,c
  5146  001824  2E24               	decfsz	___ftmul@cntr,f,c
  5147  001826  D7EE               	goto	l2866
  5148  001828  C021  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  5149  00182C  C022  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5150  001830  C023  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5151  001834  C020  F012         	movff	___ftmul@exp,___ftpack@exp
  5152  001838  C025  F013         	movff	___ftmul@sign,___ftpack@sign
  5153  00183C  EC28  F00C         	call	___ftpack	;wreg free
  5154  001840  C00F  F017         	movff	?___ftpack,?___ftmul
  5155  001844  C010  F018         	movff	?___ftpack+1,?___ftmul+1
  5156  001848  C011  F019         	movff	?___ftpack+2,?___ftmul+2
  5157  00184C                     l844:
  5158  00184C  0012               	return	
  5159  00184E  FFFF               	dw	65535	; errata NOP
  5160  001850                     __end_of___ftmul:
  5161                           	opt stack 0
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           prodl	equ	0xFF3
  5167                           intcon	equ	0xFF2
  5168                           postinc0	equ	0xFEE
  5169                           wreg	equ	0xFE8
  5170                           status	equ	0xFD8
  5171                           
  5172 ;; *************** function ___ftge *****************
  5173 ;; Defined at:
  5174 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  ff1             3   14[COMRAM] float 
  5177 ;;  ff2             3   17[COMRAM] float 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;		None               void
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5189 ;;      Params:         6       0       0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0
  5191 ;;      Temps:          3       0       0       0       0       0       0
  5192 ;;      Totals:         9       0       0       0       0       0       0
  5193 ;;Total ram usage:        9 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    1
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_sqrt
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text5
  5204  0019A4                     __ptext5:
  5205                           	opt stack 0
  5206  0019A4                     ___ftge:
  5207                           	opt stack 28
  5208                           
  5209                           ;incstack = 0
  5210  0019A4  FFFF               	dw	65535
  5211  0019A6  AE11               	btfss	___ftge@ff1+2,7,c
  5212  0019A8  D016               	goto	l2888
  5213  0019AA  C00F  F015         	movff	___ftge@ff1,??___ftge
  5214  0019AE  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  5215  0019B2  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  5216  0019B6  1E15               	comf	??___ftge,f,c
  5217  0019B8  1E16               	comf	??___ftge+1,f,c
  5218  0019BA  1E17               	comf	??___ftge+2,f,c
  5219  0019BC  2A15               	incf	??___ftge,f,c
  5220  0019BE  0E00               	movlw	0
  5221  0019C0  2216               	addwfc	??___ftge+1,f,c
  5222  0019C2  2217               	addwfc	??___ftge+2,f,c
  5223  0019C4  0E00               	movlw	0
  5224  0019C6  2415               	addwf	??___ftge,w,c
  5225  0019C8  6E0F               	movwf	___ftge@ff1,c
  5226  0019CA  0E00               	movlw	0
  5227  0019CC  2016               	addwfc	??___ftge+1,w,c
  5228  0019CE  6E10               	movwf	___ftge@ff1+1,c
  5229  0019D0  0E80               	movlw	128
  5230  0019D2  2017               	addwfc	??___ftge+2,w,c
  5231  0019D4  6E11               	movwf	___ftge@ff1+2,c
  5232  0019D6                     l2888:
  5233  0019D6  AE14               	btfss	___ftge@ff2+2,7,c
  5234  0019D8  D016               	goto	l2892
  5235  0019DA  C012  F015         	movff	___ftge@ff2,??___ftge
  5236  0019DE  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  5237  0019E2  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  5238  0019E6  1E15               	comf	??___ftge,f,c
  5239  0019E8  1E16               	comf	??___ftge+1,f,c
  5240  0019EA  1E17               	comf	??___ftge+2,f,c
  5241  0019EC  2A15               	incf	??___ftge,f,c
  5242  0019EE  0E00               	movlw	0
  5243  0019F0  2216               	addwfc	??___ftge+1,f,c
  5244  0019F2  2217               	addwfc	??___ftge+2,f,c
  5245  0019F4  0E00               	movlw	0
  5246  0019F6  2415               	addwf	??___ftge,w,c
  5247  0019F8  6E12               	movwf	___ftge@ff2,c
  5248  0019FA  0E00               	movlw	0
  5249  0019FC  2016               	addwfc	??___ftge+1,w,c
  5250  0019FE  6E13               	movwf	___ftge@ff2+1,c
  5251  001A00  0E80               	movlw	128
  5252  001A02  2017               	addwfc	??___ftge+2,w,c
  5253  001A04  6E14               	movwf	___ftge@ff2+2,c
  5254  001A06                     l2892:
  5255  001A06  0E00               	movlw	0
  5256  001A08  1A0F               	xorwf	___ftge@ff1,f,c
  5257  001A0A  0E00               	movlw	0
  5258  001A0C  1A10               	xorwf	___ftge@ff1+1,f,c
  5259  001A0E  0E80               	movlw	128
  5260  001A10  1A11               	xorwf	___ftge@ff1+2,f,c
  5261  001A12  0E00               	movlw	0
  5262  001A14  1A12               	xorwf	___ftge@ff2,f,c
  5263  001A16  0E00               	movlw	0
  5264  001A18  1A13               	xorwf	___ftge@ff2+1,f,c
  5265  001A1A  0E80               	movlw	128
  5266  001A1C  1A14               	xorwf	___ftge@ff2+2,f,c
  5267  001A1E  5012               	movf	___ftge@ff2,w,c
  5268  001A20  5C0F               	subwf	___ftge@ff1,w,c
  5269  001A22  5013               	movf	___ftge@ff2+1,w,c
  5270  001A24  5810               	subwfb	___ftge@ff1+1,w,c
  5271  001A26  5014               	movf	___ftge@ff2+2,w,c
  5272  001A28  5811               	subwfb	___ftge@ff1+2,w,c
  5273  001A2A  B0D8               	btfsc	status,0,c
  5274  001A2C  D002               	goto	l2898
  5275  001A2E  90D8               	bcf	status,0,c
  5276  001A30  D001               	goto	l838
  5277  001A32                     l2898:
  5278  001A32  80D8               	bsf	status,0,c
  5279  001A34                     l838:
  5280  001A34  0012               	return	
  5281  001A36  FFFF               	dw	65535	; errata NOP
  5282  001A38                     __end_of___ftge:
  5283                           	opt stack 0
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           prodl	equ	0xFF3
  5289                           intcon	equ	0xFF2
  5290                           postinc0	equ	0xFEE
  5291                           wreg	equ	0xFE8
  5292                           status	equ	0xFD8
  5293                           
  5294 ;; *************** function ___lwtoft *****************
  5295 ;; Defined at:
  5296 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  c               2   22[COMRAM] unsigned int 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  3   22[COMRAM] float 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5310 ;;      Params:         3       0       0       0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0
  5313 ;;      Totals:         3       0       0       0       0       0       0
  5314 ;;Total ram usage:        3 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    2
  5317 ;; This function calls:
  5318 ;;		___ftpack
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text6
  5325  001BC8                     __ptext6:
  5326                           	opt stack 0
  5327  001BC8                     ___lwtoft:
  5328                           	opt stack 28
  5329                           
  5330                           ;incstack = 0
  5331  001BC8  FFFF               	dw	65535
  5332  001BCA  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  5333  001BCE  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  5334  001BD2  6A11               	clrf	___ftpack@arg+2,c
  5335  001BD4  0E8E               	movlw	142
  5336  001BD6  6E12               	movwf	___ftpack@exp,c
  5337  001BD8  0E00               	movlw	0
  5338  001BDA  6E13               	movwf	___ftpack@sign,c
  5339  001BDC  EC28  F00C         	call	___ftpack	;wreg free
  5340  001BE0  C00F  F017         	movff	?___ftpack,?___lwtoft
  5341  001BE4  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  5342  001BE8  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  5343  001BEC  0012               	return	
  5344  001BEE  FFFF               	dw	65535	; errata NOP
  5345  001BF0                     __end_of___lwtoft:
  5346                           	opt stack 0
  5347                           tblptru	equ	0xFF8
  5348                           tblptrh	equ	0xFF7
  5349                           tblptrl	equ	0xFF6
  5350                           tablat	equ	0xFF5
  5351                           prodl	equ	0xFF3
  5352                           intcon	equ	0xFF2
  5353                           postinc0	equ	0xFEE
  5354                           wreg	equ	0xFE8
  5355                           status	equ	0xFD8
  5356                           
  5357 ;; *************** function ___lwdiv *****************
  5358 ;; Defined at:
  5359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  dividend        2   14[COMRAM] unsigned int 
  5362 ;;  divisor         2   16[COMRAM] unsigned int 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  quotient        2   18[COMRAM] unsigned int 
  5365 ;;  counter         1   20[COMRAM] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2   14[COMRAM] unsigned int 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5375 ;;      Params:         4       0       0       0       0       0       0
  5376 ;;      Locals:         3       0       0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0
  5378 ;;      Totals:         7       0       0       0       0       0       0
  5379 ;;Total ram usage:        7 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text7
  5390  001ACC                     __ptext7:
  5391                           	opt stack 0
  5392  001ACC                     ___lwdiv:
  5393                           	opt stack 29
  5394                           
  5395                           ;incstack = 0
  5396  001ACC  FFFF               	dw	65535
  5397  001ACE  0E00               	movlw	0
  5398  001AD0  6E14               	movwf	___lwdiv@quotient+1,c
  5399  001AD2  0E00               	movlw	0
  5400  001AD4  6E13               	movwf	___lwdiv@quotient,c
  5401  001AD6  5012               	movf	___lwdiv@divisor+1,w,c
  5402  001AD8  1011               	iorwf	___lwdiv@divisor,w,c
  5403  001ADA  B4D8               	btfsc	status,2,c
  5404  001ADC  D01C               	goto	l966
  5405  001ADE  0E01               	movlw	1
  5406  001AE0  6E15               	movwf	___lwdiv@counter,c
  5407  001AE2  D004               	goto	l3104
  5408  001AE4                     l3102:
  5409  001AE4  90D8               	bcf	status,0,c
  5410  001AE6  3611               	rlcf	___lwdiv@divisor,f,c
  5411  001AE8  3612               	rlcf	___lwdiv@divisor+1,f,c
  5412  001AEA  2A15               	incf	___lwdiv@counter,f,c
  5413  001AEC                     l3104:
  5414  001AEC  AE12               	btfss	___lwdiv@divisor+1,7,c
  5415  001AEE  D7FA               	goto	l3102
  5416  001AF0                     l3106:
  5417  001AF0  90D8               	bcf	status,0,c
  5418  001AF2  3613               	rlcf	___lwdiv@quotient,f,c
  5419  001AF4  3614               	rlcf	___lwdiv@quotient+1,f,c
  5420  001AF6  5011               	movf	___lwdiv@divisor,w,c
  5421  001AF8  5C0F               	subwf	___lwdiv@dividend,w,c
  5422  001AFA  5012               	movf	___lwdiv@divisor+1,w,c
  5423  001AFC  5810               	subwfb	___lwdiv@dividend+1,w,c
  5424  001AFE  A0D8               	btfss	status,0,c
  5425  001B00  D005               	goto	l3114
  5426  001B02  5011               	movf	___lwdiv@divisor,w,c
  5427  001B04  5E0F               	subwf	___lwdiv@dividend,f,c
  5428  001B06  5012               	movf	___lwdiv@divisor+1,w,c
  5429  001B08  5A10               	subwfb	___lwdiv@dividend+1,f,c
  5430  001B0A  8013               	bsf	___lwdiv@quotient,0,c
  5431  001B0C                     l3114:
  5432  001B0C  90D8               	bcf	status,0,c
  5433  001B0E  3212               	rrcf	___lwdiv@divisor+1,f,c
  5434  001B10  3211               	rrcf	___lwdiv@divisor,f,c
  5435  001B12  2E15               	decfsz	___lwdiv@counter,f,c
  5436  001B14  D7ED               	goto	l3106
  5437  001B16                     l966:
  5438  001B16  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  5439  001B1A  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5440  001B1E  0012               	return	
  5441  001B20  FFFF               	dw	65535	; errata NOP
  5442  001B22                     __end_of___lwdiv:
  5443                           	opt stack 0
  5444                           tblptru	equ	0xFF8
  5445                           tblptrh	equ	0xFF7
  5446                           tblptrl	equ	0xFF6
  5447                           tablat	equ	0xFF5
  5448                           prodl	equ	0xFF3
  5449                           intcon	equ	0xFF2
  5450                           postinc0	equ	0xFEE
  5451                           wreg	equ	0xFE8
  5452                           status	equ	0xFD8
  5453                           
  5454 ;; *************** function ___lbtoft *****************
  5455 ;; Defined at:
  5456 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  c               1    wreg     unsigned char 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  c               1   25[COMRAM] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  3   22[COMRAM] float 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5470 ;;      Params:         3       0       0       0       0       0       0
  5471 ;;      Locals:         1       0       0       0       0       0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0
  5473 ;;      Totals:         4       0       0       0       0       0       0
  5474 ;;Total ram usage:        4 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    2
  5477 ;; This function calls:
  5478 ;;		___ftpack
  5479 ;; This function is called by:
  5480 ;;		_main
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text8
  5485  001BF0                     __ptext8:
  5486                           	opt stack 0
  5487  001BF0                     ___lbtoft:
  5488                           	opt stack 28
  5489                           
  5490                           ;incstack = 0
  5491  001BF0  FFFF               	dw	65535
  5492                           
  5493                           ;___lbtoft@c stored from wreg
  5494  001BF2  6E1A               	movwf	___lbtoft@c,c
  5495  001BF4  501A               	movf	___lbtoft@c,w,c
  5496  001BF6  6E0F               	movwf	___ftpack@arg,c
  5497  001BF8  6A10               	clrf	___ftpack@arg+1,c
  5498  001BFA  6A11               	clrf	___ftpack@arg+2,c
  5499  001BFC  0E8E               	movlw	142
  5500  001BFE  6E12               	movwf	___ftpack@exp,c
  5501  001C00  0E00               	movlw	0
  5502  001C02  6E13               	movwf	___ftpack@sign,c
  5503  001C04  EC28  F00C         	call	___ftpack	;wreg free
  5504  001C08  C00F  F017         	movff	?___ftpack,?___lbtoft
  5505  001C0C  C010  F018         	movff	?___ftpack+1,?___lbtoft+1
  5506  001C10  C011  F019         	movff	?___ftpack+2,?___lbtoft+2
  5507  001C14  0012               	return	
  5508  001C16  FFFF               	dw	65535	; errata NOP
  5509  001C18                     __end_of___lbtoft:
  5510                           	opt stack 0
  5511                           tblptru	equ	0xFF8
  5512                           tblptrh	equ	0xFF7
  5513                           tblptrl	equ	0xFF6
  5514                           tablat	equ	0xFF5
  5515                           prodl	equ	0xFF3
  5516                           intcon	equ	0xFF2
  5517                           postinc0	equ	0xFEE
  5518                           wreg	equ	0xFE8
  5519                           status	equ	0xFD8
  5520                           
  5521 ;; *************** function ___ftpack *****************
  5522 ;; Defined at:
  5523 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  arg             3   14[COMRAM] unsigned um
  5526 ;;  exp             1   17[COMRAM] unsigned char 
  5527 ;;  sign            1   18[COMRAM] unsigned char 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  3   14[COMRAM] float 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5539 ;;      Params:         5       0       0       0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0
  5541 ;;      Temps:          3       0       0       0       0       0       0
  5542 ;;      Totals:         8       0       0       0       0       0       0
  5543 ;;Total ram usage:        8 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    1
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		___ftadd
  5550 ;;		___ftmul
  5551 ;;		___lbtoft
  5552 ;;		___lwtoft
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text9
  5557  001850                     __ptext9:
  5558                           	opt stack 0
  5559  001850                     ___ftpack:
  5560                           	opt stack 26
  5561                           
  5562                           ;incstack = 0
  5563  001850  FFFF               	dw	65535
  5564  001852  5012               	movf	___ftpack@exp,w,c
  5565  001854  B4D8               	btfsc	status,2,c
  5566  001856  D005               	goto	l2730
  5567  001858  500F               	movf	___ftpack@arg,w,c
  5568  00185A  1010               	iorwf	___ftpack@arg+1,w,c
  5569  00185C  1011               	iorwf	___ftpack@arg+2,w,c
  5570  00185E  A4D8               	btfss	status,2,c
  5571  001860  D00C               	goto	l2736
  5572  001862                     l2730:
  5573  001862  0E00               	movlw	0
  5574  001864  6E0F               	movwf	?___ftpack,c
  5575  001866  0E00               	movlw	0
  5576  001868  6E10               	movwf	?___ftpack+1,c
  5577  00186A  0E00               	movlw	0
  5578  00186C  6E11               	movwf	?___ftpack+2,c
  5579  00186E  D044               	goto	l760
  5580  001870                     l2734:
  5581  001870  2A12               	incf	___ftpack@exp,f,c
  5582  001872  90D8               	bcf	status,0,c
  5583  001874  3211               	rrcf	___ftpack@arg+2,f,c
  5584  001876  3210               	rrcf	___ftpack@arg+1,f,c
  5585  001878  320F               	rrcf	___ftpack@arg,f,c
  5586  00187A                     l2736:
  5587  00187A  0E00               	movlw	0
  5588  00187C  140F               	andwf	___ftpack@arg,w,c
  5589  00187E  6E14               	movwf	??___ftpack& (0+255),c
  5590  001880  0E00               	movlw	0
  5591  001882  1410               	andwf	___ftpack@arg+1,w,c
  5592  001884  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5593  001886  0EFE               	movlw	254
  5594  001888  1411               	andwf	___ftpack@arg+2,w,c
  5595  00188A  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5596  00188C  5014               	movf	??___ftpack,w,c
  5597  00188E  1015               	iorwf	??___ftpack+1,w,c
  5598  001890  1016               	iorwf	??___ftpack+2,w,c
  5599  001892  B4D8               	btfsc	status,2,c
  5600  001894  D00C               	goto	l2742
  5601  001896  D7EC               	goto	l2734
  5602  001898                     l2738:
  5603  001898  2A12               	incf	___ftpack@exp,f,c
  5604  00189A  0E01               	movlw	1
  5605  00189C  260F               	addwf	___ftpack@arg,f,c
  5606  00189E  0E00               	movlw	0
  5607  0018A0  2210               	addwfc	___ftpack@arg+1,f,c
  5608  0018A2  0E00               	movlw	0
  5609  0018A4  2211               	addwfc	___ftpack@arg+2,f,c
  5610  0018A6  90D8               	bcf	status,0,c
  5611  0018A8  3211               	rrcf	___ftpack@arg+2,f,c
  5612  0018AA  3210               	rrcf	___ftpack@arg+1,f,c
  5613  0018AC  320F               	rrcf	___ftpack@arg,f,c
  5614  0018AE                     l2742:
  5615  0018AE  0E00               	movlw	0
  5616  0018B0  140F               	andwf	___ftpack@arg,w,c
  5617  0018B2  6E14               	movwf	??___ftpack& (0+255),c
  5618  0018B4  0E00               	movlw	0
  5619  0018B6  1410               	andwf	___ftpack@arg+1,w,c
  5620  0018B8  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5621  0018BA  0EFF               	movlw	255
  5622  0018BC  1411               	andwf	___ftpack@arg+2,w,c
  5623  0018BE  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5624  0018C0  5014               	movf	??___ftpack,w,c
  5625  0018C2  1015               	iorwf	??___ftpack+1,w,c
  5626  0018C4  1016               	iorwf	??___ftpack+2,w,c
  5627  0018C6  B4D8               	btfsc	status,2,c
  5628  0018C8  D006               	goto	l2746
  5629  0018CA  D7E6               	goto	l2738
  5630  0018CC                     l2744:
  5631  0018CC  0612               	decf	___ftpack@exp,f,c
  5632  0018CE  90D8               	bcf	status,0,c
  5633  0018D0  360F               	rlcf	___ftpack@arg,f,c
  5634  0018D2  3610               	rlcf	___ftpack@arg+1,f,c
  5635  0018D4  3611               	rlcf	___ftpack@arg+2,f,c
  5636  0018D6                     l2746:
  5637  0018D6  AE10               	btfss	___ftpack@arg+1,7,c
  5638  0018D8  D7F9               	goto	l2744
  5639  0018DA  A012               	btfss	___ftpack@exp,0,c
  5640  0018DC  9E10               	bcf	___ftpack@arg+1,7,c
  5641  0018DE  90D8               	bcf	status,0,c
  5642  0018E0  3212               	rrcf	___ftpack@exp,f,c
  5643  0018E2  5012               	movf	___ftpack@exp,w,c
  5644  0018E4  1211               	iorwf	___ftpack@arg+2,f,c
  5645  0018E6  5013               	movf	___ftpack@sign,w,c
  5646  0018E8  A4D8               	btfss	status,2,c
  5647  0018EA  8E11               	bsf	___ftpack@arg+2,7,c
  5648  0018EC  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  5649  0018F0  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  5650  0018F4  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  5651  0018F8                     l760:
  5652  0018F8  0012               	return	
  5653  0018FA  FFFF               	dw	65535	; errata NOP
  5654  0018FC                     __end_of___ftpack:
  5655                           	opt stack 0
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           prodl	equ	0xFF3
  5661                           intcon	equ	0xFF2
  5662                           postinc0	equ	0xFEE
  5663                           wreg	equ	0xFE8
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function ___fttol *****************
  5667 ;; Defined at:
  5668 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  f1              3   59[COMRAM] float 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  lval            4    6[BANK0 ] unsigned long 
  5673 ;;  exp1            1   10[BANK0 ] unsigned char 
  5674 ;;  sign1           1    5[BANK0 ] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  4   59[COMRAM] long 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5684 ;;      Params:         4       0       0       0       0       0       0
  5685 ;;      Locals:         0       6       0       0       0       0       0
  5686 ;;      Temps:          0       5       0       0       0       0       0
  5687 ;;      Totals:         4      11       0       0       0       0       0
  5688 ;;Total ram usage:       15 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    1
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_main
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text10
  5699  001638                     __ptext10:
  5700                           	opt stack 0
  5701  001638                     ___fttol:
  5702                           	opt stack 29
  5703                           
  5704                           ;incstack = 0
  5705  001638  FFFF               	dw	65535
  5706  00163A  C03E  F080         	movff	___fttol@f1+2,??___fttol
  5707  00163E  0100               	movlb	0	; () banked
  5708  001640  6B81               	clrf	(??___fttol+1)& (0+255),b
  5709  001642  6B82               	clrf	(??___fttol+2)& (0+255),b
  5710  001644  0100               	movlb	0	; () banked
  5711  001646  343D               	rlcf	___fttol@f1+1,w,c
  5712  001648  0100               	movlb	0	; () banked
  5713  00164A  3780               	rlcf	??___fttol& (0+255),f,b
  5714  00164C  E301               	bnc	u5251
  5715  00164E  8181               	bsf	(??___fttol+1)& (0+255),0,b
  5716  001650                     u5251:
  5717  001650  0100               	movlb	0	; () banked
  5718  001652  5180               	movf	??___fttol& (0+255),w,b
  5719  001654  0100               	movlb	0	; () banked
  5720  001656  6F8A               	movwf	___fttol@exp1& (0+255),b
  5721  001658  0100               	movlb	0	; () banked
  5722  00165A  678A               	tstfsz	___fttol@exp1& (0+255),b
  5723  00165C  D001               	goto	l4376
  5724  00165E  D04F               	goto	u5300
  5725  001660                     l4376:
  5726                           
  5727                           ; BSR set to: 0
  5728  001660  0E17               	movlw	23
  5729  001662  0100               	movlb	0	; () banked
  5730  001664  6F80               	movwf	??___fttol& (0+255),b
  5731  001666  C03C  F081         	movff	___fttol@f1,??___fttol+1
  5732  00166A  C03D  F082         	movff	___fttol@f1+1,??___fttol+2
  5733  00166E  C03E  F083         	movff	___fttol@f1+2,??___fttol+3
  5734  001672  0100               	movlb	0	; () banked
  5735  001674  2980               	incf	??___fttol& (0+255),w,b
  5736  001676  0100               	movlb	0	; () banked
  5737  001678  6F84               	movwf	(??___fttol+4)& (0+255),b
  5738  00167A  D005               	goto	u5270
  5739  00167C                     u5275:
  5740  00167C  0100               	movlb	0	; () banked
  5741  00167E  90D8               	bcf	status,0,c
  5742  001680  3383               	rrcf	(??___fttol+3)& (0+255),f,b
  5743  001682  3382               	rrcf	(??___fttol+2)& (0+255),f,b
  5744  001684  3381               	rrcf	(??___fttol+1)& (0+255),f,b
  5745  001686                     u5270:
  5746  001686  0100               	movlb	0	; () banked
  5747  001688  2F84               	decfsz	(??___fttol+4)& (0+255),f,b
  5748  00168A  D7F8               	goto	u5275
  5749  00168C  0100               	movlb	0	; () banked
  5750  00168E  5181               	movf	(??___fttol+1)& (0+255),w,b
  5751  001690  0100               	movlb	0	; () banked
  5752  001692  6F85               	movwf	___fttol@sign1& (0+255),b
  5753                           
  5754                           ; BSR set to: 0
  5755  001694  8E3D               	bsf	___fttol@f1+1,7,c
  5756                           
  5757                           ; BSR set to: 0
  5758  001696  0EFF               	movlw	255
  5759  001698  163C               	andwf	___fttol@f1,f,c
  5760  00169A  0EFF               	movlw	255
  5761  00169C  163D               	andwf	___fttol@f1+1,f,c
  5762  00169E  0E00               	movlw	0
  5763  0016A0  163E               	andwf	___fttol@f1+2,f,c
  5764                           
  5765                           ; BSR set to: 0
  5766  0016A2  503C               	movf	___fttol@f1,w,c
  5767  0016A4  0100               	movlb	0	; () banked
  5768  0016A6  6F86               	movwf	___fttol@lval& (0+255),b
  5769  0016A8  503D               	movf	___fttol@f1+1,w,c
  5770  0016AA  0100               	movlb	0	; () banked
  5771  0016AC  6F87               	movwf	(___fttol@lval+1)& (0+255),b
  5772  0016AE  503E               	movf	___fttol@f1+2,w,c
  5773  0016B0  0100               	movlb	0	; () banked
  5774  0016B2  6F88               	movwf	(___fttol@lval+2)& (0+255),b
  5775  0016B4  0100               	movlb	0	; () banked
  5776  0016B6  6B89               	clrf	(___fttol@lval+3)& (0+255),b
  5777                           
  5778                           ; BSR set to: 0
  5779  0016B8  0E8E               	movlw	142
  5780  0016BA  0100               	movlb	0	; () banked
  5781  0016BC  5F8A               	subwf	___fttol@exp1& (0+255),f,b
  5782                           
  5783                           ; BSR set to: 0
  5784  0016BE  0100               	movlb	0	; () banked
  5785  0016C0  AF8A               	btfss	___fttol@exp1& (0+255),7,b
  5786  0016C2  D019               	goto	l4398
  5787                           
  5788                           ; BSR set to: 0
  5789  0016C4  0100               	movlb	0	; () banked
  5790  0016C6  518A               	movf	___fttol@exp1& (0+255),w,b
  5791  0016C8  0A80               	xorlw	128
  5792  0016CA  0100               	movlb	0	; () banked
  5793  0016CC  6F80               	movwf	??___fttol& (0+255),b
  5794  0016CE  0EF1               	movlw	241
  5795  0016D0  0A80               	xorlw	128
  5796  0016D2  0100               	movlb	0	; () banked
  5797  0016D4  5D80               	subwf	??___fttol& (0+255),w,b
  5798  0016D6  A0D8               	btfss	status,0,c
  5799  0016D8  D012               	goto	u5300
  5800  0016DA                     l4394:
  5801                           
  5802                           ; BSR set to: 0
  5803  0016DA  0100               	movlb	0	; () banked
  5804  0016DC  90D8               	bcf	status,0,c
  5805  0016DE  0100               	movlb	0	; () banked
  5806  0016E0  3389               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5807  0016E2  0100               	movlb	0	; () banked
  5808  0016E4  3388               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5809  0016E6  0100               	movlb	0	; () banked
  5810  0016E8  3387               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5811  0016EA  0100               	movlb	0	; () banked
  5812  0016EC  3386               	rrcf	___fttol@lval& (0+255),f,b
  5813                           
  5814                           ; BSR set to: 0
  5815  0016EE  0100               	movlb	0	; () banked
  5816  0016F0  3F8A               	incfsz	___fttol@exp1& (0+255),f,b
  5817  0016F2  D7F3               	goto	l4394
  5818  0016F4  D01C               	goto	l4408
  5819  0016F6                     l4398:
  5820                           
  5821                           ; BSR set to: 0
  5822  0016F6  0E17               	movlw	23
  5823  0016F8  0100               	movlb	0	; () banked
  5824  0016FA  658A               	cpfsgt	___fttol@exp1& (0+255),b
  5825  0016FC  D015               	goto	l4406
  5826  0016FE                     u5300:
  5827                           
  5828                           ; BSR set to: 0
  5829  0016FE  0E00               	movlw	0
  5830  001700  6E3C               	movwf	?___fttol,c
  5831  001702  0E00               	movlw	0
  5832  001704  6E3D               	movwf	?___fttol+1,c
  5833  001706  0E00               	movlw	0
  5834  001708  6E3E               	movwf	?___fttol+2,c
  5835  00170A  0E00               	movlw	0
  5836  00170C  6E3F               	movwf	?___fttol+3,c
  5837  00170E  D02A               	goto	l864
  5838  001710                     l4404:
  5839                           
  5840                           ; BSR set to: 0
  5841  001710  0100               	movlb	0	; () banked
  5842  001712  90D8               	bcf	status,0,c
  5843  001714  0100               	movlb	0	; () banked
  5844  001716  3786               	rlcf	___fttol@lval& (0+255),f,b
  5845  001718  0100               	movlb	0	; () banked
  5846  00171A  3787               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5847  00171C  0100               	movlb	0	; () banked
  5848  00171E  3788               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5849  001720  0100               	movlb	0	; () banked
  5850  001722  3789               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5851  001724  0100               	movlb	0	; () banked
  5852  001726  078A               	decf	___fttol@exp1& (0+255),f,b
  5853  001728                     l4406:
  5854                           
  5855                           ; BSR set to: 0
  5856  001728  0100               	movlb	0	; () banked
  5857  00172A  678A               	tstfsz	___fttol@exp1& (0+255),b
  5858  00172C  D7F1               	goto	l4404
  5859  00172E                     l4408:
  5860                           
  5861                           ; BSR set to: 0
  5862  00172E  0100               	movlb	0	; () banked
  5863  001730  5185               	movf	___fttol@sign1& (0+255),w,b
  5864  001732  B4D8               	btfsc	status,2,c
  5865  001734  D00F               	goto	l4412
  5866                           
  5867                           ; BSR set to: 0
  5868  001736  0100               	movlb	0	; () banked
  5869  001738  1F89               	comf	(___fttol@lval+3)& (0+255),f,b
  5870  00173A  0100               	movlb	0	; () banked
  5871  00173C  1F88               	comf	(___fttol@lval+2)& (0+255),f,b
  5872  00173E  0100               	movlb	0	; () banked
  5873  001740  1F87               	comf	(___fttol@lval+1)& (0+255),f,b
  5874  001742  0100               	movlb	0	; () banked
  5875  001744  6D86               	negf	___fttol@lval& (0+255),b
  5876  001746  0E00               	movlw	0
  5877  001748  0100               	movlb	0	; () banked
  5878  00174A  2387               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5879  00174C  0100               	movlb	0	; () banked
  5880  00174E  2388               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5881  001750  0100               	movlb	0	; () banked
  5882  001752  2389               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5883  001754                     l4412:
  5884                           
  5885                           ; BSR set to: 0
  5886  001754  C086  F03C         	movff	___fttol@lval,?___fttol
  5887  001758  C087  F03D         	movff	___fttol@lval+1,?___fttol+1
  5888  00175C  C088  F03E         	movff	___fttol@lval+2,?___fttol+2
  5889  001760  C089  F03F         	movff	___fttol@lval+3,?___fttol+3
  5890  001764                     l864:
  5891                           
  5892                           ; BSR set to: 0
  5893  001764  0012               	return	
  5894  001766  FFFF               	dw	65535	; errata NOP
  5895  001768                     __end_of___fttol:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           prodl	equ	0xFF3
  5902                           intcon	equ	0xFF2
  5903                           postinc0	equ	0xFEE
  5904                           wreg	equ	0xFE8
  5905                           status	equ	0xFD8
  5906                           
  5907 ;; *************** function ___awmod *****************
  5908 ;; Defined at:
  5909 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  dividend        2   14[COMRAM] int 
  5912 ;;  divisor         2   16[COMRAM] int 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  sign            1   19[COMRAM] unsigned char 
  5915 ;;  counter         1   18[COMRAM] unsigned char 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  2   14[COMRAM] int 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0, prodl
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5925 ;;      Params:         4       0       0       0       0       0       0
  5926 ;;      Locals:         2       0       0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0
  5928 ;;      Totals:         6       0       0       0       0       0       0
  5929 ;;Total ram usage:        6 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_main
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text11
  5940  001A38                     __ptext11:
  5941                           	opt stack 0
  5942  001A38                     ___awmod:
  5943                           	opt stack 29
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;incstack = 0
  5947  001A38  FFFF               	dw	65535
  5948  001A3A  0E00               	movlw	0
  5949  001A3C  6E14               	movwf	___awmod@sign,c
  5950  001A3E  5010               	movf	___awmod@dividend+1,w,c
  5951  001A40  0A80               	xorlw	128
  5952  001A42  6EF3               	movwf	prodl,c
  5953  001A44  0E80               	movlw	128
  5954  001A46  5CF3               	subwf	prodl,w,c
  5955  001A48  0E00               	movlw	0
  5956  001A4A  B4D8               	btfsc	status,2,c
  5957  001A4C  5C0F               	subwf	___awmod@dividend,w,c
  5958  001A4E  B0D8               	btfsc	status,0,c
  5959  001A50  D006               	goto	l3018
  5960  001A52  6C0F               	negf	___awmod@dividend,c
  5961  001A54  1E10               	comf	___awmod@dividend+1,f,c
  5962  001A56  B0D8               	btfsc	status,0,c
  5963  001A58  2A10               	incf	___awmod@dividend+1,f,c
  5964  001A5A  0E01               	movlw	1
  5965  001A5C  6E14               	movwf	___awmod@sign,c
  5966  001A5E                     l3018:
  5967  001A5E  5012               	movf	___awmod@divisor+1,w,c
  5968  001A60  0A80               	xorlw	128
  5969  001A62  6EF3               	movwf	prodl,c
  5970  001A64  0E80               	movlw	128
  5971  001A66  5CF3               	subwf	prodl,w,c
  5972  001A68  0E00               	movlw	0
  5973  001A6A  B4D8               	btfsc	status,2,c
  5974  001A6C  5C11               	subwf	___awmod@divisor,w,c
  5975  001A6E  B0D8               	btfsc	status,0,c
  5976  001A70  D004               	goto	l3022
  5977  001A72  6C11               	negf	___awmod@divisor,c
  5978  001A74  1E12               	comf	___awmod@divisor+1,f,c
  5979  001A76  B0D8               	btfsc	status,0,c
  5980  001A78  2A12               	incf	___awmod@divisor+1,f,c
  5981  001A7A                     l3022:
  5982  001A7A  5012               	movf	___awmod@divisor+1,w,c
  5983  001A7C  1011               	iorwf	___awmod@divisor,w,c
  5984  001A7E  B4D8               	btfsc	status,2,c
  5985  001A80  D018               	goto	l3038
  5986  001A82  0E01               	movlw	1
  5987  001A84  6E13               	movwf	___awmod@counter,c
  5988  001A86  D004               	goto	l3028
  5989  001A88                     l3026:
  5990  001A88  90D8               	bcf	status,0,c
  5991  001A8A  3611               	rlcf	___awmod@divisor,f,c
  5992  001A8C  3612               	rlcf	___awmod@divisor+1,f,c
  5993  001A8E  2A13               	incf	___awmod@counter,f,c
  5994  001A90                     l3028:
  5995  001A90  AE12               	btfss	___awmod@divisor+1,7,c
  5996  001A92  D7FA               	goto	l3026
  5997  001A94                     l3030:
  5998  001A94  5011               	movf	___awmod@divisor,w,c
  5999  001A96  5C0F               	subwf	___awmod@dividend,w,c
  6000  001A98  5012               	movf	___awmod@divisor+1,w,c
  6001  001A9A  5810               	subwfb	___awmod@dividend+1,w,c
  6002  001A9C  A0D8               	btfss	status,0,c
  6003  001A9E  D004               	goto	l3034
  6004  001AA0  5011               	movf	___awmod@divisor,w,c
  6005  001AA2  5E0F               	subwf	___awmod@dividend,f,c
  6006  001AA4  5012               	movf	___awmod@divisor+1,w,c
  6007  001AA6  5A10               	subwfb	___awmod@dividend+1,f,c
  6008  001AA8                     l3034:
  6009  001AA8  90D8               	bcf	status,0,c
  6010  001AAA  3212               	rrcf	___awmod@divisor+1,f,c
  6011  001AAC  3211               	rrcf	___awmod@divisor,f,c
  6012  001AAE  2E13               	decfsz	___awmod@counter,f,c
  6013  001AB0  D7F1               	goto	l3030
  6014  001AB2                     l3038:
  6015  001AB2  5014               	movf	___awmod@sign,w,c
  6016  001AB4  B4D8               	btfsc	status,2,c
  6017  001AB6  D004               	goto	l3042
  6018  001AB8  6C0F               	negf	___awmod@dividend,c
  6019  001ABA  1E10               	comf	___awmod@dividend+1,f,c
  6020  001ABC  B0D8               	btfsc	status,0,c
  6021  001ABE  2A10               	incf	___awmod@dividend+1,f,c
  6022  001AC0                     l3042:
  6023  001AC0  C00F  F00F         	movff	___awmod@dividend,?___awmod
  6024  001AC4  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  6025  001AC8  0012               	return	
  6026  001ACA  FFFF               	dw	65535	; errata NOP
  6027  001ACC                     __end_of___awmod:
  6028                           	opt stack 0
  6029                           tblptru	equ	0xFF8
  6030                           tblptrh	equ	0xFF7
  6031                           tblptrl	equ	0xFF6
  6032                           tablat	equ	0xFF5
  6033                           prodl	equ	0xFF3
  6034                           intcon	equ	0xFF2
  6035                           postinc0	equ	0xFEE
  6036                           wreg	equ	0xFE8
  6037                           status	equ	0xFD8
  6038                           
  6039 ;; *************** function ___awdiv *****************
  6040 ;; Defined at:
  6041 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  dividend        2   14[COMRAM] int 
  6044 ;;  divisor         2   16[COMRAM] int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  quotient        2   20[COMRAM] int 
  6047 ;;  sign            1   19[COMRAM] unsigned char 
  6048 ;;  counter         1   18[COMRAM] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  2   14[COMRAM] int 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0, prodl
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6058 ;;      Params:         4       0       0       0       0       0       0
  6059 ;;      Locals:         4       0       0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0
  6061 ;;      Totals:         8       0       0       0       0       0       0
  6062 ;;Total ram usage:        8 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_main
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text12
  6073  0018FC                     __ptext12:
  6074                           	opt stack 0
  6075  0018FC                     ___awdiv:
  6076                           	opt stack 29
  6077                           
  6078                           ;incstack = 0
  6079  0018FC  FFFF               	dw	65535
  6080  0018FE  0E00               	movlw	0
  6081  001900  6E14               	movwf	___awdiv@sign,c
  6082  001902  5012               	movf	___awdiv@divisor+1,w,c
  6083  001904  0A80               	xorlw	128
  6084  001906  6EF3               	movwf	prodl,c
  6085  001908  0E80               	movlw	128
  6086  00190A  5CF3               	subwf	prodl,w,c
  6087  00190C  0E00               	movlw	0
  6088  00190E  B4D8               	btfsc	status,2,c
  6089  001910  5C11               	subwf	___awdiv@divisor,w,c
  6090  001912  B0D8               	btfsc	status,0,c
  6091  001914  D006               	goto	l2974
  6092  001916  6C11               	negf	___awdiv@divisor,c
  6093  001918  1E12               	comf	___awdiv@divisor+1,f,c
  6094  00191A  B0D8               	btfsc	status,0,c
  6095  00191C  2A12               	incf	___awdiv@divisor+1,f,c
  6096  00191E  0E01               	movlw	1
  6097  001920  6E14               	movwf	___awdiv@sign,c
  6098  001922                     l2974:
  6099  001922  5010               	movf	___awdiv@dividend+1,w,c
  6100  001924  0A80               	xorlw	128
  6101  001926  6EF3               	movwf	prodl,c
  6102  001928  0E80               	movlw	128
  6103  00192A  5CF3               	subwf	prodl,w,c
  6104  00192C  0E00               	movlw	0
  6105  00192E  B4D8               	btfsc	status,2,c
  6106  001930  5C0F               	subwf	___awdiv@dividend,w,c
  6107  001932  B0D8               	btfsc	status,0,c
  6108  001934  D006               	goto	l2980
  6109  001936  6C0F               	negf	___awdiv@dividend,c
  6110  001938  1E10               	comf	___awdiv@dividend+1,f,c
  6111  00193A  B0D8               	btfsc	status,0,c
  6112  00193C  2A10               	incf	___awdiv@dividend+1,f,c
  6113  00193E  0E01               	movlw	1
  6114  001940  1A14               	xorwf	___awdiv@sign,f,c
  6115  001942                     l2980:
  6116  001942  0E00               	movlw	0
  6117  001944  6E16               	movwf	___awdiv@quotient+1,c
  6118  001946  0E00               	movlw	0
  6119  001948  6E15               	movwf	___awdiv@quotient,c
  6120  00194A  5012               	movf	___awdiv@divisor+1,w,c
  6121  00194C  1011               	iorwf	___awdiv@divisor,w,c
  6122  00194E  B4D8               	btfsc	status,2,c
  6123  001950  D01C               	goto	l3002
  6124  001952  0E01               	movlw	1
  6125  001954  6E13               	movwf	___awdiv@counter,c
  6126  001956  D004               	goto	l2988
  6127  001958                     l2986:
  6128  001958  90D8               	bcf	status,0,c
  6129  00195A  3611               	rlcf	___awdiv@divisor,f,c
  6130  00195C  3612               	rlcf	___awdiv@divisor+1,f,c
  6131  00195E  2A13               	incf	___awdiv@counter,f,c
  6132  001960                     l2988:
  6133  001960  AE12               	btfss	___awdiv@divisor+1,7,c
  6134  001962  D7FA               	goto	l2986
  6135  001964                     l2990:
  6136  001964  90D8               	bcf	status,0,c
  6137  001966  3615               	rlcf	___awdiv@quotient,f,c
  6138  001968  3616               	rlcf	___awdiv@quotient+1,f,c
  6139  00196A  5011               	movf	___awdiv@divisor,w,c
  6140  00196C  5C0F               	subwf	___awdiv@dividend,w,c
  6141  00196E  5012               	movf	___awdiv@divisor+1,w,c
  6142  001970  5810               	subwfb	___awdiv@dividend+1,w,c
  6143  001972  A0D8               	btfss	status,0,c
  6144  001974  D005               	goto	l2998
  6145  001976  5011               	movf	___awdiv@divisor,w,c
  6146  001978  5E0F               	subwf	___awdiv@dividend,f,c
  6147  00197A  5012               	movf	___awdiv@divisor+1,w,c
  6148  00197C  5A10               	subwfb	___awdiv@dividend+1,f,c
  6149  00197E  8015               	bsf	___awdiv@quotient,0,c
  6150  001980                     l2998:
  6151  001980  90D8               	bcf	status,0,c
  6152  001982  3212               	rrcf	___awdiv@divisor+1,f,c
  6153  001984  3211               	rrcf	___awdiv@divisor,f,c
  6154  001986  2E13               	decfsz	___awdiv@counter,f,c
  6155  001988  D7ED               	goto	l2990
  6156  00198A                     l3002:
  6157  00198A  5014               	movf	___awdiv@sign,w,c
  6158  00198C  B4D8               	btfsc	status,2,c
  6159  00198E  D004               	goto	l3006
  6160  001990  6C15               	negf	___awdiv@quotient,c
  6161  001992  1E16               	comf	___awdiv@quotient+1,f,c
  6162  001994  B0D8               	btfsc	status,0,c
  6163  001996  2A16               	incf	___awdiv@quotient+1,f,c
  6164  001998                     l3006:
  6165  001998  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  6166  00199C  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  6167  0019A0  0012               	return	
  6168  0019A2  FFFF               	dw	65535	; errata NOP
  6169  0019A4                     __end_of___awdiv:
  6170                           	opt stack 0
  6171                           tblptru	equ	0xFF8
  6172                           tblptrh	equ	0xFF7
  6173                           tblptrl	equ	0xFF6
  6174                           tablat	equ	0xFF5
  6175                           prodl	equ	0xFF3
  6176                           intcon	equ	0xFF2
  6177                           postinc0	equ	0xFEE
  6178                           wreg	equ	0xFE8
  6179                           status	equ	0xFD8
  6180                           
  6181 ;; *************** function _Write_b_eep *****************
  6182 ;; Defined at:
  6183 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\write_B.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  badd            2   14[COMRAM] unsigned int 
  6186 ;;  bdat            1   16[COMRAM] unsigned char 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  GIE_BIT_VAL     1   17[COMRAM] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;		None               void
  6191 ;; Registers used:
  6192 ;;		wreg, status,2
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6198 ;;      Params:         3       0       0       0       0       0       0
  6199 ;;      Locals:         1       0       0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0
  6201 ;;      Totals:         4       0       0       0       0       0       0
  6202 ;;Total ram usage:        4 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    1
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_main
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text13
  6213  001B22                     __ptext13:
  6214                           	opt stack 0
  6215  001B22                     _Write_b_eep:
  6216                           	opt stack 29
  6217                           
  6218                           ;incstack = 0
  6219  001B22  FFFF               	dw	65535
  6220  001B24  0E00               	movlw	0
  6221  001B26  6E12               	movwf	Write_b_eep@GIE_BIT_VAL,c
  6222  001B28  C00F  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  6223  001B2C  C011  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  6224  001B30  9EA6               	bcf	4006,7,c	;volatile
  6225  001B32  9CA6               	bcf	4006,6,c	;volatile
  6226  001B34  84A6               	bsf	4006,2,c	;volatile
  6227  001B36  0E00               	movlw	0
  6228  001B38  BEF2               	btfsc	intcon,7,c	;volatile
  6229  001B3A  0E01               	movlw	1
  6230  001B3C  6E12               	movwf	Write_b_eep@GIE_BIT_VAL,c
  6231  001B3E  9EF2               	bcf	intcon,7,c	;volatile
  6232  001B40  0E55               	movlw	85
  6233  001B42  6EA7               	movwf	4007,c	;volatile
  6234  001B44  0EAA               	movlw	170
  6235  001B46  6EA7               	movwf	4007,c	;volatile
  6236  001B48  82A6               	bsf	4006,1,c	;volatile
  6237  001B4A                     l448:
  6238  001B4A  B2A6               	btfsc	4006,1,c	;volatile
  6239  001B4C  D7FE               	goto	l448
  6240  001B4E  B012               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  6241  001B50  D002               	bra	u3045
  6242  001B52  9EF2               	bcf	intcon,7,c	;volatile
  6243  001B54  D001               	bra	u3046
  6244  001B56                     u3045:
  6245  001B56  8EF2               	bsf	intcon,7,c	;volatile
  6246  001B58                     u3046:
  6247  001B58  94A6               	bcf	4006,2,c	;volatile
  6248  001B5A  0012               	return	
  6249  001B5C  FFFF               	dw	65535	; errata NOP
  6250  001B5E                     __end_of_Write_b_eep:
  6251                           	opt stack 0
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           prodl	equ	0xFF3
  6257                           intcon	equ	0xFF2
  6258                           postinc0	equ	0xFEE
  6259                           wreg	equ	0xFE8
  6260                           status	equ	0xFD8
  6261                           
  6262 ;; *************** function _Read_b_eep *****************
  6263 ;; Defined at:
  6264 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\read_B.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  badd            2   14[COMRAM] unsigned int 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      unsigned char 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6278 ;;      Params:         2       0       0       0       0       0       0
  6279 ;;      Locals:         0       0       0       0       0       0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0
  6281 ;;      Totals:         2       0       0       0       0       0       0
  6282 ;;Total ram usage:        2 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    1
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text14
  6293  001C18                     __ptext14:
  6294                           	opt stack 0
  6295  001C18                     _Read_b_eep:
  6296                           	opt stack 29
  6297                           
  6298                           ;incstack = 0
  6299  001C18  FFFF               	dw	65535
  6300  001C1A  C00F  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  6301  001C1E  9CA6               	bcf	4006,6,c	;volatile
  6302  001C20  9EA6               	bcf	4006,7,c	;volatile
  6303  001C22  80A6               	bsf	4006,0,c	;volatile
  6304  001C24  F000               	nop	
  6305  001C26  F000               	nop	
  6306  001C28  50A8               	movf	4008,w,c	;volatile
  6307  001C2A  0012               	return	
  6308  001C2C  FFFF               	dw	65535	; errata NOP
  6309  001C2E                     __end_of_Read_b_eep:
  6310                           	opt stack 0
  6311                           tblptru	equ	0xFF8
  6312                           tblptrh	equ	0xFF7
  6313                           tblptrl	equ	0xFF6
  6314                           tablat	equ	0xFF5
  6315                           prodl	equ	0xFF3
  6316                           intcon	equ	0xFF2
  6317                           postinc0	equ	0xFEE
  6318                           wreg	equ	0xFE8
  6319                           status	equ	0xFD8
  6320                           
  6321 ;; *************** function _Busy_eep *****************
  6322 ;; Defined at:
  6323 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\busy_eep.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;		None
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;		None
  6328 ;; Return value:  Size  Location     Type
  6329 ;;		None               void
  6330 ;; Registers used:
  6331 ;;		None
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6337 ;;      Params:         0       0       0       0       0       0       0
  6338 ;;      Locals:         0       0       0       0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0
  6340 ;;      Totals:         0       0       0       0       0       0       0
  6341 ;;Total ram usage:        0 bytes
  6342 ;; Hardware stack levels used:    1
  6343 ;; Hardware stack levels required when called:    1
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_main
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text15
  6352  001C2E                     __ptext15:
  6353                           	opt stack 0
  6354  001C2E                     _Busy_eep:
  6355                           	opt stack 29
  6356                           
  6357                           ;incstack = 0
  6358  001C2E  FFFF               	dw	65535
  6359  001C30                     l421:
  6360  001C30  A2A6               	btfss	4006,1,c	;volatile
  6361  001C32  0012               	return	
  6362  001C34  FFFF               	dw	65535	; assembler added errata NOP
  6363  001C36  D7FC               	goto	l421
  6364  001C38  FFFF               	dw	65535	; errata NOP
  6365  001C3A                     __end_of_Busy_eep:
  6366                           	opt stack 0
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodl	equ	0xFF3
  6372                           intcon	equ	0xFF2
  6373                           postinc0	equ	0xFEE
  6374                           wreg	equ	0xFE8
  6375                           status	equ	0xFD8
  6376                           
  6377 ;; *************** function _tmr_int *****************
  6378 ;; Defined at:
  6379 ;;		line 1333 in file "E:\Study Material\XC8 PROJECTS\Cautry Machine\digi.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;		None
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;		None               void
  6386 ;; Registers used:
  6387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6393 ;;      Params:         0       0       0       0       0       0       0
  6394 ;;      Locals:         0       0       0       0       0       0       0
  6395 ;;      Temps:         14       0       0       0       0       0       0
  6396 ;;      Totals:        14       0       0       0       0       0       0
  6397 ;;Total ram usage:       14 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		Interrupt level 2
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	intcode
  6407  000008                     __pintcode:
  6408                           	opt stack 0
  6409  000008                     _tmr_int:
  6410                           	opt stack 26
  6411                           
  6412                           ;incstack = 0
  6413  000008  FFFF               	dw	65535	; errata NOP
  6414  00000A  CFFA F001          	movff	pclath,??_tmr_int
  6415  00000E  CFFB F002          	movff	pclatu,??_tmr_int+1
  6416  000012  CFE9 F003          	movff	fsr0l,??_tmr_int+2
  6417  000016  CFEA F004          	movff	fsr0h,??_tmr_int+3
  6418  00001A  CFE1 F005          	movff	fsr1l,??_tmr_int+4
  6419  00001E  CFE2 F006          	movff	fsr1h,??_tmr_int+5
  6420  000022  CFD9 F007          	movff	fsr2l,??_tmr_int+6
  6421  000026  CFDA F008          	movff	fsr2h,??_tmr_int+7
  6422  00002A  CFF3 F009          	movff	prodl,??_tmr_int+8
  6423  00002E  CFF4 F00A          	movff	prodh,??_tmr_int+9
  6424  000032  CFF6 F00B          	movff	tblptrl,??_tmr_int+10
  6425  000036  CFF7 F00C          	movff	tblptrh,??_tmr_int+11
  6426  00003A  CFF8 F00D          	movff	tblptru,??_tmr_int+12
  6427  00003E  CFF5 F00E          	movff	tablat,??_tmr_int+13
  6428                           
  6429                           ;digi.c: 1335: if(adr == 7)
  6430  000042  5055               	movf	_adr,w,c	;volatile
  6431  000044  0A07               	xorlw	7
  6432  000046  A4D8               	btfss	status,2,c
  6433  000048  D003               	goto	i2l2700
  6434                           
  6435                           ;digi.c: 1336: {
  6436                           ;digi.c: 1337: RB0 = ~(RB0);
  6437  00004A  7081               	btg	3969,0,c	;volatile
  6438                           
  6439                           ;digi.c: 1338: adr = 0;
  6440  00004C  0E00               	movlw	0
  6441  00004E  6E55               	movwf	_adr,c	;volatile
  6442  000050                     i2l2700:
  6443                           
  6444                           ;digi.c: 1339: }
  6445                           ;digi.c: 1340: PORTE = adr;
  6446  000050  C055  FF84         	movff	_adr,3972	;volatile
  6447                           
  6448                           ;digi.c: 1341: PORTB = PORTB & 0x0F;
  6449  000054  5081               	movf	3969,w,c	;volatile
  6450  000056  0B0F               	andlw	15
  6451  000058  6E81               	movwf	3969,c	;volatile
  6452                           
  6453                           ;digi.c: 1342: PORTB = PORTB | values[count];
  6454  00005A  505B               	movf	_count,w,c	;volatile
  6455  00005C  0D01               	mullw	1
  6456  00005E  0E40               	movlw	low _values	;volatile
  6457  000060  24F3               	addwf	prodl,w,c
  6458  000062  6ED9               	movwf	fsr2l,c
  6459  000064  0E00               	movlw	high _values	;volatile
  6460  000066  20F4               	addwfc	prodh,w,c
  6461  000068  6EDA               	movwf	fsr2h,c
  6462  00006A  50DF               	movf	indf2,w,c
  6463  00006C  1081               	iorwf	3969,w,c	;volatile
  6464  00006E  6E81               	movwf	3969,c	;volatile
  6465                           
  6466                           ;digi.c: 1343: adr = adr + 1;
  6467  000070  2855               	incf	_adr,w,c	;volatile
  6468  000072  6E55               	movwf	_adr,c	;volatile
  6469                           
  6470                           ;digi.c: 1344: count = count + 1;
  6471  000074  285B               	incf	_count,w,c	;volatile
  6472  000076  6E5B               	movwf	_count,c	;volatile
  6473                           
  6474                           ;digi.c: 1345: if(count == 14)
  6475  000078  505B               	movf	_count,w,c	;volatile
  6476  00007A  0A0E               	xorlw	14
  6477  00007C  A4D8               	btfss	status,2,c
  6478  00007E  D002               	goto	i2l2714
  6479                           
  6480                           ;digi.c: 1346: {
  6481                           ;digi.c: 1347: count = 0;
  6482  000080  0E00               	movlw	0
  6483  000082  6E5B               	movwf	_count,c	;volatile
  6484  000084                     i2l2714:
  6485                           
  6486                           ;digi.c: 1348: }
  6487                           ;digi.c: 1349: hold = hold - 1;
  6488  000084  0462               	decf	_hold,w,c
  6489  000086  6E62               	movwf	_hold,c	;volatile
  6490                           
  6491                           ;digi.c: 1351: T0IF = 0;
  6492  000088  94F2               	bcf	intcon,2,c	;volatile
  6493                           
  6494                           ;digi.c: 1352: TMR0 = 0;
  6495  00008A  0E00               	movlw	0
  6496  00008C  6ED7               	movwf	4055,c	;volatile
  6497  00008E  0E00               	movlw	0
  6498  000090  6ED6               	movwf	4054,c	;volatile
  6499                           
  6500                           ;digi.c: 1353: return;
  6501  000092  C00E  FFF5         	movff	??_tmr_int+13,tablat
  6502  000096  C00D  FFF8         	movff	??_tmr_int+12,tblptru
  6503  00009A  C00C  FFF7         	movff	??_tmr_int+11,tblptrh
  6504  00009E  C00B  FFF6         	movff	??_tmr_int+10,tblptrl
  6505  0000A2  C00A  FFF4         	movff	??_tmr_int+9,prodh
  6506  0000A6  C009  FFF3         	movff	??_tmr_int+8,prodl
  6507  0000AA  C008  FFDA         	movff	??_tmr_int+7,fsr2h
  6508  0000AE  C007  FFD9         	movff	??_tmr_int+6,fsr2l
  6509  0000B2  C006  FFE2         	movff	??_tmr_int+5,fsr1h
  6510  0000B6  C005  FFE1         	movff	??_tmr_int+4,fsr1l
  6511  0000BA  C004  FFEA         	movff	??_tmr_int+3,fsr0h
  6512  0000BE  C003  FFE9         	movff	??_tmr_int+2,fsr0l
  6513  0000C2  C002  FFFB         	movff	??_tmr_int+1,pclatu
  6514  0000C6  C001  FFFA         	movff	??_tmr_int,pclath
  6515  0000CA  0011               	retfie		f
  6516  0000CC  FFFF               	dw	65535	; errata NOP
  6517  0000CE                     __end_of_tmr_int:
  6518                           	opt stack 0
  6519  0000CE  FFFF               	dw	65535	; assembler added errata NOP
  6520                           pclatu	equ	0xFFB
  6521                           pclath	equ	0xFFA
  6522                           tblptru	equ	0xFF8
  6523                           tblptrh	equ	0xFF7
  6524                           tblptrl	equ	0xFF6
  6525                           tablat	equ	0xFF5
  6526                           prodh	equ	0xFF4
  6527                           prodl	equ	0xFF3
  6528                           intcon	equ	0xFF2
  6529                           postinc0	equ	0xFEE
  6530                           fsr0h	equ	0xFEA
  6531                           fsr0l	equ	0xFE9
  6532                           wreg	equ	0xFE8
  6533                           fsr1h	equ	0xFE2
  6534                           fsr1l	equ	0xFE1
  6535                           indf2	equ	0xFDF
  6536                           fsr2h	equ	0xFDA
  6537                           fsr2l	equ	0xFD9
  6538                           status	equ	0xFD8
  6539                           pclatu	equ	0xFFB
  6540                           pclath	equ	0xFFA
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           postinc0	equ	0xFEE
  6549                           fsr0h	equ	0xFEA
  6550                           fsr0l	equ	0xFE9
  6551                           wreg	equ	0xFE8
  6552                           fsr1h	equ	0xFE2
  6553                           fsr1l	equ	0xFE1
  6554                           indf2	equ	0xFDF
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559                           	psect	rparam
  6560  0000                     pclatu	equ	0xFFB
  6561                           pclath	equ	0xFFA
  6562                           tblptru	equ	0xFF8
  6563                           tblptrh	equ	0xFF7
  6564                           tblptrl	equ	0xFF6
  6565                           tablat	equ	0xFF5
  6566                           prodh	equ	0xFF4
  6567                           prodl	equ	0xFF3
  6568                           intcon	equ	0xFF2
  6569                           postinc0	equ	0xFEE
  6570                           fsr0h	equ	0xFEA
  6571                           fsr0l	equ	0xFE9
  6572                           wreg	equ	0xFE8
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           indf2	equ	0xFDF
  6576                           fsr2h	equ	0xFDA
  6577                           fsr2l	equ	0xFD9
  6578                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         55
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63     112
    BANK0           128     15      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    _sqrt->___ftsub
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___fttol->_sqrt

Critical Paths under _tmr_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___fttol

Critical Paths under _tmr_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tmr_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tmr_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tmr_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tmr_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13369
                                             11 BANK0      4     4      0
                           _Busy_eep
                         _Read_b_eep
                        _Write_b_eep
                            ___awdiv
                            ___awmod
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                           ___lwtoft
                               _sqrt
 ---------------------------------------------------------------------------------
 (1) _sqrt                                                19    16      3    5482
                                             40 COMRAM    19    16      3
                             ___ftge
                            ___ftmul
                            ___ftsub
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    2532
                                             34 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2341
                                             22 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2171
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     222
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1420
                                             22 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     420
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    1377
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1355
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     587
                                             59 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1242
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1504
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Write_b_eep                                          4     1      3    1014
                                             14 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Read_b_eep                                           2     0      2     323
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tmr_int                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Busy_eep
   _Read_b_eep
   _Write_b_eep
   ___awdiv
   ___awmod
   ___fttol
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
     _sqrt (ARG)
       ___ftge
       ___ftmul
         ___ftpack
       ___ftsub
         ___ftadd
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   ___lbtoft
     ___ftpack
   ___lwdiv
   ___lwtoft
     ___ftpack
   _sqrt
     ___ftge
     ___ftmul
       ___ftpack
     ___ftsub
       ___ftadd
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack

 _tmr_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      F      16       5       17.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      70       1       88.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86      15        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Sep 20 17:30:44 2015

                             _i 0064                               _j 0065                              _R1 0070  
                            _R2 0095                    ___awdiv@sign 0014                     __CFG_OSC$HS 000000  
                  ___ftadd@exp1 0022                    ___ftadd@exp2 0021                    ___ftadd@sign 0020  
                           l210 0538                             l203 04F0                             l204 04F2  
                           l221 0628                             l222 062A                             l311 0D56  
                           l207 051A                             l400 1270                             l216 0722  
                           l208 051C                             l321 0DB8                             l233 0834  
                           l225 0652                             l217 05B6                             l242 07D0  
                           l234 0734                             l226 0654                             l331 0E08  
                           l307 0C70                             l243 07D2                             l252 08A6  
                           l228 0670                             l421 1C30                             l325 0E26  
                           l253 08A8                             l245 07EE                             l173 03E8  
                           l406 12A0                             l238 07A6                             l190 0408  
                           l239 07A8                             l191 040A                             l336 0F10  
                           l256 08D0                             l265 09A6                             l257 08D2  
                           l194 0432                             l186 02BA                             l347 0FF8  
                           l283 0AFE                             l259 0902                             l195 0434  
                           l372 114A                             l357 103A                             l293 0B24  
                           l269 0A40                             l197 045A                             l382 118C  
                           l198 059A                             l279 0A66                             l448 1B4A  
                           l368 10B0                             l801 1356                             l297 0C0E  
                           l386 1224                             l812 1402                             l396 1266  
                           l821 141E                             l760 18F8                             l844 184C  
                           l838 1A34                             l864 1764                             l797 132A  
                           l966 1B16                             l798 148E                             _GIE 007F97  
                           l998 14E4                             l999 14D6                             _RA0 007C00  
                           _RA1 007C01                             _RB0 007C08                             _RA2 007C02  
                           _RB1 007C09                             _RA3 007C03                             _RC0 007C10  
                           _RB2 007C0A                             _RA4 007C04                             _RC1 007C11  
                           _RB3 007C0B                             _RA5 007C05                             _RD0 007C18  
                           _RC2 007C12                             _RD1 007C19                             _RD2 007C1A  
                           _RD3 007C1B                             _RC5 007C15                             _RD4 007C1C  
                           _RC6 007C16                             _RD5 007C1D                             _RC7 007C17  
                           _RD6 007C1E                             _RD7 007C1F                    __CFG_BOR$OFF 000000  
                           _adr 0055                             _cnt 0058            __size_of_Write_b_eep 003C  
                  ___awmod@sign 0014                             loop 053C                             prod 000FF3  
                           wreg 000FE8                    __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000  
                          l1000 1634                            l3002 198A                            PORTB 000F81  
                          l3006 1998                            l3030 1A94                            l3022 1A7A  
                          l3102 1AE4                            l3104 1AEC                            l3042 1AC0  
                          l3034 1AA8                            l3026 1A88                            l3018 1A5E  
                          l3114 1B0C                            l3106 1AF0                            l3028 1A90  
                          l3038 1AB2                            l5020 0AB6                            l5006 0A6C  
                          l2800 13C8                            l5104 0BD0                            l5112 0BF0  
                          l2730 1862                            l2810 13FC                            l2802 13D0  
                          l5210 0D3E                            l5042 0AE6                            l5050 0B06  
                          l4412 1754                            l4404 1710                            l5204 0D38  
                          l5060 0B14                            l5028 0AC0                            l5036 0AE0  
                          l4406 1728                            l2742 18AE                            l2734 1870  
                          l5118 0BF6                            l5142 0C52                            l4510 0234  
                          l4408 172E                            l2744 18CC                            l2736 187A  
                          l2816 143A                            l2808 13F2                            l5320 0EC8  
                          l5160 0C76                            l5152 0C60                            l4440 014C  
                          l2746 18D6                            l2738 1898                            l2842 17AA  
                          l2826 146A                            l5402 0FDA                            l5234 0D9A  
                          l4530 0268                            l4522 0256                            l4514 023E  
                          l4506 022C                            l4434 0136                            l2860 17EC  
                          l2836 1784                            l2924 1534                            l5260 0DDA  
                          l5252 0DC2                            l5244 0DA8                            l5068 0B2A  
                          l2870 1814                            l2790 1394                            l2774 1364  
                          l5510 110C                            l5502 1102                            l5342 0EF8  
                          l4550 02AA                            l4542 028C                            l4534 0274  
                          l4526 025E                            l4518 024A                            l4376 1660  
                          l2856 17DC                            l2768 1338                            l5408 0FE0  
                          l5424 101C                            l5328 0ED2                            l5336 0EF2  
                          l5264 0DE8                            l5256 0DCE                            l5096 0BC6  
                          l4712 057A                            l4720 0596                            l4632 0424  
                          l4616 03FA                            l4394 16DA                            l2866 1804  
                          l5610 1248                            l5450 1058                            l5442 1044  
                          l5434 102A                            l5362 0F3A                            l4546 029A  
                          l4538 0280                            l2980 1942                            l2892 1A06  
                          l2796 13B6                            l5620 1256                            l5524 1132  
                          l5540 116E                            l5276 0E0E                            l5268 0DF8  
                          l5292 0E4A                            l5196 0D18                            l5188 0D0E  
                          l4716 0588                            l4708 056E                            l4644 044E  
                          l2990 1964                            l2974 1922                            l4398 16F6  
                          l2798 13C0                            l5550 117C                            l5518 112C  
                          l5454 1062                            l5446 1050                            l5470 1092  
                          l5358 0F34                            l4662 0486                            l2888 19D6  
                          l5640 1294                            l5632 1282                            l5480 10A0  
                          l5296 0E50                            l4920 0968                            l4832 07C2  
                          l4816 0798                            l2986 1958                            l2898 1A32  
                          l5458 106E                            l5394 0FBA                            l5386 0FB0  
                          l4914 095C                            l4850 0830                            l4762 0644  
                          l4746 061A                            l2988 1960                            l5636 128A  
                          l5580 11E6                            l5572 11DC                            l2998 1980  
                          l5558 1192                            l4926 0988                            l4918 0964  
                          l4846 0824                            l4790 071E                            l4694 050C  
                          l4678 04E2                            l5648 12A6                            l5488 10B6  
                          l4944 09AC                            l4936 0996                            l4784 06E2  
                          l5594 120C                            l4890 08C2                            l4874 0898  
                          l4778 06A8                            l5588 1206                            l4980 0A28  
                          l4966 0A02                            l4974 0A22                            l4958 09F8  
                          l4988 0A48                            l4998 0A56                            _T0IF 007F92  
                          u3025 14C6                            u3045 1B56                            u3046 1B58  
                          u2711 12F4                            u2721 1308                            u5300 16FE  
                          u2921 177A                            u5251 1650                            u2941 1794  
                          u5270 1686                            u2950 179C                            u5275 167C  
                          u7307 0188                            u7317 01A4                            u7407 04D6  
                          u7327 01C0                            u7417 0576                            u7337 01DC  
                          u7507 0738                            u7427 0584                            u7347 01F8  
                          u7517 0788                            u7437 0592                            u7357 0214  
                          u7607 0A58                            u7527 0820                            u7447 05AA  
                          u7367 03EE                            _RCON 000FD0                            u7617 0AC8  
                          u7537 082C                            u7457 05BA                            u7377 0462  
                          u7297 016C                            u7707 0D78                            u7627 0AEE  
                          u7547 0840                            u7467 060A                            u7387 046A  
                          u7717 0DAA                            u7637 0B16                            u7557 08EA  
                          u7477 06A2                            u7397 047A                            u7807 113A  
                          u7727 0E16                            u7647 0BD8                            u7567 0960  
                          u7487 06DC                            u7817 117E                            u7737 0EDA  
                          u7657 0BFE                            u7577 0998                            u7497 0718  
                          u7827 11EE                            u7747 0F00                            u7667 0C30  
                          u7587 0A0A                            u7837 1214                            u7757 0FC2  
                          u7677 0C62                            u7597 0A30                            u7847 1258  
                          u7767 0FE8                            u7687 0D20                            u7857 12AE  
                          u7777 102C                            u7697 0D46                            u7787 10A2  
                          u7797 1114                            _TMR0 000FD6                            _main 00D4  
                          _hold 0062                    ___ftpack@arg 000F                            _rdfl 0067  
                  ___ftpack@exp 0012                            _temp 006A                            _wait 0093  
                          _tens 006B                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            _step 0069  
                          _sqrt 1492                            _wrfl 006F                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00D0  
                  ___ftmul@cntr 0024                    ___ftmul@sign 0025                    ___fttol@exp1 008A  
                  ___fttol@lval 0086                   __CFG_OSCS$OFF 000000                           ?_main 0001  
               __end_of___awdiv 19A4                           _EEADR 000FA9                 __end_of___ftadd 1492  
                         _DATAI 0050                 __end_of___awmod 1ACC                           _CARRY 007EC0  
                         ?_sqrt 0029                 __end_of___ftmul 1850                           _T0CON 000FD5  
               ___awdiv@divisor 0011                 __end_of___ftsub 1B98                 __end_of___fttol 1768  
               __end_of___lwdiv 1B22                 ___awdiv@counter 0013                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTD 000F83                           _PORTE 000F84  
                         _RXBUF 0051                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                  Read_b_eep@badd 000F                           _addrh 0053  
                         _addrl 0054                           _datao 005F          Write_b_eep@GIE_BIT_VAL 0012  
                         _count 005B                           _errno 008F                   ___ftpack@sign 0013  
                         _train 006C                           _rxbuf 0068                           _units 006E  
                         _txbuf 006D                           tablat 000FF5                           loop_1 0678  
                         loop_2 06B2                           loop_3 06EE                           loop_4 07F2  
                         loop_5 090A                 __end_of_tmr_int 00CE                           sqrt@i 0035  
                         sqrt@q 0036                           sqrt@x 0039                           sqrt@y 0029  
                         sqrt@z 0032                           status 000FD8                 __initialization 1B98  
                  __end_of_main 12E2                    __end_of_sqrt 1638                      _Read_b_eep 1C18  
              __end_of_Busy_eep 1C3A                          ??_main 008B                   ___fttol@sign1 0085  
                        ??_sqrt 002C                   __activetblptr 000000                          _ADCON1 000FC1  
                        _EEDATA 000FA8                          _EECON2 000FA7                ___awdiv@dividend 000F  
              __end_of___ftpack 18FC                __end_of___lbtoft 1C18                          i2l2700 0050  
                        i2l2714 0084                          _INTCON 000FF2                __end_of___lwtoft 1BF0  
                        ___ftge 19A4                       ??___awdiv 0013                       ??___ftadd 001D  
                     ??___awmod 0013                       ??___ftmul 001D                       ??___ftsub 0029  
                     ??___fttol 0080                       ??___lwdiv 0013                          __txbuf 0052  
                        _dry_fl 0061                          clear_0 1B9E                          clear_1 1BAA  
              ___awdiv@quotient 0015                 ___awmod@divisor 0011                          _temp_a 0091  
                        _values 0040                 ___awmod@counter 0013                          _progno 0066  
         ___ftmul@f3_as_product 0021                    __pdataCOMRAM 0070                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                       ??_tmr_int 0001  
                        sqrt@og 002F                      __accesstop 0080         __end_of__initialization 1BC2  
                    ___ftadd@f1 0017                      ___ftadd@f2 001A                      ___ftge@ff1 000F  
                    ___ftge@ff2 0012                      ___lbtoft@c 001A                      ___ftmul@f1 0017  
                    ___ftmul@f2 001A                      ___ftsub@f1 0023                      ___ftsub@f2 0026  
                    ___fttol@f1 003C                  __pcstackCOMRAM 0001                     ?_Read_b_eep 000F  
                    ___lwtoft@c 0017                      __pbssBANK0 008F                       ?_Busy_eep 0001  
                       ?___ftge 000F                       ?___ftpack 000F                       ?___lbtoft 0017  
                 ??_Write_b_eep 0012                       ?___lwtoft 0017             __size_of_Read_b_eep 0016  
                    ??_Busy_eep 000F                         __Hparam 0000                         __Lparam 0000  
               __size_of___ftge 0094                         ___awdiv 18FC                         ___ftadd 12E2  
                       ___awmod 1A38                         ___ftmul 1768                         ___ftsub 1B5E  
                       ___fttol 1638                         ___lwdiv 1ACC                         __pcinit 1B98  
                    ??___ftpack 0014                      ??___lbtoft 001A                         __ramtop 0600  
                       __ptext0 00D4                         __ptext1 1492                         __ptext2 1B5E  
                       __ptext3 12E2                         __ptext4 1768                         __ptext5 19A4  
                       __ptext6 1BC8                         __ptext7 1ACC                         __ptext8 1BF0  
                       __ptext9 1850                      ??___lwtoft 001A                         _cutmode 005C  
              ___awmod@dividend 000F             __end_of_Write_b_eep 1B5E                         _tmr_int 0008  
          end_of_initialization 1BC2                         postinc0 000FEE                     ___ftmul@exp 0020  
                  ??_Read_b_eep 0011                  __end_of___ftge 1A38                   __pidataCOMRAM 1C3C  
                   _Write_b_eep 1B22             start_initialization 1B98              __end_of_Read_b_eep 1C2E  
             __size_of_Busy_eep 000C                        ??___ftge 0015               __size_of___ftpack 00AC  
             __size_of___lbtoft 0028                     __pbssCOMRAM 0040               __size_of___lwtoft 0028  
                 __pcstackBANK0 0080                ___lwdiv@dividend 000F                       __pintcode 0008  
                      ?___awdiv 000F                        ?___ftadd 0017                        ?___awmod 000F  
                     _coagpower 005A                        ?___ftmul 0017                        ?___ftsub 0023  
                      ?___fttol 003C                        ?___lwdiv 000F                       _bipopower 0057  
                      ?_tmr_int 0001                ___lwdiv@quotient 0013                       _cutpowerh 005D  
                     _cutpowerl 005E                 Write_b_eep@badd 000F                 Write_b_eep@bdat 0011  
                      _Busy_eep 1C2E                      _EECON1bits 000FA6                        __Hrparam 0000  
                      __Lrparam 0000                __size_of___awdiv 00A8                __size_of___ftadd 01B0  
              __size_of___awmod 0094                __size_of___ftmul 00E8                __size_of___ftsub 003A  
              __size_of___fttol 0130                __size_of___lwdiv 0056                        ___ftpack 1850  
                      ___lbtoft 1BF0                    ?_Write_b_eep 000F                        ___lwtoft 1BC8  
                      _debounce 0060                 ___lwdiv@divisor 0011                        _coagmode 0059  
               ___lwdiv@counter 0015                        __ptext10 1638                        __ptext11 1A38  
                      __ptext12 18FC                        __ptext13 1B22                        __ptext14 1C18  
                      __ptext15 1C2E                        _bipomode 0056                __size_of_tmr_int 00C6  
                 __size_of_main 120E                        _cutpower 004E                   __size_of_sqrt 01A6  
                      _hundreds 0063                      _INTCONbits 000FF2                        intlevel2 1C3A  
