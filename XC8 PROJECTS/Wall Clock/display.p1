Version 3.2 HI-TECH Software Intermediate Code
"13 E:\Study Material\XC8 PROJECTS\Wall Clock\display.h
[v _display_secs `(v ~T0 @X0 0 ef ]
"14
[v _display_mins `(v ~T0 @X0 0 ef ]
"15
[v _display_date `(v ~T0 @X0 0 ef ]
"1626 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic16f870.h
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
[v F709 `(v ~T0 @X0 1 tf1`ul ]
"154 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic.h
[v __delay `JF709 ~T0 @X0 0 e ]
[p i __delay ]
"1628 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic16f870.h
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"1630
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"1632
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"1634
[v _RB6 `Vb ~T0 @X0 0 e@54 ]
"1636
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"26 E:\Study Material\XC8 PROJECTS\Wall Clock\max7219.h
[v _MAX7219_DisplayChar `(v ~T0 @X0 0 ef3`uc`uc`uc ]
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f870.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 C:\Program Files (x86)\Microchip\xc8\v1.32\include\pic16f870.h
[; ;pic16f870.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f870.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f870.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f870.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f870.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f870.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f870.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f870.h: 70: typedef union {
[; ;pic16f870.h: 71: struct {
[; ;pic16f870.h: 72: unsigned C :1;
[; ;pic16f870.h: 73: unsigned DC :1;
[; ;pic16f870.h: 74: unsigned Z :1;
[; ;pic16f870.h: 75: unsigned nPD :1;
[; ;pic16f870.h: 76: unsigned nTO :1;
[; ;pic16f870.h: 77: unsigned RP :2;
[; ;pic16f870.h: 78: unsigned IRP :1;
[; ;pic16f870.h: 79: };
[; ;pic16f870.h: 80: struct {
[; ;pic16f870.h: 81: unsigned :5;
[; ;pic16f870.h: 82: unsigned RP0 :1;
[; ;pic16f870.h: 83: unsigned RP1 :1;
[; ;pic16f870.h: 84: };
[; ;pic16f870.h: 85: struct {
[; ;pic16f870.h: 86: unsigned CARRY :1;
[; ;pic16f870.h: 87: };
[; ;pic16f870.h: 88: struct {
[; ;pic16f870.h: 89: unsigned :2;
[; ;pic16f870.h: 90: unsigned ZERO :1;
[; ;pic16f870.h: 91: };
[; ;pic16f870.h: 92: } STATUSbits_t;
[; ;pic16f870.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f870.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f870.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f870.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f870.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f870.h: 163: typedef union {
[; ;pic16f870.h: 164: struct {
[; ;pic16f870.h: 165: unsigned RA0 :1;
[; ;pic16f870.h: 166: unsigned RA1 :1;
[; ;pic16f870.h: 167: unsigned RA2 :1;
[; ;pic16f870.h: 168: unsigned RA3 :1;
[; ;pic16f870.h: 169: unsigned RA4 :1;
[; ;pic16f870.h: 170: unsigned RA5 :1;
[; ;pic16f870.h: 171: };
[; ;pic16f870.h: 172: } PORTAbits_t;
[; ;pic16f870.h: 173: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f870.h: 207: extern volatile unsigned char PORTB @ 0x006;
"209
[; ;pic16f870.h: 209: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f870.h: 212: typedef union {
[; ;pic16f870.h: 213: struct {
[; ;pic16f870.h: 214: unsigned RB0 :1;
[; ;pic16f870.h: 215: unsigned RB1 :1;
[; ;pic16f870.h: 216: unsigned RB2 :1;
[; ;pic16f870.h: 217: unsigned RB3 :1;
[; ;pic16f870.h: 218: unsigned RB4 :1;
[; ;pic16f870.h: 219: unsigned RB5 :1;
[; ;pic16f870.h: 220: unsigned RB6 :1;
[; ;pic16f870.h: 221: unsigned RB7 :1;
[; ;pic16f870.h: 222: };
[; ;pic16f870.h: 223: } PORTBbits_t;
[; ;pic16f870.h: 224: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f870.h: 268: extern volatile unsigned char PORTC @ 0x007;
"270
[; ;pic16f870.h: 270: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f870.h: 273: typedef union {
[; ;pic16f870.h: 274: struct {
[; ;pic16f870.h: 275: unsigned RC0 :1;
[; ;pic16f870.h: 276: unsigned RC1 :1;
[; ;pic16f870.h: 277: unsigned RC2 :1;
[; ;pic16f870.h: 278: unsigned RC3 :1;
[; ;pic16f870.h: 279: unsigned RC4 :1;
[; ;pic16f870.h: 280: unsigned RC5 :1;
[; ;pic16f870.h: 281: unsigned RC6 :1;
[; ;pic16f870.h: 282: unsigned RC7 :1;
[; ;pic16f870.h: 283: };
[; ;pic16f870.h: 284: } PORTCbits_t;
[; ;pic16f870.h: 285: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f870.h: 329: extern volatile unsigned char PCLATH @ 0x00A;
"331
[; ;pic16f870.h: 331: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f870.h: 334: typedef union {
[; ;pic16f870.h: 335: struct {
[; ;pic16f870.h: 336: unsigned PCLATH :5;
[; ;pic16f870.h: 337: };
[; ;pic16f870.h: 338: } PCLATHbits_t;
[; ;pic16f870.h: 339: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f870.h: 348: extern volatile unsigned char INTCON @ 0x00B;
"350
[; ;pic16f870.h: 350: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f870.h: 353: typedef union {
[; ;pic16f870.h: 354: struct {
[; ;pic16f870.h: 355: unsigned RBIF :1;
[; ;pic16f870.h: 356: unsigned INTF :1;
[; ;pic16f870.h: 357: unsigned T0IF :1;
[; ;pic16f870.h: 358: unsigned RBIE :1;
[; ;pic16f870.h: 359: unsigned INTE :1;
[; ;pic16f870.h: 360: unsigned T0IE :1;
[; ;pic16f870.h: 361: unsigned PEIE :1;
[; ;pic16f870.h: 362: unsigned GIE :1;
[; ;pic16f870.h: 363: };
[; ;pic16f870.h: 364: struct {
[; ;pic16f870.h: 365: unsigned :2;
[; ;pic16f870.h: 366: unsigned TMR0IF :1;
[; ;pic16f870.h: 367: unsigned :2;
[; ;pic16f870.h: 368: unsigned TMR0IE :1;
[; ;pic16f870.h: 369: };
[; ;pic16f870.h: 370: } INTCONbits_t;
[; ;pic16f870.h: 371: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f870.h: 425: extern volatile unsigned char PIR1 @ 0x00C;
"427
[; ;pic16f870.h: 427: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f870.h: 430: typedef union {
[; ;pic16f870.h: 431: struct {
[; ;pic16f870.h: 432: unsigned TMR1IF :1;
[; ;pic16f870.h: 433: unsigned TMR2IF :1;
[; ;pic16f870.h: 434: unsigned CCP1IF :1;
[; ;pic16f870.h: 435: unsigned :1;
[; ;pic16f870.h: 436: unsigned TXIF :1;
[; ;pic16f870.h: 437: unsigned RCIF :1;
[; ;pic16f870.h: 438: unsigned ADIF :1;
[; ;pic16f870.h: 439: };
[; ;pic16f870.h: 440: } PIR1bits_t;
[; ;pic16f870.h: 441: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f870.h: 475: extern volatile unsigned char PIR2 @ 0x00D;
"477
[; ;pic16f870.h: 477: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f870.h: 480: typedef union {
[; ;pic16f870.h: 481: struct {
[; ;pic16f870.h: 482: unsigned :4;
[; ;pic16f870.h: 483: unsigned EEIF :1;
[; ;pic16f870.h: 484: };
[; ;pic16f870.h: 485: } PIR2bits_t;
[; ;pic16f870.h: 486: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f870.h: 495: extern volatile unsigned short TMR1 @ 0x00E;
"497
[; ;pic16f870.h: 497: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f870.h: 501: extern volatile unsigned char TMR1L @ 0x00E;
"503
[; ;pic16f870.h: 503: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f870.h: 507: extern volatile unsigned char TMR1H @ 0x00F;
"509
[; ;pic16f870.h: 509: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f870.h: 513: extern volatile unsigned char T1CON @ 0x010;
"515
[; ;pic16f870.h: 515: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f870.h: 518: typedef union {
[; ;pic16f870.h: 519: struct {
[; ;pic16f870.h: 520: unsigned TMR1ON :1;
[; ;pic16f870.h: 521: unsigned TMR1CS :1;
[; ;pic16f870.h: 522: unsigned nT1SYNC :1;
[; ;pic16f870.h: 523: unsigned T1OSCEN :1;
[; ;pic16f870.h: 524: unsigned T1CKPS :2;
[; ;pic16f870.h: 525: };
[; ;pic16f870.h: 526: struct {
[; ;pic16f870.h: 527: unsigned :4;
[; ;pic16f870.h: 528: unsigned T1CKPS0 :1;
[; ;pic16f870.h: 529: unsigned T1CKPS1 :1;
[; ;pic16f870.h: 530: };
[; ;pic16f870.h: 531: struct {
[; ;pic16f870.h: 532: unsigned :2;
[; ;pic16f870.h: 533: unsigned T1INSYNC :1;
[; ;pic16f870.h: 534: };
[; ;pic16f870.h: 535: struct {
[; ;pic16f870.h: 536: unsigned :2;
[; ;pic16f870.h: 537: unsigned T1SYNC :1;
[; ;pic16f870.h: 538: };
[; ;pic16f870.h: 539: } T1CONbits_t;
[; ;pic16f870.h: 540: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f870.h: 589: extern volatile unsigned char TMR2 @ 0x011;
"591
[; ;pic16f870.h: 591: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f870.h: 595: extern volatile unsigned char T2CON @ 0x012;
"597
[; ;pic16f870.h: 597: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f870.h: 600: typedef union {
[; ;pic16f870.h: 601: struct {
[; ;pic16f870.h: 602: unsigned T2CKPS :2;
[; ;pic16f870.h: 603: unsigned TMR2ON :1;
[; ;pic16f870.h: 604: unsigned TOUTPS :4;
[; ;pic16f870.h: 605: };
[; ;pic16f870.h: 606: struct {
[; ;pic16f870.h: 607: unsigned T2CKPS0 :1;
[; ;pic16f870.h: 608: unsigned T2CKPS1 :1;
[; ;pic16f870.h: 609: unsigned :1;
[; ;pic16f870.h: 610: unsigned TOUTPS0 :1;
[; ;pic16f870.h: 611: unsigned TOUTPS1 :1;
[; ;pic16f870.h: 612: unsigned TOUTPS2 :1;
[; ;pic16f870.h: 613: unsigned TOUTPS3 :1;
[; ;pic16f870.h: 614: };
[; ;pic16f870.h: 615: } T2CONbits_t;
[; ;pic16f870.h: 616: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f870.h: 665: extern volatile unsigned short CCPR1 @ 0x015;
"667
[; ;pic16f870.h: 667: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f870.h: 671: extern volatile unsigned char CCPR1L @ 0x015;
"673
[; ;pic16f870.h: 673: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f870.h: 677: extern volatile unsigned char CCPR1H @ 0x016;
"679
[; ;pic16f870.h: 679: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f870.h: 683: extern volatile unsigned char CCP1CON @ 0x017;
"685
[; ;pic16f870.h: 685: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f870.h: 688: typedef union {
[; ;pic16f870.h: 689: struct {
[; ;pic16f870.h: 690: unsigned CCP1M :4;
[; ;pic16f870.h: 691: unsigned CCP1Y :1;
[; ;pic16f870.h: 692: unsigned CCP1X :1;
[; ;pic16f870.h: 693: };
[; ;pic16f870.h: 694: struct {
[; ;pic16f870.h: 695: unsigned CCP1M0 :1;
[; ;pic16f870.h: 696: unsigned CCP1M1 :1;
[; ;pic16f870.h: 697: unsigned CCP1M2 :1;
[; ;pic16f870.h: 698: unsigned CCP1M3 :1;
[; ;pic16f870.h: 699: };
[; ;pic16f870.h: 700: } CCP1CONbits_t;
[; ;pic16f870.h: 701: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f870.h: 740: extern volatile unsigned char RCSTA @ 0x018;
"742
[; ;pic16f870.h: 742: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f870.h: 745: typedef union {
[; ;pic16f870.h: 746: struct {
[; ;pic16f870.h: 747: unsigned RX9D :1;
[; ;pic16f870.h: 748: unsigned OERR :1;
[; ;pic16f870.h: 749: unsigned FERR :1;
[; ;pic16f870.h: 750: unsigned ADDEN :1;
[; ;pic16f870.h: 751: unsigned CREN :1;
[; ;pic16f870.h: 752: unsigned SREN :1;
[; ;pic16f870.h: 753: unsigned RX9 :1;
[; ;pic16f870.h: 754: unsigned SPEN :1;
[; ;pic16f870.h: 755: };
[; ;pic16f870.h: 756: struct {
[; ;pic16f870.h: 757: unsigned RCD8 :1;
[; ;pic16f870.h: 758: unsigned :5;
[; ;pic16f870.h: 759: unsigned RC9 :1;
[; ;pic16f870.h: 760: };
[; ;pic16f870.h: 761: struct {
[; ;pic16f870.h: 762: unsigned :6;
[; ;pic16f870.h: 763: unsigned nRC8 :1;
[; ;pic16f870.h: 764: };
[; ;pic16f870.h: 765: struct {
[; ;pic16f870.h: 766: unsigned :6;
[; ;pic16f870.h: 767: unsigned RC8_9 :1;
[; ;pic16f870.h: 768: };
[; ;pic16f870.h: 769: } RCSTAbits_t;
[; ;pic16f870.h: 770: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f870.h: 834: extern volatile unsigned char TXREG @ 0x019;
"836
[; ;pic16f870.h: 836: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f870.h: 840: extern volatile unsigned char RCREG @ 0x01A;
"842
[; ;pic16f870.h: 842: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f870.h: 846: extern volatile unsigned char ADRESH @ 0x01E;
"848
[; ;pic16f870.h: 848: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f870.h: 852: extern volatile unsigned char ADCON0 @ 0x01F;
"854
[; ;pic16f870.h: 854: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f870.h: 857: typedef union {
[; ;pic16f870.h: 858: struct {
[; ;pic16f870.h: 859: unsigned ADON :1;
[; ;pic16f870.h: 860: unsigned :1;
[; ;pic16f870.h: 861: unsigned GO_nDONE :1;
[; ;pic16f870.h: 862: unsigned CHS :3;
[; ;pic16f870.h: 863: unsigned ADCS :2;
[; ;pic16f870.h: 864: };
[; ;pic16f870.h: 865: struct {
[; ;pic16f870.h: 866: unsigned :2;
[; ;pic16f870.h: 867: unsigned GO :1;
[; ;pic16f870.h: 868: unsigned CHS0 :1;
[; ;pic16f870.h: 869: unsigned CHS1 :1;
[; ;pic16f870.h: 870: unsigned CHS2 :1;
[; ;pic16f870.h: 871: unsigned ADCS0 :1;
[; ;pic16f870.h: 872: unsigned ADCS1 :1;
[; ;pic16f870.h: 873: };
[; ;pic16f870.h: 874: struct {
[; ;pic16f870.h: 875: unsigned :2;
[; ;pic16f870.h: 876: unsigned nDONE :1;
[; ;pic16f870.h: 877: };
[; ;pic16f870.h: 878: struct {
[; ;pic16f870.h: 879: unsigned :2;
[; ;pic16f870.h: 880: unsigned GO_DONE :1;
[; ;pic16f870.h: 881: };
[; ;pic16f870.h: 882: } ADCON0bits_t;
[; ;pic16f870.h: 883: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f870.h: 947: extern volatile unsigned char OPTION_REG @ 0x081;
"949
[; ;pic16f870.h: 949: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f870.h: 952: typedef union {
[; ;pic16f870.h: 953: struct {
[; ;pic16f870.h: 954: unsigned PS :3;
[; ;pic16f870.h: 955: unsigned PSA :1;
[; ;pic16f870.h: 956: unsigned T0SE :1;
[; ;pic16f870.h: 957: unsigned T0CS :1;
[; ;pic16f870.h: 958: unsigned INTEDG :1;
[; ;pic16f870.h: 959: unsigned nRBPU :1;
[; ;pic16f870.h: 960: };
[; ;pic16f870.h: 961: struct {
[; ;pic16f870.h: 962: unsigned PS0 :1;
[; ;pic16f870.h: 963: unsigned PS1 :1;
[; ;pic16f870.h: 964: unsigned PS2 :1;
[; ;pic16f870.h: 965: };
[; ;pic16f870.h: 966: } OPTION_REGbits_t;
[; ;pic16f870.h: 967: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f870.h: 1016: extern volatile unsigned char TRISA @ 0x085;
"1018
[; ;pic16f870.h: 1018: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f870.h: 1021: typedef union {
[; ;pic16f870.h: 1022: struct {
[; ;pic16f870.h: 1023: unsigned TRISA0 :1;
[; ;pic16f870.h: 1024: unsigned TRISA1 :1;
[; ;pic16f870.h: 1025: unsigned TRISA2 :1;
[; ;pic16f870.h: 1026: unsigned TRISA3 :1;
[; ;pic16f870.h: 1027: unsigned TRISA4 :1;
[; ;pic16f870.h: 1028: unsigned TRISA5 :1;
[; ;pic16f870.h: 1029: };
[; ;pic16f870.h: 1030: } TRISAbits_t;
[; ;pic16f870.h: 1031: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f870.h: 1065: extern volatile unsigned char TRISB @ 0x086;
"1067
[; ;pic16f870.h: 1067: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f870.h: 1070: typedef union {
[; ;pic16f870.h: 1071: struct {
[; ;pic16f870.h: 1072: unsigned TRISB0 :1;
[; ;pic16f870.h: 1073: unsigned TRISB1 :1;
[; ;pic16f870.h: 1074: unsigned TRISB2 :1;
[; ;pic16f870.h: 1075: unsigned TRISB3 :1;
[; ;pic16f870.h: 1076: unsigned TRISB4 :1;
[; ;pic16f870.h: 1077: unsigned TRISB5 :1;
[; ;pic16f870.h: 1078: unsigned TRISB6 :1;
[; ;pic16f870.h: 1079: unsigned TRISB7 :1;
[; ;pic16f870.h: 1080: };
[; ;pic16f870.h: 1081: } TRISBbits_t;
[; ;pic16f870.h: 1082: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f870.h: 1126: extern volatile unsigned char TRISC @ 0x087;
"1128
[; ;pic16f870.h: 1128: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f870.h: 1131: typedef union {
[; ;pic16f870.h: 1132: struct {
[; ;pic16f870.h: 1133: unsigned TRISC0 :1;
[; ;pic16f870.h: 1134: unsigned TRISC1 :1;
[; ;pic16f870.h: 1135: unsigned TRISC2 :1;
[; ;pic16f870.h: 1136: unsigned TRISC3 :1;
[; ;pic16f870.h: 1137: unsigned TRISC4 :1;
[; ;pic16f870.h: 1138: unsigned TRISC5 :1;
[; ;pic16f870.h: 1139: unsigned TRISC6 :1;
[; ;pic16f870.h: 1140: unsigned TRISC7 :1;
[; ;pic16f870.h: 1141: };
[; ;pic16f870.h: 1142: } TRISCbits_t;
[; ;pic16f870.h: 1143: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f870.h: 1187: extern volatile unsigned char PIE1 @ 0x08C;
"1189
[; ;pic16f870.h: 1189: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f870.h: 1192: typedef union {
[; ;pic16f870.h: 1193: struct {
[; ;pic16f870.h: 1194: unsigned TMR1IE :1;
[; ;pic16f870.h: 1195: unsigned TMR2IE :1;
[; ;pic16f870.h: 1196: unsigned CCP1IE :1;
[; ;pic16f870.h: 1197: unsigned :1;
[; ;pic16f870.h: 1198: unsigned TXIE :1;
[; ;pic16f870.h: 1199: unsigned RCIE :1;
[; ;pic16f870.h: 1200: unsigned ADIE :1;
[; ;pic16f870.h: 1201: };
[; ;pic16f870.h: 1202: } PIE1bits_t;
[; ;pic16f870.h: 1203: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f870.h: 1237: extern volatile unsigned char PIE2 @ 0x08D;
"1239
[; ;pic16f870.h: 1239: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f870.h: 1242: typedef union {
[; ;pic16f870.h: 1243: struct {
[; ;pic16f870.h: 1244: unsigned :4;
[; ;pic16f870.h: 1245: unsigned EEIE :1;
[; ;pic16f870.h: 1246: };
[; ;pic16f870.h: 1247: } PIE2bits_t;
[; ;pic16f870.h: 1248: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f870.h: 1257: extern volatile unsigned char PCON @ 0x08E;
"1259
[; ;pic16f870.h: 1259: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f870.h: 1262: typedef union {
[; ;pic16f870.h: 1263: struct {
[; ;pic16f870.h: 1264: unsigned nBOR :1;
[; ;pic16f870.h: 1265: unsigned nPOR :1;
[; ;pic16f870.h: 1266: };
[; ;pic16f870.h: 1267: struct {
[; ;pic16f870.h: 1268: unsigned nBO :1;
[; ;pic16f870.h: 1269: };
[; ;pic16f870.h: 1270: } PCONbits_t;
[; ;pic16f870.h: 1271: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f870.h: 1290: extern volatile unsigned char PR2 @ 0x092;
"1292
[; ;pic16f870.h: 1292: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f870.h: 1296: extern volatile unsigned char TXSTA @ 0x098;
"1298
[; ;pic16f870.h: 1298: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f870.h: 1301: typedef union {
[; ;pic16f870.h: 1302: struct {
[; ;pic16f870.h: 1303: unsigned TX9D :1;
[; ;pic16f870.h: 1304: unsigned TRMT :1;
[; ;pic16f870.h: 1305: unsigned BRGH :1;
[; ;pic16f870.h: 1306: unsigned :1;
[; ;pic16f870.h: 1307: unsigned SYNC :1;
[; ;pic16f870.h: 1308: unsigned TXEN :1;
[; ;pic16f870.h: 1309: unsigned TX9 :1;
[; ;pic16f870.h: 1310: unsigned CSRC :1;
[; ;pic16f870.h: 1311: };
[; ;pic16f870.h: 1312: struct {
[; ;pic16f870.h: 1313: unsigned TXD8 :1;
[; ;pic16f870.h: 1314: unsigned :5;
[; ;pic16f870.h: 1315: unsigned nTX8 :1;
[; ;pic16f870.h: 1316: };
[; ;pic16f870.h: 1317: struct {
[; ;pic16f870.h: 1318: unsigned :6;
[; ;pic16f870.h: 1319: unsigned TX8_9 :1;
[; ;pic16f870.h: 1320: };
[; ;pic16f870.h: 1321: } TXSTAbits_t;
[; ;pic16f870.h: 1322: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f870.h: 1376: extern volatile unsigned char SPBRG @ 0x099;
"1378
[; ;pic16f870.h: 1378: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f870.h: 1382: extern volatile unsigned char ADRESL @ 0x09E;
"1384
[; ;pic16f870.h: 1384: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f870.h: 1388: extern volatile unsigned char ADCON1 @ 0x09F;
"1390
[; ;pic16f870.h: 1390: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f870.h: 1393: typedef union {
[; ;pic16f870.h: 1394: struct {
[; ;pic16f870.h: 1395: unsigned PCFG :4;
[; ;pic16f870.h: 1396: unsigned :3;
[; ;pic16f870.h: 1397: unsigned ADFM :1;
[; ;pic16f870.h: 1398: };
[; ;pic16f870.h: 1399: struct {
[; ;pic16f870.h: 1400: unsigned PCFG0 :1;
[; ;pic16f870.h: 1401: unsigned PCFG1 :1;
[; ;pic16f870.h: 1402: unsigned PCFG2 :1;
[; ;pic16f870.h: 1403: unsigned PCFG3 :1;
[; ;pic16f870.h: 1404: };
[; ;pic16f870.h: 1405: } ADCON1bits_t;
[; ;pic16f870.h: 1406: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f870.h: 1440: extern volatile unsigned char EEDATA @ 0x10C;
"1442
[; ;pic16f870.h: 1442: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f870.h: 1446: extern volatile unsigned char EEADR @ 0x10D;
"1448
[; ;pic16f870.h: 1448: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f870.h: 1452: extern volatile unsigned char EEDATH @ 0x10E;
"1454
[; ;pic16f870.h: 1454: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f870.h: 1458: extern volatile unsigned char EEADRH @ 0x10F;
"1460
[; ;pic16f870.h: 1460: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f870.h: 1464: extern volatile unsigned char EECON1 @ 0x18C;
"1466
[; ;pic16f870.h: 1466: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f870.h: 1469: typedef union {
[; ;pic16f870.h: 1470: struct {
[; ;pic16f870.h: 1471: unsigned RD :1;
[; ;pic16f870.h: 1472: unsigned WR :1;
[; ;pic16f870.h: 1473: unsigned WREN :1;
[; ;pic16f870.h: 1474: unsigned WRERR :1;
[; ;pic16f870.h: 1475: unsigned :3;
[; ;pic16f870.h: 1476: unsigned EEPGD :1;
[; ;pic16f870.h: 1477: };
[; ;pic16f870.h: 1478: } EECON1bits_t;
[; ;pic16f870.h: 1479: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f870.h: 1508: extern volatile unsigned char EECON2 @ 0x18D;
"1510
[; ;pic16f870.h: 1510: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f870.h: 1520: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f870.h: 1522: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f870.h: 1524: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f870.h: 1526: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f870.h: 1528: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f870.h: 1530: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f870.h: 1532: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f870.h: 1534: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f870.h: 1536: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f870.h: 1538: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f870.h: 1540: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f870.h: 1542: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f870.h: 1544: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f870.h: 1546: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f870.h: 1548: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f870.h: 1550: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f870.h: 1552: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f870.h: 1554: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f870.h: 1556: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f870.h: 1558: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f870.h: 1560: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f870.h: 1562: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f870.h: 1564: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f870.h: 1566: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f870.h: 1568: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f870.h: 1570: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f870.h: 1572: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f870.h: 1574: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f870.h: 1576: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f870.h: 1578: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f870.h: 1580: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f870.h: 1582: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f870.h: 1584: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f870.h: 1586: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f870.h: 1588: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f870.h: 1590: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f870.h: 1592: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f870.h: 1594: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f870.h: 1596: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f870.h: 1598: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f870.h: 1600: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f870.h: 1602: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f870.h: 1604: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f870.h: 1606: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f870.h: 1608: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f870.h: 1610: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f870.h: 1612: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f870.h: 1614: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f870.h: 1616: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f870.h: 1618: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f870.h: 1620: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f870.h: 1622: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f870.h: 1624: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f870.h: 1626: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f870.h: 1628: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f870.h: 1630: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f870.h: 1632: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f870.h: 1634: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f870.h: 1636: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f870.h: 1638: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f870.h: 1640: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f870.h: 1642: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f870.h: 1644: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f870.h: 1646: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f870.h: 1648: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f870.h: 1650: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f870.h: 1652: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f870.h: 1654: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f870.h: 1656: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f870.h: 1658: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f870.h: 1660: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f870.h: 1662: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f870.h: 1664: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f870.h: 1666: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f870.h: 1668: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f870.h: 1670: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f870.h: 1672: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f870.h: 1674: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f870.h: 1676: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f870.h: 1678: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f870.h: 1680: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f870.h: 1682: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f870.h: 1684: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f870.h: 1686: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f870.h: 1688: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f870.h: 1690: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f870.h: 1692: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f870.h: 1694: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f870.h: 1696: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f870.h: 1698: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f870.h: 1700: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f870.h: 1702: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f870.h: 1704: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f870.h: 1706: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f870.h: 1708: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f870.h: 1710: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f870.h: 1712: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f870.h: 1714: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f870.h: 1716: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f870.h: 1718: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f870.h: 1720: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f870.h: 1722: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f870.h: 1724: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f870.h: 1726: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f870.h: 1728: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f870.h: 1730: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f870.h: 1732: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f870.h: 1734: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f870.h: 1736: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f870.h: 1738: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f870.h: 1740: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f870.h: 1742: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f870.h: 1744: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f870.h: 1746: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f870.h: 1748: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f870.h: 1750: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f870.h: 1752: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f870.h: 1754: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f870.h: 1756: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f870.h: 1758: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f870.h: 1760: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f870.h: 1762: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f870.h: 1764: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f870.h: 1766: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f870.h: 1768: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f870.h: 1770: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f870.h: 1772: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f870.h: 1774: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f870.h: 1776: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f870.h: 1778: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f870.h: 1780: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f870.h: 1782: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f870.h: 1784: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f870.h: 1786: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f870.h: 1788: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f870.h: 1790: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f870.h: 1792: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f870.h: 1794: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f870.h: 1796: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f870.h: 1798: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f870.h: 1800: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f870.h: 1802: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f870.h: 1804: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f870.h: 1806: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f870.h: 1808: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f870.h: 1810: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f870.h: 1812: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f870.h: 1814: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f870.h: 1816: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f870.h: 1818: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
"6 E:\Study Material\XC8 PROJECTS\Wall Clock\timekeeper.h
[v _Twenty_Four_Hrs `uc ~T0 @X0 1 e ]
[i _Twenty_Four_Hrs
-> -> 0 `i `uc
]
[; ;timekeeper.h: 6: unsigned char Twenty_Four_Hrs = 0;
"7
[v _secs `uc ~T0 @X0 1 e ]
[i _secs
-> -> 0 `i `uc
]
[v _mins `uc ~T0 @X0 1 e ]
[i _mins
-> -> 0 `i `uc
]
[v _hrs `uc ~T0 @X0 1 e ]
[i _hrs
-> -> 12 `i `uc
]
[v _day `uc ~T0 @X0 1 e ]
[i _day
-> -> 1 `i `uc
]
[v _month `uc ~T0 @X0 1 e ]
[i _month
-> -> 1 `i `uc
]
[v _year `uc ~T0 @X0 1 e ]
[i _year
-> -> 15 `i `uc
]
[; ;timekeeper.h: 7: unsigned char secs = 00, mins = 00, hrs = 12, day = 1, month = 1, year = 15;
"8
[v _alarm_mins `uc ~T0 @X0 1 e ]
[i _alarm_mins
-> -> 0 `i `uc
]
[v _alarm_hrs `uc ~T0 @X0 1 e ]
[i _alarm_hrs
-> -> 12 `i `uc
]
[; ;timekeeper.h: 8: unsigned char alarm_mins = 00, alarm_hrs = 12;
"9
[v _sec_flag `uc ~T0 @X0 1 e ]
[i _sec_flag
-> -> 0 `i `uc
]
[v _min_flag `uc ~T0 @X0 1 e ]
[i _min_flag
-> -> 1 `i `uc
]
[v _hrs_flag `uc ~T0 @X0 1 e ]
[i _hrs_flag
-> -> 0 `i `uc
]
[v _date_flag `uc ~T0 @X0 1 e ]
[i _date_flag
-> -> 1 `i `uc
]
[v _alarm_flag `uc ~T0 @X0 1 e ]
[i _alarm_flag
-> -> 0 `i `uc
]
[v _alarm_auto_repeat `uc ~T0 @X0 1 e ]
[i _alarm_auto_repeat
-> -> 0 `i `uc
]
[v _alarm_bell `uc ~T0 @X0 1 e ]
[i _alarm_bell
-> -> 0 `i `uc
]
[; ;timekeeper.h: 9: char sec_flag = 0, min_flag = 1, hrs_flag = 0, date_flag = 1, alarm_flag = 0, alarm_auto_repeat = 0, alarm_bell = 0;
"10
[v _adjustment `uc ~T0 @X0 1 e ]
[i _adjustment
-> -> 0 `i `uc
]
[; ;timekeeper.h: 10: char adjustment = 0;
"11
[v _beeps `uc ~T0 @X0 1 e ]
[i _beeps
-> -> 0 `i `uc
]
[; ;timekeeper.h: 11: char beeps = 0;
[; ;timekeeper.h: 13: void update_time();
[; ;timekeeper.h: 14: void update_date();
[; ;timekeeper.h: 15: void check_alarm();
"6 E:\Study Material\XC8 PROJECTS\Wall Clock\display.h
[v _display `uc ~T0 @X0 -> 11 `i e ]
[i _display
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 0 `i `uc
..
]
[; ;display.h: 6: char display[11] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x00};
"8
[v _time_display_array `uc ~T0 @X0 -> 6 `i e ]
[; ;display.h: 8: unsigned char time_display_array[6];
"9
[v _date_display_array `uc ~T0 @X0 -> 8 `i e ]
[; ;display.h: 9: unsigned char date_display_array[8];
"10
[v _eagle_flag `uc ~T0 @X0 1 e ]
[i _eagle_flag
-> -> 0 `i `uc
]
[; ;display.h: 10: unsigned char eagle_flag = 0;
[; ;display.h: 12: void display_time();
[; ;display.h: 13: void display_secs();
[; ;display.h: 14: void display_mins();
[; ;display.h: 15: void display_date();
[; ;display.h: 16: void display_eagle();
[; ;max7219.h: 19: void MAX7219_Init (void);
[; ;max7219.h: 20: void MAX7219_ShutdownStart (void);
[; ;max7219.h: 21: void MAX7219_ShutdownStop (void);
[; ;max7219.h: 22: void MAX7219_DisplayTestStart (void);
[; ;max7219.h: 23: void MAX7219_DisplayTestStop (void);
[; ;max7219.h: 24: void MAX7219_SetBrightness (char brightness);
[; ;max7219.h: 25: void MAX7219_Clear (void);
[; ;max7219.h: 26: void MAX7219_DisplayChar (char digit, char character, char dot);
"7 E:\Study Material\XC8 PROJECTS\Wall Clock\display.C
[v _display_time `(v ~T0 @X0 1 ef ]
"8
{
[; ;display.C: 7: void display_time()
[; ;display.C: 8: {
[e :U _display_time ]
[f ]
"9
[v _temp `uc ~T0 @X0 1 a ]
[; ;display.C: 9: char temp;
[; ;display.C: 12: temp = secs;
"12
[e = _temp _secs ]
[; ;display.C: 13: time_display_array[0] = temp % 10;
"13
[e = *U + &U _time_display_array * -> -> -> 0 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux -> % -> _temp `i -> 10 `i `uc ]
[; ;display.C: 14: time_display_array[1] = temp/10;
"14
[e = *U + &U _time_display_array * -> -> -> 1 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux -> / -> _temp `i -> 10 `i `uc ]
[; ;display.C: 16: display_secs();
"16
[e ( _display_secs ..  ]
[; ;display.C: 17: if(min_flag == 1)
"17
[e $ ! == -> _min_flag `i -> 1 `i 68  ]
[; ;display.C: 18: {
"18
{
[; ;display.C: 19: temp = mins;
"19
[e = _temp _mins ]
[; ;display.C: 20: time_display_array[2] = temp % 10;
"20
[e = *U + &U _time_display_array * -> -> -> 2 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux -> % -> _temp `i -> 10 `i `uc ]
[; ;display.C: 21: time_display_array[3] = temp/10;
"21
[e = *U + &U _time_display_array * -> -> -> 3 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux -> / -> _temp `i -> 10 `i `uc ]
[; ;display.C: 23: temp = hrs;
"23
[e = _temp _hrs ]
[; ;display.C: 26: if(Twenty_Four_Hrs == 0 && hrs > 12)
"26
[e $ ! && == -> _Twenty_Four_Hrs `i -> 0 `i > -> _hrs `i -> 12 `i 69  ]
[; ;display.C: 27: temp = hrs - 12;
"27
[e = _temp -> - -> _hrs `i -> 12 `i `uc ]
[e :U 69 ]
[; ;display.C: 28: if(Twenty_Four_Hrs == 0 && hrs == 0)
"28
[e $ ! && == -> _Twenty_Four_Hrs `i -> 0 `i == -> _hrs `i -> 0 `i 70  ]
[; ;display.C: 29: temp = 12;
"29
[e = _temp -> -> 12 `i `uc ]
[e :U 70 ]
[; ;display.C: 31: if(hrs_flag == 1)
"31
[e $ ! == -> _hrs_flag `i -> 1 `i 71  ]
[; ;display.C: 32: {
"32
{
[; ;display.C: 33: beeps = temp * 2;
"33
[e = _beeps -> * -> _temp `i -> 2 `i `uc ]
[; ;display.C: 34: hrs_flag = 0;
"34
[e = _hrs_flag -> -> 0 `i `uc ]
"35
}
[e :U 71 ]
[; ;display.C: 35: }
[; ;display.C: 37: time_display_array[4] = temp % 10;
"37
[e = *U + &U _time_display_array * -> -> -> 4 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux -> % -> _temp `i -> 10 `i `uc ]
[; ;display.C: 38: time_display_array[5] = temp/10;
"38
[e = *U + &U _time_display_array * -> -> -> 5 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux -> / -> _temp `i -> 10 `i `uc ]
[; ;display.C: 40: if(Twenty_Four_Hrs == 0 && time_display_array[5] == 0)
"40
[e $ ! && == -> _Twenty_Four_Hrs `i -> 0 `i == -> *U + &U _time_display_array * -> -> -> 5 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux `i -> 0 `i 72  ]
[; ;display.C: 41: time_display_array[5] = 10;
"41
[e = *U + &U _time_display_array * -> -> -> 5 `i `ui `ux -> -> # *U &U _time_display_array `ui `ux -> -> 10 `i `uc ]
[e :U 72 ]
[; ;display.C: 43: display_mins();
"43
[e ( _display_mins ..  ]
[; ;display.C: 45: min_flag = 0;
"45
[e = _min_flag -> -> 0 `i `uc ]
"46
}
[e :U 68 ]
[; ;display.C: 46: }
[; ;display.C: 47: if(date_flag == 1)
"47
[e $ ! == -> _date_flag `i -> 1 `i 73  ]
[; ;display.C: 48: {
"48
{
[; ;display.C: 49: temp = year;
"49
[e = _temp _year ]
[; ;display.C: 50: date_display_array[0] = temp % 10;
"50
[e = *U + &U _date_display_array * -> -> -> 0 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> % -> _temp `i -> 10 `i `uc ]
[; ;display.C: 51: date_display_array[0] = date_display_array[0] + 48;
"51
[e = *U + &U _date_display_array * -> -> -> 0 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> + -> *U + &U _date_display_array * -> -> -> 0 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux `i -> 48 `i `uc ]
[; ;display.C: 52: date_display_array[1] = temp/10;
"52
[e = *U + &U _date_display_array * -> -> -> 1 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> / -> _temp `i -> 10 `i `uc ]
[; ;display.C: 53: date_display_array[1] = date_display_array[1] + 48;
"53
[e = *U + &U _date_display_array * -> -> -> 1 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> + -> *U + &U _date_display_array * -> -> -> 1 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux `i -> 48 `i `uc ]
[; ;display.C: 54: date_display_array[2] = '-';
"54
[e = *U + &U _date_display_array * -> -> -> 2 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 45 `ui `uc ]
[; ;display.C: 56: temp = month;
"56
[e = _temp _month ]
[; ;display.C: 57: date_display_array[3] = temp % 10;
"57
[e = *U + &U _date_display_array * -> -> -> 3 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> % -> _temp `i -> 10 `i `uc ]
[; ;display.C: 58: date_display_array[3] = date_display_array[3] + 48;
"58
[e = *U + &U _date_display_array * -> -> -> 3 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> + -> *U + &U _date_display_array * -> -> -> 3 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux `i -> 48 `i `uc ]
[; ;display.C: 59: date_display_array[4] = temp/10;
"59
[e = *U + &U _date_display_array * -> -> -> 4 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> / -> _temp `i -> 10 `i `uc ]
[; ;display.C: 60: date_display_array[4] = date_display_array[4] + 48;
"60
[e = *U + &U _date_display_array * -> -> -> 4 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> + -> *U + &U _date_display_array * -> -> -> 4 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux `i -> 48 `i `uc ]
[; ;display.C: 61: date_display_array[5] = '-';
"61
[e = *U + &U _date_display_array * -> -> -> 5 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 45 `ui `uc ]
[; ;display.C: 63: temp = day;
"63
[e = _temp _day ]
[; ;display.C: 64: date_display_array[6] = temp % 10;
"64
[e = *U + &U _date_display_array * -> -> -> 6 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> % -> _temp `i -> 10 `i `uc ]
[; ;display.C: 65: date_display_array[6] = date_display_array[6] + 48;
"65
[e = *U + &U _date_display_array * -> -> -> 6 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> + -> *U + &U _date_display_array * -> -> -> 6 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux `i -> 48 `i `uc ]
[; ;display.C: 66: date_display_array[7] = temp/10;
"66
[e = *U + &U _date_display_array * -> -> -> 7 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> / -> _temp `i -> 10 `i `uc ]
[; ;display.C: 67: date_display_array[7] = date_display_array[7] + 48;
"67
[e = *U + &U _date_display_array * -> -> -> 7 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> + -> *U + &U _date_display_array * -> -> -> 7 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux `i -> 48 `i `uc ]
[; ;display.C: 69: display_date();
"69
[e ( _display_date ..  ]
[; ;display.C: 71: date_flag = 0;
"71
[e = _date_flag -> -> 0 `i `uc ]
"72
}
[e :U 73 ]
[; ;display.C: 72: }
[; ;display.C: 73: if(eagle_flag == 1)
"73
[e $ ! == -> _eagle_flag `i -> 1 `i 74  ]
[; ;display.C: 74: {
"74
{
[; ;display.C: 75: date_display_array[7] = ' ';
"75
[e = *U + &U _date_display_array * -> -> -> 7 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 32 `ui `uc ]
[; ;display.C: 76: date_display_array[6] = 'E';
"76
[e = *U + &U _date_display_array * -> -> -> 6 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 69 `ui `uc ]
[; ;display.C: 77: date_display_array[5] = 'A';
"77
[e = *U + &U _date_display_array * -> -> -> 5 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 65 `ui `uc ]
[; ;display.C: 78: date_display_array[4] = 'G';
"78
[e = *U + &U _date_display_array * -> -> -> 4 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 71 `ui `uc ]
[; ;display.C: 79: date_display_array[3] = 'L';
"79
[e = *U + &U _date_display_array * -> -> -> 3 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 76 `ui `uc ]
[; ;display.C: 80: date_display_array[2] = 'E';
"80
[e = *U + &U _date_display_array * -> -> -> 2 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 69 `ui `uc ]
[; ;display.C: 81: date_display_array[1] = ' ';
"81
[e = *U + &U _date_display_array * -> -> -> 1 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 32 `ui `uc ]
[; ;display.C: 82: date_display_array[0] = ' ';
"82
[e = *U + &U _date_display_array * -> -> -> 0 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 32 `ui `uc ]
[; ;display.C: 84: display_date();
"84
[e ( _display_date ..  ]
[; ;display.C: 86: eagle_flag = 0;
"86
[e = _eagle_flag -> -> 0 `i `uc ]
"87
}
[e :U 74 ]
[; ;display.C: 87: }
[; ;display.C: 88: }
"88
[e :UE 67 ]
}
"90
[v _display_secs `(v ~T0 @X0 1 ef ]
"91
{
[; ;display.C: 90: void display_secs()
[; ;display.C: 91: {
[e :U _display_secs ]
[f ]
"92
[v _Mask `us ~T0 @X0 1 a ]
[v _bits `us ~T0 @X0 1 a ]
[v _Flag `us ~T0 @X0 1 a ]
[v _digit `us ~T0 @X0 1 a ]
[v _number `us ~T0 @X0 1 a ]
[; ;display.C: 92: unsigned short Mask, bits, Flag, digit, number;
[; ;display.C: 93: for(digit = 0; digit < 2; digit++)
"93
{
[e = _digit -> -> 0 `i `us ]
[e $ < -> _digit `ui -> -> 2 `i `ui 76  ]
[e $U 77  ]
"94
[e :U 76 ]
[; ;display.C: 94: {
{
[; ;display.C: 96: number = display[time_display_array[digit]];
"96
[e = _number -> *U + &U _display * -> *U + &U _time_display_array * -> _digit `ux -> -> # *U &U _time_display_array `ui `ux `ux -> -> # *U &U _display `ui `ux `us ]
[; ;display.C: 97: Mask = 0x01;
"97
[e = _Mask -> -> 1 `i `us ]
[; ;display.C: 98: for (bits=0; bits<8; bits++)
"98
{
[e = _bits -> -> 0 `i `us ]
[e $ < -> _bits `ui -> -> 8 `i `ui 79  ]
[e $U 80  ]
"99
[e :U 79 ]
[; ;display.C: 99: {
{
[; ;display.C: 100: Flag = number & Mask;
"100
[e = _Flag -> & -> _number `ui -> _Mask `ui `us ]
[; ;display.C: 101: if(Flag == 0)
"101
[e $ ! == -> _Flag `ui -> -> 0 `i `ui 82  ]
[; ;display.C: 102: {
"102
{
[; ;display.C: 103: RB2 = 0;
"103
[e = _RB2 -> -> 0 `i `b ]
[; ;display.C: 104: _delay(1);
"104
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 105: RB3 = 1;
"105
[e = _RB3 -> -> 1 `i `b ]
[; ;display.C: 106: _delay(1);
"106
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 107: RB3 = 0;
"107
[e = _RB3 -> -> 0 `i `b ]
"108
}
[e :U 82 ]
[; ;display.C: 108: }
[; ;display.C: 109: if(Flag > 0)
"109
[e $ ! > -> _Flag `ui -> -> 0 `i `ui 83  ]
[; ;display.C: 110: {
"110
{
[; ;display.C: 111: RB2 = 1;
"111
[e = _RB2 -> -> 1 `i `b ]
[; ;display.C: 112: _delay(1);
"112
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 113: RB3 = 1;
"113
[e = _RB3 -> -> 1 `i `b ]
[; ;display.C: 114: _delay(1);
"114
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 115: RB3 = 0;
"115
[e = _RB3 -> -> 0 `i `b ]
"116
}
[e :U 83 ]
[; ;display.C: 116: }
[; ;display.C: 117: Mask = Mask << 1;
"117
[e = _Mask -> << -> _Mask `ui -> 1 `i `us ]
"118
}
"98
[e ++ _bits -> -> 1 `i `us ]
[e $ < -> _bits `ui -> -> 8 `i `ui 79  ]
[e :U 80 ]
"118
}
"119
}
"93
[e ++ _digit -> -> 1 `i `us ]
[e $ < -> _digit `ui -> -> 2 `i `ui 76  ]
[e :U 77 ]
"119
}
[; ;display.C: 118: }
[; ;display.C: 119: }
[; ;display.C: 121: RB4 = 1;
"121
[e = _RB4 -> -> 1 `i `b ]
[; ;display.C: 122: _delay(1);
"122
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 123: RB4 = 0;
"123
[e = _RB4 -> -> 0 `i `b ]
[; ;display.C: 124: }
"124
[e :UE 75 ]
}
"126
[v _display_mins `(v ~T0 @X0 1 ef ]
"127
{
[; ;display.C: 126: void display_mins()
[; ;display.C: 127: {
[e :U _display_mins ]
[f ]
"128
[v _Mask `us ~T0 @X0 1 a ]
[v _bits `us ~T0 @X0 1 a ]
[v _Flag `us ~T0 @X0 1 a ]
[v _digit `us ~T0 @X0 1 a ]
[v _number `us ~T0 @X0 1 a ]
[; ;display.C: 128: unsigned short Mask, bits, Flag, digit, number;
[; ;display.C: 129: for(digit = 2; digit < 6; digit++)
"129
{
[e = _digit -> -> 2 `i `us ]
[e $ < -> _digit `ui -> -> 6 `i `ui 85  ]
[e $U 86  ]
"130
[e :U 85 ]
[; ;display.C: 130: {
{
[; ;display.C: 132: number = display[time_display_array[digit]];
"132
[e = _number -> *U + &U _display * -> *U + &U _time_display_array * -> _digit `ux -> -> # *U &U _time_display_array `ui `ux `ux -> -> # *U &U _display `ui `ux `us ]
[; ;display.C: 133: Mask = 0x01;
"133
[e = _Mask -> -> 1 `i `us ]
[; ;display.C: 134: for (bits=0; bits<8; bits++)
"134
{
[e = _bits -> -> 0 `i `us ]
[e $ < -> _bits `ui -> -> 8 `i `ui 88  ]
[e $U 89  ]
"135
[e :U 88 ]
[; ;display.C: 135: {
{
[; ;display.C: 136: Flag = number & Mask;
"136
[e = _Flag -> & -> _number `ui -> _Mask `ui `us ]
[; ;display.C: 137: if(Flag == 0)
"137
[e $ ! == -> _Flag `ui -> -> 0 `i `ui 91  ]
[; ;display.C: 138: {
"138
{
[; ;display.C: 139: RB5 = 0;
"139
[e = _RB5 -> -> 0 `i `b ]
[; ;display.C: 140: _delay(1);
"140
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 141: RB6 = 1;
"141
[e = _RB6 -> -> 1 `i `b ]
[; ;display.C: 142: _delay(1);
"142
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 143: RB6 = 0;
"143
[e = _RB6 -> -> 0 `i `b ]
"144
}
[e :U 91 ]
[; ;display.C: 144: }
[; ;display.C: 145: if(Flag > 0)
"145
[e $ ! > -> _Flag `ui -> -> 0 `i `ui 92  ]
[; ;display.C: 146: {
"146
{
[; ;display.C: 147: RB5 = 1;
"147
[e = _RB5 -> -> 1 `i `b ]
[; ;display.C: 148: _delay(1);
"148
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 149: RB6 = 1;
"149
[e = _RB6 -> -> 1 `i `b ]
[; ;display.C: 150: _delay(1);
"150
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 151: RB6 = 0;
"151
[e = _RB6 -> -> 0 `i `b ]
"152
}
[e :U 92 ]
[; ;display.C: 152: }
[; ;display.C: 153: Mask = Mask << 1;
"153
[e = _Mask -> << -> _Mask `ui -> 1 `i `us ]
"154
}
"134
[e ++ _bits -> -> 1 `i `us ]
[e $ < -> _bits `ui -> -> 8 `i `ui 88  ]
[e :U 89 ]
"154
}
"155
}
"129
[e ++ _digit -> -> 1 `i `us ]
[e $ < -> _digit `ui -> -> 6 `i `ui 85  ]
[e :U 86 ]
"155
}
[; ;display.C: 154: }
[; ;display.C: 155: }
[; ;display.C: 157: RB7 = 1;
"157
[e = _RB7 -> -> 1 `i `b ]
[; ;display.C: 158: _delay(1);
"158
[e ( __delay (1 -> -> -> 1 `i `l `ul ]
[; ;display.C: 159: RB7 = 0;
"159
[e = _RB7 -> -> 0 `i `b ]
[; ;display.C: 160: }
"160
[e :UE 84 ]
}
"162
[v _display_date `(v ~T0 @X0 1 ef ]
"163
{
[; ;display.C: 162: void display_date()
[; ;display.C: 163: {
[e :U _display_date ]
[f ]
"164
[v _i `uc ~T0 @X0 1 a ]
[; ;display.C: 164: char i;
[; ;display.C: 165: for(i = 1; i <= 8; i++)
"165
{
[e = _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 8 `i 94  ]
[e $U 95  ]
"166
[e :U 94 ]
[; ;display.C: 166: {
{
[; ;display.C: 167: MAX7219_DisplayChar (i, date_display_array[i-1], 0);
"167
[e ( _MAX7219_DisplayChar (3 , , _i *U + &U _date_display_array * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _date_display_array `ui `ux -> -> 0 `i `uc ]
"168
}
"165
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 8 `i 94  ]
[e :U 95 ]
"168
}
[; ;display.C: 168: }
[; ;display.C: 169: }
"169
[e :UE 93 ]
}
