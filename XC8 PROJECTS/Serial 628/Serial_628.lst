

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Dec 05 17:09:57 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  008C                     	;# 
    48  008E                     	;# 
    49  0092                     	;# 
    50  0098                     	;# 
    51  0099                     	;# 
    52  009A                     	;# 
    53  009B                     	;# 
    54  009C                     	;# 
    55  009D                     	;# 
    56  009F                     	;# 
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  008C                     	;# 
    85  008E                     	;# 
    86  0092                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009F                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  008C                     	;# 
   122  008E                     	;# 
   123  0092                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009F                     	;# 
   131  001F                     _CMCON	set	31
   132  000C                     _PIR1bits	set	12
   133  001A                     _RCREG	set	26
   134  0018                     _RCSTAbits	set	24
   135  0019                     _TXREG	set	25
   136  005F                     _GIE	set	95
   137  005E                     _PEIE	set	94
   138  0030                     _RB0	set	48
   139  0065                     _RCIF	set	101
   140  008E                     _PCON	set	142
   141  0099                     _SPBRG	set	153
   142  0086                     _TRISB	set	134
   143  0098                     _TXSTAbits	set	152
   144  0465                     _RCIE	set	1125
   145                           
   146                           	psect	text0
   147  0000                     __ptext0:	
   148                           ; #config settings
   149                           
   150                           
   151                           	psect	cinit
   152  0011                     start_initialization:	
   153                           ;psect for function _USARTHandleRxInt
   154                           
   155  0011                     __initialization:	
   156                           
   157                           ; Clear objects allocated to COMMON
   158  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   159  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   160                           
   161                           ; Clear objects allocated to BANK0
   162  0013  1383               	bcf	3,7	;select IRP bank0
   163  0014  3020               	movlw	low __pbssBANK0
   164  0015  0084               	movwf	4
   165  0016  3065               	movlw	low (__pbssBANK0+69)
   166  0017  215F               	fcall	clear_ram0
   167  0018                     end_of_initialization:	
   168                           ;End of C runtime variable initialization code
   169                           
   170  0018                     __end_of__initialization:	
   171  0018  0183               	clrf	3
   172  0019  281A               	ljmp	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMMON
   175  0079                     __pbssCOMMON:	
   176  0079                     _UQEnd:	
   177  0079                     	ds	1
   178  007A                     _UQFront:	
   179  007A                     	ds	1
   180                           
   181                           	psect	bssBANK0
   182  0020                     __pbssBANK0:	
   183  0020                     _URBuff:	
   184  0020                     	ds	64
   185  0060                     USARTWriteInt@F659:	
   186  0060                     	ds	5
   187                           
   188                           	psect	clrtext
   189  015F                     clear_ram0:	
   190                           ;	Called with FSR containing the base address, and
   191                           ;	W with the last address+1
   192                           
   193  015F  0064               	clrwdt	;clear the watchdog before getting into this loop
   194  0160                     clrloop0:	
   195  0160  0180               	clrf	0	;clear RAM location pointed to by FSR
   196  0161  0A84               	incf	4,f	;increment pointer
   197  0162  0604               	xorwf	4,w	;XOR with final address
   198  0163  1903               	btfsc	3,2	;have we reached the end yet?
   199  0164  3400               	retlw	0	;all done for this memory range, return
   200  0165  0604               	xorwf	4,w	;XOR again to restore value
   201  0166  2960               	goto	clrloop0	;do the next byte
   202                           
   203                           	psect	cstackCOMMON
   204  0070                     __pcstackCOMMON:	
   205  0070                     ?_USARTWriteChar:	
   206  0070                     ?_USARTHandleRxInt:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0070                     ??_USARTHandleRxInt:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0070                     ?_ISR:	
   213                           ; 0 bytes @ 0x0
   214                           
   215  0070                     ?_main:	
   216                           ; 0 bytes @ 0x0
   217                           
   218  0070                     ?_USARTReadData:	
   219                           ; 0 bytes @ 0x0
   220                           
   221  0070                     ?_USARTDataAvailable:	
   222                           ; 1 bytes @ 0x0
   223                           
   224                           
   225                           ; 1 bytes @ 0x0
   226  0070                     	ds	4
   227  0074                     USARTHandleRxInt@data:	
   228                           
   229                           ; 1 bytes @ 0x4
   230  0074                     	ds	1
   231  0075                     ??_ISR:	
   232                           
   233                           ; 0 bytes @ 0x5
   234  0075                     	ds	4
   235                           
   236                           	psect	cstackBANK0
   237  0065                     __pcstackBANK0:	
   238  0065                     ?_USARTInit:	
   239  0065                     ??_USARTWriteChar:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0065                     ??_USARTReadData:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0065                     ??_USARTDataAvailable:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0065                     USARTWriteChar@ch:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0065                     USARTInit@baud_rate:	
   252                           ; 1 bytes @ 0x0
   253                           
   254                           
   255                           ; 2 bytes @ 0x0
   256  0065                     	ds	1
   257  0066                     USARTReadData@data:	
   258                           
   259                           ; 1 bytes @ 0x1
   260  0066                     	ds	1
   261  0067                     ??_USARTInit:	
   262                           
   263                           ; 0 bytes @ 0x2
   264  0067                     	ds	1
   265  0068                     ??_main:	
   266                           
   267                           ; 0 bytes @ 0x3
   268  0068                     	ds	3
   269  006B                     main@n:	
   270                           
   271                           ; 1 bytes @ 0x6
   272  006B                     	ds	1
   273  006C                     main@count:	
   274                           
   275                           ; 1 bytes @ 0x7
   276  006C                     	ds	1
   277  006D                     main@data:	
   278                           
   279                           ; 1 bytes @ 0x8
   280  006D                     	ds	1
   281                           
   282                           	psect	maintext
   283  001A                     __pmaintext:	
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 10 in file "E:\Study Material\XC8 PROJECTS\Serial 628\SerTest.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;  data            1    8[BANK0 ] unsigned char 
   294 ;;  n               1    6[BANK0 ] unsigned char 
   295 ;;  count           1    7[BANK0 ] unsigned char 
   296 ;; Return value:  Size  Location     Type
   297 ;;		None               void
   298 ;; Registers used:
   299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 17F/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   305 ;;      Params:         0       0       0       0
   306 ;;      Locals:         0       3       0       0
   307 ;;      Temps:          0       3       0       0
   308 ;;      Totals:         0       6       0       0
   309 ;;Total ram usage:        6 bytes
   310 ;; Hardware stack levels required when called:    3
   311 ;; This function calls:
   312 ;;		_USARTDataAvailable
   313 ;;		_USARTInit
   314 ;;		_USARTReadData
   315 ;;		_USARTWriteChar
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _main
   323  001A                     _main:	
   324                           
   325                           ;SerTest.c: 12: PCON = 0x0B;
   326                           
   327                           ;incstack = 0
   328                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   329  001A  300B               	movlw	11
   330  001B  1683               	bsf	3,5	;RP0=1, select bank1
   331  001C  1303               	bcf	3,6	;RP1=0, select bank1
   332  001D  008E               	movwf	14	;volatile
   333                           
   334                           ;SerTest.c: 13: CMCON = 0x07;
   335  001E  3007               	movlw	7
   336  001F  1283               	bcf	3,5	;RP0=0, select bank0
   337  0020  1303               	bcf	3,6	;RP1=0, select bank0
   338  0021  009F               	movwf	31	;volatile
   339                           
   340                           ;SerTest.c: 15: TRISB = 0x02;
   341  0022  3002               	movlw	2
   342  0023  1683               	bsf	3,5	;RP0=1, select bank1
   343  0024  1303               	bcf	3,6	;RP1=0, select bank1
   344  0025  0086               	movwf	6	;volatile
   345                           
   346                           ;SerTest.c: 16: char count;
   347                           ;SerTest.c: 17: for(count = 0; count < 5; count++)
   348  0026  1283               	bcf	3,5	;RP0=0, select bank0
   349  0027  1303               	bcf	3,6	;RP1=0, select bank0
   350  0028  01EC               	clrf	main@count
   351  0029  3005               	movlw	5
   352  002A  026C               	subwf	main@count,w
   353  002B  1803               	btfsc	3,0
   354  002C  2855               	goto	l1098
   355  002D                     l151:	
   356                           
   357                           ;SerTest.c: 18: {
   358                           ;SerTest.c: 19: RB0 = 1;
   359  002D  1406               	bsf	6,0	;volatile
   360                           
   361                           ;SerTest.c: 20: _delay(1000000);
   362  002E  3006               	movlw	6
   363  002F  00EA               	movwf	??_main+2
   364  0030  3013               	movlw	19
   365  0031  00E9               	movwf	??_main+1
   366  0032  30B1               	movlw	177
   367  0033  00E8               	movwf	??_main
   368  0034                     u757:	
   369  0034  0BE8               	decfsz	??_main,f
   370  0035  2834               	goto	u757
   371  0036  0BE9               	decfsz	??_main+1,f
   372  0037  2834               	goto	u757
   373  0038  0BEA               	decfsz	??_main+2,f
   374  0039  2834               	goto	u757
   375  003A  283B               	nop2
   376                           
   377                           ;SerTest.c: 21: RB0 = 0;
   378  003B  1283               	bcf	3,5	;RP0=0, select bank0
   379  003C  1303               	bcf	3,6	;RP1=0, select bank0
   380  003D  1006               	bcf	6,0	;volatile
   381                           
   382                           ;SerTest.c: 22: _delay(1000000);
   383  003E  3006               	movlw	6
   384  003F  00EA               	movwf	??_main+2
   385  0040  3013               	movlw	19
   386  0041  00E9               	movwf	??_main+1
   387  0042  30B1               	movlw	177
   388  0043  00E8               	movwf	??_main
   389  0044                     u767:	
   390  0044  0BE8               	decfsz	??_main,f
   391  0045  2844               	goto	u767
   392  0046  0BE9               	decfsz	??_main+1,f
   393  0047  2844               	goto	u767
   394  0048  0BEA               	decfsz	??_main+2,f
   395  0049  2844               	goto	u767
   396  004A  284B               	nop2
   397  004B  3001               	movlw	1
   398  004C  1283               	bcf	3,5	;RP0=0, select bank0
   399  004D  1303               	bcf	3,6	;RP1=0, select bank0
   400  004E  00E8               	movwf	??_main
   401  004F  0868               	movf	??_main,w
   402  0050  07EC               	addwf	main@count,f
   403  0051  3005               	movlw	5
   404  0052  026C               	subwf	main@count,w
   405  0053  1C03               	skipc
   406  0054  282D               	goto	l151
   407  0055                     l1098:	
   408                           
   409                           ;SerTest.c: 23: }
   410                           ;SerTest.c: 26: USARTInit(9600);
   411  0055  3080               	movlw	128
   412  0056  00E5               	movwf	USARTInit@baud_rate
   413  0057  3025               	movlw	37
   414  0058  00E6               	movwf	USARTInit@baud_rate+1
   415  0059  2076               	fcall	_USARTInit
   416  005A                     l1100:	
   417                           ;SerTest.c: 28: while(1)
   418                           
   419                           
   420                           ;SerTest.c: 29: {
   421                           ;SerTest.c: 31: uint8_t n= USARTDataAvailable();
   422  005A  2125               	fcall	_USARTDataAvailable
   423  005B  1283               	bcf	3,5	;RP0=0, select bank0
   424  005C  1303               	bcf	3,6	;RP1=0, select bank0
   425  005D  00E8               	movwf	??_main
   426  005E  0868               	movf	??_main,w
   427  005F  00EB               	movwf	main@n
   428                           
   429                           ;SerTest.c: 34: if(n!=0)
   430  0060  086B               	movf	main@n,w
   431  0061  1903               	btfsc	3,2
   432  0062  285A               	goto	l1100
   433                           
   434                           ;SerTest.c: 35: {
   435                           ;SerTest.c: 37: char data=USARTReadData();
   436  0063  2101               	fcall	_USARTReadData
   437  0064  1283               	bcf	3,5	;RP0=0, select bank0
   438  0065  1303               	bcf	3,6	;RP1=0, select bank0
   439  0066  00E8               	movwf	??_main
   440  0067  0868               	movf	??_main,w
   441  0068  00ED               	movwf	main@data
   442                           
   443                           ;SerTest.c: 39: if(data == 'R')
   444  0069  086D               	movf	main@data,w
   445  006A  3A52               	xorlw	82
   446  006B  1903               	btfsc	3,2
   447                           
   448                           ;SerTest.c: 40: RB0 = 1;
   449  006C  1406               	bsf	6,0	;volatile
   450                           
   451                           ;SerTest.c: 41: if(data == 'B')
   452  006D  086D               	movf	main@data,w
   453  006E  3A42               	xorlw	66
   454  006F  1903               	btfsc	3,2
   455                           
   456                           ;SerTest.c: 42: RB0 = 0;
   457  0070  1006               	bcf	6,0	;volatile
   458                           
   459                           ;SerTest.c: 45: USARTWriteChar(data);
   460  0071  086D               	movf	main@data,w
   461  0072  2167               	fcall	_USARTWriteChar
   462  0073  1283               	bcf	3,5	;RP0=0, select bank0
   463  0074  1303               	bcf	3,6	;RP1=0, select bank0
   464  0075  285A               	goto	l1100
   465  0076                     __end_of_main:	
   466                           
   467                           	psect	text1
   468  0167                     __ptext1:	
   469 ;; *************** function _USARTWriteChar *****************
   470 ;; Defined at:
   471 ;;		line 77 in file "E:\Study Material\XC8 PROJECTS\Serial 628\usart_pic16.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  ch              1    wreg     unsigned char 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  ch              1    0[BANK0 ] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;		None               void
   478 ;; Registers used:
   479 ;;		wreg
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   485 ;;      Params:         0       0       0       0
   486 ;;      Locals:         0       1       0       0
   487 ;;      Temps:          0       0       0       0
   488 ;;      Totals:         0       1       0       0
   489 ;;Total ram usage:        1 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    2
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;;		_USARTWriteString
   497 ;;		_USARTWriteLine
   498 ;;		_USARTWriteInt
   499 ;;		_USARTGotoNewLine
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _USARTWriteChar
   505  0167                     _USARTWriteChar:	
   506                           
   507                           ;incstack = 0
   508                           ; Regs used in _USARTWriteChar: [wreg]
   509                           ;USARTWriteChar@ch stored from wreg
   510  0167  1283               	bcf	3,5	;RP0=0, select bank0
   511  0168  1303               	bcf	3,6	;RP1=0, select bank0
   512  0169  00E5               	movwf	USARTWriteChar@ch
   513  016A                     l36:	
   514                           ;usart_pic16.c: 79: while(!PIR1bits.TXIF);
   515                           
   516  016A  1E0C               	btfss	12,4	;volatile
   517  016B  296A               	goto	l36
   518                           
   519                           ;usart_pic16.c: 81: TXREG=ch;
   520  016C  0865               	movf	USARTWriteChar@ch,w
   521  016D  0099               	movwf	25	;volatile
   522  016E  0008               	return
   523  016F                     __end_of_USARTWriteChar:	
   524                           
   525                           	psect	text2
   526  0101                     __ptext2:	
   527 ;; *************** function _USARTReadData *****************
   528 ;; Defined at:
   529 ;;		line 125 in file "E:\Study Material\XC8 PROJECTS\Serial 628\usart_pic16.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  data            1    1[BANK0 ] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      unsigned char 
   536 ;; Registers used:
   537 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   543 ;;      Params:         0       0       0       0
   544 ;;      Locals:         0       1       0       0
   545 ;;      Temps:          0       1       0       0
   546 ;;      Totals:         0       2       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    2
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;;		_USARTReadBuffer
   555 ;;		_USARTFlushBuffer
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _USARTReadData
   561  0101                     _USARTReadData:	
   562                           
   563                           ;usart_pic16.c: 127: char data;
   564                           ;usart_pic16.c: 130: if(UQFront==-1)
   565                           
   566                           ;incstack = 0
   567                           ; Regs used in _USARTReadData: [wreg-fsr0h+status,2+status,0]
   568  0101  087A               	movf	_UQFront,w	;volatile
   569  0102  3AFF               	xorlw	-1
   570  0103  1D03               	skipz
   571  0104  2907               	goto	l970
   572                           
   573                           ;usart_pic16.c: 131: return 0;
   574  0105  3000               	movlw	0
   575  0106  0008               	return
   576  0107                     l970:	
   577                           
   578                           ;usart_pic16.c: 133: data=URBuff[UQFront];
   579  0107  087A               	movf	_UQFront,w
   580  0108  3E20               	addlw	_URBuff& (0+255)
   581  0109  0084               	movwf	4
   582  010A  1383               	bcf	3,7	;select IRP bank0
   583  010B  0800               	movf	0,w
   584  010C  1283               	bcf	3,5	;RP0=0, select bank0
   585  010D  1303               	bcf	3,6	;RP1=0, select bank0
   586  010E  00E5               	movwf	??_USARTReadData
   587  010F  0865               	movf	??_USARTReadData,w
   588  0110  00E6               	movwf	USARTReadData@data
   589                           
   590                           ;usart_pic16.c: 135: if(UQFront==UQEnd)
   591  0111  087A               	movf	_UQFront,w	;volatile
   592  0112  0679               	xorwf	_UQEnd,w	;volatile
   593  0113  1D03               	skipz
   594  0114  291B               	goto	l976
   595                           
   596                           ;usart_pic16.c: 136: {
   597                           ;usart_pic16.c: 139: UQFront=UQEnd=-1;
   598  0115  30FF               	movlw	-1
   599  0116  00F9               	movwf	_UQEnd	;volatile
   600  0117  00E5               	movwf	??_USARTReadData
   601  0118  0865               	movf	??_USARTReadData,w
   602  0119  00FA               	movwf	_UQFront	;volatile
   603                           
   604                           ;usart_pic16.c: 140: }
   605  011A  2923               	goto	l982
   606  011B                     l976:	
   607                           
   608                           ;usart_pic16.c: 141: else
   609                           ;usart_pic16.c: 142: {
   610                           ;usart_pic16.c: 143: UQFront++;
   611  011B  3001               	movlw	1
   612  011C  00E5               	movwf	??_USARTReadData
   613  011D  0865               	movf	??_USARTReadData,w
   614  011E  07FA               	addwf	_UQFront,f	;volatile
   615                           
   616                           ;usart_pic16.c: 145: if(UQFront==64)
   617  011F  087A               	movf	_UQFront,w	;volatile
   618  0120  3A40               	xorlw	64
   619  0121  1903               	btfsc	3,2
   620                           
   621                           ;usart_pic16.c: 146: UQFront=0;
   622  0122  01FA               	clrf	_UQFront	;volatile
   623  0123                     l982:	
   624                           
   625                           ;usart_pic16.c: 147: }
   626                           ;usart_pic16.c: 149: return data;
   627  0123  0866               	movf	USARTReadData@data,w
   628  0124  0008               	return
   629  0125                     __end_of_USARTReadData:	
   630                           
   631                           	psect	text3
   632  0076                     __ptext3:	
   633 ;; *************** function _USARTInit *****************
   634 ;; Defined at:
   635 ;;		line 31 in file "E:\Study Material\XC8 PROJECTS\Serial 628\usart_pic16.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  baud_rate       2    0[BANK0 ] unsigned int 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;		None               void
   642 ;; Registers used:
   643 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   649 ;;      Params:         0       2       0       0
   650 ;;      Locals:         0       0       0       0
   651 ;;      Temps:          0       1       0       0
   652 ;;      Totals:         0       3       0       0
   653 ;;Total ram usage:        3 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    2
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _USARTInit
   665  0076                     _USARTInit:	
   666                           
   667                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
   671  0076  30FF               	movlw	-1
   672  0077  00F9               	movwf	_UQEnd	;volatile
   673  0078  1283               	bcf	3,5	;RP0=0, select bank0
   674  0079  1303               	bcf	3,6	;RP1=0, select bank0
   675  007A  00E7               	movwf	??_USARTInit
   676  007B  0867               	movf	??_USARTInit,w
   677  007C  00FA               	movwf	_UQFront	;volatile
   678                           
   679                           ;usart_pic16.c: 38: switch(baud_rate)
   680  007D  2889               	goto	l934
   681  007E                     l924:	
   682                           ;usart_pic16.c: 39: {
   683                           ;usart_pic16.c: 40: case 9600:
   684                           
   685                           
   686                           ;usart_pic16.c: 41: SPBRG=25;
   687  007E  3019               	movlw	25
   688  007F  2885               	goto	L3
   689  0080                     l926:	
   690                           ;usart_pic16.c: 43: case 19200:
   691                           
   692                           ;usart_pic16.c: 42: break;
   693                           
   694                           
   695                           ;usart_pic16.c: 44: SPBRG=129;
   696  0080  3081               	movlw	129
   697  0081  2885               	goto	L3
   698  0082                     l928:	
   699                           ;usart_pic16.c: 46: case 38400:
   700                           
   701                           ;usart_pic16.c: 45: break;
   702                           
   703                           
   704                           ;usart_pic16.c: 47: SPBRG=64;
   705  0082  3040               	movlw	64
   706  0083  2885               	goto	L3
   707  0084                     l930:	
   708                           ;usart_pic16.c: 49: case 57600:
   709                           
   710                           ;usart_pic16.c: 48: break;
   711                           
   712                           
   713                           ;usart_pic16.c: 50: SPBRG=42;
   714  0084  302A               	movlw	42
   715  0085                     L3:	
   716  0085  1683               	bsf	3,5	;RP0=1, select bank1
   717  0086  1303               	bcf	3,6	;RP1=0, select bank1
   718  0087  0099               	movwf	25	;volatile
   719                           
   720                           ;usart_pic16.c: 52: }
   721                           
   722                           ;usart_pic16.c: 51: break;
   723  0088  28AC               	goto	l29
   724  0089                     l934:	
   725                           
   726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
   727                           ; Switch size 1, requested type "space"
   728                           ; Number of cases is 4, Range of values is 37 to 225
   729                           ; switch strategies available:
   730                           ; Name         Instructions Cycles
   731                           ; simple_byte           13     7 (average)
   732                           ; direct_byte          198     9 (fixed)
   733                           ; jumptable            263     9 (fixed)
   734                           ;	Chosen strategy is simple_byte
   735  0089  1283               	bcf	3,5	;RP0=0, select bank0
   736  008A  0866               	movf	USARTInit@baud_rate+1,w
   737  008B  3A25               	xorlw	37	; case 37
   738  008C  1903               	skipnz
   739  008D  2898               	goto	l1278
   740  008E  3A6E               	xorlw	110	; case 75
   741  008F  1903               	skipnz
   742  0090  289D               	goto	l1280
   743  0091  3ADD               	xorlw	221	; case 150
   744  0092  1903               	skipnz
   745  0093  28A2               	goto	l1282
   746  0094  3A77               	xorlw	119	; case 225
   747  0095  1903               	skipnz
   748  0096  28A7               	goto	l1284
   749  0097  28AC               	goto	l29
   750  0098                     l1278:	
   751                           
   752                           ; Switch size 1, requested type "space"
   753                           ; Number of cases is 1, Range of values is 128 to 128
   754                           ; switch strategies available:
   755                           ; Name         Instructions Cycles
   756                           ; simple_byte            4     3 (average)
   757                           ; direct_byte           10     9 (fixed)
   758                           ; jumptable            263     9 (fixed)
   759                           ;	Chosen strategy is simple_byte
   760  0098  0865               	movf	USARTInit@baud_rate,w
   761  0099  3A80               	xorlw	128	; case 128
   762  009A  1903               	skipnz
   763  009B  287E               	goto	l924
   764  009C  28AC               	goto	l29
   765  009D                     l1280:	
   766                           
   767                           ; Switch size 1, requested type "space"
   768                           ; Number of cases is 1, Range of values is 0 to 0
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte            4     3 (average)
   772                           ; direct_byte            7     6 (fixed)
   773                           ; jumptable            260     6 (fixed)
   774                           ;	Chosen strategy is simple_byte
   775  009D  0865               	movf	USARTInit@baud_rate,w
   776  009E  3A00               	xorlw	0	; case 0
   777  009F  1903               	skipnz
   778  00A0  2880               	goto	l926
   779  00A1  28AC               	goto	l29
   780  00A2                     l1282:	
   781                           
   782                           ; Switch size 1, requested type "space"
   783                           ; Number of cases is 1, Range of values is 0 to 0
   784                           ; switch strategies available:
   785                           ; Name         Instructions Cycles
   786                           ; simple_byte            4     3 (average)
   787                           ; direct_byte            7     6 (fixed)
   788                           ; jumptable            260     6 (fixed)
   789                           ;	Chosen strategy is simple_byte
   790  00A2  0865               	movf	USARTInit@baud_rate,w
   791  00A3  3A00               	xorlw	0	; case 0
   792  00A4  1903               	skipnz
   793  00A5  2882               	goto	l928
   794  00A6  28AC               	goto	l29
   795  00A7                     l1284:	
   796                           
   797                           ; Switch size 1, requested type "space"
   798                           ; Number of cases is 1, Range of values is 0 to 0
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte            4     3 (average)
   802                           ; direct_byte            7     6 (fixed)
   803                           ; jumptable            260     6 (fixed)
   804                           ;	Chosen strategy is simple_byte
   805  00A7  0865               	movf	USARTInit@baud_rate,w
   806  00A8  3A00               	xorlw	0	; case 0
   807  00A9  1903               	skipnz
   808  00AA  2884               	goto	l930
   809  00AB  28AC               	goto	l29
   810  00AC                     l29:	
   811                           
   812                           ;usart_pic16.c: 59: TXSTAbits.TX9=0;
   813  00AC  1683               	bsf	3,5	;RP0=1, select bank1
   814  00AD  1303               	bcf	3,6	;RP1=0, select bank1
   815  00AE  1318               	bcf	24,6	;volatile
   816                           
   817                           ;usart_pic16.c: 60: TXSTAbits.TXEN=1;
   818  00AF  1698               	bsf	24,5	;volatile
   819                           
   820                           ;usart_pic16.c: 61: TXSTAbits.SYNC=0;
   821  00B0  1218               	bcf	24,4	;volatile
   822                           
   823                           ;usart_pic16.c: 62: TXSTAbits.BRGH=1;
   824  00B1  1518               	bsf	24,2	;volatile
   825                           
   826                           ;usart_pic16.c: 65: RCSTAbits.SPEN=1;
   827  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   828  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   829  00B4  1798               	bsf	24,7	;volatile
   830                           
   831                           ;usart_pic16.c: 66: RCSTAbits.RX9=0;
   832  00B5  1318               	bcf	24,6	;volatile
   833                           
   834                           ;usart_pic16.c: 67: RCSTAbits.CREN=1;
   835  00B6  1618               	bsf	24,4	;volatile
   836                           
   837                           ;usart_pic16.c: 68: RCSTAbits.ADDEN=0;
   838  00B7  1198               	bcf	24,3	;volatile
   839                           
   840                           ;usart_pic16.c: 71: RCIE=1;
   841  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   842  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   843  00BA  168C               	bsf	12,5	;volatile
   844                           
   845                           ;usart_pic16.c: 72: PEIE=1;
   846  00BB  170B               	bsf	11,6	;volatile
   847                           
   848                           ;usart_pic16.c: 74: (GIE = 1);
   849  00BC  178B               	bsf	11,7	;volatile
   850  00BD  0008               	return
   851  00BE                     __end_of_USARTInit:	
   852                           
   853                           	psect	text4
   854  0125                     __ptext4:	
   855 ;; *************** function _USARTDataAvailable *****************
   856 ;; Defined at:
   857 ;;		line 152 in file "E:\Study Material\XC8 PROJECTS\Serial 628\usart_pic16.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      unsigned char 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   871 ;;      Params:         0       0       0       0
   872 ;;      Locals:         0       0       0       0
   873 ;;      Temps:          0       1       0       0
   874 ;;      Totals:         0       1       0       0
   875 ;;Total ram usage:        1 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    2
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;;		_USARTFlushBuffer
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           
   887                           ;psect for function _USARTDataAvailable
   888  0125                     _USARTDataAvailable:	
   889                           
   890                           ;usart_pic16.c: 154: if(UQFront==-1) return 0;
   891                           
   892                           ;incstack = 0
   893                           ; Regs used in _USARTDataAvailable: [wreg+status,2+status,0]
   894  0125  087A               	movf	_UQFront,w	;volatile
   895  0126  3AFF               	xorlw	-1
   896  0127  1D03               	skipz
   897  0128  292B               	goto	l992
   898  0129  3000               	movlw	0
   899  012A  0008               	return
   900  012B                     l992:	
   901                           
   902                           ;usart_pic16.c: 155: if(UQFront<UQEnd)
   903  012B  087A               	movf	_UQFront,w	;volatile
   904  012C  3A80               	xorlw	128
   905  012D  1283               	bcf	3,5	;RP0=0, select bank0
   906  012E  1303               	bcf	3,6	;RP1=0, select bank0
   907  012F  00E5               	movwf	??_USARTDataAvailable
   908  0130  0879               	movf	_UQEnd,w	;volatile
   909  0131  3A80               	xorlw	128
   910  0132  02E5               	subwf	??_USARTDataAvailable,f
   911  0133  1803               	skipnc
   912  0134  293A               	goto	l1000
   913                           
   914                           ;usart_pic16.c: 156: return(UQEnd-UQFront+1);
   915  0135  037A               	decf	_UQFront,w	;volatile
   916  0136  3AFF               	xorlw	255
   917  0137  0779               	addwf	_UQEnd,w	;volatile
   918  0138  3E01               	addlw	1
   919  0139  0008               	return
   920  013A                     l1000:	
   921                           
   922                           ;usart_pic16.c: 157: else if(UQFront>UQEnd)
   923  013A  0879               	movf	_UQEnd,w	;volatile
   924  013B  3A80               	xorlw	128
   925  013C  00E5               	movwf	??_USARTDataAvailable
   926  013D  087A               	movf	_UQFront,w	;volatile
   927  013E  3A80               	xorlw	128
   928  013F  02E5               	subwf	??_USARTDataAvailable,f
   929  0140  1803               	skipnc
   930  0141  2947               	goto	l1008
   931                           
   932                           ;usart_pic16.c: 158: return (64-UQFront+UQEnd+1);
   933  0142  037A               	decf	_UQFront,w	;volatile
   934  0143  3AFF               	xorlw	255
   935  0144  0779               	addwf	_UQEnd,w	;volatile
   936  0145  3E41               	addlw	65
   937  0146  0008               	return
   938  0147                     l1008:	
   939                           
   940                           ;usart_pic16.c: 159: else
   941                           ;usart_pic16.c: 160: return 1;
   942  0147  3001               	movlw	1
   943  0148  0008               	return
   944  0149                     __end_of_USARTDataAvailable:	
   945                           
   946                           	psect	text5
   947  0149                     __ptext5:	
   948 ;; *************** function _ISR *****************
   949 ;; Defined at:
   950 ;;		line 6 in file "E:\Study Material\XC8 PROJECTS\Serial 628\isr.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;		None               void
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   964 ;;      Params:         0       0       0       0
   965 ;;      Locals:         0       0       0       0
   966 ;;      Temps:          4       0       0       0
   967 ;;      Totals:         4       0       0       0
   968 ;;Total ram usage:        4 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		_USARTHandleRxInt
   973 ;; This function is called by:
   974 ;;		Interrupt level 1
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _ISR
   980  0149                     _ISR:	
   981                           
   982                           ;isr.c: 8: if (RCIE && RCIF) {
   983  0149  1683               	bsf	3,5	;RP0=1, select bank1
   984  014A  1303               	bcf	3,6	;RP1=0, select bank1
   985  014B  1E8C               	btfss	12,5	;volatile
   986  014C  2952               	goto	i1l124
   987  014D  1283               	bcf	3,5	;RP0=0, select bank0
   988  014E  1303               	bcf	3,6	;RP1=0, select bank0
   989  014F  1E8C               	btfss	12,5	;volatile
   990  0150  2952               	goto	i1l124
   991                           
   992                           ;isr.c: 9: USARTHandleRxInt();
   993  0151  20BE               	fcall	_USARTHandleRxInt
   994  0152                     i1l124:	
   995                           ;isr.c: 10: return;
   996                           
   997  0152  0878               	movf	??_ISR+3,w
   998  0153  1283               	bcf	3,5	;RP0=0, select bank0
   999  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0155  00FF               	movwf	127
  1001  0156  0877               	movf	??_ISR+2,w
  1002  0157  008A               	movwf	10
  1003  0158  0876               	movf	??_ISR+1,w
  1004  0159  0084               	movwf	4
  1005  015A  0E75               	swapf	??_ISR^(0+-128),w
  1006  015B  0083               	movwf	3
  1007  015C  0EFE               	swapf	126,f
  1008  015D  0E7E               	swapf	126,w
  1009  015E  0009               	retfie
  1010  015F                     __end_of_ISR:	
  1011                           
  1012                           	psect	intentry
  1013  0004                     __pintentry:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1016                           
  1017  0004                     interrupt_function:	
  1018  007E                     saved_w	set	btemp
  1019  0004  00FE               	movwf	btemp
  1020  0005  0E03               	swapf	3,w
  1021  0006  00F5               	movwf	??_ISR
  1022  0007  0804               	movf	4,w
  1023  0008  00F6               	movwf	??_ISR+1
  1024  0009  080A               	movf	10,w
  1025  000A  00F7               	movwf	??_ISR+2
  1026  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1027  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1028  000D  087F               	movf	btemp+1,w
  1029  000E  00F8               	movwf	??_ISR+3
  1030  000F  2949               	ljmp	_ISR
  1031                           
  1032                           	psect	text6
  1033  00BE                     __ptext6:	
  1034 ;; *************** function _USARTHandleRxInt *****************
  1035 ;; Defined at:
  1036 ;;		line 101 in file "E:\Study Material\XC8 PROJECTS\Serial 628\usart_pic16.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  data            1    4[COMMON] unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;		None               void
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1050 ;;      Params:         0       0       0       0
  1051 ;;      Locals:         1       0       0       0
  1052 ;;      Temps:          4       0       0       0
  1053 ;;      Totals:         5       0       0       0
  1054 ;;Total ram usage:        5 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_ISR
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _USARTHandleRxInt
  1065  00BE                     _USARTHandleRxInt:	
  1066                           
  1067                           ;usart_pic16.c: 104: char data=RCREG;
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _USARTHandleRxInt: [wreg-fsr0h+status,2+status,0]
  1071  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1072  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1073  00C0  081A               	movf	26,w	;volatile
  1074  00C1  00F0               	movwf	??_USARTHandleRxInt
  1075  00C2  0870               	movf	??_USARTHandleRxInt,w
  1076  00C3  00F4               	movwf	USARTHandleRxInt@data
  1077                           
  1078                           ;usart_pic16.c: 107: if(((UQEnd==64-1) && UQFront==0) || ((UQEnd+1)==UQFront))
  1079  00C4  0879               	movf	_UQEnd,w	;volatile
  1080  00C5  3A3F               	xorlw	63
  1081  00C6  1903               	btfsc	3,2
  1082  00C7  087A               	movf	_UQFront,w	;volatile
  1083  00C8  1903               	btfsc	3,2
  1084  00C9  28E1               	goto	i1l664
  1085  00CA  087A               	movf	_UQFront,w	;volatile
  1086  00CB  00F0               	movwf	??_USARTHandleRxInt
  1087  00CC  01F1               	clrf	??_USARTHandleRxInt+1
  1088  00CD  1BF0               	btfsc	??_USARTHandleRxInt,7
  1089  00CE  03F1               	decf	??_USARTHandleRxInt+1,f
  1090  00CF  3001               	movlw	1
  1091  00D0  0779               	addwf	_UQEnd,w	;volatile
  1092  00D1  00F2               	movwf	??_USARTHandleRxInt+2
  1093  00D2  01F3               	clrf	??_USARTHandleRxInt+3
  1094  00D3  1803               	skipnc
  1095  00D4  0AF3               	incf	??_USARTHandleRxInt+3,f
  1096  00D5  1BF9               	btfsc	_UQEnd,7	;volatile
  1097  00D6  03F3               	decf	??_USARTHandleRxInt+3,f
  1098  00D7  0871               	movf	??_USARTHandleRxInt+1,w
  1099  00D8  0673               	xorwf	??_USARTHandleRxInt+3,w
  1100  00D9  1D03               	skipz
  1101  00DA  28DD               	goto	u6_25
  1102  00DB  0870               	movf	??_USARTHandleRxInt,w
  1103  00DC  0672               	xorwf	??_USARTHandleRxInt+2,w
  1104  00DD                     u6_25:	
  1105  00DD  1D03               	skipz
  1106  00DE  28E9               	goto	i1l670
  1107  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00E1                     i1l664:	
  1110                           
  1111                           ;usart_pic16.c: 108: {
  1112                           ;usart_pic16.c: 110: UQFront++;
  1113  00E1  3001               	movlw	1
  1114  00E2  00F0               	movwf	??_USARTHandleRxInt
  1115  00E3  0870               	movf	??_USARTHandleRxInt,w
  1116  00E4  07FA               	addwf	_UQFront,f	;volatile
  1117                           
  1118                           ;usart_pic16.c: 111: if(UQFront==64) UQFront=0;
  1119  00E5  087A               	movf	_UQFront,w	;volatile
  1120  00E6  3A40               	xorlw	64
  1121  00E7  1903               	btfsc	3,2
  1122  00E8  01FA               	clrf	_UQFront	;volatile
  1123  00E9                     i1l670:	
  1124                           
  1125                           ;usart_pic16.c: 112: }
  1126                           ;usart_pic16.c: 114: if(UQEnd==64-1)
  1127  00E9  0879               	movf	_UQEnd,w	;volatile
  1128  00EA  3A3F               	xorlw	63
  1129  00EB  1D03               	skipz
  1130  00EC  28EF               	goto	i1l674
  1131                           
  1132                           ;usart_pic16.c: 115: UQEnd=0;
  1133  00ED  01F9               	clrf	_UQEnd	;volatile
  1134  00EE  28F3               	goto	i1l676
  1135  00EF                     i1l674:	
  1136                           
  1137                           ;usart_pic16.c: 116: else
  1138                           ;usart_pic16.c: 117: UQEnd++;
  1139  00EF  3001               	movlw	1
  1140  00F0  00F0               	movwf	??_USARTHandleRxInt
  1141  00F1  0870               	movf	??_USARTHandleRxInt,w
  1142  00F2  07F9               	addwf	_UQEnd,f	;volatile
  1143  00F3                     i1l676:	
  1144                           
  1145                           ;usart_pic16.c: 119: URBuff[UQEnd]=data;
  1146  00F3  0874               	movf	USARTHandleRxInt@data,w
  1147  00F4  00F0               	movwf	??_USARTHandleRxInt
  1148  00F5  0879               	movf	_UQEnd,w
  1149  00F6  3E20               	addlw	_URBuff& (0+255)
  1150  00F7  0084               	movwf	4
  1151  00F8  0870               	movf	??_USARTHandleRxInt,w
  1152  00F9  1383               	bcf	3,7	;select IRP bank0
  1153  00FA  0080               	movwf	0
  1154                           
  1155                           ;usart_pic16.c: 121: if(UQFront==-1) UQFront=0;
  1156  00FB  087A               	movf	_UQFront,w	;volatile
  1157  00FC  3AFF               	xorlw	-1
  1158  00FD  1D03               	skipz
  1159  00FE  0008               	return
  1160  00FF  01FA               	clrf	_UQFront	;volatile
  1161  0100  0008               	return
  1162  0101                     __end_of_USARTHandleRxInt:	
  1163  007E                     btemp	set	126	;btemp
  1164  007E                     wtemp	set	126
  1165  007E                     wtemp0	set	126
  1166  0080                     wtemp1	set	128
  1167  0082                     wtemp2	set	130
  1168  0084                     wtemp3	set	132
  1169  0086                     wtemp4	set	134
  1170  0088                     wtemp5	set	136
  1171  007F                     wtemp6	set	127
  1172  007E                     ttemp	set	126
  1173  007E                     ttemp0	set	126
  1174  0081                     ttemp1	set	129
  1175  0084                     ttemp2	set	132
  1176  0087                     ttemp3	set	135
  1177  007F                     ttemp4	set	127
  1178  007E                     ltemp	set	126
  1179  007E                     ltemp0	set	126
  1180  0082                     ltemp1	set	130
  1181  0086                     ltemp2	set	134
  1182  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      9      78
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK0

    _main->_USARTInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     256
                                              3 BANK0      6     6      0
                 _USARTDataAvailable
                          _USARTInit
                      _USARTReadData
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (1) _USARTWriteChar                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USARTReadData                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _USARTDataAvailable                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0      15
                                              5 COMMON     4     4      0
                   _USARTHandleRxInt
 ---------------------------------------------------------------------------------
 (3) _USARTHandleRxInt                                     5     5      0      15
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USARTDataAvailable
   _USARTInit
   _USARTReadData
   _USARTWriteChar

 _ISR (ROOT)
   _USARTHandleRxInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      9      4E       3       97.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      59       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      59      10        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Dec 05 17:09:57 2015

                         l36 016A                           l29 00AC                           fsr 0004  
         USARTInit@baud_rate 0065                          l151 002D         ??_USARTDataAvailable 0065  
                        l930 0084                          l924 007E                          l926 0080  
                        l934 0089                          l928 0082                          l970 0107  
                        l982 0123                          l992 012B                          l976 011B  
                        _GIE 005F                          _RB0 0030                          _ISR 0149  
                        u757 0034                          u767 0044               ?_USARTReadData 0070  
                        fsr0 0004                          indf 0000                         ?_ISR 0070  
                       l1000 013A                         l1100 005A                         l1008 0147  
                       l1280 009D                         l1282 00A2                         l1098 0055  
                       l1284 00A7                         l1278 0098                         _PEIE 005E  
                       _RCIE 0465                         _RCIF 0065                         _PCON 008E  
                       u6_25 00DD       __end_of_USARTWriteChar 016F                         _main 001A  
                       btemp 007E            USARTReadData@data 0066                         ltemp 007E  
                       start 0010                         ttemp 007E                         wtemp 007E  
                      ??_ISR 0075            ?_USARTHandleRxInt 0070                        ?_main 0070  
         ??_USARTHandleRxInt 0070                        _CMCON 001F             USARTWriteChar@ch 0065  
                      i1l124 0152                        i1l670 00E9                        i1l664 00E1  
                      i1l674 00EF                        i1l676 00F3                        _RCREG 001A  
                      _SPBRG 0099                        _TRISB 0086                        _TXREG 0019  
                      _UQEnd 0079                        main@n 006B                        pclath 000A  
                      ltemp0 007E                        ltemp1 0082                        ltemp2 0086  
                      ltemp3 0080           __size_of_USARTInit 0048              ?_USARTWriteChar 0070  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F              __initialization 0011                 __end_of_main 0076  
            ??_USARTReadData 0065                       ??_main 0068            USARTWriteInt@F659 0060  
                     _URBuff 0020            __end_of_USARTInit 00BE                       saved_w 007E  
    __end_of__initialization 0018               __pcstackCOMMON 0070                   __pbssBANK0 0020  
                 __pmaintext 001A                   __pintentry 0004  __size_of_USARTDataAvailable 0024  
           ??_USARTWriteChar 0065    __size_of_USARTHandleRxInt 0043                      _UQFront 007A  
                    __ptext0 0000                      __ptext1 0167                      __ptext2 0101  
                    __ptext3 0076                      __ptext4 0125                      __ptext5 0149  
                    __ptext6 00BE                 __size_of_ISR 0016                      clrloop0 0160  
       end_of_initialization 0018                    _RCSTAbits 0018        __end_of_USARTReadData 0125  
                  _USARTInit 0076                    _TXSTAbits 0098          start_initialization 0011  
                 ?_USARTInit 0065                  __end_of_ISR 015F             _USARTHandleRxInt 00BE  
                __pbssCOMMON 0079                    ___latbits 0000                __pcstackBANK0 0065  
 __end_of_USARTDataAvailable 0149                  ??_USARTInit 0067            interrupt_function 0004  
                  clear_ram0 015F                     _PIR1bits 000C                    main@count 006C  
    __size_of_USARTWriteChar 0008     __end_of_USARTHandleRxInt 0101                __size_of_main 005C  
     __size_of_USARTReadData 0024                     main@data 006D                     intlevel1 0000  
              _USARTReadData 0101         USARTHandleRxInt@data 0074           _USARTDataAvailable 0125  
        ?_USARTDataAvailable 0070               _USARTWriteChar 0167  
