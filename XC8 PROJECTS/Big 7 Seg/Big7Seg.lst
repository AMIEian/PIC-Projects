

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 29 18:58:40 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000D                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0015                     	;# 
    30  0015                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001E                     	;# 
    37  001F                     	;# 
    38  0081                     	;# 
    39  0085                     	;# 
    40  0086                     	;# 
    41  0087                     	;# 
    42  008C                     	;# 
    43  008D                     	;# 
    44  008E                     	;# 
    45  0092                     	;# 
    46  0098                     	;# 
    47  0099                     	;# 
    48  009E                     	;# 
    49  009F                     	;# 
    50  010C                     	;# 
    51  010D                     	;# 
    52  010E                     	;# 
    53  010F                     	;# 
    54  018C                     	;# 
    55  018D                     	;# 
    56                           
    57                           	psect	idataBANK0
    58  0718                     __pidataBANK0:	
    59                           
    60                           ;initializer for _display
    61  0718  343F               	retlw	63
    62  0719  3406               	retlw	6
    63  071A  345B               	retlw	91
    64  071B  344F               	retlw	79
    65  071C  3466               	retlw	102
    66  071D  346D               	retlw	109
    67  071E  347D               	retlw	125
    68  071F  3407               	retlw	7
    69  0720  347F               	retlw	127
    70  0721  346F               	retlw	111
    71  0005                     _PORTA	set	5
    72  0006                     _PORTB	set	6
    73  0007                     _PORTC	set	7
    74  0038                     _RC0	set	56
    75  0039                     _RC1	set	57
    76  003A                     _RC2	set	58
    77  003B                     _RC3	set	59
    78  009F                     _ADCON1	set	159
    79  0085                     _TRISA	set	133
    80  0086                     _TRISB	set	134
    81  0087                     _TRISC	set	135
    82                           
    83                           	psect	cinit
    84  07EA                     start_initialization:	
    85                           ; #config settings
    86                           
    87  07EA                     __initialization:	
    88                           
    89                           ; Initialize objects allocated to BANK0
    90  07EA  2718               	fcall	__pidataBANK0	;fetch initializer
    91  07EB  00A0               	movwf	__pdataBANK0& (0+127)
    92  07EC  2719               	fcall	__pidataBANK0+1	;fetch initializer
    93  07ED  00A1               	movwf	(__pdataBANK0+1)& (0+127)
    94  07EE  271A               	fcall	__pidataBANK0+2	;fetch initializer
    95  07EF  00A2               	movwf	(__pdataBANK0+2)& (0+127)
    96  07F0  271B               	fcall	__pidataBANK0+3	;fetch initializer
    97  07F1  00A3               	movwf	(__pdataBANK0+3)& (0+127)
    98  07F2  271C               	fcall	__pidataBANK0+4	;fetch initializer
    99  07F3  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   100  07F4  271D               	fcall	__pidataBANK0+5	;fetch initializer
   101  07F5  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   102  07F6  271E               	fcall	__pidataBANK0+6	;fetch initializer
   103  07F7  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   104  07F8  271F               	fcall	__pidataBANK0+7	;fetch initializer
   105  07F9  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   106  07FA  2720               	fcall	__pidataBANK0+8	;fetch initializer
   107  07FB  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   108  07FC  2721               	fcall	__pidataBANK0+9	;fetch initializer
   109  07FD  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   110  07FE                     end_of_initialization:	
   111                           ;End of C runtime variable initialization code
   112                           
   113  07FE                     __end_of__initialization:	
   114  07FE  0183               	clrf	3
   115  07FF  2F70               	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	dataBANK0
   118  0020                     __pdataBANK0:	
   119  0020                     _display:	
   120  0020                     	ds	10
   121                           
   122                           	psect	cstackCOMMON
   123  0070                     __pcstackCOMMON:	
   124  0070                     ?_Send_Data:	
   125  0070                     ?_main:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0070                     Send_Data@number:	
   129                           ; 0 bytes @ 0x0
   130                           
   131                           
   132                           ; 2 bytes @ 0x0
   133  0070                     	ds	2
   134  0072                     ??_Send_Data:	
   135  0072                     Send_Data@Flag:	
   136                           ; 0 bytes @ 0x2
   137                           
   138                           
   139                           ; 2 bytes @ 0x2
   140  0072                     	ds	2
   141  0074                     Send_Data@Mask:	
   142                           
   143                           ; 2 bytes @ 0x4
   144  0074                     	ds	2
   145  0076                     Send_Data@bits:	
   146                           
   147                           ; 2 bytes @ 0x6
   148  0076                     	ds	2
   149  0078                     ??_main:	
   150                           
   151                           ; 0 bytes @ 0x8
   152  0078                     	ds	3
   153  007B                     main@count:	
   154                           
   155                           ; 2 bytes @ 0xB
   156  007B                     	ds	2
   157                           
   158                           	psect	maintext
   159  0770                     __pmaintext:	
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 17 in file "E:\Study Material\XC8 PROJECTS\Big 7 Seg\Test.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;  count           2   11[COMMON] int 
   170 ;; Return value:  Size  Location     Type
   171 ;;		None               void
   172 ;; Registers used:
   173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 17F/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMMON   BANK0   BANK1
   179 ;;      Params:         0       0       0
   180 ;;      Locals:         2       0       0
   181 ;;      Temps:          3       0       0
   182 ;;      Totals:         5       0       0
   183 ;;Total ram usage:        5 bytes
   184 ;; Hardware stack levels required when called:    1
   185 ;; This function calls:
   186 ;;		_Send_Data
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           
   193                           ;psect for function _main
   194  0770                     _main:	
   195                           
   196                           ;Test.c: 19: TRISA = 0x00;
   197                           
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   200  0770  1683               	bsf	3,5	;RP0=1, select bank1
   201  0771  1303               	bcf	3,6	;RP1=0, select bank1
   202  0772  0185               	clrf	5	;volatile
   203                           
   204                           ;Test.c: 20: TRISB = 0x00;
   205  0773  0186               	clrf	6	;volatile
   206                           
   207                           ;Test.c: 21: TRISC = 0x00;
   208  0774  0187               	clrf	7	;volatile
   209                           
   210                           ;Test.c: 22: ADCON1 = 0x06;
   211  0775  3006               	movlw	6
   212  0776  009F               	movwf	31	;volatile
   213                           
   214                           ;Test.c: 24: PORTB = 0xFF;
   215  0777  30FF               	movlw	255
   216  0778  1283               	bcf	3,5	;RP0=0, select bank0
   217  0779  1303               	bcf	3,6	;RP1=0, select bank0
   218  077A  0086               	movwf	6	;volatile
   219                           
   220                           ;Test.c: 25: PORTA = 0xFF;
   221  077B  30FF               	movlw	255
   222  077C  0085               	movwf	5	;volatile
   223                           
   224                           ;Test.c: 26: PORTC = 0xFF;
   225  077D  30FF               	movlw	255
   226  077E  0087               	movwf	7	;volatile
   227                           
   228                           ;Test.c: 28: int count;
   229                           ;Test.c: 30: for(count = 0; count <= 4; count++)
   230  077F  01FB               	clrf	main@count
   231  0780  01FC               	clrf	main@count+1
   232  0781  087C               	movf	main@count+1,w
   233  0782  3A80               	xorlw	128
   234  0783  00FF               	movwf	127
   235  0784  3080               	movlw	128
   236  0785  027F               	subwf	127,w
   237  0786  1D03               	skipz
   238  0787  2F8A               	goto	u125
   239  0788  3005               	movlw	5
   240  0789  027B               	subwf	main@count,w
   241  078A                     u125:	
   242  078A  1803               	btfsc	3,0
   243  078B  2FBD               	goto	l593
   244  078C                     l31:	
   245                           
   246                           ;Test.c: 31: {
   247                           ;Test.c: 32: RC3 = 1;
   248  078C  1283               	bcf	3,5	;RP0=0, select bank0
   249  078D  1303               	bcf	3,6	;RP1=0, select bank0
   250  078E  1587               	bsf	7,3	;volatile
   251                           
   252                           ;Test.c: 33: _delay(1000000);
   253  078F  3006               	movlw	6
   254  0790  00FA               	movwf	??_main+2
   255  0791  3013               	movlw	19
   256  0792  00F9               	movwf	??_main+1
   257  0793  30B1               	movlw	177
   258  0794  00F8               	movwf	??_main
   259  0795                     u157:	
   260  0795  0BF8               	decfsz	??_main,f
   261  0796  2F95               	goto	u157
   262  0797  0BF9               	decfsz	??_main+1,f
   263  0798  2F95               	goto	u157
   264  0799  0BFA               	decfsz	??_main+2,f
   265  079A  2F95               	goto	u157
   266  079B  2F9C               	nop2
   267                           
   268                           ;Test.c: 34: RC3 = 0;
   269  079C  1283               	bcf	3,5	;RP0=0, select bank0
   270  079D  1303               	bcf	3,6	;RP1=0, select bank0
   271  079E  1187               	bcf	7,3	;volatile
   272                           
   273                           ;Test.c: 35: _delay(1000000);
   274  079F  3006               	movlw	6
   275  07A0  00FA               	movwf	??_main+2
   276  07A1  3013               	movlw	19
   277  07A2  00F9               	movwf	??_main+1
   278  07A3  30B1               	movlw	177
   279  07A4  00F8               	movwf	??_main
   280  07A5                     u167:	
   281  07A5  0BF8               	decfsz	??_main,f
   282  07A6  2FA5               	goto	u167
   283  07A7  0BF9               	decfsz	??_main+1,f
   284  07A8  2FA5               	goto	u167
   285  07A9  0BFA               	decfsz	??_main+2,f
   286  07AA  2FA5               	goto	u167
   287  07AB  2FAC               	nop2
   288  07AC  3001               	movlw	1
   289  07AD  07FB               	addwf	main@count,f
   290  07AE  1803               	skipnc
   291  07AF  0AFC               	incf	main@count+1,f
   292  07B0  3000               	movlw	0
   293  07B1  07FC               	addwf	main@count+1,f
   294  07B2  087C               	movf	main@count+1,w
   295  07B3  3A80               	xorlw	128
   296  07B4  00FF               	movwf	127
   297  07B5  3080               	movlw	128
   298  07B6  027F               	subwf	127,w
   299  07B7  1D03               	skipz
   300  07B8  2FBB               	goto	u135
   301  07B9  3005               	movlw	5
   302  07BA  027B               	subwf	main@count,w
   303  07BB                     u135:	
   304  07BB  1C03               	skipc
   305  07BC  2F8C               	goto	l31
   306  07BD                     l593:	
   307                           
   308                           ;Test.c: 36: }
   309                           ;Test.c: 37: count = 0;
   310  07BD  01FB               	clrf	main@count
   311  07BE  01FC               	clrf	main@count+1
   312  07BF                     l595:	
   313                           ;Test.c: 38: while(1)
   314                           
   315                           
   316                           ;Test.c: 39: {
   317                           ;Test.c: 40: Send_Data(display[count]);
   318  07BF  087B               	movf	main@count,w
   319  07C0  3E20               	addlw	_display& (0+255)
   320  07C1  0084               	movwf	4
   321  07C2  1383               	bcf	3,7	;select IRP bank0
   322  07C3  0800               	movf	0,w
   323  07C4  00F8               	movwf	??_main
   324  07C5  01F9               	clrf	??_main+1
   325  07C6  0878               	movf	??_main,w
   326  07C7  00F0               	movwf	Send_Data@number
   327  07C8  0879               	movf	??_main+1,w
   328  07C9  00F1               	movwf	Send_Data@number+1
   329  07CA  2722               	fcall	_Send_Data
   330                           
   331                           ;Test.c: 41: _delay(1000000);
   332  07CB  3006               	movlw	6
   333  07CC  00FA               	movwf	??_main+2
   334  07CD  3013               	movlw	19
   335  07CE  00F9               	movwf	??_main+1
   336  07CF  30B1               	movlw	177
   337  07D0  00F8               	movwf	??_main
   338  07D1                     u177:	
   339  07D1  0BF8               	decfsz	??_main,f
   340  07D2  2FD1               	goto	u177
   341  07D3  0BF9               	decfsz	??_main+1,f
   342  07D4  2FD1               	goto	u177
   343  07D5  0BFA               	decfsz	??_main+2,f
   344  07D6  2FD1               	goto	u177
   345  07D7  2FD8               	nop2
   346                           
   347                           ;Test.c: 42: count++;
   348  07D8  3001               	movlw	1
   349  07D9  07FB               	addwf	main@count,f
   350  07DA  1803               	skipnc
   351  07DB  0AFC               	incf	main@count+1,f
   352  07DC  3000               	movlw	0
   353  07DD  07FC               	addwf	main@count+1,f
   354                           
   355                           ;Test.c: 43: if(count > 9)
   356  07DE  087C               	movf	main@count+1,w
   357  07DF  3A80               	xorlw	128
   358  07E0  00FF               	movwf	127
   359  07E1  3080               	movlw	128
   360  07E2  027F               	subwf	127,w
   361  07E3  1D03               	skipz
   362  07E4  2FE7               	goto	u145
   363  07E5  300A               	movlw	10
   364  07E6  027B               	subwf	main@count,w
   365  07E7                     u145:	
   366  07E7  1C03               	skipc
   367  07E8  2FBF               	goto	l595
   368  07E9  2FBD               	goto	l593
   369  07EA                     __end_of_main:	
   370                           ;Test.c: 44: count = 0;
   371                           
   372                           
   373                           	psect	text1
   374  0722                     __ptext1:	
   375 ;; *************** function _Send_Data *****************
   376 ;; Defined at:
   377 ;;		line 48 in file "E:\Study Material\XC8 PROJECTS\Big 7 Seg\Test.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;  number          2    0[COMMON] unsigned short 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  bits            2    6[COMMON] unsigned short 
   382 ;;  Mask            2    4[COMMON] unsigned short 
   383 ;;  Flag            2    2[COMMON] unsigned short 
   384 ;; Return value:  Size  Location     Type
   385 ;;		None               void
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1
   393 ;;      Params:         2       0       0
   394 ;;      Locals:         6       0       0
   395 ;;      Temps:          0       0       0
   396 ;;      Totals:         8       0       0
   397 ;;Total ram usage:        8 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _Send_Data
   408  0722                     _Send_Data:	
   409                           
   410                           ;Test.c: 50: unsigned short Mask, bits, Flag;
   411                           ;Test.c: 51: PORTC = 0x00;
   412                           
   413                           ;incstack = 0
   414                           ; Regs used in _Send_Data: [wreg+status,2+status,0]
   415  0722  1283               	bcf	3,5	;RP0=0, select bank0
   416  0723  1303               	bcf	3,6	;RP1=0, select bank0
   417  0724  0187               	clrf	7	;volatile
   418                           
   419                           ;Test.c: 53: Mask = 0x01;
   420  0725  3001               	movlw	1
   421  0726  00F4               	movwf	Send_Data@Mask
   422  0727  3000               	movlw	0
   423  0728  00F5               	movwf	Send_Data@Mask+1
   424                           
   425                           ;Test.c: 54: for (bits=0; bits<8; bits++)
   426  0729  01F6               	clrf	Send_Data@bits
   427  072A  01F7               	clrf	Send_Data@bits+1
   428  072B  3000               	movlw	0
   429  072C  0277               	subwf	Send_Data@bits+1,w
   430  072D  3008               	movlw	8
   431  072E  1903               	skipnz
   432  072F  0276               	subwf	Send_Data@bits,w
   433  0730  1803               	btfsc	3,0
   434  0731  2F68               	goto	l41
   435  0732                     l561:	
   436                           
   437                           ;Test.c: 55: {
   438                           ;Test.c: 56: Flag = number & Mask;
   439  0732  0874               	movf	Send_Data@Mask,w
   440  0733  0570               	andwf	Send_Data@number,w
   441  0734  00F2               	movwf	Send_Data@Flag
   442  0735  0875               	movf	Send_Data@Mask+1,w
   443  0736  0571               	andwf	Send_Data@number+1,w
   444  0737  00F3               	movwf	Send_Data@Flag+1
   445                           
   446                           ;Test.c: 57: if(Flag == 0)
   447  0738  0873               	movf	Send_Data@Flag+1,w
   448  0739  0472               	iorwf	Send_Data@Flag,w
   449  073A  1D03               	skipz
   450  073B  2F47               	goto	l567
   451                           
   452                           ;Test.c: 58: {
   453                           ;Test.c: 59: RC1 = 0;
   454  073C  1283               	bcf	3,5	;RP0=0, select bank0
   455  073D  1303               	bcf	3,6	;RP1=0, select bank0
   456  073E  1087               	bcf	7,1	;volatile
   457                           
   458                           ;Test.c: 60: _delay(1);
   459  073F  0000               	nop
   460                           
   461                           ;Test.c: 61: RC0 = 1;
   462  0740  1283               	bcf	3,5	;RP0=0, select bank0
   463  0741  1303               	bcf	3,6	;RP1=0, select bank0
   464  0742  1407               	bsf	7,0	;volatile
   465                           
   466                           ;Test.c: 62: _delay(1);
   467  0743  0000               	nop
   468                           
   469                           ;Test.c: 63: RC0 = 0;
   470  0744  1283               	bcf	3,5	;RP0=0, select bank0
   471  0745  1303               	bcf	3,6	;RP1=0, select bank0
   472  0746  1007               	bcf	7,0	;volatile
   473  0747                     l567:	
   474                           
   475                           ;Test.c: 64: }
   476                           ;Test.c: 65: if(Flag > 0)
   477  0747  0873               	movf	Send_Data@Flag+1,w
   478  0748  0472               	iorwf	Send_Data@Flag,w
   479  0749  1903               	skipnz
   480  074A  2F56               	goto	l571
   481                           
   482                           ;Test.c: 66: {
   483                           ;Test.c: 67: RC1 = 1;
   484  074B  1283               	bcf	3,5	;RP0=0, select bank0
   485  074C  1303               	bcf	3,6	;RP1=0, select bank0
   486  074D  1487               	bsf	7,1	;volatile
   487                           
   488                           ;Test.c: 68: _delay(1);
   489  074E  0000               	nop
   490                           
   491                           ;Test.c: 69: RC0 = 1;
   492  074F  1283               	bcf	3,5	;RP0=0, select bank0
   493  0750  1303               	bcf	3,6	;RP1=0, select bank0
   494  0751  1407               	bsf	7,0	;volatile
   495                           
   496                           ;Test.c: 70: _delay(1);
   497  0752  0000               	nop
   498                           
   499                           ;Test.c: 71: RC0 = 0;
   500  0753  1283               	bcf	3,5	;RP0=0, select bank0
   501  0754  1303               	bcf	3,6	;RP1=0, select bank0
   502  0755  1007               	bcf	7,0	;volatile
   503  0756                     l571:	
   504                           
   505                           ;Test.c: 72: }
   506                           ;Test.c: 73: Mask = Mask << 1;
   507  0756  1003               	clrc
   508  0757  0D74               	rlf	Send_Data@Mask,w
   509  0758  00F4               	movwf	Send_Data@Mask
   510  0759  0D75               	rlf	Send_Data@Mask+1,w
   511  075A  00F5               	movwf	Send_Data@Mask+1
   512  075B  3001               	movlw	1
   513  075C  07F6               	addwf	Send_Data@bits,f
   514  075D  1803               	skipnc
   515  075E  0AF7               	incf	Send_Data@bits+1,f
   516  075F  3000               	movlw	0
   517  0760  07F7               	addwf	Send_Data@bits+1,f
   518  0761  3000               	movlw	0
   519  0762  0277               	subwf	Send_Data@bits+1,w
   520  0763  3008               	movlw	8
   521  0764  1903               	skipnz
   522  0765  0276               	subwf	Send_Data@bits,w
   523  0766  1C03               	skipc
   524  0767  2F32               	goto	l561
   525  0768                     l41:	
   526                           
   527                           ;Test.c: 74: }
   528                           ;Test.c: 76: RC2 = 1;
   529  0768  1283               	bcf	3,5	;RP0=0, select bank0
   530  0769  1303               	bcf	3,6	;RP1=0, select bank0
   531  076A  1507               	bsf	7,2	;volatile
   532                           
   533                           ;Test.c: 77: _delay(1);
   534  076B  0000               	nop
   535                           
   536                           ;Test.c: 78: RC2 = 0;
   537  076C  1283               	bcf	3,5	;RP0=0, select bank0
   538  076D  1303               	bcf	3,6	;RP1=0, select bank0
   539  076E  1107               	bcf	7,2	;volatile
   540  076F  0008               	return
   541  0770                     __end_of_Send_Data:	
   542  007E                     btemp	set	126	;btemp
   543  007E                     wtemp	set	126
   544  007E                     wtemp0	set	126
   545  0080                     wtemp1	set	128
   546  0082                     wtemp2	set	130
   547  0084                     wtemp3	set	132
   548  0086                     wtemp4	set	134
   549  0088                     wtemp5	set	136
   550  007F                     wtemp6	set	127
   551  007E                     ttemp	set	126
   552  007E                     ttemp0	set	126
   553  0081                     ttemp1	set	129
   554  0084                     ttemp2	set	132
   555  0087                     ttemp3	set	135
   556  007F                     ttemp4	set	127
   557  007E                     ltemp	set	126
   558  007E                     ltemp0	set	126
   559  0082                     ltemp1	set	130
   560  0086                     ltemp2	set	134
   561  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0      10
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Send_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     305
                                              8 COMMON     5     5      0
                          _Send_Data
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                            8     6      2     212
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      17       8        0.0%
ABS                  0      0      17       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 29 18:58:40 2015

          Send_Data@Flag 0072            Send_Data@Mask 0074            Send_Data@bits 0076  
                     l31 078C                       l41 0768                      l561 0732  
                    l571 0756                      l567 0747                      l593 07BD  
                    l595 07BF                      _RC0 0038                      _RC1 0039  
                    _RC2 003A                      _RC3 003B                      u125 078A  
                    u135 07BB                      u145 07E7                      u157 0795  
                    u167 07A5                      u177 07D1                      fsr0 0004  
                    indf 0000          Send_Data@number 0070                     _main 0770  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07EA  
           __end_of_main 07EA                   ??_main 0078                   _ADCON1 009F  
     __size_of_Send_Data 004E  __end_of__initialization 07FE           __pcstackCOMMON 0070  
           __pidataBANK0 0718        __end_of_Send_Data 0770               __pmaintext 0770  
                __ptext1 0722                  _display 0020     end_of_initialization 07FE  
    start_initialization 07EA                _Send_Data 0722              __pdataBANK0 0020  
              ___latbits 0000               ?_Send_Data 0070                main@count 007B  
            ??_Send_Data 0072            __size_of_main 007A  
