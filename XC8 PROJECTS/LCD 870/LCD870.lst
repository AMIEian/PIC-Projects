

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Sep 12 17:45:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0015                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0092                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009E                     	;# 
    61  009F                     	;# 
    62  010C                     	;# 
    63  010D                     	;# 
    64  010E                     	;# 
    65  010F                     	;# 
    66  018C                     	;# 
    67  018D                     	;# 
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0092                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113                           
   114                           	psect	idataBANK0
   115  048B                     __pidataBANK0:	
   116                           
   117                           ;initializer for ___cgram
   118  048B  3400               	retlw	0
   119  048C  3401               	retlw	1
   120  048D  3403               	retlw	3
   121  048E  3416               	retlw	22
   122  048F  341C               	retlw	28
   123  0490  3408               	retlw	8
   124  0491  3400               	retlw	0
   125  0492  3400               	retlw	0
   126  0493  3400               	retlw	0
   127  0494  341B               	retlw	27
   128  0495  340E               	retlw	14
   129  0496  3404               	retlw	4
   130  0497  340E               	retlw	14
   131  0498  341B               	retlw	27
   132  0499  3400               	retlw	0
   133  049A  3400               	retlw	0
   134  0007                     _PORTC	set	7
   135  0010                     _T1CON	set	16
   136  003C                     _RC4	set	60
   137  003D                     _RC5	set	61
   138  003E                     _RC6	set	62
   139  003F                     _RC7	set	63
   140  0060                     _TMR1IF	set	96
   141  0086                     _TRISB	set	134
   142  0087                     _TRISC	set	135
   143  0087                     _TRISCbits	set	135
   144                           
   145                           	psect	strings
   146  0001                     __pstrings:	
   147  0001                     stringtab:	
   148  0001                     __stringtab:	
   149  0001                     stringcode:	
   150                           ;	String table - string pointers are 1 byte each
   151                           
   152  0001                     stringdir:	
   153  0001  3000               	movlw	high stringdir
   154  0002  008A               	movwf	10
   155  0003  0804               	movf	4,w
   156  0004  0A84               	incf	4,f
   157  0005  0782               	addwf	2,f
   158  0006                     __stringbase:	
   159  0006  3400               	retlw	0
   160  0007                     __end_of__stringtab:	
   161  0007                     __stringdata:	
   162  0007                     STR_1:	
   163  0007  344E               	retlw	78	;'N'
   164  0008  3449               	retlw	73	;'I'
   165  0009  3454               	retlw	84	;'T'
   166  000A  3449               	retlw	73	;'I'
   167  000B  344E               	retlw	78	;'N'
   168  000C  3420               	retlw	32	;' '
   169  000D  344E               	retlw	78	;'N'
   170  000E  342E               	retlw	46	;'.'
   171  000F  3420               	retlw	32	;' '
   172  0010  3453               	retlw	83	;'S'
   173  0011  3441               	retlw	65	;'A'
   174  0012  344E               	retlw	78	;'N'
   175  0013  3447               	retlw	71	;'G'
   176  0014  3441               	retlw	65	;'A'
   177  0015  344C               	retlw	76	;'L'
   178  0016  3445               	retlw	69	;'E'
   179  0017  3400               	retlw	0
   180  0018                     STR_2:	
   181  0018  343A               	retlw	58	;':'
   182  0019  3400               	retlw	0
   183  001A                     __end_of__stringdata:	
   184                           
   185                           	psect	cinit
   186  07D9                     start_initialization:	
   187                           ; #config settings
   188                           
   189  07D9                     __initialization:	
   190                           
   191                           ; Clear objects allocated to BANK0
   192  07D9  01C5               	clrf	__pbssBANK0& (0+127)
   193  07DA  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   194  07DB  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   195  07DC  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   196  07DD  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   197                           
   198                           ; Initialize objects allocated to BANK0
   199  07DE  248B               	fcall	__pidataBANK0	;fetch initializer
   200  07DF  00B5               	movwf	__pdataBANK0& (0+127)
   201  07E0  248C               	fcall	__pidataBANK0+1	;fetch initializer
   202  07E1  00B6               	movwf	(__pdataBANK0+1)& (0+127)
   203  07E2  248D               	fcall	__pidataBANK0+2	;fetch initializer
   204  07E3  00B7               	movwf	(__pdataBANK0+2)& (0+127)
   205  07E4  248E               	fcall	__pidataBANK0+3	;fetch initializer
   206  07E5  00B8               	movwf	(__pdataBANK0+3)& (0+127)
   207  07E6  248F               	fcall	__pidataBANK0+4	;fetch initializer
   208  07E7  00B9               	movwf	(__pdataBANK0+4)& (0+127)
   209  07E8  2490               	fcall	__pidataBANK0+5	;fetch initializer
   210  07E9  00BA               	movwf	(__pdataBANK0+5)& (0+127)
   211  07EA  2491               	fcall	__pidataBANK0+6	;fetch initializer
   212  07EB  00BB               	movwf	(__pdataBANK0+6)& (0+127)
   213  07EC  2492               	fcall	__pidataBANK0+7	;fetch initializer
   214  07ED  00BC               	movwf	(__pdataBANK0+7)& (0+127)
   215  07EE  2493               	fcall	__pidataBANK0+8	;fetch initializer
   216  07EF  00BD               	movwf	(__pdataBANK0+8)& (0+127)
   217  07F0  2494               	fcall	__pidataBANK0+9	;fetch initializer
   218  07F1  00BE               	movwf	(__pdataBANK0+9)& (0+127)
   219  07F2  2495               	fcall	__pidataBANK0+10	;fetch initializer
   220  07F3  00BF               	movwf	(__pdataBANK0+10)& (0+127)
   221  07F4  2496               	fcall	__pidataBANK0+11	;fetch initializer
   222  07F5  00C0               	movwf	(__pdataBANK0+11)& (0+127)
   223  07F6  2497               	fcall	__pidataBANK0+12	;fetch initializer
   224  07F7  00C1               	movwf	(__pdataBANK0+12)& (0+127)
   225  07F8  2498               	fcall	__pidataBANK0+13	;fetch initializer
   226  07F9  00C2               	movwf	(__pdataBANK0+13)& (0+127)
   227  07FA  2499               	fcall	__pidataBANK0+14	;fetch initializer
   228  07FB  00C3               	movwf	(__pdataBANK0+14)& (0+127)
   229  07FC  249A               	fcall	__pidataBANK0+15	;fetch initializer
   230  07FD  00C4               	movwf	(__pdataBANK0+15)& (0+127)
   231  07FE                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FE                     __end_of__initialization:	
   235  07FE  0183               	clrf	3
   236  07FF  2F2B               	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssBANK0
   239  0045                     __pbssBANK0:	
   240  0045                     LCDWriteInt@F784:	
   241  0045                     	ds	5
   242                           
   243                           	psect	dataBANK0
   244  0035                     __pdataBANK0:	
   245  0035                     ___cgram:	
   246  0035                     	ds	16
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:	
   250  0070                     ?_LCDBusyLoop:	
   251  0070                     ??_LCDBusyLoop:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_LCDInit:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_LCDWriteString:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_My_Delay:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ??_My_Delay:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_main:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?___awdiv:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?___awmod:	
   273                           ; 2 bytes @ 0x0
   274                           
   275  0070                     ___awdiv@divisor:	
   276                           ; 2 bytes @ 0x0
   277                           
   278  0070                     ___awmod@divisor:	
   279                           ; 2 bytes @ 0x0
   280                           
   281                           
   282                           ; 2 bytes @ 0x0
   283  0070                     	ds	1
   284  0071                     My_Delay@sec:	
   285                           
   286                           ; 1 bytes @ 0x1
   287  0071                     	ds	1
   288  0072                     LCDBusyLoop@busy:	
   289  0072                     My_Delay@Count:	
   290                           ; 1 bytes @ 0x2
   291                           
   292  0072                     ___awdiv@dividend:	
   293                           ; 1 bytes @ 0x2
   294                           
   295  0072                     ___awmod@dividend:	
   296                           ; 2 bytes @ 0x2
   297                           
   298                           
   299                           ; 2 bytes @ 0x2
   300  0072                     	ds	1
   301  0073                     LCDBusyLoop@temp:	
   302                           
   303                           ; 1 bytes @ 0x3
   304  0073                     	ds	1
   305  0074                     ??___awdiv:	
   306  0074                     ??___awmod:	
   307                           ; 0 bytes @ 0x4
   308                           
   309  0074                     LCDBusyLoop@status:	
   310                           ; 0 bytes @ 0x4
   311                           
   312                           
   313                           ; 1 bytes @ 0x4
   314  0074                     	ds	1
   315  0075                     ?_LCDByte:	
   316  0075                     LCDByte@isdata:	
   317                           ; 0 bytes @ 0x5
   318                           
   319  0075                     ___awdiv@counter:	
   320                           ; 1 bytes @ 0x5
   321                           
   322  0075                     ___awmod@counter:	
   323                           ; 1 bytes @ 0x5
   324                           
   325                           
   326                           ; 1 bytes @ 0x5
   327  0075                     	ds	1
   328  0076                     ??_LCDByte:	
   329  0076                     ___awdiv@sign:	
   330                           ; 0 bytes @ 0x6
   331                           
   332  0076                     ___awmod@sign:	
   333                           ; 1 bytes @ 0x6
   334                           
   335                           
   336                           ; 1 bytes @ 0x6
   337  0076                     	ds	1
   338  0077                     ___awdiv@quotient:	
   339                           
   340                           ; 2 bytes @ 0x7
   341  0077                     	ds	1
   342  0078                     LCDByte@hn:	
   343                           
   344                           ; 1 bytes @ 0x8
   345  0078                     	ds	1
   346  0079                     LCDByte@ln:	
   347                           
   348                           ; 1 bytes @ 0x9
   349  0079                     	ds	1
   350  007A                     LCDByte@c:	
   351                           
   352                           ; 1 bytes @ 0xA
   353  007A                     	ds	1
   354  007B                     LCDByte@temp:	
   355                           
   356                           ; 1 bytes @ 0xB
   357  007B                     	ds	1
   358  007C                     ??_LCDInit:	
   359  007C                     ??_LCDWriteString:	
   360                           ; 0 bytes @ 0xC
   361                           
   362  007C                     ??_LCDWriteInt:	
   363                           ; 0 bytes @ 0xC
   364                           
   365  007C                     ?_LCDGotoXY:	
   366                           ; 0 bytes @ 0xC
   367                           
   368  007C                     LCDGotoXY@y:	
   369                           ; 0 bytes @ 0xC
   370                           
   371                           
   372                           ; 1 bytes @ 0xC
   373  007C                     	ds	1
   374  007D                     ??_LCDGotoXY:	
   375                           
   376                           ; 0 bytes @ 0xD
   377  007D                     	ds	1
   378                           
   379                           	psect	cstackBANK0
   380  0020                     __pcstackBANK0:	
   381  0020                     ?_LCDWriteInt:	
   382  0020                     LCDInit@style:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0020                     LCDWriteString@cc:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0020                     LCDGotoXY@x:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0020                     LCDWriteInt@val:	
   392                           ; 1 bytes @ 0x0
   393                           
   394                           
   395                           ; 2 bytes @ 0x0
   396  0020                     	ds	1
   397  0021                     LCDInit@__i:	
   398  0021                     LCDWriteString@msg:	
   399                           ; 1 bytes @ 0x1
   400                           
   401                           
   402                           ; 1 bytes @ 0x1
   403  0021                     	ds	1
   404  0022                     LCDWriteInt@field_length:	
   405                           
   406                           ; 1 bytes @ 0x2
   407  0022                     	ds	1
   408  0023                     LCDWriteInt@str:	
   409                           
   410                           ; 5 bytes @ 0x3
   411  0023                     	ds	5
   412  0028                     LCDWriteInt@j:	
   413                           
   414                           ; 2 bytes @ 0x8
   415  0028                     	ds	2
   416  002A                     LCDWriteInt@i:	
   417                           
   418                           ; 2 bytes @ 0xA
   419  002A                     	ds	2
   420  002C                     ??_main:	
   421                           
   422                           ; 0 bytes @ 0xC
   423  002C                     	ds	1
   424  002D                     main@count:	
   425                           
   426                           ; 2 bytes @ 0xD
   427  002D                     	ds	2
   428  002F                     main@secs:	
   429                           
   430                           ; 2 bytes @ 0xF
   431  002F                     	ds	2
   432  0031                     main@mins:	
   433                           
   434                           ; 2 bytes @ 0x11
   435  0031                     	ds	2
   436  0033                     main@hrs:	
   437                           
   438                           ; 2 bytes @ 0x13
   439  0033                     	ds	2
   440                           
   441                           	psect	maintext
   442  072B                     __pmaintext:	
   443 ;;
   444 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   445 ;;
   446 ;; *************** function _main *****************
   447 ;; Defined at:
   448 ;;		line 60 in file "E:\Study Material\XC8 PROJECTS\LCD Test\LCDTest.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;  hrs             2   19[BANK0 ] int 
   453 ;;  mins            2   17[BANK0 ] int 
   454 ;;  secs            2   15[BANK0 ] int 
   455 ;;  count           2   13[BANK0 ] int 
   456 ;; Return value:  Size  Location     Type
   457 ;;		None               void
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 17F/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1
   465 ;;      Params:         0       0       0
   466 ;;      Locals:         0       8       0
   467 ;;      Temps:          0       1       0
   468 ;;      Totals:         0       9       0
   469 ;;Total ram usage:        9 bytes
   470 ;; Hardware stack levels required when called:    3
   471 ;; This function calls:
   472 ;;		_LCDByte
   473 ;;		_LCDGotoXY
   474 ;;		_LCDInit
   475 ;;		_LCDWriteInt
   476 ;;		_LCDWriteString
   477 ;;		_My_Delay
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           
   484                           ;psect for function _main
   485  072B                     _main:	
   486                           
   487                           ;LCDTest.c: 62: int count, secs = 0, mins = 0, hrs = 1;
   488                           
   489                           ;incstack = 0
   490                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   491  072B  1283               	bcf	3,5	;RP0=0, select bank0
   492  072C  1303               	bcf	3,6	;RP1=0, select bank0
   493  072D  01AF               	clrf	main@secs
   494  072E  01B0               	clrf	main@secs+1
   495  072F  01B1               	clrf	main@mins
   496  0730  01B2               	clrf	main@mins+1
   497  0731  3001               	movlw	1
   498  0732  00B3               	movwf	main@hrs
   499  0733  3000               	movlw	0
   500  0734  00B4               	movwf	main@hrs+1
   501                           
   502                           ;LCDTest.c: 63: TRISB = 0x00;
   503  0735  1683               	bsf	3,5	;RP0=1, select bank1
   504  0736  1303               	bcf	3,6	;RP1=0, select bank1
   505  0737  0186               	clrf	6	;volatile
   506                           
   507                           ;LCDTest.c: 64: TRISC = 0x00;
   508  0738  0187               	clrf	7	;volatile
   509                           
   510                           ;LCDTest.c: 66: for(count = 0; count <= 4; count++)
   511  0739  1283               	bcf	3,5	;RP0=0, select bank0
   512  073A  1303               	bcf	3,6	;RP1=0, select bank0
   513  073B  01AD               	clrf	main@count
   514  073C  01AE               	clrf	main@count+1
   515  073D  082E               	movf	main@count+1,w
   516  073E  3A80               	xorlw	128
   517  073F  00FF               	movwf	127
   518  0740  3080               	movlw	128
   519  0741  027F               	subwf	127,w
   520  0742  1D03               	skipz
   521  0743  2F46               	goto	u845
   522  0744  3005               	movlw	5
   523  0745  022D               	subwf	main@count,w
   524  0746                     u845:	
   525  0746  1803               	btfsc	3,0
   526  0747  2F65               	goto	l1311
   527  0748                     l104:	
   528                           
   529                           ;LCDTest.c: 67: {
   530                           ;LCDTest.c: 68: RC4 = 1;
   531  0748  1283               	bcf	3,5	;RP0=0, select bank0
   532  0749  1303               	bcf	3,6	;RP1=0, select bank0
   533  074A  1607               	bsf	7,4	;volatile
   534                           
   535                           ;LCDTest.c: 69: My_Delay(1);
   536  074B  3001               	movlw	1
   537  074C  249B               	fcall	_My_Delay
   538                           
   539                           ;LCDTest.c: 70: RC4 = 0;
   540  074D  1283               	bcf	3,5	;RP0=0, select bank0
   541  074E  1303               	bcf	3,6	;RP1=0, select bank0
   542  074F  1207               	bcf	7,4	;volatile
   543                           
   544                           ;LCDTest.c: 71: My_Delay(1);
   545  0750  3001               	movlw	1
   546  0751  249B               	fcall	_My_Delay
   547  0752  3001               	movlw	1
   548  0753  1283               	bcf	3,5	;RP0=0, select bank0
   549  0754  1303               	bcf	3,6	;RP1=0, select bank0
   550  0755  07AD               	addwf	main@count,f
   551  0756  1803               	skipnc
   552  0757  0AAE               	incf	main@count+1,f
   553  0758  3000               	movlw	0
   554  0759  07AE               	addwf	main@count+1,f
   555  075A  082E               	movf	main@count+1,w
   556  075B  3A80               	xorlw	128
   557  075C  00FF               	movwf	127
   558  075D  3080               	movlw	128
   559  075E  027F               	subwf	127,w
   560  075F  1D03               	skipz
   561  0760  2F63               	goto	u855
   562  0761  3005               	movlw	5
   563  0762  022D               	subwf	main@count,w
   564  0763                     u855:	
   565  0763  1C03               	skipc
   566  0764  2F48               	goto	l104
   567  0765                     l1311:	
   568                           
   569                           ;LCDTest.c: 72: }
   570                           ;LCDTest.c: 75: LCDInit(0B00000000);
   571  0765  3000               	movlw	0
   572  0766  254A               	fcall	_LCDInit
   573  0767                     L1:	
   574                           
   575                           ;LCDTest.c: 78: (LCDByte(0b00000001,0));
   576  0767  01F5               	clrf	LCDByte@isdata
   577  0768  3001               	movlw	1
   578  0769  250C               	fcall	_LCDByte
   579                           
   580                           ;LCDTest.c: 81: LCDWriteString("NITIN N. SANGALE");
   581  076A  3001               	movlw	(STR_1-__stringbase)& (0+255)
   582  076B  24D4               	fcall	_LCDWriteString
   583                           
   584                           ;LCDTest.c: 82: LCDGotoXY(4,1);
   585  076C  01FC               	clrf	LCDGotoXY@y
   586  076D  0AFC               	incf	LCDGotoXY@y,f
   587  076E  3004               	movlw	4
   588  076F  24B3               	fcall	_LCDGotoXY
   589                           
   590                           ;LCDTest.c: 83: LCDWriteInt(hrs,2);
   591  0770  1283               	bcf	3,5	;RP0=0, select bank0
   592  0771  1303               	bcf	3,6	;RP1=0, select bank0
   593  0772  0834               	movf	main@hrs+1,w
   594  0773  01A1               	clrf	LCDWriteInt@val+1
   595  0774  07A1               	addwf	LCDWriteInt@val+1,f
   596  0775  0833               	movf	main@hrs,w
   597  0776  01A0               	clrf	LCDWriteInt@val
   598  0777  07A0               	addwf	LCDWriteInt@val,f
   599  0778  3002               	movlw	2
   600  0779  00AC               	movwf	??_main
   601  077A  082C               	movf	??_main,w
   602  077B  00A2               	movwf	LCDWriteInt@field_length
   603  077C  2688               	fcall	_LCDWriteInt
   604                           
   605                           ;LCDTest.c: 84: LCDGotoXY(6,1);
   606  077D  01FC               	clrf	LCDGotoXY@y
   607  077E  0AFC               	incf	LCDGotoXY@y,f
   608  077F  3006               	movlw	6
   609  0780  24B3               	fcall	_LCDGotoXY
   610                           
   611                           ;LCDTest.c: 85: LCDWriteString(":");
   612  0781  3012               	movlw	(STR_2-__stringbase)& (0+255)
   613  0782  24D4               	fcall	_LCDWriteString
   614                           
   615                           ;LCDTest.c: 86: LCDGotoXY(7,1);
   616  0783  01FC               	clrf	LCDGotoXY@y
   617  0784  0AFC               	incf	LCDGotoXY@y,f
   618  0785  3007               	movlw	7
   619  0786  24B3               	fcall	_LCDGotoXY
   620                           
   621                           ;LCDTest.c: 87: LCDWriteInt(mins,2);
   622  0787  1283               	bcf	3,5	;RP0=0, select bank0
   623  0788  1303               	bcf	3,6	;RP1=0, select bank0
   624  0789  0832               	movf	main@mins+1,w
   625  078A  01A1               	clrf	LCDWriteInt@val+1
   626  078B  07A1               	addwf	LCDWriteInt@val+1,f
   627  078C  0831               	movf	main@mins,w
   628  078D  01A0               	clrf	LCDWriteInt@val
   629  078E  07A0               	addwf	LCDWriteInt@val,f
   630  078F  3002               	movlw	2
   631  0790  00AC               	movwf	??_main
   632  0791  082C               	movf	??_main,w
   633  0792  00A2               	movwf	LCDWriteInt@field_length
   634  0793  2688               	fcall	_LCDWriteInt
   635                           
   636                           ;LCDTest.c: 88: LCDGotoXY(9,1);
   637  0794  01FC               	clrf	LCDGotoXY@y
   638  0795  0AFC               	incf	LCDGotoXY@y,f
   639  0796  3009               	movlw	9
   640  0797  24B3               	fcall	_LCDGotoXY
   641                           
   642                           ;LCDTest.c: 89: LCDWriteString(":");
   643  0798  3012               	movlw	(STR_2-__stringbase)& (0+255)
   644  0799  24D4               	fcall	_LCDWriteString
   645                           
   646                           ;LCDTest.c: 90: LCDGotoXY(10,1);
   647  079A  01FC               	clrf	LCDGotoXY@y
   648  079B  0AFC               	incf	LCDGotoXY@y,f
   649  079C  300A               	movlw	10
   650  079D  24B3               	fcall	_LCDGotoXY
   651                           
   652                           ;LCDTest.c: 91: LCDWriteInt(secs,2);
   653  079E  1283               	bcf	3,5	;RP0=0, select bank0
   654  079F  1303               	bcf	3,6	;RP1=0, select bank0
   655  07A0  0830               	movf	main@secs+1,w
   656  07A1  01A1               	clrf	LCDWriteInt@val+1
   657  07A2  07A1               	addwf	LCDWriteInt@val+1,f
   658  07A3  082F               	movf	main@secs,w
   659  07A4  01A0               	clrf	LCDWriteInt@val
   660  07A5  07A0               	addwf	LCDWriteInt@val,f
   661  07A6  3002               	movlw	2
   662  07A7  00AC               	movwf	??_main
   663  07A8  082C               	movf	??_main,w
   664  07A9  00A2               	movwf	LCDWriteInt@field_length
   665  07AA  2688               	fcall	_LCDWriteInt
   666                           
   667                           ;LCDTest.c: 94: {
   668                           ;LCDTest.c: 95: My_Delay(1);
   669                           
   670                           ;LCDTest.c: 93: while(1)
   671  07AB  3001               	movlw	1
   672  07AC  249B               	fcall	_My_Delay
   673                           
   674                           ;LCDTest.c: 96: secs++;
   675  07AD  3001               	movlw	1
   676  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   677  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   678  07B0  07AF               	addwf	main@secs,f
   679  07B1  1803               	skipnc
   680  07B2  0AB0               	incf	main@secs+1,f
   681  07B3  3000               	movlw	0
   682  07B4  07B0               	addwf	main@secs+1,f
   683                           
   684                           ;LCDTest.c: 97: if(secs == 60)
   685  07B5  303C               	movlw	60
   686  07B6  062F               	xorwf	main@secs,w
   687  07B7  0430               	iorwf	main@secs+1,w
   688  07B8  1D03               	skipz
   689  07B9  2F67               	goto	L1
   690                           
   691                           ;LCDTest.c: 98: {
   692                           ;LCDTest.c: 99: secs = 0;
   693  07BA  01AF               	clrf	main@secs
   694  07BB  01B0               	clrf	main@secs+1
   695                           
   696                           ;LCDTest.c: 100: mins++;
   697  07BC  3001               	movlw	1
   698  07BD  07B1               	addwf	main@mins,f
   699  07BE  1803               	skipnc
   700  07BF  0AB2               	incf	main@mins+1,f
   701  07C0  3000               	movlw	0
   702  07C1  07B2               	addwf	main@mins+1,f
   703                           
   704                           ;LCDTest.c: 101: if(mins == 60)
   705  07C2  303C               	movlw	60
   706  07C3  0631               	xorwf	main@mins,w
   707  07C4  0432               	iorwf	main@mins+1,w
   708  07C5  1D03               	skipz
   709  07C6  2F67               	goto	L1
   710                           
   711                           ;LCDTest.c: 102: {
   712                           ;LCDTest.c: 103: mins = 0;
   713  07C7  01B1               	clrf	main@mins
   714  07C8  01B2               	clrf	main@mins+1
   715                           
   716                           ;LCDTest.c: 104: hrs++;
   717  07C9  3001               	movlw	1
   718  07CA  07B3               	addwf	main@hrs,f
   719  07CB  1803               	skipnc
   720  07CC  0AB4               	incf	main@hrs+1,f
   721  07CD  3000               	movlw	0
   722  07CE  07B4               	addwf	main@hrs+1,f
   723                           
   724                           ;LCDTest.c: 105: if(hrs == 13)
   725  07CF  300D               	movlw	13
   726  07D0  0633               	xorwf	main@hrs,w
   727  07D1  0434               	iorwf	main@hrs+1,w
   728  07D2  1D03               	skipz
   729  07D3  2F67               	goto	L1
   730                           
   731                           ;LCDTest.c: 106: hrs = 1;
   732  07D4  3001               	movlw	1
   733  07D5  00B3               	movwf	main@hrs
   734  07D6  3000               	movlw	0
   735  07D7  00B4               	movwf	main@hrs+1
   736  07D8  2F67               	goto	L1
   737  07D9                     __end_of_main:	
   738                           ;LCDTest.c: 123: LCDWriteInt(secs,2);
   739                           
   740                           ;LCDTest.c: 122: LCDGotoXY(10,1);
   741                           
   742                           ;LCDTest.c: 121: LCDWriteString(":");
   743                           
   744                           ;LCDTest.c: 120: LCDGotoXY(9,1);
   745                           
   746                           ;LCDTest.c: 119: LCDWriteInt(mins,2);
   747                           
   748                           ;LCDTest.c: 118: LCDGotoXY(7,1);
   749                           
   750                           ;LCDTest.c: 117: LCDWriteString(":");
   751                           
   752                           ;LCDTest.c: 116: LCDGotoXY(6,1);
   753                           
   754                           ;LCDTest.c: 115: LCDWriteInt(hrs,2);
   755                           
   756                           ;LCDTest.c: 114: LCDGotoXY(4,1);
   757                           
   758                           ;LCDTest.c: 113: LCDWriteString("NITIN N. SANGALE");
   759                           
   760                           ;LCDTest.c: 107: }
   761                           ;LCDTest.c: 108: }
   762                           ;LCDTest.c: 110: (LCDByte(0b00000001,0));
   763                           
   764                           
   765                           	psect	text1
   766  049B                     __ptext1:	
   767 ;; *************** function _My_Delay *****************
   768 ;; Defined at:
   769 ;;		line 33 in file "E:\Study Material\XC8 PROJECTS\LCD Test\LCDTest.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  sec             1    wreg     unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  sec             1    1[COMMON] unsigned char 
   774 ;;  Count           1    2[COMMON] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;		None               void
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1
   784 ;;      Params:         0       0       0
   785 ;;      Locals:         2       0       0
   786 ;;      Temps:          1       0       0
   787 ;;      Totals:         3       0       0
   788 ;;Total ram usage:        3 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _My_Delay
   799  049B                     _My_Delay:	
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _My_Delay: [wreg+status,2+status,0]
   803                           ;My_Delay@sec stored from wreg
   804  049B  00F1               	movwf	My_Delay@sec
   805  049C                     l1287:	
   806                           ;LCDTest.c: 35: while(sec > 0)
   807                           
   808  049C  08F1               	movf	My_Delay@sec,f
   809  049D  1903               	btfsc	3,2
   810  049E  0008               	return
   811                           
   812                           ;LCDTest.c: 36: {
   813                           ;LCDTest.c: 37: char Count = 0;
   814  049F  01F2               	clrf	My_Delay@Count
   815                           
   816                           ;LCDTest.c: 38: T1CON = 0b00000001;
   817  04A0  3001               	movlw	1
   818  04A1  1283               	bcf	3,5	;RP0=0, select bank0
   819  04A2  1303               	bcf	3,6	;RP1=0, select bank0
   820  04A3  0090               	movwf	16	;volatile
   821  04A4                     l1283:	
   822                           ;LCDTest.c: 39: while(Count != 38)
   823                           
   824  04A4  0872               	movf	My_Delay@Count,w
   825  04A5  3A26               	xorlw	38
   826  04A6  1903               	btfsc	3,2
   827  04A7  2CB0               	goto	l1285
   828  04A8                     l96:	
   829                           ;LCDTest.c: 40: {
   830                           ;LCDTest.c: 41: while (!TMR1IF);
   831                           
   832  04A8  1C0C               	btfss	12,0	;volatile
   833  04A9  2CA8               	goto	l96
   834                           
   835                           ;LCDTest.c: 42: TMR1IF = 0;
   836  04AA  100C               	bcf	12,0	;volatile
   837                           
   838                           ;LCDTest.c: 43: Count ++;
   839  04AB  3001               	movlw	1
   840  04AC  00F0               	movwf	??_My_Delay
   841  04AD  0870               	movf	??_My_Delay,w
   842  04AE  07F2               	addwf	My_Delay@Count,f
   843  04AF  2CA4               	goto	l1283
   844  04B0                     l1285:	
   845                           
   846                           ;LCDTest.c: 44: }
   847                           ;LCDTest.c: 45: sec--;
   848  04B0  3001               	movlw	1
   849  04B1  02F1               	subwf	My_Delay@sec,f
   850  04B2  2C9C               	goto	l1287
   851  04B3                     __end_of_My_Delay:	
   852                           
   853                           	psect	text2
   854  04D4                     __ptext2:	
   855 ;; *************** function _LCDWriteString *****************
   856 ;; Defined at:
   857 ;;		line 253 in file "E:\Study Material\XC8 PROJECTS\LCD Test\lcd_hd44780_pic16.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  msg             1    wreg     PTR const unsigned char 
   860 ;;		 -> STR_6(2), STR_5(2), STR_4(17), STR_3(2), 
   861 ;;		 -> STR_2(2), STR_1(17), 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
   864 ;;		 -> STR_6(2), STR_5(2), STR_4(17), STR_3(2), 
   865 ;;		 -> STR_2(2), STR_1(17), 
   866 ;;  cc              1    0[BANK0 ] char 
   867 ;; Return value:  Size  Location     Type
   868 ;;		None               void
   869 ;; Registers used:
   870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1
   876 ;;      Params:         0       0       0
   877 ;;      Locals:         0       2       0
   878 ;;      Temps:          1       0       0
   879 ;;      Totals:         1       2       0
   880 ;;Total ram usage:        3 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    2
   883 ;; This function calls:
   884 ;;		_LCDByte
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _LCDWriteString
   892  04D4                     _LCDWriteString:	
   893                           
   894                           ;incstack = 0
   895                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   896                           ;LCDWriteString@msg stored from wreg
   897  04D4  1283               	bcf	3,5	;RP0=0, select bank0
   898  04D5  1303               	bcf	3,6	;RP1=0, select bank0
   899  04D6  00A1               	movwf	LCDWriteString@msg
   900  04D7                     l1215:	
   901                           ;lcd_hd44780_pic16.c: 283: while(*msg!='\0')
   902                           
   903  04D7  0821               	movf	LCDWriteString@msg,w
   904  04D8  0084               	movwf	4
   905  04D9  2001               	fcall	stringdir
   906  04DA  3800               	iorlw	0
   907  04DB  1903               	btfsc	3,2
   908  04DC  0008               	return
   909                           
   910                           ;lcd_hd44780_pic16.c: 284: {
   911                           ;lcd_hd44780_pic16.c: 286: if(*msg=='%')
   912  04DD  0821               	movf	LCDWriteString@msg,w
   913  04DE  0084               	movwf	4
   914  04DF  2001               	fcall	stringdir
   915  04E0  3A25               	xorlw	37
   916  04E1  1D03               	skipz
   917  04E2  2CFD               	goto	l1211
   918                           
   919                           ;lcd_hd44780_pic16.c: 287: {
   920                           ;lcd_hd44780_pic16.c: 288: msg++;
   921  04E3  3001               	movlw	1
   922  04E4  00FC               	movwf	??_LCDWriteString
   923  04E5  087C               	movf	??_LCDWriteString,w
   924  04E6  07A1               	addwf	LCDWriteString@msg,f
   925                           
   926                           ;lcd_hd44780_pic16.c: 289: int8_t cc=*msg-'0';
   927  04E7  0821               	movf	LCDWriteString@msg,w
   928  04E8  0084               	movwf	4
   929  04E9  2001               	fcall	stringdir
   930  04EA  3ED0               	addlw	-48
   931  04EB  00FC               	movwf	??_LCDWriteString
   932  04EC  087C               	movf	??_LCDWriteString,w
   933  04ED  00A0               	movwf	LCDWriteString@cc
   934                           
   935                           ;lcd_hd44780_pic16.c: 291: if(cc>=0 && cc<=7)
   936  04EE  1BA0               	btfsc	LCDWriteString@cc,7
   937  04EF  2CF9               	goto	l1207
   938  04F0  0820               	movf	LCDWriteString@cc,w
   939  04F1  3A80               	xorlw	128
   940  04F2  3E78               	addlw	-136
   941  04F3  1803               	skipnc
   942  04F4  2CF9               	goto	l1207
   943                           
   944                           ;lcd_hd44780_pic16.c: 292: {
   945                           ;lcd_hd44780_pic16.c: 293: (LCDByte(cc,1));
   946  04F5  01F5               	clrf	LCDByte@isdata
   947  04F6  0AF5               	incf	LCDByte@isdata,f
   948  04F7  0820               	movf	LCDWriteString@cc,w
   949  04F8  2D04               	goto	L2
   950  04F9                     l1207:	
   951                           ;lcd_hd44780_pic16.c: 294: }
   952                           
   953                           
   954                           ;lcd_hd44780_pic16.c: 295: else
   955                           ;lcd_hd44780_pic16.c: 296: {
   956                           ;lcd_hd44780_pic16.c: 297: (LCDByte('%',1));
   957  04F9  01F5               	clrf	LCDByte@isdata
   958  04FA  0AF5               	incf	LCDByte@isdata,f
   959  04FB  3025               	movlw	37
   960  04FC  250C               	fcall	_LCDByte
   961  04FD                     l1211:	
   962                           ;lcd_hd44780_pic16.c: 299: }
   963                           ;lcd_hd44780_pic16.c: 300: }
   964                           
   965                           ;lcd_hd44780_pic16.c: 298: (LCDByte(*msg,1));
   966                           
   967                           
   968                           ;lcd_hd44780_pic16.c: 301: else
   969                           ;lcd_hd44780_pic16.c: 302: {
   970                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
   971  04FD  01F5               	clrf	LCDByte@isdata
   972  04FE  0AF5               	incf	LCDByte@isdata,f
   973  04FF  1283               	bcf	3,5	;RP0=0, select bank0
   974  0500  1303               	bcf	3,6	;RP1=0, select bank0
   975  0501  0821               	movf	LCDWriteString@msg,w
   976  0502  0084               	movwf	4
   977  0503  2001               	fcall	stringdir
   978  0504                     L2:	
   979  0504  250C               	fcall	_LCDByte
   980                           
   981                           ;lcd_hd44780_pic16.c: 304: }
   982                           ;lcd_hd44780_pic16.c: 305: msg++;
   983  0505  3001               	movlw	1
   984  0506  00FC               	movwf	??_LCDWriteString
   985  0507  087C               	movf	??_LCDWriteString,w
   986  0508  1283               	bcf	3,5	;RP0=0, select bank0
   987  0509  1303               	bcf	3,6	;RP1=0, select bank0
   988  050A  07A1               	addwf	LCDWriteString@msg,f
   989  050B  2CD7               	goto	l1215
   990  050C                     __end_of_LCDWriteString:	
   991                           
   992                           	psect	text3
   993  0688                     __ptext3:	
   994 ;; *************** function _LCDWriteInt *****************
   995 ;; Defined at:
   996 ;;		line 309 in file "E:\Study Material\XC8 PROJECTS\LCD Test\lcd_hd44780_pic16.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  val             2    0[BANK0 ] int 
   999 ;;  field_length    1    2[BANK0 ] char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  str             5    3[BANK0 ] unsigned char [5]
  1002 ;;  i               2   10[BANK0 ] int 
  1003 ;;  j               2    8[BANK0 ] int 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;		None               void
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1
  1013 ;;      Params:         0       3       0
  1014 ;;      Locals:         0       9       0
  1015 ;;      Temps:          2       0       0
  1016 ;;      Totals:         2      12       0
  1017 ;;Total ram usage:       14 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    2
  1020 ;; This function calls:
  1021 ;;		_LCDByte
  1022 ;;		___awdiv
  1023 ;;		___awmod
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _LCDWriteInt
  1031  0688                     _LCDWriteInt:	
  1032                           
  1033                           ;lcd_hd44780_pic16.c: 322: char str[5]={0,0,0,0,0};
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1037  0688  3023               	movlw	LCDWriteInt@str& (0+255)
  1038  0689  0084               	movwf	4
  1039  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1040  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1041  068C  0845               	movf	LCDWriteInt@F784,w
  1042  068D  1383               	bcf	3,7	;select IRP bank0
  1043  068E  0080               	movwf	0
  1044  068F  0A84               	incf	4,f
  1045  0690  0846               	movf	LCDWriteInt@F784+1,w
  1046  0691  0080               	movwf	0
  1047  0692  0A84               	incf	4,f
  1048  0693  0847               	movf	LCDWriteInt@F784+2,w
  1049  0694  0080               	movwf	0
  1050  0695  0A84               	incf	4,f
  1051  0696  0848               	movf	LCDWriteInt@F784+3,w
  1052  0697  0080               	movwf	0
  1053  0698  0A84               	incf	4,f
  1054  0699  0849               	movf	LCDWriteInt@F784+4,w
  1055  069A  0080               	movwf	0
  1056                           
  1057                           ;lcd_hd44780_pic16.c: 323: int i=4,j=0;
  1058  069B  3004               	movlw	4
  1059  069C  00AA               	movwf	LCDWriteInt@i
  1060  069D  3000               	movlw	0
  1061  069E  00AB               	movwf	LCDWriteInt@i+1
  1062  069F  01A8               	clrf	LCDWriteInt@j
  1063  06A0  01A9               	clrf	LCDWriteInt@j+1
  1064                           
  1065                           ;lcd_hd44780_pic16.c: 326: if(val<0)
  1066  06A1  1FA1               	btfss	LCDWriteInt@val+1,7
  1067  06A2  2EAE               	goto	l1235
  1068                           
  1069                           ;lcd_hd44780_pic16.c: 327: {
  1070                           ;lcd_hd44780_pic16.c: 328: (LCDByte('-',1));
  1071  06A3  01F5               	clrf	LCDByte@isdata
  1072  06A4  0AF5               	incf	LCDByte@isdata,f
  1073  06A5  302D               	movlw	45
  1074  06A6  250C               	fcall	_LCDByte
  1075                           
  1076                           ;lcd_hd44780_pic16.c: 329: val=val*-1;
  1077  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1078  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1079  06A9  09A0               	comf	LCDWriteInt@val,f
  1080  06AA  09A1               	comf	LCDWriteInt@val+1,f
  1081  06AB  0AA0               	incf	LCDWriteInt@val,f
  1082  06AC  1903               	skipnz
  1083  06AD  0AA1               	incf	LCDWriteInt@val+1,f
  1084  06AE                     l1235:	
  1085                           ;lcd_hd44780_pic16.c: 330: }
  1086                           ;lcd_hd44780_pic16.c: 332: while(val)
  1087                           
  1088  06AE  0821               	movf	LCDWriteInt@val+1,w
  1089  06AF  0420               	iorwf	LCDWriteInt@val,w
  1090  06B0  1903               	btfsc	3,2
  1091  06B1  2EE1               	goto	l1237
  1092                           
  1093                           ;lcd_hd44780_pic16.c: 333: {
  1094                           ;lcd_hd44780_pic16.c: 334: str[i]=val%10;
  1095  06B2  300A               	movlw	10
  1096  06B3  00F0               	movwf	___awmod@divisor
  1097  06B4  3000               	movlw	0
  1098  06B5  00F1               	movwf	___awmod@divisor+1
  1099  06B6  0821               	movf	LCDWriteInt@val+1,w
  1100  06B7  01F3               	clrf	___awmod@dividend+1
  1101  06B8  07F3               	addwf	___awmod@dividend+1,f
  1102  06B9  0820               	movf	LCDWriteInt@val,w
  1103  06BA  01F2               	clrf	___awmod@dividend
  1104  06BB  07F2               	addwf	___awmod@dividend,f
  1105  06BC  25E0               	fcall	___awmod
  1106  06BD  0870               	movf	?___awmod,w
  1107  06BE  00FC               	movwf	??_LCDWriteInt
  1108  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1109  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1110  06C1  082A               	movf	LCDWriteInt@i,w
  1111  06C2  3E23               	addlw	LCDWriteInt@str& (0+255)
  1112  06C3  0084               	movwf	4
  1113  06C4  087C               	movf	??_LCDWriteInt,w
  1114  06C5  1383               	bcf	3,7	;select IRP bank0
  1115  06C6  0080               	movwf	0
  1116                           
  1117                           ;lcd_hd44780_pic16.c: 335: val=val/10;
  1118  06C7  300A               	movlw	10
  1119  06C8  00F0               	movwf	___awdiv@divisor
  1120  06C9  3000               	movlw	0
  1121  06CA  00F1               	movwf	___awdiv@divisor+1
  1122  06CB  0821               	movf	LCDWriteInt@val+1,w
  1123  06CC  01F3               	clrf	___awdiv@dividend+1
  1124  06CD  07F3               	addwf	___awdiv@dividend+1,f
  1125  06CE  0820               	movf	LCDWriteInt@val,w
  1126  06CF  01F2               	clrf	___awdiv@dividend
  1127  06D0  07F2               	addwf	___awdiv@dividend,f
  1128  06D1  262D               	fcall	___awdiv
  1129  06D2  0871               	movf	?___awdiv+1,w
  1130  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1131  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1132  06D5  01A1               	clrf	LCDWriteInt@val+1
  1133  06D6  07A1               	addwf	LCDWriteInt@val+1,f
  1134  06D7  0870               	movf	?___awdiv,w
  1135  06D8  01A0               	clrf	LCDWriteInt@val
  1136  06D9  07A0               	addwf	LCDWriteInt@val,f
  1137                           
  1138                           ;lcd_hd44780_pic16.c: 336: i--;
  1139  06DA  30FF               	movlw	255
  1140  06DB  07AA               	addwf	LCDWriteInt@i,f
  1141  06DC  1803               	skipnc
  1142  06DD  0AAB               	incf	LCDWriteInt@i+1,f
  1143  06DE  30FF               	movlw	255
  1144  06DF  07AB               	addwf	LCDWriteInt@i+1,f
  1145  06E0  2EAE               	goto	l1235
  1146  06E1                     l1237:	
  1147                           
  1148                           ;lcd_hd44780_pic16.c: 337: }
  1149                           ;lcd_hd44780_pic16.c: 338: if(field_length==-1)
  1150  06E1  0822               	movf	LCDWriteInt@field_length,w
  1151  06E2  3AFF               	xorlw	-1
  1152  06E3  1903               	btfsc	3,2
  1153  06E4  2EEC               	goto	l1243
  1154  06E5  2EF4               	goto	l1245
  1155  06E6                     l1241:	
  1156                           ;lcd_hd44780_pic16.c: 339: while(str[j]==0) j++;
  1157                           
  1158  06E6  3001               	movlw	1
  1159  06E7  07A8               	addwf	LCDWriteInt@j,f
  1160  06E8  1803               	skipnc
  1161  06E9  0AA9               	incf	LCDWriteInt@j+1,f
  1162  06EA  3000               	movlw	0
  1163  06EB  07A9               	addwf	LCDWriteInt@j+1,f
  1164  06EC                     l1243:	
  1165  06EC  0828               	movf	LCDWriteInt@j,w
  1166  06ED  3E23               	addlw	LCDWriteInt@str& (0+255)
  1167  06EE  0084               	movwf	4
  1168  06EF  1383               	bcf	3,7	;select IRP bank0
  1169  06F0  0880               	movf	0,f
  1170  06F1  1D03               	btfss	3,2
  1171  06F2  2F06               	goto	l56
  1172  06F3  2EE6               	goto	l1241
  1173  06F4                     l1245:	
  1174                           
  1175                           ;lcd_hd44780_pic16.c: 340: else
  1176                           ;lcd_hd44780_pic16.c: 341: j=5-field_length;
  1177  06F4  0822               	movf	LCDWriteInt@field_length,w
  1178  06F5  00FC               	movwf	??_LCDWriteInt
  1179  06F6  01FD               	clrf	??_LCDWriteInt+1
  1180  06F7  1BFC               	btfsc	??_LCDWriteInt,7
  1181  06F8  03FD               	decf	??_LCDWriteInt+1,f
  1182  06F9  09FC               	comf	??_LCDWriteInt,f
  1183  06FA  09FD               	comf	??_LCDWriteInt+1,f
  1184  06FB  0AFC               	incf	??_LCDWriteInt,f
  1185  06FC  1903               	skipnz
  1186  06FD  0AFD               	incf	??_LCDWriteInt+1,f
  1187  06FE  087C               	movf	??_LCDWriteInt,w
  1188  06FF  3E05               	addlw	5
  1189  0700  00A8               	movwf	LCDWriteInt@j
  1190  0701  087D               	movf	??_LCDWriteInt+1,w
  1191  0702  1803               	skipnc
  1192  0703  3E01               	addlw	1
  1193  0704  3E00               	addlw	0
  1194  0705  00A9               	movwf	LCDWriteInt@j+1
  1195  0706                     l56:	
  1196                           
  1197                           ;lcd_hd44780_pic16.c: 344: for(i=j;i<5;i++)
  1198  0706  0829               	movf	LCDWriteInt@j+1,w
  1199  0707  01AB               	clrf	LCDWriteInt@i+1
  1200  0708  07AB               	addwf	LCDWriteInt@i+1,f
  1201  0709  0828               	movf	LCDWriteInt@j,w
  1202  070A  01AA               	clrf	LCDWriteInt@i
  1203  070B  07AA               	addwf	LCDWriteInt@i,f
  1204  070C                     L3:	
  1205  070C  082B               	movf	LCDWriteInt@i+1,w
  1206  070D  3A80               	xorlw	128
  1207  070E  00FF               	movwf	127
  1208  070F  3080               	movlw	128
  1209  0710  027F               	subwf	127,w
  1210  0711  1D03               	skipz
  1211  0712  2F15               	goto	u785
  1212  0713  3005               	movlw	5
  1213  0714  022A               	subwf	LCDWriteInt@i,w
  1214  0715                     u785:	
  1215  0715  1803               	btfsc	3,0
  1216  0716  0008               	return
  1217                           
  1218                           ;lcd_hd44780_pic16.c: 345: {
  1219                           ;lcd_hd44780_pic16.c: 346: (LCDByte(48+str[i],1));
  1220  0717  01F5               	clrf	LCDByte@isdata
  1221  0718  0AF5               	incf	LCDByte@isdata,f
  1222  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1223  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1224  071B  082A               	movf	LCDWriteInt@i,w
  1225  071C  3E23               	addlw	LCDWriteInt@str& (0+255)
  1226  071D  0084               	movwf	4
  1227  071E  1383               	bcf	3,7	;select IRP bank0
  1228  071F  0800               	movf	0,w
  1229  0720  3E30               	addlw	48
  1230  0721  250C               	fcall	_LCDByte
  1231  0722  3001               	movlw	1
  1232  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0725  07AA               	addwf	LCDWriteInt@i,f
  1235  0726  1803               	skipnc
  1236  0727  0AAB               	incf	LCDWriteInt@i+1,f
  1237  0728  3000               	movlw	0
  1238  0729  07AB               	addwf	LCDWriteInt@i+1,f
  1239  072A  2F0C               	goto	L3
  1240  072B                     __end_of_LCDWriteInt:	
  1241                           
  1242                           	psect	text4
  1243  05E0                     __ptext4:	
  1244 ;; *************** function ___awmod *****************
  1245 ;; Defined at:
  1246 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  divisor         2    0[COMMON] int 
  1249 ;;  dividend        2    2[COMMON] int 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  sign            1    6[COMMON] unsigned char 
  1252 ;;  counter         1    5[COMMON] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2    0[COMMON] int 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1
  1262 ;;      Params:         4       0       0
  1263 ;;      Locals:         2       0       0
  1264 ;;      Temps:          1       0       0
  1265 ;;      Totals:         7       0       0
  1266 ;;Total ram usage:        7 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_LCDWriteInt
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function ___awmod
  1277  05E0                     ___awmod:	
  1278                           
  1279                           ;incstack = 0
  1280                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1281  05E0  01F6               	clrf	___awmod@sign
  1282  05E1  1FF3               	btfss	___awmod@dividend+1,7
  1283  05E2  2DEA               	goto	l1113
  1284  05E3  09F2               	comf	___awmod@dividend,f
  1285  05E4  09F3               	comf	___awmod@dividend+1,f
  1286  05E5  0AF2               	incf	___awmod@dividend,f
  1287  05E6  1903               	skipnz
  1288  05E7  0AF3               	incf	___awmod@dividend+1,f
  1289  05E8  01F6               	clrf	___awmod@sign
  1290  05E9  0AF6               	incf	___awmod@sign,f
  1291  05EA                     l1113:	
  1292  05EA  1FF1               	btfss	___awmod@divisor+1,7
  1293  05EB  2DF1               	goto	l1117
  1294  05EC  09F0               	comf	___awmod@divisor,f
  1295  05ED  09F1               	comf	___awmod@divisor+1,f
  1296  05EE  0AF0               	incf	___awmod@divisor,f
  1297  05EF  1903               	skipnz
  1298  05F0  0AF1               	incf	___awmod@divisor+1,f
  1299  05F1                     l1117:	
  1300  05F1  0871               	movf	___awmod@divisor+1,w
  1301  05F2  0470               	iorwf	___awmod@divisor,w
  1302  05F3  1903               	skipnz
  1303  05F4  2E1E               	goto	l1135
  1304  05F5  01F5               	clrf	___awmod@counter
  1305  05F6  0AF5               	incf	___awmod@counter,f
  1306  05F7                     l1125:	
  1307  05F7  1BF1               	btfsc	___awmod@divisor+1,7
  1308  05F8  2E05               	goto	l1127
  1309  05F9  3001               	movlw	1
  1310  05FA                     u625:	
  1311  05FA  1003               	clrc
  1312  05FB  0DF0               	rlf	___awmod@divisor,f
  1313  05FC  0DF1               	rlf	___awmod@divisor+1,f
  1314  05FD  3EFF               	addlw	-1
  1315  05FE  1D03               	skipz
  1316  05FF  2DFA               	goto	u625
  1317  0600  3001               	movlw	1
  1318  0601  00F4               	movwf	??___awmod
  1319  0602  0874               	movf	??___awmod,w
  1320  0603  07F5               	addwf	___awmod@counter,f
  1321  0604  2DF7               	goto	l1125
  1322  0605                     l1127:	
  1323  0605  0871               	movf	___awmod@divisor+1,w
  1324  0606  0273               	subwf	___awmod@dividend+1,w
  1325  0607  1D03               	skipz
  1326  0608  2E0B               	goto	u645
  1327  0609  0870               	movf	___awmod@divisor,w
  1328  060A  0272               	subwf	___awmod@dividend,w
  1329  060B                     u645:	
  1330  060B  1C03               	skipc
  1331  060C  2E13               	goto	l1131
  1332  060D  0870               	movf	___awmod@divisor,w
  1333  060E  02F2               	subwf	___awmod@dividend,f
  1334  060F  0871               	movf	___awmod@divisor+1,w
  1335  0610  1C03               	skipc
  1336  0611  03F3               	decf	___awmod@dividend+1,f
  1337  0612  02F3               	subwf	___awmod@dividend+1,f
  1338  0613                     l1131:	
  1339  0613  3001               	movlw	1
  1340  0614                     u655:	
  1341  0614  1003               	clrc
  1342  0615  0CF1               	rrf	___awmod@divisor+1,f
  1343  0616  0CF0               	rrf	___awmod@divisor,f
  1344  0617  3EFF               	addlw	-1
  1345  0618  1D03               	skipz
  1346  0619  2E14               	goto	u655
  1347  061A  3001               	movlw	1
  1348  061B  02F5               	subwf	___awmod@counter,f
  1349  061C  1D03               	btfss	3,2
  1350  061D  2E05               	goto	l1127
  1351  061E                     l1135:	
  1352  061E  0876               	movf	___awmod@sign,w
  1353  061F  1903               	btfsc	3,2
  1354  0620  2E26               	goto	l1139
  1355  0621  09F2               	comf	___awmod@dividend,f
  1356  0622  09F3               	comf	___awmod@dividend+1,f
  1357  0623  0AF2               	incf	___awmod@dividend,f
  1358  0624  1903               	skipnz
  1359  0625  0AF3               	incf	___awmod@dividend+1,f
  1360  0626                     l1139:	
  1361  0626  0873               	movf	___awmod@dividend+1,w
  1362  0627  01F1               	clrf	?___awmod+1
  1363  0628  07F1               	addwf	?___awmod+1,f
  1364  0629  0872               	movf	___awmod@dividend,w
  1365  062A  01F0               	clrf	?___awmod
  1366  062B  07F0               	addwf	?___awmod,f
  1367  062C  0008               	return
  1368  062D                     __end_of___awmod:	
  1369                           
  1370                           	psect	text5
  1371  062D                     __ptext5:	
  1372 ;; *************** function ___awdiv *****************
  1373 ;; Defined at:
  1374 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  divisor         2    0[COMMON] int 
  1377 ;;  dividend        2    2[COMMON] int 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  quotient        2    7[COMMON] int 
  1380 ;;  sign            1    6[COMMON] unsigned char 
  1381 ;;  counter         1    5[COMMON] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2    0[COMMON] int 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1
  1391 ;;      Params:         4       0       0
  1392 ;;      Locals:         4       0       0
  1393 ;;      Temps:          1       0       0
  1394 ;;      Totals:         9       0       0
  1395 ;;Total ram usage:        9 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_LCDWriteInt
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           
  1405                           ;psect for function ___awdiv
  1406  062D                     ___awdiv:	
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1410  062D  01F6               	clrf	___awdiv@sign
  1411  062E  1FF1               	btfss	___awdiv@divisor+1,7
  1412  062F  2E37               	goto	l1069
  1413  0630  09F0               	comf	___awdiv@divisor,f
  1414  0631  09F1               	comf	___awdiv@divisor+1,f
  1415  0632  0AF0               	incf	___awdiv@divisor,f
  1416  0633  1903               	skipnz
  1417  0634  0AF1               	incf	___awdiv@divisor+1,f
  1418  0635  01F6               	clrf	___awdiv@sign
  1419  0636  0AF6               	incf	___awdiv@sign,f
  1420  0637                     l1069:	
  1421  0637  1FF3               	btfss	___awdiv@dividend+1,7
  1422  0638  2E42               	goto	l1075
  1423  0639  09F2               	comf	___awdiv@dividend,f
  1424  063A  09F3               	comf	___awdiv@dividend+1,f
  1425  063B  0AF2               	incf	___awdiv@dividend,f
  1426  063C  1903               	skipnz
  1427  063D  0AF3               	incf	___awdiv@dividend+1,f
  1428  063E  3001               	movlw	1
  1429  063F  00F4               	movwf	??___awdiv
  1430  0640  0874               	movf	??___awdiv,w
  1431  0641  06F6               	xorwf	___awdiv@sign,f
  1432  0642                     l1075:	
  1433  0642  01F7               	clrf	___awdiv@quotient
  1434  0643  01F8               	clrf	___awdiv@quotient+1
  1435  0644  0871               	movf	___awdiv@divisor+1,w
  1436  0645  0470               	iorwf	___awdiv@divisor,w
  1437  0646  1903               	skipnz
  1438  0647  2E79               	goto	l1097
  1439  0648  01F5               	clrf	___awdiv@counter
  1440  0649  0AF5               	incf	___awdiv@counter,f
  1441  064A                     l1085:	
  1442  064A  1BF1               	btfsc	___awdiv@divisor+1,7
  1443  064B  2E58               	goto	l1087
  1444  064C  3001               	movlw	1
  1445  064D                     u525:	
  1446  064D  1003               	clrc
  1447  064E  0DF0               	rlf	___awdiv@divisor,f
  1448  064F  0DF1               	rlf	___awdiv@divisor+1,f
  1449  0650  3EFF               	addlw	-1
  1450  0651  1D03               	skipz
  1451  0652  2E4D               	goto	u525
  1452  0653  3001               	movlw	1
  1453  0654  00F4               	movwf	??___awdiv
  1454  0655  0874               	movf	??___awdiv,w
  1455  0656  07F5               	addwf	___awdiv@counter,f
  1456  0657  2E4A               	goto	l1085
  1457  0658                     l1087:	
  1458  0658  3001               	movlw	1
  1459  0659                     u545:	
  1460  0659  1003               	clrc
  1461  065A  0DF7               	rlf	___awdiv@quotient,f
  1462  065B  0DF8               	rlf	___awdiv@quotient+1,f
  1463  065C  3EFF               	addlw	-1
  1464  065D  1D03               	skipz
  1465  065E  2E59               	goto	u545
  1466  065F  0871               	movf	___awdiv@divisor+1,w
  1467  0660  0273               	subwf	___awdiv@dividend+1,w
  1468  0661  1D03               	skipz
  1469  0662  2E65               	goto	u555
  1470  0663  0870               	movf	___awdiv@divisor,w
  1471  0664  0272               	subwf	___awdiv@dividend,w
  1472  0665                     u555:	
  1473  0665  1C03               	skipc
  1474  0666  2E6E               	goto	l1093
  1475  0667  0870               	movf	___awdiv@divisor,w
  1476  0668  02F2               	subwf	___awdiv@dividend,f
  1477  0669  0871               	movf	___awdiv@divisor+1,w
  1478  066A  1C03               	skipc
  1479  066B  03F3               	decf	___awdiv@dividend+1,f
  1480  066C  02F3               	subwf	___awdiv@dividend+1,f
  1481  066D  1477               	bsf	___awdiv@quotient,0
  1482  066E                     l1093:	
  1483  066E  3001               	movlw	1
  1484  066F                     u565:	
  1485  066F  1003               	clrc
  1486  0670  0CF1               	rrf	___awdiv@divisor+1,f
  1487  0671  0CF0               	rrf	___awdiv@divisor,f
  1488  0672  3EFF               	addlw	-1
  1489  0673  1D03               	skipz
  1490  0674  2E6F               	goto	u565
  1491  0675  3001               	movlw	1
  1492  0676  02F5               	subwf	___awdiv@counter,f
  1493  0677  1D03               	btfss	3,2
  1494  0678  2E58               	goto	l1087
  1495  0679                     l1097:	
  1496  0679  0876               	movf	___awdiv@sign,w
  1497  067A  1903               	btfsc	3,2
  1498  067B  2E81               	goto	l1101
  1499  067C  09F7               	comf	___awdiv@quotient,f
  1500  067D  09F8               	comf	___awdiv@quotient+1,f
  1501  067E  0AF7               	incf	___awdiv@quotient,f
  1502  067F  1903               	skipnz
  1503  0680  0AF8               	incf	___awdiv@quotient+1,f
  1504  0681                     l1101:	
  1505  0681  0878               	movf	___awdiv@quotient+1,w
  1506  0682  01F1               	clrf	?___awdiv+1
  1507  0683  07F1               	addwf	?___awdiv+1,f
  1508  0684  0877               	movf	___awdiv@quotient,w
  1509  0685  01F0               	clrf	?___awdiv
  1510  0686  07F0               	addwf	?___awdiv,f
  1511  0687  0008               	return
  1512  0688                     __end_of___awdiv:	
  1513                           
  1514                           	psect	text6
  1515  054A                     __ptext6:	
  1516 ;; *************** function _LCDInit *****************
  1517 ;; Defined at:
  1518 ;;		line 195 in file "E:\Study Material\XC8 PROJECTS\LCD Test\lcd_hd44780_pic16.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  style           1    wreg     unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  style           1    0[BANK0 ] unsigned char 
  1523 ;;  __i             1    1[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;		None               void
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1
  1533 ;;      Params:         0       0       0
  1534 ;;      Locals:         0       2       0
  1535 ;;      Temps:          2       0       0
  1536 ;;      Totals:         2       2       0
  1537 ;;Total ram usage:        4 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    2
  1540 ;; This function calls:
  1541 ;;		_LCDBusyLoop
  1542 ;;		_LCDByte
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _LCDInit
  1550  054A                     _LCDInit:	
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1554                           ;LCDInit@style stored from wreg
  1555  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1556  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1557  054C  00A0               	movwf	LCDInit@style
  1558                           
  1559                           ;lcd_hd44780_pic16.c: 211: _delay((unsigned long)((30)*(4000000/4000.0)));
  1560  054D  3027               	movlw	39
  1561  054E  00FD               	movwf	??_LCDInit+1
  1562  054F  30F5               	movlw	245
  1563  0550  00FC               	movwf	??_LCDInit
  1564  0551                     u897:	
  1565  0551  0BFC               	decfsz	??_LCDInit,f
  1566  0552  2D51               	goto	u897
  1567  0553  0BFD               	decfsz	??_LCDInit+1,f
  1568  0554  2D51               	goto	u897
  1569                           
  1570                           ;lcd_hd44780_pic16.c: 214: TRISC&=(~(0x0F<<0));
  1571  0555  30F0               	movlw	240
  1572  0556  00FC               	movwf	??_LCDInit
  1573  0557  087C               	movf	??_LCDInit,w
  1574  0558  1683               	bsf	3,5	;RP0=1, select bank1
  1575  0559  1303               	bcf	3,6	;RP1=0, select bank1
  1576  055A  0587               	andwf	7,f	;volatile
  1577                           
  1578                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC5=0;
  1579  055B  1287               	bcf	7,5	;volatile
  1580                           
  1581                           ;lcd_hd44780_pic16.c: 217: TRISCbits.TRISC7=0;
  1582  055C  1387               	bcf	7,7	;volatile
  1583                           
  1584                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC6=0;
  1585  055D  1307               	bcf	7,6	;volatile
  1586                           
  1587                           ;lcd_hd44780_pic16.c: 220: PORTC&=(~(0x0F<<0));
  1588  055E  30F0               	movlw	240
  1589  055F  00FC               	movwf	??_LCDInit
  1590  0560  087C               	movf	??_LCDInit,w
  1591  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0563  0587               	andwf	7,f	;volatile
  1594                           
  1595                           ;lcd_hd44780_pic16.c: 222: (RC5=0);
  1596  0564  1287               	bcf	7,5	;volatile
  1597                           
  1598                           ;lcd_hd44780_pic16.c: 223: (RC6=0);
  1599  0565  1307               	bcf	7,6	;volatile
  1600                           
  1601                           ;lcd_hd44780_pic16.c: 224: (RC7=0);
  1602  0566  1387               	bcf	7,7	;volatile
  1603                           
  1604                           ;lcd_hd44780_pic16.c: 229: (RC5=1);
  1605                           
  1606                           ;lcd_hd44780_pic16.c: 227: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  1607  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0569  1687               	bsf	7,5	;volatile
  1610                           
  1611                           ;lcd_hd44780_pic16.c: 230: PORTC|=((0b00000010)<<0);
  1612  056A  1487               	bsf	7,1	;volatile
  1613                           
  1614                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1615  056B  0000               	nop
  1616                           
  1617                           ;lcd_hd44780_pic16.c: 232: (RC5=0);
  1618  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1619  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1620  056E  1287               	bcf	7,5	;volatile
  1621                           
  1622                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1623  056F  0000               	nop
  1624                           
  1625                           ;lcd_hd44780_pic16.c: 236: LCDBusyLoop();
  1626  0570  2593               	fcall	_LCDBusyLoop
  1627                           
  1628                           ;lcd_hd44780_pic16.c: 241: (LCDByte(0b00101000,0));
  1629  0571  01F5               	clrf	LCDByte@isdata
  1630  0572  3028               	movlw	40
  1631  0573  250C               	fcall	_LCDByte
  1632                           
  1633                           ;lcd_hd44780_pic16.c: 242: (LCDByte(0b00001100|style,0));
  1634  0574  01F5               	clrf	LCDByte@isdata
  1635  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0577  0820               	movf	LCDInit@style,w
  1638  0578  380C               	iorlw	12
  1639  0579  250C               	fcall	_LCDByte
  1640                           
  1641                           ;lcd_hd44780_pic16.c: 245: (LCDByte(0b01000000,0));
  1642  057A  01F5               	clrf	LCDByte@isdata
  1643  057B  3040               	movlw	64
  1644  057C  250C               	fcall	_LCDByte
  1645                           
  1646                           ;lcd_hd44780_pic16.c: 247: uint8_t __i;
  1647                           ;lcd_hd44780_pic16.c: 248: for(__i=0;__i<sizeof(__cgram);__i++)
  1648  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1649  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1650  057F  01A1               	clrf	LCDInit@__i
  1651  0580                     L4:	
  1652  0580  3010               	movlw	16
  1653  0581  0221               	subwf	LCDInit@__i,w
  1654  0582  1803               	btfsc	3,0
  1655  0583  0008               	return
  1656                           
  1657                           ;lcd_hd44780_pic16.c: 249: (LCDByte(__cgram[__i],1));
  1658  0584  01F5               	clrf	LCDByte@isdata
  1659  0585  0AF5               	incf	LCDByte@isdata,f
  1660  0586  0821               	movf	LCDInit@__i,w
  1661  0587  3E35               	addlw	___cgram& (0+255)
  1662  0588  0084               	movwf	4
  1663  0589  1383               	bcf	3,7	;select IRP bank0
  1664  058A  0800               	movf	0,w
  1665  058B  250C               	fcall	_LCDByte
  1666  058C  3001               	movlw	1
  1667  058D  00FC               	movwf	??_LCDInit
  1668  058E  087C               	movf	??_LCDInit,w
  1669  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0591  07A1               	addwf	LCDInit@__i,f
  1672  0592  2D80               	goto	L4
  1673  0593                     __end_of_LCDInit:	
  1674                           
  1675                           	psect	text7
  1676  04B3                     __ptext7:	
  1677 ;; *************** function _LCDGotoXY *****************
  1678 ;; Defined at:
  1679 ;;		line 354 in file "E:\Study Material\XC8 PROJECTS\LCD Test\lcd_hd44780_pic16.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  x               1    wreg     unsigned char 
  1682 ;;  y               1   12[COMMON] unsigned char 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  x               1    0[BANK0 ] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;		None               void
  1687 ;; Registers used:
  1688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1
  1694 ;;      Params:         1       0       0
  1695 ;;      Locals:         0       1       0
  1696 ;;      Temps:          1       0       0
  1697 ;;      Totals:         2       1       0
  1698 ;;Total ram usage:        3 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    2
  1701 ;; This function calls:
  1702 ;;		_LCDByte
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _LCDGotoXY
  1710  04B3                     _LCDGotoXY:	
  1711                           
  1712                           ;incstack = 0
  1713                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1714                           ;LCDGotoXY@x stored from wreg
  1715  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1716  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1717  04B5  00A0               	movwf	LCDGotoXY@x
  1718                           
  1719                           ;lcd_hd44780_pic16.c: 356: if(x>=20) return;
  1720  04B6  3014               	movlw	20
  1721  04B7  0220               	subwf	LCDGotoXY@x,w
  1722  04B8  1803               	btfsc	3,0
  1723  04B9  0008               	return
  1724  04BA  2CC4               	goto	l1267
  1725  04BB                     l67:	
  1726                           ;lcd_hd44780_pic16.c: 364: case 1:
  1727                           
  1728                           ;lcd_hd44780_pic16.c: 363: break;
  1729                           
  1730                           ;lcd_hd44780_pic16.c: 361: {
  1731                           ;lcd_hd44780_pic16.c: 362: case 0:
  1732                           
  1733                           ;lcd_hd44780_pic16.c: 360: switch(y)
  1734                           
  1735                           
  1736                           ;lcd_hd44780_pic16.c: 365: x|=0b01000000;
  1737  04BB  1720               	bsf	LCDGotoXY@x,6
  1738                           
  1739                           ;lcd_hd44780_pic16.c: 366: break;
  1740  04BC  2CCF               	goto	l66
  1741  04BD                     l1261:	
  1742                           ;lcd_hd44780_pic16.c: 367: case 2:
  1743                           
  1744                           
  1745                           ;lcd_hd44780_pic16.c: 368: x+=0x14;
  1746  04BD  3014               	movlw	20
  1747  04BE  2CC0               	goto	L5
  1748  04BF                     l1263:	
  1749                           ;lcd_hd44780_pic16.c: 370: case 3:
  1750                           
  1751                           ;lcd_hd44780_pic16.c: 369: break;
  1752                           
  1753                           
  1754                           ;lcd_hd44780_pic16.c: 371: x+=0x54;
  1755  04BF  3054               	movlw	84
  1756  04C0                     L5:	
  1757  04C0  00FD               	movwf	??_LCDGotoXY
  1758  04C1  087D               	movf	??_LCDGotoXY,w
  1759  04C2  07A0               	addwf	LCDGotoXY@x,f
  1760                           
  1761                           ;lcd_hd44780_pic16.c: 373: }
  1762                           
  1763                           ;lcd_hd44780_pic16.c: 372: break;
  1764  04C3  2CCF               	goto	l66
  1765  04C4                     l1267:	
  1766  04C4  087C               	movf	LCDGotoXY@y,w
  1767                           
  1768                           ; Switch size 1, requested type "space"
  1769                           ; Number of cases is 4, Range of values is 0 to 3
  1770                           ; switch strategies available:
  1771                           ; Name         Instructions Cycles
  1772                           ; direct_byte           10     6 (fixed)
  1773                           ; simple_byte           13     7 (average)
  1774                           ; jumptable            260     6 (fixed)
  1775                           ;	Chosen strategy is direct_byte
  1776  04C5  0084               	movwf	4
  1777  04C6  3004               	movlw	4
  1778  04C7  0204               	subwf	4,w
  1779  04C8  1803               	skipnc
  1780  04C9  2CCF               	goto	l66
  1781  04CA  3000               	movlw	high S1401
  1782  04CB  008A               	movwf	10
  1783  04CC  301A               	movlw	low S1401
  1784  04CD  0704               	addwf	4,w
  1785  04CE  0082               	movwf	2
  1786  04CF                     l66:	
  1787                           
  1788                           ;lcd_hd44780_pic16.c: 395: x|=0b10000000;
  1789  04CF  17A0               	bsf	LCDGotoXY@x,7
  1790                           
  1791                           ;lcd_hd44780_pic16.c: 396: (LCDByte(x,0));
  1792  04D0  01F5               	clrf	LCDByte@isdata
  1793  04D1  0820               	movf	LCDGotoXY@x,w
  1794  04D2  250C               	fcall	_LCDByte
  1795  04D3  0008               	return
  1796  04D4                     __end_of_LCDGotoXY:	
  1797                           
  1798                           	psect	swtext1
  1799  001A                     __pswtext1:	
  1800  001A                     S1401:	
  1801  001A  2CCF               	ljmp	l66
  1802  001B  2CBB               	ljmp	l67
  1803  001C  2CBD               	ljmp	l1261
  1804  001D  2CBF               	ljmp	l1263
  1805                           
  1806                           	psect	text8
  1807  050C                     __ptext8:	
  1808 ;; *************** function _LCDByte *****************
  1809 ;; Defined at:
  1810 ;;		line 82 in file "E:\Study Material\XC8 PROJECTS\LCD Test\lcd_hd44780_pic16.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  c               1    wreg     unsigned char 
  1813 ;;  isdata          1    5[COMMON] unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  c               1   10[COMMON] unsigned char 
  1816 ;;  temp            1   11[COMMON] unsigned char 
  1817 ;;  ln              1    9[COMMON] unsigned char 
  1818 ;;  hn              1    8[COMMON] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;		None               void
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1
  1828 ;;      Params:         1       0       0
  1829 ;;      Locals:         4       0       0
  1830 ;;      Temps:          2       0       0
  1831 ;;      Totals:         7       0       0
  1832 ;;Total ram usage:        7 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    1
  1835 ;; This function calls:
  1836 ;;		_LCDBusyLoop
  1837 ;; This function is called by:
  1838 ;;		_LCDInit
  1839 ;;		_LCDWriteString
  1840 ;;		_LCDWriteInt
  1841 ;;		_LCDGotoXY
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _LCDByte
  1848  050C                     _LCDByte:	
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  1852                           ;LCDByte@c stored from wreg
  1853  050C  00FA               	movwf	LCDByte@c
  1854                           
  1855                           ;lcd_hd44780_pic16.c: 91: uint8_t hn,ln;
  1856                           ;lcd_hd44780_pic16.c: 92: uint8_t temp;
  1857                           ;lcd_hd44780_pic16.c: 94: hn=c>>4;
  1858  050D  087A               	movf	LCDByte@c,w
  1859  050E  00F6               	movwf	??_LCDByte
  1860  050F  3004               	movlw	4
  1861  0510                     u475:	
  1862  0510  1003               	clrc
  1863  0511  0CF6               	rrf	??_LCDByte,f
  1864  0512  3EFF               	addlw	-1
  1865  0513  1D03               	skipz
  1866  0514  2D10               	goto	u475
  1867  0515  0876               	movf	??_LCDByte,w
  1868  0516  00F7               	movwf	??_LCDByte+1
  1869  0517  0877               	movf	??_LCDByte+1,w
  1870  0518  00F8               	movwf	LCDByte@hn
  1871                           
  1872                           ;lcd_hd44780_pic16.c: 95: ln=(c & 0x0F);
  1873  0519  087A               	movf	LCDByte@c,w
  1874  051A  390F               	andlw	15
  1875  051B  00F6               	movwf	??_LCDByte
  1876  051C  0876               	movf	??_LCDByte,w
  1877  051D  00F9               	movwf	LCDByte@ln
  1878                           
  1879                           ;lcd_hd44780_pic16.c: 97: if(isdata==0)
  1880  051E  08F5               	movf	LCDByte@isdata,f
  1881  051F  1D03               	skipz
  1882  0520  2D25               	goto	l21
  1883                           
  1884                           ;lcd_hd44780_pic16.c: 98: (RC7=0);
  1885  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0523  1387               	bcf	7,7	;volatile
  1888  0524  2D28               	goto	l22
  1889  0525                     l21:	
  1890                           
  1891                           ;lcd_hd44780_pic16.c: 99: else
  1892                           ;lcd_hd44780_pic16.c: 100: (RC7=1);
  1893  0525  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0526  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0527  1787               	bsf	7,7	;volatile
  1896  0528                     l22:	
  1897                           
  1898                           ;lcd_hd44780_pic16.c: 102: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  1899                           ;lcd_hd44780_pic16.c: 104: (RC5=1);
  1900  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1902  052A  1687               	bsf	7,5	;volatile
  1903                           
  1904                           ;lcd_hd44780_pic16.c: 108: temp=(PORTC & (~(0X0F<<0)))|((hn<<0));
  1905  052B  0807               	movf	7,w	;volatile
  1906  052C  39F0               	andlw	240
  1907  052D  0478               	iorwf	LCDByte@hn,w
  1908  052E  00F6               	movwf	??_LCDByte
  1909  052F  0876               	movf	??_LCDByte,w
  1910  0530  00FB               	movwf	LCDByte@temp
  1911                           
  1912                           ;lcd_hd44780_pic16.c: 109: PORTC=temp;
  1913  0531  087B               	movf	LCDByte@temp,w
  1914  0532  0087               	movwf	7	;volatile
  1915                           
  1916                           ;lcd_hd44780_pic16.c: 111: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1917  0533  0000               	nop
  1918                           
  1919                           ;lcd_hd44780_pic16.c: 115: (RC5=0);
  1920  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0536  1287               	bcf	7,5	;volatile
  1923                           
  1924                           ;lcd_hd44780_pic16.c: 117: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1925  0537  0000               	nop
  1926                           
  1927                           ;lcd_hd44780_pic16.c: 120: (RC5=1);
  1928  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1930  053A  1687               	bsf	7,5	;volatile
  1931                           
  1932                           ;lcd_hd44780_pic16.c: 122: temp=(PORTC & (~(0X0F<<0)))|((ln<<0));
  1933  053B  0807               	movf	7,w	;volatile
  1934  053C  39F0               	andlw	240
  1935  053D  0479               	iorwf	LCDByte@ln,w
  1936  053E  00F6               	movwf	??_LCDByte
  1937  053F  0876               	movf	??_LCDByte,w
  1938  0540  00FB               	movwf	LCDByte@temp
  1939                           
  1940                           ;lcd_hd44780_pic16.c: 124: PORTC=temp;
  1941  0541  087B               	movf	LCDByte@temp,w
  1942  0542  0087               	movwf	7	;volatile
  1943                           
  1944                           ;lcd_hd44780_pic16.c: 126: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1945  0543  0000               	nop
  1946                           
  1947                           ;lcd_hd44780_pic16.c: 130: (RC5=0);
  1948  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0546  1287               	bcf	7,5	;volatile
  1951                           
  1952                           ;lcd_hd44780_pic16.c: 132: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1953  0547  0000               	nop
  1954                           
  1955                           ;lcd_hd44780_pic16.c: 134: LCDBusyLoop();
  1956  0548  2593               	fcall	_LCDBusyLoop
  1957  0549  0008               	return
  1958  054A                     __end_of_LCDByte:	
  1959                           
  1960                           	psect	text9
  1961  0593                     __ptext9:	
  1962 ;; *************** function _LCDBusyLoop *****************
  1963 ;; Defined at:
  1964 ;;		line 137 in file "E:\Study Material\XC8 PROJECTS\LCD Test\lcd_hd44780_pic16.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  status          1    4[COMMON] unsigned char 
  1969 ;;  temp            1    3[COMMON] unsigned char 
  1970 ;;  busy            1    2[COMMON] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1
  1980 ;;      Params:         0       0       0
  1981 ;;      Locals:         3       0       0
  1982 ;;      Temps:          2       0       0
  1983 ;;      Totals:         5       0       0
  1984 ;;Total ram usage:        5 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_LCDByte
  1990 ;;		_LCDInit
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _LCDBusyLoop
  1996  0593                     _LCDBusyLoop:	
  1997                           
  1998                           ;lcd_hd44780_pic16.c: 141: uint8_t busy,status=0x00,temp;
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2002  0593  01F4               	clrf	LCDBusyLoop@status
  2003                           
  2004                           ;lcd_hd44780_pic16.c: 144: TRISC|=(0x0f<<0);
  2005  0594  300F               	movlw	15
  2006  0595  00F0               	movwf	??_LCDBusyLoop
  2007  0596  0870               	movf	??_LCDBusyLoop,w
  2008  0597  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0598  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0599  0487               	iorwf	7,f	;volatile
  2011                           
  2012                           ;lcd_hd44780_pic16.c: 147: (RC6=1);
  2013  059A  1283               	bcf	3,5	;RP0=0, select bank0
  2014  059B  1303               	bcf	3,6	;RP1=0, select bank0
  2015  059C  1707               	bsf	7,6	;volatile
  2016                           
  2017                           ;lcd_hd44780_pic16.c: 148: (RC7=0);
  2018  059D  1387               	bcf	7,7	;volatile
  2019  059E                     l995:	
  2020                           ;lcd_hd44780_pic16.c: 155: do
  2021                           
  2022                           ;lcd_hd44780_pic16.c: 152: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2023                           
  2024                           
  2025                           ;lcd_hd44780_pic16.c: 156: {
  2026                           ;lcd_hd44780_pic16.c: 158: (RC5=1);
  2027  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2028  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2029  05A0  1687               	bsf	7,5	;volatile
  2030                           
  2031                           ;lcd_hd44780_pic16.c: 163: status=(PORTC>>0);
  2032                           
  2033                           ;lcd_hd44780_pic16.c: 161: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2034  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2035  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2036  05A3  0807               	movf	7,w	;volatile
  2037  05A4  00F0               	movwf	??_LCDBusyLoop
  2038  05A5  0870               	movf	??_LCDBusyLoop,w
  2039  05A6  00F4               	movwf	LCDBusyLoop@status
  2040                           
  2041                           ;lcd_hd44780_pic16.c: 164: status=status<<4;
  2042  05A7  0874               	movf	LCDBusyLoop@status,w
  2043  05A8  00F0               	movwf	??_LCDBusyLoop
  2044  05A9  3003               	movlw	3
  2045  05AA                     u455:	
  2046  05AA  1003               	clrc
  2047  05AB  0DF0               	rlf	??_LCDBusyLoop,f
  2048  05AC  3EFF               	addlw	-1
  2049  05AD  1D03               	skipz
  2050  05AE  2DAA               	goto	u455
  2051  05AF  1003               	clrc
  2052  05B0  0D70               	rlf	??_LCDBusyLoop,w
  2053  05B1  00F1               	movwf	??_LCDBusyLoop+1
  2054  05B2  0871               	movf	??_LCDBusyLoop+1,w
  2055  05B3  00F4               	movwf	LCDBusyLoop@status
  2056                           
  2057                           ;lcd_hd44780_pic16.c: 169: (RC5=0);
  2058                           
  2059                           ;lcd_hd44780_pic16.c: 166: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2060  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2061  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2062  05B6  1287               	bcf	7,5	;volatile
  2063                           
  2064                           ;lcd_hd44780_pic16.c: 170: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2065  05B7  0000               	nop
  2066                           
  2067                           ;lcd_hd44780_pic16.c: 172: (RC5=1);
  2068  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2069  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2070  05BA  1687               	bsf	7,5	;volatile
  2071                           
  2072                           ;lcd_hd44780_pic16.c: 175: temp=(PORTC>>0);
  2073                           
  2074                           ;lcd_hd44780_pic16.c: 173: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2075  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2076  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2077  05BD  0807               	movf	7,w	;volatile
  2078  05BE  00F0               	movwf	??_LCDBusyLoop
  2079  05BF  0870               	movf	??_LCDBusyLoop,w
  2080  05C0  00F3               	movwf	LCDBusyLoop@temp
  2081                           
  2082                           ;lcd_hd44780_pic16.c: 176: temp&=0x0F;
  2083  05C1  300F               	movlw	15
  2084  05C2  00F0               	movwf	??_LCDBusyLoop
  2085  05C3  0870               	movf	??_LCDBusyLoop,w
  2086  05C4  05F3               	andwf	LCDBusyLoop@temp,f
  2087                           
  2088                           ;lcd_hd44780_pic16.c: 178: status=status|temp;
  2089  05C5  0874               	movf	LCDBusyLoop@status,w
  2090  05C6  0473               	iorwf	LCDBusyLoop@temp,w
  2091  05C7  00F0               	movwf	??_LCDBusyLoop
  2092  05C8  0870               	movf	??_LCDBusyLoop,w
  2093  05C9  00F4               	movwf	LCDBusyLoop@status
  2094                           
  2095                           ;lcd_hd44780_pic16.c: 180: busy=status & 0b10000000;
  2096  05CA  0874               	movf	LCDBusyLoop@status,w
  2097  05CB  3980               	andlw	128
  2098  05CC  00F0               	movwf	??_LCDBusyLoop
  2099  05CD  0870               	movf	??_LCDBusyLoop,w
  2100  05CE  00F2               	movwf	LCDBusyLoop@busy
  2101                           
  2102                           ;lcd_hd44780_pic16.c: 184: (RC5=0);
  2103                           
  2104                           ;lcd_hd44780_pic16.c: 182: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2105  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2106  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2107  05D1  1287               	bcf	7,5	;volatile
  2108                           
  2109                           ;lcd_hd44780_pic16.c: 185: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2110  05D2  0000               	nop
  2111                           
  2112                           ;lcd_hd44780_pic16.c: 186: }while(busy);
  2113  05D3  08F2               	movf	LCDBusyLoop@busy,f
  2114  05D4  1D03               	skipz
  2115  05D5  2D9E               	goto	l995
  2116                           
  2117                           ;lcd_hd44780_pic16.c: 188: (RC6=0);
  2118  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2119  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2120  05D8  1307               	bcf	7,6	;volatile
  2121                           
  2122                           ;lcd_hd44780_pic16.c: 191: TRISC&=(~(0x0F<<0));
  2123  05D9  30F0               	movlw	240
  2124  05DA  00F0               	movwf	??_LCDBusyLoop
  2125  05DB  0870               	movf	??_LCDBusyLoop,w
  2126  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  2127  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  2128  05DE  0587               	andwf	7,f	;volatile
  2129  05DF  0008               	return
  2130  05E0                     __end_of_LCDBusyLoop:	
  2131  007E                     btemp	set	126	;btemp
  2132  007E                     wtemp	set	126
  2133  007E                     wtemp0	set	126
  2134  0080                     wtemp1	set	128
  2135  0082                     wtemp2	set	130
  2136  0084                     wtemp3	set	132
  2137  0086                     wtemp4	set	134
  2138  0088                     wtemp5	set	136
  2139  007F                     wtemp6	set	127
  2140  007E                     ttemp	set	126
  2141  007E                     ttemp0	set	126
  2142  0081                     ttemp1	set	129
  2143  0084                     ttemp2	set	132
  2144  0087                     ttemp3	set	135
  2145  007F                     ttemp4	set	127
  2146  007E                     ltemp	set	126
  2147  007E                     ltemp0	set	126
  2148  0082                     ltemp1	set	130
  2149  0086                     ltemp2	set	134
  2150  0080                     ltemp3	set	128


Data Sizes:
    Strings     19
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      42
    BANK1            32      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[17]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteInt
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    8078
                                             12 BANK0      9     9      0
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                           _My_Delay
 ---------------------------------------------------------------------------------
 (1) _My_Delay                                             3     3      0      47
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1305
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2774
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1171
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1564
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1     964
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _My_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      38       8        0.0%
ABS                  0      0      38       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Sep 12 17:45:26 2015

           ?_LCDBusyLoop 0070                        pc 0002                       l21 0525  
                     l22 0528                       l56 0706                       l66 04CF  
                     l67 04BB                       l96 04A8             ___awdiv@sign 0076  
                     fsr 0004                      l104 0748                      l995 059E  
                    _RC4 003C                      _RC5 003D                      _RC6 003E  
                    _RC7 003F                      u525 064D                      u455 05AA  
                    u545 0659                      u625 05FA                      u475 0510  
                    u555 0665                      u565 066F                      u645 060B  
                    u655 0614                      u845 0746                      u855 0763  
                    u785 0715                      u897 0551                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076                     S1401 001A  
LCDWriteInt@field_length 0022          __end_of_LCDByte 054A          __end_of_LCDInit 0593  
           ?_LCDWriteInt 0020              LCDByte@temp 007B                     l1101 0681  
                   l1113 05EA                     l1131 0613                     l1211 04FD  
                   l1125 05F7                     l1117 05F1                     l1127 0605  
                   l1135 061E                     l1207 04F9                     l1215 04D7  
                   l1311 0765                     l1241 06E6                     l1075 0642  
                   l1139 0626                     l1243 06EC                     l1235 06AE  
                   l1261 04BD                     l1093 066E                     l1085 064A  
                   l1069 0637                     l1245 06F4                     l1237 06E1  
                   l1263 04BF                     l1087 0658                     l1097 0679  
                   l1267 04C4                     l1283 04A4                     l1285 04B0  
                   l1287 049C                     STR_1 0007                     STR_2 0018  
                   STR_3 0018                     STR_4 0007                     STR_5 0018  
                   STR_6 0018                     _main 072B       __size_of_LCDGotoXY 0021  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
        __end_of___awdiv 0688          __end_of___awmod 062D             LCDInit@style 0020  
        ___awdiv@divisor 0070                    _T1CON 0010          ___awdiv@counter 0075  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07D9             __end_of_main 07D9         __end_of_My_Delay 04B3  
                 ??_main 002C        __end_of_LCDGotoXY 04D4            LCDByte@isdata 0075  
              ??_LCDByte 0076                ??_LCDInit 007C         ___awdiv@dividend 0072  
            My_Delay@sec 0071                   _TMR1IF 0060           _LCDWriteString 04D4  
              ??___awdiv 0074                ??___awmod 0074     __size_of_LCDBusyLoop 004D  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
           LCDWriteInt@i 002A             LCDWriteInt@j 0028     __size_of_LCDWriteInt 00A3  
__end_of__initialization 07FE   __end_of_LCDWriteString 050C                LCDByte@hn 0078  
              LCDByte@ln 0079           __pcstackCOMMON 0070             __pidataBANK0 048B  
             __pbssBANK0 0045                ?_My_Delay 0070          ?_LCDWriteString 0070  
             __pmaintext 072B                  _LCDByte 050C                  _LCDInit 054A  
             __stringtab 0001               ??_My_Delay 0070                  ___cgram 0035  
                ___awdiv 062D                  ___awmod 05E0                  __ptext1 049B  
                __ptext2 04D4                  __ptext3 0688                  __ptext4 05E0  
                __ptext5 062D                  __ptext6 054A                  __ptext7 04B3  
                __ptext8 050C                  __ptext9 0593         ___awmod@dividend 0072  
              _LCDGotoXY 04B3                  main@hrs 0033     end_of_initialization 07FE  
      LCDWriteString@msg 0021                _TRISCbits 0087               ?_LCDGotoXY 007C  
             LCDInit@__i 0021               LCDGotoXY@x 0020               LCDGotoXY@y 007C  
          ??_LCDBusyLoop 0070      start_initialization 07D9            ??_LCDWriteInt 007C  
       ??_LCDWriteString 007C        __size_of_My_Delay 0018              __pdataBANK0 0035  
    __end_of_LCDBusyLoop 05E0                 ?_LCDByte 0075                 ?_LCDInit 0070  
               LCDByte@c 007A                ___latbits 0000            __pcstackBANK0 0020  
            ??_LCDGotoXY 007D      __end_of__stringdata 001A      __end_of_LCDWriteInt 072B  
               ?___awdiv 0070                 ?___awmod 0070                __pstrings 0001  
              __pswtext1 001A          LCDBusyLoop@busy 0072          LCDBusyLoop@temp 0073  
          My_Delay@Count 0072              _LCDBusyLoop 0593         LCDWriteString@cc 0020  
            __stringbase 0006              __stringdata 0007                main@count 002D  
       __size_of_LCDByte 003E         __size_of_LCDInit 0049              _LCDWriteInt 0688  
               _My_Delay 049B         __size_of___awdiv 005B         __size_of___awmod 004D  
      LCDBusyLoop@status 0074       __end_of__stringtab 0007          LCDWriteInt@F784 0045  
          __size_of_main 00AE                 main@mins 0031                 main@secs 002F  
         LCDWriteInt@val 0020           LCDWriteInt@str 0023                stringcode 0001  
               stringdir 0001                 stringtab 0001  __size_of_LCDWriteString 0038  
