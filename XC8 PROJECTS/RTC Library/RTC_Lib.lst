

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Dec 06 17:22:00 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  001056                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for ___cgram
    45  001056  00                 	db	0
    46  001057  01                 	db	1
    47  001058  03                 	db	3
    48  001059  16                 	db	22
    49  00105A  1C                 	db	28
    50  00105B  08                 	db	8
    51  00105C  00                 	db	0
    52  00105D  00                 	db	0
    53  00105E  00                 	db	0
    54  00105F  1B                 	db	27
    55  001060  0E                 	db	14
    56  001061  04                 	db	4
    57  001062  0E                 	db	14
    58  001063  1B                 	db	27
    59  001064  00                 	db	0
    60  001065  00                 	db	0
    61  0000                     _INTCONbits	set	4082
    62  0000                     _PIR1bits	set	3998
    63  0000                     _PORTB	set	3969
    64  0000                     _SSPADD	set	4040
    65  0000                     _SSPBUF	set	4041
    66  0000                     _SSPCON1	set	4038
    67  0000                     _SSPCON1bits	set	4038
    68  0000                     _SSPCON2	set	4037
    69  0000                     _SSPCON2bits	set	4037
    70  0000                     _SSPSTAT	set	4039
    71  0000                     _SSPSTATbits	set	4039
    72  0000                     _TRISB	set	3987
    73  0000                     _TRISBbits	set	3987
    74  0000                     _TRISCbits	set	3988
    75  0000                     _INT0IE	set	32660
    76  0000                     _INT0IF	set	32657
    77  0000                     _INTEDG0	set	32654
    78  0000                     _RB1	set	31753
    79  0000                     _RB2	set	31754
    80  0000                     _RB3	set	31755
    81                           
    82                           	psect	smallconst
    83  000600                     __psmallconst:
    84                           	opt stack 0
    85  000600  00                 	db	0
    86  000601                     __stringdata:
    87                           	opt stack 0
    88  000601                     STR_2:
    89  000601  4E                 	db	78	;'N'
    90  000602  49                 	db	73	;'I'
    91  000603  54                 	db	84	;'T'
    92  000604  49                 	db	73	;'I'
    93  000605  4E                 	db	78	;'N'
    94  000606  20                 	db	32
    95  000607  4E                 	db	78	;'N'
    96  000608  2E                 	db	46
    97  000609  20                 	db	32
    98  00060A  53                 	db	83	;'S'
    99  00060B  41                 	db	65	;'A'
   100  00060C  4E                 	db	78	;'N'
   101  00060D  47                 	db	71	;'G'
   102  00060E  41                 	db	65	;'A'
   103  00060F  4C                 	db	76	;'L'
   104  000610  45                 	db	69	;'E'
   105  000611  00                 	db	0
   106  000612                     STR_1:
   107  000612  48                 	db	72	;'H'
   108  000613  65                 	db	101	;'e'
   109  000614  6C                 	db	108	;'l'
   110  000615  6C                 	db	108	;'l'
   111  000616  6F                 	db	111	;'o'
   112  000617  20                 	db	32
   113  000618  57                 	db	87	;'W'
   114  000619  6F                 	db	111	;'o'
   115  00061A  72                 	db	114	;'r'
   116  00061B  6C                 	db	108	;'l'
   117  00061C  64                 	db	100	;'d'
   118  00061D  20                 	db	32
   119  00061E  21                 	db	33
   120  00061F  00                 	db	0
   121  000620                     STR_3:
   122  000620  3A                 	db	58	;':'
   123  000621  00                 	db	0
   124  000622                     __end_of__stringdata:
   125                           	opt stack 0
   126                           
   127                           ; #config settings
   128  000622  00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           	psect	cinit
   131  000F0C                     __pcinit:
   132                           	opt stack 0
   133  000F0C                     start_initialization:
   134                           	opt stack 0
   135  000F0C                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to COMRAM (12 bytes)
   139  000F0C  EE00  F044         	lfsr	0,__pbssCOMRAM
   140  000F10  0E0C               	movlw	12
   141  000F12                     clear_0:
   142  000F12  6AEE               	clrf	postinc0,c
   143  000F14  06E8               	decf	wreg,f,c
   144  000F16  E1FD               	bnz	clear_0
   145                           
   146                           ; Initialize objects allocated to COMRAM (16 bytes)
   147                           ; load TBLPTR registers with __pidataCOMRAM
   148  000F18  0E56               	movlw	low __pidataCOMRAM
   149  000F1A  6EF6               	movwf	tblptrl,c
   150  000F1C  0E10               	movlw	high __pidataCOMRAM
   151  000F1E  6EF7               	movwf	tblptrh,c
   152  000F20  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   153  000F22  6EF8               	movwf	tblptru,c
   154  000F24  EE00  F034         	lfsr	0,__pdataCOMRAM
   155  000F28  EE10 F010          	lfsr	1,16
   156  000F2C                     copy_data0:
   157  000F2C  0009               	tblrd		*+
   158  000F2E  CFF5 FFEE          	movff	tablat,postinc0
   159  000F32  50E5               	movf	postdec1,w,c
   160  000F34  50E1               	movf	fsr1l,w,c
   161  000F36  E1FA               	bnz	copy_data0
   162  000F38                     end_of_initialization:
   163                           	opt stack 0
   164  000F38                     __end_of__initialization:
   165                           	opt stack 0
   166  000F38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167  000F3A  6EF8               	movwf	tblptru,c
   168  000F3C  0100               	movlb	0
   169  000F3E  EF7E  F006         	goto	_main	;jump to C main() function
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           postdec1	equ	0xFE5
   177                           fsr1l	equ	0xFE1
   178                           
   179                           	psect	bssCOMRAM
   180  000044                     __pbssCOMRAM:
   181                           	opt stack 0
   182  000044                     LCDWriteInt@F3701:
   183                           	opt stack 0
   184  000044                     	ds	5
   185  000049                     _day:
   186                           	opt stack 0
   187  000049                     	ds	1
   188  00004A                     _dow:
   189                           	opt stack 0
   190  00004A                     	ds	1
   191  00004B                     _hr:
   192                           	opt stack 0
   193  00004B                     	ds	1
   194  00004C                     _min:
   195                           	opt stack 0
   196  00004C                     	ds	1
   197  00004D                     _month:
   198                           	opt stack 0
   199  00004D                     	ds	1
   200  00004E                     _sec:
   201                           	opt stack 0
   202  00004E                     	ds	1
   203  00004F                     _year:
   204                           	opt stack 0
   205  00004F                     	ds	1
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           postdec1	equ	0xFE5
   213                           fsr1l	equ	0xFE1
   214                           
   215                           	psect	dataCOMRAM
   216  000034                     __pdataCOMRAM:
   217                           	opt stack 0
   218  000034                     ___cgram:
   219                           	opt stack 0
   220  000034                     	ds	16
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	cstackCOMRAM
   231  000001                     __pcstackCOMRAM:
   232                           	opt stack 0
   233  000001                     ??i2_bcd2bin:
   234  000001                     ??i2_IdleI2C:
   235  000001                     ??i2_ReadI2C:
   236  000001                     ?___awdiv:
   237                           	opt stack 0
   238  000001                     ?___awmod:
   239                           	opt stack 0
   240  000001                     i2LCDBusyLoop@busy:
   241                           	opt stack 0
   242  000001                     ___awdiv@dividend:
   243                           	opt stack 0
   244  000001                     ___awmod@dividend:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248  000001                     	ds	1
   249  000002                     ??i2_WriteI2C:
   250  000002                     i2LCDBusyLoop@temp:
   251                           	opt stack 0
   252  000002                     i2bcd2bin@bcd_value:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256  000002                     	ds	1
   257  000003                     i2LCDBusyLoop@status:
   258                           	opt stack 0
   259  000003                     i2bcd2bin@temp:
   260                           	opt stack 0
   261  000003                     i2WriteI2C@data_out:
   262                           	opt stack 0
   263  000003                     ___awdiv@divisor:
   264                           	opt stack 0
   265  000003                     ___awmod@divisor:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x2
   269  000003                     	ds	1
   270  000004                     i2LCDByte@isdata:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x3
   274  000004                     	ds	1
   275  000005                     ??i2_LCDByte:
   276  000005                     ___awdiv@counter:
   277                           	opt stack 0
   278  000005                     ___awmod@counter:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x4
   282  000005                     	ds	1
   283  000006                     ___awdiv@sign:
   284                           	opt stack 0
   285  000006                     ___awmod@sign:
   286                           	opt stack 0
   287  000006                     i2LCDByte@c:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x5
   291  000006                     	ds	1
   292  000007                     i2LCDByte@hn:
   293                           	opt stack 0
   294  000007                     ___awdiv@quotient:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x6
   298  000007                     	ds	1
   299  000008                     i2LCDByte@ln:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x7
   303  000008                     	ds	1
   304  000009                     i2LCDByte@temp:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x8
   308  000009                     	ds	1
   309  00000A                     LCDGotoXY@y:
   310                           	opt stack 0
   311  00000A                     LCDWriteInt@val:
   312                           	opt stack 0
   313  00000A                     i2LCDWriteString@msg:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x9
   317  00000A                     	ds	1
   318  00000B                     LCDGotoXY@x:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0xA
   322  00000B                     	ds	1
   323  00000C                     ??i2_LCDWriteString:
   324  00000C                     LCDWriteInt@field_length:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0xB
   328  00000C                     	ds	1
   329  00000D                     ??_LCDWriteInt:
   330  00000D                     i2LCDWriteString@cc:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0xC
   334  00000D                     	ds	2
   335  00000F                     LCDWriteInt@str:
   336                           	opt stack 0
   337                           
   338                           ; 5 bytes @ 0xE
   339  00000F                     	ds	5
   340  000014                     LCDWriteInt@j:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x13
   344  000014                     	ds	2
   345  000016                     LCDWriteInt@i:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x15
   349  000016                     	ds	2
   350  000018                     ??_One_Sec:
   351                           
   352                           ; 0 bytes @ 0x17
   353  000018                     	ds	14
   354  000026                     ??_IdleI2C:
   355  000026                     ??_ReadI2C:
   356  000026                     ??_bcd2bin:
   357  000026                     LCDBusyLoop@busy:
   358                           	opt stack 0
   359  000026                     bin2bcd@binary_value:
   360                           	opt stack 0
   361  000026                     OpenI2C@slew:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x25
   365  000026                     	ds	1
   366  000027                     ??_WriteI2C:
   367  000027                     LCDBusyLoop@temp:
   368                           	opt stack 0
   369  000027                     bin2bcd@retval:
   370                           	opt stack 0
   371  000027                     bcd2bin@bcd_value:
   372                           	opt stack 0
   373  000027                     OpenI2C@sync_mode:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x26
   377  000027                     	ds	1
   378  000028                     LCDBusyLoop@status:
   379                           	opt stack 0
   380  000028                     bin2bcd@temp:
   381                           	opt stack 0
   382  000028                     bcd2bin@temp:
   383                           	opt stack 0
   384  000028                     WriteI2C@data_out:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x27
   388  000028                     	ds	1
   389  000029                     LCDByte@isdata:
   390                           	opt stack 0
   391  000029                     ds1307_init@seconds:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x28
   395  000029                     	ds	1
   396  00002A                     ??_LCDByte:
   397                           
   398                           ; 0 bytes @ 0x29
   399  00002A                     	ds	1
   400  00002B                     LCDByte@hn:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x2A
   404  00002B                     	ds	1
   405  00002C                     LCDByte@ln:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x2B
   409  00002C                     	ds	1
   410  00002D                     LCDByte@c:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x2C
   414  00002D                     	ds	1
   415  00002E                     LCDByte@temp:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x2D
   419  00002E                     	ds	1
   420  00002F                     ??_LCDInit:
   421  00002F                     LCDWriteString@msg:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x2E
   425  00002F                     	ds	1
   426  000030                     LCDInit@style:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x2F
   430  000030                     	ds	1
   431  000031                     ??_LCDWriteString:
   432  000031                     LCDInit@__i:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x30
   436  000031                     	ds	1
   437  000032                     LCDWriteString@cc:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x31
   441  000032                     	ds	1
   442  000033                     main@count:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x32
   446  000033                     	ds	1
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 9 in file "E:\Study Material\XC8 PROJECTS\RTC Library\test.C"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  count           1   50[COMRAM] unsigned char 
   466 ;;  data            1    0        unsigned char 
   467 ;; Return value:  Size  Location     Type
   468 ;;		None               void
   469 ;; Registers used:
   470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   476 ;;      Params:         0       0       0       0       0       0       0
   477 ;;      Locals:         1       0       0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0       0       0
   479 ;;      Totals:         1       0       0       0       0       0       0
   480 ;;Total ram usage:        1 bytes
   481 ;; Hardware stack levels required when called:    7
   482 ;; This function calls:
   483 ;;		_LCDByte
   484 ;;		_LCDInit
   485 ;;		_LCDWriteString
   486 ;;		_OpenI2C
   487 ;;		_ds1307_init
   488 ;;		_ds1307_set_date_time
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text0
   495  000CFC                     __ptext0:
   496                           	opt stack 0
   497  000CFC                     _main:
   498                           	opt stack 24
   499                           
   500                           ;incstack = 0
   501  000CFC  FFFF               	dw	65535
   502                           
   503                           ;test.C: 11: unsigned char data, count = 0;
   504  000CFE  0E00               	movlw	0
   505  000D00  6E33               	movwf	main@count,c
   506                           
   507                           ;test.C: 13: TRISB = 0x01;
   508  000D02  0E01               	movlw	1
   509  000D04  6E93               	movwf	3987,c	;volatile
   510                           
   511                           ;test.C: 14: PORTB = 0;
   512  000D06  0E00               	movlw	0
   513  000D08  6E81               	movwf	3969,c	;volatile
   514                           
   515                           ;test.C: 17: LCDInit(0B00000000);
   516  000D0A  0E00               	movlw	0
   517  000D0C  EC95  F005         	call	_LCDInit
   518                           
   519                           ;test.C: 20: (LCDByte(0b00000001,0));
   520  000D10  0E00               	movlw	0
   521  000D12  6E29               	movwf	LCDByte@isdata,c
   522  000D14  0E01               	movlw	1
   523  000D16  ECB0  F006         	call	_LCDByte
   524                           
   525                           ;test.C: 23: LCDWriteString("Hello World !");
   526  000D1A  0E06               	movlw	high STR_1
   527  000D1C  6E30               	movwf	LCDWriteString@msg+1,c
   528  000D1E  0E12               	movlw	low STR_1
   529  000D20  6E2F               	movwf	LCDWriteString@msg,c
   530  000D22  ECA7  F004         	call	_LCDWriteString	;wreg free
   531                           
   532                           ;test.C: 26: OpenI2C(0b00001000,0b10000000);
   533  000D26  0E80               	movlw	128
   534  000D28  6E26               	movwf	OpenI2C@slew,c
   535  000D2A  0E08               	movlw	8
   536  000D2C  EC06  F008         	call	_OpenI2C
   537                           
   538                           ;test.C: 27: SSPADD = 0x19;
   539  000D30  0E19               	movlw	25
   540  000D32  6EC8               	movwf	4040,c	;volatile
   541                           
   542                           ;test.C: 29: ds1307_init();
   543  000D34  ECF8  F003         	call	_ds1307_init	;wreg free
   544                           
   545                           ;test.C: 34: day = 1;
   546  000D38  0E01               	movlw	1
   547  000D3A  6E49               	movwf	_day,c
   548                           
   549                           ;test.C: 35: month = 1;
   550  000D3C  0E01               	movlw	1
   551  000D3E  6E4D               	movwf	_month,c
   552                           
   553                           ;test.C: 36: year = 15;
   554  000D40  0E0F               	movlw	15
   555  000D42  6E4F               	movwf	_year,c
   556                           
   557                           ;test.C: 37: dow = 2;
   558  000D44  0E02               	movlw	2
   559  000D46  6E4A               	movwf	_dow,c
   560                           
   561                           ;test.C: 38: hr = 12;
   562  000D48  0E0C               	movlw	12
   563  000D4A  6E4B               	movwf	_hr,c
   564                           
   565                           ;test.C: 39: min = 0;
   566  000D4C  0E00               	movlw	0
   567  000D4E  6E4C               	movwf	_min,c
   568                           
   569                           ;test.C: 40: sec = 0;
   570  000D50  0E00               	movlw	0
   571  000D52  6E4E               	movwf	_sec,c
   572                           
   573                           ;test.C: 42: ds1307_set_date_time();
   574  000D54  EC9B  F003         	call	_ds1307_set_date_time	;wreg free
   575                           
   576                           ;test.C: 44: INTEDG0 = 1;
   577  000D58  8CF1               	bsf	intcon2,6,c	;volatile
   578                           
   579                           ;test.C: 45: INT0IE = 1;
   580  000D5A  88F2               	bsf	intcon,4,c	;volatile
   581                           
   582                           ;test.C: 46: (INTCONbits.GIE = 1);
   583  000D5C  8EF2               	bsf	intcon,7,c	;volatile
   584  000D5E                     l235:
   585  000D5E  D7FF               	goto	l235
   586  000D60                     __end_of_main:
   587                           	opt stack 0
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           intcon	equ	0xFF2
   593                           intcon2	equ	0xFF1
   594                           postinc0	equ	0xFEE
   595                           wreg	equ	0xFE8
   596                           postdec1	equ	0xFE5
   597                           fsr1l	equ	0xFE1
   598                           
   599 ;; *************** function _ds1307_set_date_time *****************
   600 ;; Defined at:
   601 ;;		line 45 in file "E:\Study Material\XC8 PROJECTS\RTC Library\myrtc.C"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;		None               void
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   615 ;;      Params:         0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    6
   622 ;; This function calls:
   623 ;;		_IdleI2C
   624 ;;		_WriteI2C
   625 ;;		_bin2bcd
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text1
   632  000736                     __ptext1:
   633                           	opt stack 0
   634  000736                     _ds1307_set_date_time:
   635                           	opt stack 24
   636                           
   637                           ;incstack = 0
   638  000736  FFFF               	dw	65535
   639                           
   640                           ;myrtc.C: 47: sec &= 0x7F;
   641  000738  9E4E               	bcf	_sec,7,c
   642                           
   643                           ;myrtc.C: 48: hr &= 0x3F;
   644  00073A  0E3F               	movlw	63
   645  00073C  164B               	andwf	_hr,f,c
   646                           
   647                           ;myrtc.C: 50: sec = bin2bcd(sec);
   648  00073E  504E               	movf	_sec,w,c
   649  000740  ECCD  F007         	call	_bin2bcd
   650  000744  6E4E               	movwf	_sec,c
   651                           
   652                           ;myrtc.C: 51: min = bin2bcd(min);
   653  000746  504C               	movf	_min,w,c
   654  000748  ECCD  F007         	call	_bin2bcd
   655  00074C  6E4C               	movwf	_min,c
   656                           
   657                           ;myrtc.C: 52: hr = bin2bcd(hr);
   658  00074E  504B               	movf	_hr,w,c
   659  000750  ECCD  F007         	call	_bin2bcd
   660  000754  6E4B               	movwf	_hr,c
   661                           
   662                           ;myrtc.C: 53: dow = bin2bcd(dow);
   663  000756  504A               	movf	_dow,w,c
   664  000758  ECCD  F007         	call	_bin2bcd
   665  00075C  6E4A               	movwf	_dow,c
   666                           
   667                           ;myrtc.C: 54: day = bin2bcd(day);
   668  00075E  5049               	movf	_day,w,c
   669  000760  ECCD  F007         	call	_bin2bcd
   670  000764  6E49               	movwf	_day,c
   671                           
   672                           ;myrtc.C: 55: month = bin2bcd(month);
   673  000766  504D               	movf	_month,w,c
   674  000768  ECCD  F007         	call	_bin2bcd
   675  00076C  6E4D               	movwf	_month,c
   676                           
   677                           ;myrtc.C: 56: year = bin2bcd(year);
   678  00076E  504F               	movf	_year,w,c
   679  000770  ECCD  F007         	call	_bin2bcd
   680  000774  6E4F               	movwf	_year,c
   681                           
   682                           ;myrtc.C: 58: IdleI2C();
   683  000776  EC17  F008         	call	_IdleI2C	;wreg free
   684                           
   685                           ;myrtc.C: 59: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   686  00077A  80C5               	bsf	4037,0,c	;volatile
   687  00077C                     l124:
   688  00077C  B0C5               	btfsc	4037,0,c	;volatile
   689  00077E  D7FE               	goto	l124
   690                           
   691                           ;myrtc.C: 60: WriteI2C(0xD0);
   692  000780  0ED0               	movlw	208
   693  000782  EC16  F006         	call	_WriteI2C
   694                           
   695                           ;myrtc.C: 61: IdleI2C();
   696  000786  EC17  F008         	call	_IdleI2C	;wreg free
   697                           
   698                           ;myrtc.C: 62: WriteI2C(0x00);
   699  00078A  0E00               	movlw	0
   700  00078C  EC16  F006         	call	_WriteI2C
   701                           
   702                           ;myrtc.C: 63: IdleI2C();
   703  000790  EC17  F008         	call	_IdleI2C	;wreg free
   704                           
   705                           ;myrtc.C: 64: WriteI2C(sec);
   706  000794  504E               	movf	_sec,w,c
   707  000796  EC16  F006         	call	_WriteI2C
   708                           
   709                           ;myrtc.C: 65: IdleI2C();
   710  00079A  EC17  F008         	call	_IdleI2C	;wreg free
   711                           
   712                           ;myrtc.C: 66: WriteI2C(min);
   713  00079E  504C               	movf	_min,w,c
   714  0007A0  EC16  F006         	call	_WriteI2C
   715                           
   716                           ;myrtc.C: 67: IdleI2C();
   717  0007A4  EC17  F008         	call	_IdleI2C	;wreg free
   718                           
   719                           ;myrtc.C: 68: WriteI2C(hr);
   720  0007A8  504B               	movf	_hr,w,c
   721  0007AA  EC16  F006         	call	_WriteI2C
   722                           
   723                           ;myrtc.C: 69: IdleI2C();
   724  0007AE  EC17  F008         	call	_IdleI2C	;wreg free
   725                           
   726                           ;myrtc.C: 70: WriteI2C(dow);
   727  0007B2  504A               	movf	_dow,w,c
   728  0007B4  EC16  F006         	call	_WriteI2C
   729                           
   730                           ;myrtc.C: 71: IdleI2C();
   731  0007B8  EC17  F008         	call	_IdleI2C	;wreg free
   732                           
   733                           ;myrtc.C: 72: WriteI2C(day);
   734  0007BC  5049               	movf	_day,w,c
   735  0007BE  EC16  F006         	call	_WriteI2C
   736                           
   737                           ;myrtc.C: 73: IdleI2C();
   738  0007C2  EC17  F008         	call	_IdleI2C	;wreg free
   739                           
   740                           ;myrtc.C: 74: WriteI2C(month);
   741  0007C6  504D               	movf	_month,w,c
   742  0007C8  EC16  F006         	call	_WriteI2C
   743                           
   744                           ;myrtc.C: 75: IdleI2C();
   745  0007CC  EC17  F008         	call	_IdleI2C	;wreg free
   746                           
   747                           ;myrtc.C: 76: WriteI2C(year);
   748  0007D0  504F               	movf	_year,w,c
   749  0007D2  EC16  F006         	call	_WriteI2C
   750                           
   751                           ;myrtc.C: 77: IdleI2C();
   752  0007D6  EC17  F008         	call	_IdleI2C	;wreg free
   753                           
   754                           ;myrtc.C: 78: WriteI2C(0x10);
   755  0007DA  0E10               	movlw	16
   756  0007DC  EC16  F006         	call	_WriteI2C
   757                           
   758                           ;myrtc.C: 79: IdleI2C();
   759  0007E0  EC17  F008         	call	_IdleI2C	;wreg free
   760                           
   761                           ;myrtc.C: 80: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
   762  0007E4  84C5               	bsf	4037,2,c	;volatile
   763  0007E6                     l127:
   764  0007E6  A4C5               	btfss	4037,2,c	;volatile
   765  0007E8  0012               	return	
   766  0007EA  FFFF               	dw	65535	; assembler added errata NOP
   767  0007EC  D7FC               	goto	l127
   768  0007EE  FFFF               	dw	65535	; errata NOP
   769  0007F0                     __end_of_ds1307_set_date_time:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           intcon	equ	0xFF2
   776                           intcon2	equ	0xFF1
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           postdec1	equ	0xFE5
   780                           fsr1l	equ	0xFE1
   781                           
   782 ;; *************** function _ds1307_init *****************
   783 ;; Defined at:
   784 ;;		line 4 in file "E:\Study Material\XC8 PROJECTS\RTC Library\myrtc.C"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  seconds         1   40[COMRAM] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   798 ;;      Params:         0       0       0       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0
   801 ;;      Totals:         1       0       0       0       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    6
   805 ;; This function calls:
   806 ;;		_IdleI2C
   807 ;;		_ReadI2C
   808 ;;		_WriteI2C
   809 ;;		_bcd2bin
   810 ;;		_bin2bcd
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text2
   817  0007F0                     __ptext2:
   818                           	opt stack 0
   819  0007F0                     _ds1307_init:
   820                           	opt stack 24
   821                           
   822                           ;incstack = 0
   823  0007F0  FFFF               	dw	65535
   824                           
   825                           ;myrtc.C: 6: unsigned char seconds = 0;
   826  0007F2  0E00               	movlw	0
   827  0007F4  6E29               	movwf	ds1307_init@seconds,c
   828                           
   829                           ;myrtc.C: 8: IdleI2C();
   830  0007F6  EC17  F008         	call	_IdleI2C	;wreg free
   831                           
   832                           ;myrtc.C: 9: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   833  0007FA  80C5               	bsf	4037,0,c	;volatile
   834  0007FC                     l100:
   835  0007FC  B0C5               	btfsc	4037,0,c	;volatile
   836  0007FE  D7FE               	goto	l100
   837                           
   838                           ;myrtc.C: 10: WriteI2C(0xD0);
   839  000800  0ED0               	movlw	208
   840  000802  EC16  F006         	call	_WriteI2C
   841                           
   842                           ;myrtc.C: 11: IdleI2C();
   843  000806  EC17  F008         	call	_IdleI2C	;wreg free
   844                           
   845                           ;myrtc.C: 12: WriteI2C(0x00);
   846  00080A  0E00               	movlw	0
   847  00080C  EC16  F006         	call	_WriteI2C
   848                           
   849                           ;myrtc.C: 13: IdleI2C();
   850  000810  EC17  F008         	call	_IdleI2C	;wreg free
   851                           
   852                           ;myrtc.C: 14: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
   853  000814  82C5               	bsf	4037,1,c	;volatile
   854  000816                     l103:
   855  000816  B2C5               	btfsc	4037,1,c	;volatile
   856  000818  D7FE               	goto	l103
   857                           
   858                           ;myrtc.C: 15: WriteI2C(0xD1);
   859  00081A  0ED1               	movlw	209
   860  00081C  EC16  F006         	call	_WriteI2C
   861                           
   862                           ;myrtc.C: 16: seconds = ReadI2C();
   863  000820  ECA1  F007         	call	_ReadI2C	;wreg free
   864  000824  6E29               	movwf	ds1307_init@seconds,c
   865                           
   866                           ;myrtc.C: 17: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
   867  000826  8AC5               	bsf	4037,5,c	;volatile
   868  000828  88C5               	bsf	4037,4,c	;volatile
   869  00082A                     l106:
   870  00082A  B8C5               	btfsc	4037,4,c	;volatile
   871  00082C  D7FE               	goto	l106
   872                           
   873                           ;myrtc.C: 18: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
   874  00082E  84C5               	bsf	4037,2,c	;volatile
   875  000830                     l109:
   876  000830  B4C5               	btfsc	4037,2,c	;volatile
   877  000832  D7FE               	goto	l109
   878                           
   879                           ;myrtc.C: 20: seconds = bcd2bin(seconds);
   880  000834  5029               	movf	ds1307_init@seconds,w,c
   881  000836  ECE0  F007         	call	_bcd2bin
   882  00083A  6E29               	movwf	ds1307_init@seconds,c
   883                           
   884                           ;myrtc.C: 21: seconds &= 0x7F;
   885  00083C  9E29               	bcf	ds1307_init@seconds,7,c
   886                           
   887                           ;myrtc.C: 22: seconds = bin2bcd(seconds);
   888  00083E  5029               	movf	ds1307_init@seconds,w,c
   889  000840  ECCD  F007         	call	_bin2bcd
   890  000844  6E29               	movwf	ds1307_init@seconds,c
   891                           
   892                           ;myrtc.C: 24: _delay(10);
   893  000846  0E02               	movlw	2
   894  000848                     u1147:
   895  000848  F000               	nop	
   896  00084A  2EE8               	decfsz	wreg,f,c
   897  00084C  D7FD               	goto	u1147
   898                           
   899                           ;myrtc.C: 26: IdleI2C();
   900  00084E  EC17  F008         	call	_IdleI2C	;wreg free
   901                           
   902                           ;myrtc.C: 27: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
   903  000852  80C5               	bsf	4037,0,c	;volatile
   904  000854                     l112:
   905  000854  B0C5               	btfsc	4037,0,c	;volatile
   906  000856  D7FE               	goto	l112
   907                           
   908                           ;myrtc.C: 28: WriteI2C(0xD0);
   909  000858  0ED0               	movlw	208
   910  00085A  EC16  F006         	call	_WriteI2C
   911                           
   912                           ;myrtc.C: 29: IdleI2C();
   913  00085E  EC17  F008         	call	_IdleI2C	;wreg free
   914                           
   915                           ;myrtc.C: 30: WriteI2C(0x00);
   916  000862  0E00               	movlw	0
   917  000864  EC16  F006         	call	_WriteI2C
   918                           
   919                           ;myrtc.C: 31: IdleI2C();
   920  000868  EC17  F008         	call	_IdleI2C	;wreg free
   921                           
   922                           ;myrtc.C: 32: WriteI2C(seconds);
   923  00086C  5029               	movf	ds1307_init@seconds,w,c
   924  00086E  EC16  F006         	call	_WriteI2C
   925                           
   926                           ;myrtc.C: 33: IdleI2C();
   927  000872  EC17  F008         	call	_IdleI2C	;wreg free
   928                           
   929                           ;myrtc.C: 34: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
   930  000876  82C5               	bsf	4037,1,c	;volatile
   931  000878                     l115:
   932  000878  B2C5               	btfsc	4037,1,c	;volatile
   933  00087A  D7FE               	goto	l115
   934                           
   935                           ;myrtc.C: 35: WriteI2C(0xD0);
   936  00087C  0ED0               	movlw	208
   937  00087E  EC16  F006         	call	_WriteI2C
   938                           
   939                           ;myrtc.C: 36: IdleI2C();
   940  000882  EC17  F008         	call	_IdleI2C	;wreg free
   941                           
   942                           ;myrtc.C: 37: WriteI2C(0x07);
   943  000886  0E07               	movlw	7
   944  000888  EC16  F006         	call	_WriteI2C
   945                           
   946                           ;myrtc.C: 38: IdleI2C();
   947  00088C  EC17  F008         	call	_IdleI2C	;wreg free
   948                           
   949                           ;myrtc.C: 39: WriteI2C(0x10);
   950  000890  0E10               	movlw	16
   951  000892  EC16  F006         	call	_WriteI2C
   952                           
   953                           ;myrtc.C: 40: IdleI2C();
   954  000896  EC17  F008         	call	_IdleI2C	;wreg free
   955                           
   956                           ;myrtc.C: 41: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
   957  00089A  84C5               	bsf	4037,2,c	;volatile
   958  00089C                     l118:
   959  00089C  A4C5               	btfss	4037,2,c	;volatile
   960  00089E  0012               	return	
   961  0008A0  FFFF               	dw	65535	; assembler added errata NOP
   962  0008A2  D7FC               	goto	l118
   963  0008A4  FFFF               	dw	65535	; errata NOP
   964  0008A6                     __end_of_ds1307_init:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           tblptrl	equ	0xFF6
   969                           tablat	equ	0xFF5
   970                           intcon	equ	0xFF2
   971                           intcon2	equ	0xFF1
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1l	equ	0xFE1
   976                           
   977 ;; *************** function _bin2bcd *****************
   978 ;; Defined at:
   979 ;;		line 135 in file "E:\Study Material\XC8 PROJECTS\RTC Library\myrtc.C"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  binary_value    1    wreg     unsigned char 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  binary_value    1   37[COMRAM] unsigned char 
   984 ;;  temp            1   39[COMRAM] unsigned char 
   985 ;;  retval          1   38[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      unsigned char 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         0       0       0       0       0       0       0
   996 ;;      Locals:         3       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         3       0       0       0       0       0       0
   999 ;;Total ram usage:        3 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    4
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_ds1307_init
  1006 ;;		_ds1307_set_date_time
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text3
  1011  000F9A                     __ptext3:
  1012                           	opt stack 0
  1013  000F9A                     _bin2bcd:
  1014                           	opt stack 25
  1015                           
  1016                           ;incstack = 0
  1017  000F9A  FFFF               	dw	65535
  1018                           
  1019                           ;bin2bcd@binary_value stored from wreg
  1020  000F9C  6E26               	movwf	bin2bcd@binary_value,c
  1021                           
  1022                           ;myrtc.C: 137: unsigned char temp;
  1023                           ;myrtc.C: 138: unsigned char retval;
  1024                           ;myrtc.C: 140: temp = binary_value;
  1025  000F9E  C026  F028         	movff	bin2bcd@binary_value,bin2bcd@temp
  1026                           
  1027                           ;myrtc.C: 141: retval = 0;
  1028  000FA2  0E00               	movlw	0
  1029  000FA4  6E27               	movwf	bin2bcd@retval,c
  1030  000FA6                     l1083:
  1031                           
  1032                           ;myrtc.C: 144: {
  1033                           ;myrtc.C: 147: if(temp >= 10)
  1034  000FA6  0E09               	movlw	9
  1035  000FA8  6428               	cpfsgt	bin2bcd@temp,c
  1036  000FAA  D005               	goto	l1087
  1037                           
  1038                           ;myrtc.C: 148: {
  1039                           ;myrtc.C: 149: temp -= 10;
  1040  000FAC  0E0A               	movlw	10
  1041  000FAE  5E28               	subwf	bin2bcd@temp,f,c
  1042                           
  1043                           ;myrtc.C: 150: retval += 0x10;
  1044  000FB0  0E10               	movlw	16
  1045  000FB2  2627               	addwf	bin2bcd@retval,f,c
  1046                           
  1047                           ;myrtc.C: 151: }
  1048  000FB4  D7F8               	goto	l1083
  1049  000FB6                     l1087:
  1050                           
  1051                           ;myrtc.C: 152: else
  1052                           ;myrtc.C: 153: {
  1053                           ;myrtc.C: 154: retval += temp;
  1054  000FB6  5028               	movf	bin2bcd@temp,w,c
  1055  000FB8  2627               	addwf	bin2bcd@retval,f,c
  1056                           
  1057                           ;myrtc.C: 156: }
  1058                           ;myrtc.C: 157: }
  1059                           ;myrtc.C: 159: return(retval);
  1060                           
  1061                           ;myrtc.C: 155: break;
  1062  000FBA  5027               	movf	bin2bcd@retval,w,c
  1063  000FBC  0012               	return	
  1064  000FBE  FFFF               	dw	65535	; errata NOP
  1065  000FC0                     __end_of_bin2bcd:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           intcon	equ	0xFF2
  1072                           intcon2	equ	0xFF1
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postdec1	equ	0xFE5
  1076                           fsr1l	equ	0xFE1
  1077                           
  1078 ;; *************** function _bcd2bin *****************
  1079 ;; Defined at:
  1080 ;;		line 164 in file "E:\Study Material\XC8 PROJECTS\RTC Library\myrtc.C"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  bcd_value       1    wreg     unsigned char 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  bcd_value       1   38[COMRAM] unsigned char 
  1085 ;;  temp            1   39[COMRAM] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      unsigned char 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1095 ;;      Params:         0       0       0       0       0       0       0
  1096 ;;      Locals:         2       0       0       0       0       0       0
  1097 ;;      Temps:          1       0       0       0       0       0       0
  1098 ;;      Totals:         3       0       0       0       0       0       0
  1099 ;;Total ram usage:        3 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    4
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_ds1307_init
  1106 ;;		_ds1307_get_date
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text4
  1111  000FC0                     __ptext4:
  1112                           	opt stack 0
  1113  000FC0                     _bcd2bin:
  1114                           	opt stack 25
  1115                           
  1116                           ;incstack = 0
  1117  000FC0  FFFF               	dw	65535
  1118                           
  1119                           ;bcd2bin@bcd_value stored from wreg
  1120  000FC2  6E27               	movwf	bcd2bin@bcd_value,c
  1121                           
  1122                           ;myrtc.C: 166: unsigned char temp;
  1123                           ;myrtc.C: 168: temp = bcd_value;
  1124  000FC4  C027  F028         	movff	bcd2bin@bcd_value,bcd2bin@temp
  1125                           
  1126                           ;myrtc.C: 170: temp >>= 1;
  1127  000FC8  90D8               	bcf	status,0,c
  1128  000FCA  3228               	rrcf	bcd2bin@temp,f,c
  1129                           
  1130                           ;myrtc.C: 172: temp &= 0x78;
  1131  000FCC  0E78               	movlw	120
  1132  000FCE  1628               	andwf	bcd2bin@temp,f,c
  1133                           
  1134                           ;myrtc.C: 176: return(temp + (temp >> 2) + (bcd_value & 0x0f));
  1135  000FD0  C027  F026         	movff	bcd2bin@bcd_value,??_bcd2bin
  1136  000FD4  0E0F               	movlw	15
  1137  000FD6  1626               	andwf	??_bcd2bin,f,c
  1138  000FD8  4028               	rrncf	bcd2bin@temp,w,c
  1139  000FDA  42E8               	rrncf	wreg,f,c
  1140  000FDC  0B3F               	andlw	63
  1141  000FDE  2426               	addwf	??_bcd2bin,w,c
  1142  000FE0  2428               	addwf	bcd2bin@temp,w,c
  1143  000FE2  0012               	return	
  1144  000FE4  FFFF               	dw	65535	; errata NOP
  1145  000FE6                     __end_of_bcd2bin:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           intcon	equ	0xFF2
  1152                           intcon2	equ	0xFF1
  1153                           postinc0	equ	0xFEE
  1154                           wreg	equ	0xFE8
  1155                           postdec1	equ	0xFE5
  1156                           fsr1l	equ	0xFE1
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function _WriteI2C *****************
  1160 ;; Defined at:
  1161 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_writ.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  data_out        1    wreg     unsigned char 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  data_out        1   39[COMRAM] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      char 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1175 ;;      Params:         0       0       0       0       0       0       0
  1176 ;;      Locals:         1       0       0       0       0       0       0
  1177 ;;      Temps:          1       0       0       0       0       0       0
  1178 ;;      Totals:         2       0       0       0       0       0       0
  1179 ;;Total ram usage:        2 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    5
  1182 ;; This function calls:
  1183 ;;		_IdleI2C
  1184 ;; This function is called by:
  1185 ;;		_ds1307_init
  1186 ;;		_ds1307_set_date_time
  1187 ;;		_ds1307_get_date
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text5
  1192  000C2C                     __ptext5:
  1193                           	opt stack 0
  1194  000C2C                     _WriteI2C:
  1195                           	opt stack 24
  1196                           
  1197                           ;incstack = 0
  1198  000C2C  FFFF               	dw	65535
  1199                           
  1200                           ;WriteI2C@data_out stored from wreg
  1201  000C2E  6E28               	movwf	WriteI2C@data_out,c
  1202  000C30  C028  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  1203  000C34  BEC6               	btfsc	4038,7,c	;volatile
  1204  000C36  D02C               	goto	l297
  1205                           
  1206                           ;	Return value of _WriteI2C is never used
  1207  000C38  CFC6 F027          	movff	4038,??_WriteI2C	;volatile
  1208  000C3C  0E0F               	movlw	15
  1209  000C3E  1627               	andwf	??_WriteI2C,f,c
  1210  000C40  5027               	movf	??_WriteI2C,w,c
  1211  000C42  0A08               	xorlw	8
  1212  000C44  B4D8               	btfsc	status,2,c
  1213  000C46  D00F               	goto	l1049
  1214  000C48  CFC6 F027          	movff	4038,??_WriteI2C	;volatile
  1215  000C4C  0E0F               	movlw	15
  1216  000C4E  1627               	andwf	??_WriteI2C,f,c
  1217  000C50  5027               	movf	??_WriteI2C,w,c
  1218  000C52  0A0B               	xorlw	11
  1219  000C54  B4D8               	btfsc	status,2,c
  1220  000C56  D007               	goto	l1049
  1221  000C58  88C6               	bsf	4038,4,c	;volatile
  1222  000C5A                     l300:
  1223  000C5A  A69E               	btfss	3998,3,c	;volatile
  1224  000C5C  D7FE               	goto	l300
  1225  000C5E  B4C7               	btfsc	4039,2,c	;volatile
  1226  000C60  D017               	goto	l297
  1227  000C62  50C7               	movf	4039,w,c	;volatile
  1228  000C64  D015               	goto	l297
  1229  000C66                     l1049:
  1230  000C66  CFC6 F027          	movff	4038,??_WriteI2C	;volatile
  1231  000C6A  0E0F               	movlw	15
  1232  000C6C  1627               	andwf	??_WriteI2C,f,c
  1233  000C6E  5027               	movf	??_WriteI2C,w,c
  1234  000C70  0A08               	xorlw	8
  1235  000C72  B4D8               	btfsc	status,2,c
  1236  000C74  D008               	goto	l309
  1237  000C76  CFC6 F027          	movff	4038,??_WriteI2C	;volatile
  1238  000C7A  0E0F               	movlw	15
  1239  000C7C  1627               	andwf	??_WriteI2C,f,c
  1240  000C7E  5027               	movf	??_WriteI2C,w,c
  1241  000C80  0A0B               	xorlw	11
  1242  000C82  A4D8               	btfss	status,2,c
  1243  000C84  D005               	goto	l297
  1244  000C86                     l309:
  1245  000C86  B0C7               	btfsc	4039,0,c	;volatile
  1246  000C88  D7FE               	goto	l309
  1247  000C8A  EC17  F008         	call	_IdleI2C	;wreg free
  1248  000C8E  50C5               	movf	4037,w,c	;volatile
  1249  000C90                     l297:
  1250  000C90  0012               	return	
  1251  000C92  FFFF               	dw	65535	; errata NOP
  1252  000C94                     __end_of_WriteI2C:
  1253                           	opt stack 0
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           intcon	equ	0xFF2
  1259                           intcon2	equ	0xFF1
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postdec1	equ	0xFE5
  1263                           fsr1l	equ	0xFE1
  1264                           status	equ	0xFD8
  1265                           
  1266 ;; *************** function _IdleI2C *****************
  1267 ;; Defined at:
  1268 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_idle.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;		None               void
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1282 ;;      Params:         0       0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0
  1284 ;;      Temps:          1       0       0       0       0       0       0
  1285 ;;      Totals:         1       0       0       0       0       0       0
  1286 ;;Total ram usage:        1 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    4
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_ds1307_init
  1293 ;;		_ds1307_set_date_time
  1294 ;;		_WriteI2C
  1295 ;;		_ds1307_get_date
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text6
  1300  00102E                     __ptext6:
  1301                           	opt stack 0
  1302  00102E                     _IdleI2C:
  1303                           	opt stack 24
  1304                           
  1305                           ;incstack = 0
  1306  00102E  FFFF               	dw	65535
  1307  001030                     l945:
  1308  001030  CFC5 F026          	movff	4037,??_IdleI2C	;volatile
  1309  001034  0E1F               	movlw	31
  1310  001036  1626               	andwf	??_IdleI2C,f,c
  1311  001038  B4D8               	btfsc	status,2,c
  1312  00103A  B4C7               	btfsc	4039,2,c	;volatile
  1313  00103C  D7F9               	goto	l945
  1314  00103E  0012               	return	
  1315  001040  FFFF               	dw	65535	; errata NOP
  1316  001042                     __end_of_IdleI2C:
  1317                           	opt stack 0
  1318                           tblptru	equ	0xFF8
  1319                           tblptrh	equ	0xFF7
  1320                           tblptrl	equ	0xFF6
  1321                           tablat	equ	0xFF5
  1322                           intcon	equ	0xFF2
  1323                           intcon2	equ	0xFF1
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function _ReadI2C *****************
  1331 ;; Defined at:
  1332 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_read.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1346 ;;      Params:         0       0       0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0       0       0
  1348 ;;      Temps:          1       0       0       0       0       0       0
  1349 ;;      Totals:         1       0       0       0       0       0       0
  1350 ;;Total ram usage:        1 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    4
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_ds1307_init
  1357 ;;		_ds1307_get_date
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text7
  1362  000F42                     __ptext7:
  1363                           	opt stack 0
  1364  000F42                     _ReadI2C:
  1365                           	opt stack 25
  1366                           
  1367                           ;incstack = 0
  1368  000F42  FFFF               	dw	65535
  1369  000F44  CFC6 F026          	movff	4038,??_ReadI2C	;volatile
  1370  000F48  0E0F               	movlw	15
  1371  000F4A  1626               	andwf	??_ReadI2C,f,c
  1372  000F4C  5026               	movf	??_ReadI2C,w,c
  1373  000F4E  0A08               	xorlw	8
  1374  000F50  B4D8               	btfsc	status,2,c
  1375  000F52  D007               	goto	l275
  1376  000F54  CFC6 F026          	movff	4038,??_ReadI2C	;volatile
  1377  000F58  0E0F               	movlw	15
  1378  000F5A  1626               	andwf	??_ReadI2C,f,c
  1379  000F5C  5026               	movf	??_ReadI2C,w,c
  1380  000F5E  0A0B               	xorlw	11
  1381  000F60  B4D8               	btfsc	status,2,c
  1382  000F62                     l275:
  1383  000F62  86C5               	bsf	4037,3,c	;volatile
  1384  000F64                     l276:
  1385  000F64  A0C7               	btfss	4039,0,c	;volatile
  1386  000F66  D7FE               	goto	l276
  1387  000F68  50C9               	movf	4041,w,c	;volatile
  1388  000F6A  0012               	return	
  1389  000F6C  FFFF               	dw	65535	; errata NOP
  1390  000F6E                     __end_of_ReadI2C:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           intcon	equ	0xFF2
  1397                           intcon2	equ	0xFF1
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           postdec1	equ	0xFE5
  1401                           fsr1l	equ	0xFE1
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _OpenI2C *****************
  1405 ;; Defined at:
  1406 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_open.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  sync_mode       1    wreg     unsigned char 
  1409 ;;  slew            1   37[COMRAM] unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  sync_mode       1   38[COMRAM] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;		None               void
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1421 ;;      Params:         1       0       0       0       0       0       0
  1422 ;;      Locals:         1       0       0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0
  1424 ;;      Totals:         2       0       0       0       0       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    4
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text8
  1436  00100C                     __ptext8:
  1437                           	opt stack 0
  1438  00100C                     _OpenI2C:
  1439                           	opt stack 26
  1440                           
  1441                           ;incstack = 0
  1442  00100C  FFFF               	dw	65535
  1443                           
  1444                           ;OpenI2C@sync_mode stored from wreg
  1445  00100E  6E27               	movwf	OpenI2C@sync_mode,c
  1446  001010  0E3F               	movlw	63
  1447  001012  16C7               	andwf	4039,f,c	;volatile
  1448  001014  0E00               	movlw	0
  1449  001016  6EC6               	movwf	4038,c	;volatile
  1450  001018  0E00               	movlw	0
  1451  00101A  6EC5               	movwf	4037,c	;volatile
  1452  00101C  5027               	movf	OpenI2C@sync_mode,w,c
  1453  00101E  12C6               	iorwf	4038,f,c	;volatile
  1454  001020  5026               	movf	OpenI2C@slew,w,c
  1455  001022  12C7               	iorwf	4039,f,c	;volatile
  1456  001024  8694               	bsf	3988,3,c	;volatile
  1457  001026  8894               	bsf	3988,4,c	;volatile
  1458  001028  8AC6               	bsf	4038,5,c	;volatile
  1459  00102A  0012               	return	
  1460  00102C  FFFF               	dw	65535	; errata NOP
  1461  00102E                     __end_of_OpenI2C:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           intcon	equ	0xFF2
  1468                           intcon2	equ	0xFF1
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postdec1	equ	0xFE5
  1472                           fsr1l	equ	0xFE1
  1473                           status	equ	0xFD8
  1474                           
  1475 ;; *************** function _LCDWriteString *****************
  1476 ;; Defined at:
  1477 ;;		line 252 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  msg             2   46[COMRAM] PTR const unsigned char 
  1480 ;;		 -> STR_4(2), STR_3(2), STR_2(17), STR_1(14), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  cc              1   49[COMRAM] char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;		None               void
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1492 ;;      Params:         2       0       0       0       0       0       0
  1493 ;;      Locals:         1       0       0       0       0       0       0
  1494 ;;      Temps:          1       0       0       0       0       0       0
  1495 ;;      Totals:         4       0       0       0       0       0       0
  1496 ;;Total ram usage:        4 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    6
  1499 ;; This function calls:
  1500 ;;		_LCDByte
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text9
  1507  00094E                     __ptext9:
  1508                           	opt stack 0
  1509  00094E                     _LCDWriteString:
  1510                           	opt stack 24
  1511                           
  1512                           ;incstack = 0
  1513  00094E  FFFF               	dw	65535
  1514                           
  1515                           ;lcd_hd44780_pic16.c: 282: while(*msg!='\0')
  1516  000950  D043               	goto	l1323
  1517  000952                     l1303:
  1518                           
  1519                           ;lcd_hd44780_pic16.c: 283: {
  1520                           ;lcd_hd44780_pic16.c: 285: if(*msg=='%')
  1521  000952  C02F  FFF6         	movff	LCDWriteString@msg,tblptrl
  1522  000956  C030  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  1523  00095A                     	if	0	;tblptru may be non-zero
  1524  00095A                     	endif
  1525  00095A                     	if	0	;tblptru may be non-zero
  1526  00095A                     	endif
  1527  00095A  0008               	tblrd		*
  1528  00095C  FFFF               	dw	65535	; errata NOP
  1529  00095E  50F5               	movf	tablat,w,c
  1530  000960  0A25               	xorlw	37
  1531  000962  A4D8               	btfss	status,2,c
  1532  000964  D02C               	goto	l1319
  1533                           
  1534                           ;lcd_hd44780_pic16.c: 286: {
  1535                           ;lcd_hd44780_pic16.c: 287: msg++;
  1536  000966  4A2F               	infsnz	LCDWriteString@msg,f,c
  1537  000968  2A30               	incf	LCDWriteString@msg+1,f,c
  1538                           
  1539                           ;lcd_hd44780_pic16.c: 288: int8_t cc=*msg-'0';
  1540  00096A  C02F  FFF6         	movff	LCDWriteString@msg,tblptrl
  1541  00096E  C030  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  1542  000972                     	if	0	;tblptru may be non-zero
  1543  000972                     	endif
  1544  000972                     	if	0	;tblptru may be non-zero
  1545  000972                     	endif
  1546  000972  0008               	tblrd		*
  1547  000974  FFFF               	dw	65535	; errata NOP
  1548  000976  50F5               	movf	tablat,w,c
  1549  000978  0FD0               	addlw	208
  1550  00097A  6E32               	movwf	LCDWriteString@cc,c
  1551                           
  1552                           ;lcd_hd44780_pic16.c: 290: if(cc>=0 && cc<=7)
  1553  00097C  BE32               	btfsc	LCDWriteString@cc,7,c
  1554  00097E  D00E               	goto	l1315
  1555  000980  5032               	movf	LCDWriteString@cc,w,c
  1556  000982  0A80               	xorlw	128
  1557  000984  6E31               	movwf	??_LCDWriteString& (0+255),c
  1558  000986  0E08               	movlw	8
  1559  000988  0A80               	xorlw	128
  1560  00098A  5C31               	subwf	??_LCDWriteString,w,c
  1561  00098C  B0D8               	btfsc	status,0,c
  1562  00098E  D006               	goto	l1315
  1563                           
  1564                           ;lcd_hd44780_pic16.c: 291: {
  1565                           ;lcd_hd44780_pic16.c: 292: (LCDByte(cc,1));
  1566  000990  0E01               	movlw	1
  1567  000992  6E29               	movwf	LCDByte@isdata,c
  1568  000994  5032               	movf	LCDWriteString@cc,w,c
  1569  000996  ECB0  F006         	call	_LCDByte
  1570                           
  1571                           ;lcd_hd44780_pic16.c: 293: }
  1572  00099A  D01C               	goto	l1321
  1573  00099C                     l1315:
  1574                           
  1575                           ;lcd_hd44780_pic16.c: 294: else
  1576                           ;lcd_hd44780_pic16.c: 295: {
  1577                           ;lcd_hd44780_pic16.c: 296: (LCDByte('%',1));
  1578  00099C  0E01               	movlw	1
  1579  00099E  6E29               	movwf	LCDByte@isdata,c
  1580  0009A0  0E25               	movlw	37
  1581  0009A2  ECB0  F006         	call	_LCDByte
  1582                           
  1583                           ;lcd_hd44780_pic16.c: 297: (LCDByte(*msg,1));
  1584  0009A6  0E01               	movlw	1
  1585  0009A8  6E29               	movwf	LCDByte@isdata,c
  1586  0009AA  C02F  FFF6         	movff	LCDWriteString@msg,tblptrl
  1587  0009AE  C030  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  1588  0009B2                     	if	0	;tblptru may be non-zero
  1589  0009B2                     	endif
  1590  0009B2                     	if	0	;tblptru may be non-zero
  1591  0009B2                     	endif
  1592  0009B2  0008               	tblrd		*
  1593  0009B4  FFFF               	dw	65535	; errata NOP
  1594  0009B6  50F5               	movf	tablat,w,c
  1595  0009B8  ECB0  F006         	call	_LCDByte
  1596  0009BC  D00B               	goto	l1321
  1597  0009BE                     l1319:
  1598                           
  1599                           ;lcd_hd44780_pic16.c: 300: else
  1600                           ;lcd_hd44780_pic16.c: 301: {
  1601                           ;lcd_hd44780_pic16.c: 302: (LCDByte(*msg,1));
  1602  0009BE  0E01               	movlw	1
  1603  0009C0  6E29               	movwf	LCDByte@isdata,c
  1604  0009C2  C02F  FFF6         	movff	LCDWriteString@msg,tblptrl
  1605  0009C6  C030  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  1606  0009CA                     	if	0	;tblptru may be non-zero
  1607  0009CA                     	endif
  1608  0009CA                     	if	0	;tblptru may be non-zero
  1609  0009CA                     	endif
  1610  0009CA  0008               	tblrd		*
  1611  0009CC  FFFF               	dw	65535	; errata NOP
  1612  0009CE  50F5               	movf	tablat,w,c
  1613  0009D0  ECB0  F006         	call	_LCDByte
  1614  0009D4                     l1321:
  1615                           
  1616                           ;lcd_hd44780_pic16.c: 303: }
  1617                           ;lcd_hd44780_pic16.c: 304: msg++;
  1618  0009D4  4A2F               	infsnz	LCDWriteString@msg,f,c
  1619  0009D6  2A30               	incf	LCDWriteString@msg+1,f,c
  1620  0009D8                     l1323:
  1621  0009D8  C02F  FFF6         	movff	LCDWriteString@msg,tblptrl
  1622  0009DC  C030  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  1623  0009E0                     	if	0	;tblptru may be non-zero
  1624  0009E0                     	endif
  1625  0009E0                     	if	0	;tblptru may be non-zero
  1626  0009E0                     	endif
  1627  0009E0  0008               	tblrd		*
  1628  0009E2  FFFF               	dw	65535	; errata NOP
  1629  0009E4  50F5               	movf	tablat,w,c
  1630  0009E6  0900               	iorlw	0
  1631  0009E8  B4D8               	btfsc	status,2,c
  1632  0009EA  0012               	return	
  1633  0009EC  FFFF               	dw	65535	; assembler added errata NOP
  1634  0009EE  D7B1               	goto	l1303
  1635  0009F0  FFFF               	dw	65535	; errata NOP
  1636  0009F2                     __end_of_LCDWriteString:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           intcon	equ	0xFF2
  1643                           intcon2	equ	0xFF1
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec1	equ	0xFE5
  1647                           fsr1l	equ	0xFE1
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function _LCDInit *****************
  1651 ;; Defined at:
  1652 ;;		line 194 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  style           1    wreg     unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  style           1   47[COMRAM] unsigned char 
  1657 ;;  __i             1   48[COMRAM] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;		None               void
  1660 ;; Registers used:
  1661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1667 ;;      Params:         0       0       0       0       0       0       0
  1668 ;;      Locals:         2       0       0       0       0       0       0
  1669 ;;      Temps:          1       0       0       0       0       0       0
  1670 ;;      Totals:         3       0       0       0       0       0       0
  1671 ;;Total ram usage:        3 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    6
  1674 ;; This function calls:
  1675 ;;		_LCDBusyLoop
  1676 ;;		_LCDByte
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text10
  1683  000B2A                     __ptext10:
  1684                           	opt stack 0
  1685  000B2A                     _LCDInit:
  1686                           	opt stack 24
  1687                           
  1688                           ;incstack = 0
  1689  000B2A  FFFF               	dw	65535
  1690                           
  1691                           ;LCDInit@style stored from wreg
  1692  000B2C  6E30               	movwf	LCDInit@style,c
  1693                           
  1694                           ;lcd_hd44780_pic16.c: 210: _delay((unsigned long)((30)*(10000000/4000.0)));
  1695  000B2E  0E4A               	movlw	74
  1696  000B30  6E2F               	movwf	??_LCDInit& (0+255),c
  1697  000B32  0E18               	movlw	24
  1698  000B34                     u1157:
  1699  000B34  2EE8               	decfsz	wreg,f,c
  1700  000B36  D7FE               	goto	u1157
  1701  000B38  2E2F               	decfsz	??_LCDInit& (0+255),f,c
  1702  000B3A  D7FC               	goto	u1157
  1703  000B3C  D000               	nop2	
  1704                           
  1705                           ;lcd_hd44780_pic16.c: 213: TRISB&=(~(0x0F<<4));
  1706  000B3E  0E0F               	movlw	15
  1707  000B40  1693               	andwf	3987,f,c	;volatile
  1708                           
  1709                           ;lcd_hd44780_pic16.c: 215: TRISBbits.TRISB3=0;
  1710  000B42  9693               	bcf	3987,3,c	;volatile
  1711                           
  1712                           ;lcd_hd44780_pic16.c: 216: TRISBbits.TRISB1=0;
  1713  000B44  9293               	bcf	3987,1,c	;volatile
  1714                           
  1715                           ;lcd_hd44780_pic16.c: 217: TRISBbits.TRISB2=0;
  1716  000B46  9493               	bcf	3987,2,c	;volatile
  1717                           
  1718                           ;lcd_hd44780_pic16.c: 219: PORTB&=(~(0x0F<<4));
  1719  000B48  0E0F               	movlw	15
  1720  000B4A  1681               	andwf	3969,f,c	;volatile
  1721                           
  1722                           ;lcd_hd44780_pic16.c: 221: (RB3=0);
  1723  000B4C  9681               	bcf	3969,3,c	;volatile
  1724                           
  1725                           ;lcd_hd44780_pic16.c: 222: (RB2=0);
  1726  000B4E  9481               	bcf	3969,2,c	;volatile
  1727                           
  1728                           ;lcd_hd44780_pic16.c: 223: (RB1=0);
  1729  000B50  9281               	bcf	3969,1,c	;volatile
  1730                           
  1731                           ;lcd_hd44780_pic16.c: 226: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  1732  000B52  F000               	nop	
  1733                           
  1734                           ;lcd_hd44780_pic16.c: 228: (RB3=1);
  1735  000B54  8681               	bsf	3969,3,c	;volatile
  1736                           
  1737                           ;lcd_hd44780_pic16.c: 229: PORTB|=((0b00000010)<<4);
  1738  000B56  8A81               	bsf	3969,5,c	;volatile
  1739                           
  1740                           ;lcd_hd44780_pic16.c: 230: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1741  000B58  D000               	nop2		;2 cycle nop
  1742                           
  1743                           ;lcd_hd44780_pic16.c: 231: (RB3=0);
  1744  000B5A  9681               	bcf	3969,3,c	;volatile
  1745                           
  1746                           ;lcd_hd44780_pic16.c: 232: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1747  000B5C  D000               	nop2		;2 cycle nop
  1748                           
  1749                           ;lcd_hd44780_pic16.c: 235: LCDBusyLoop();
  1750  000B5E  EC10  F007         	call	_LCDBusyLoop	;wreg free
  1751                           
  1752                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00101000,0));
  1753  000B62  0E00               	movlw	0
  1754  000B64  6E29               	movwf	LCDByte@isdata,c
  1755  000B66  0E28               	movlw	40
  1756  000B68  ECB0  F006         	call	_LCDByte
  1757                           
  1758                           ;lcd_hd44780_pic16.c: 241: (LCDByte(0b00001100|style,0));
  1759  000B6C  0E00               	movlw	0
  1760  000B6E  6E29               	movwf	LCDByte@isdata,c
  1761  000B70  5030               	movf	LCDInit@style,w,c
  1762  000B72  090C               	iorlw	12
  1763  000B74  ECB0  F006         	call	_LCDByte
  1764                           
  1765                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b01000000,0));
  1766  000B78  0E00               	movlw	0
  1767  000B7A  6E29               	movwf	LCDByte@isdata,c
  1768  000B7C  0E40               	movlw	64
  1769  000B7E  ECB0  F006         	call	_LCDByte
  1770                           
  1771                           ;lcd_hd44780_pic16.c: 246: uint8_t __i;
  1772                           ;lcd_hd44780_pic16.c: 247: for(__i=0;__i<sizeof(__cgram);__i++)
  1773  000B82  0E00               	movlw	0
  1774  000B84  6E31               	movwf	LCDInit@__i,c
  1775  000B86  D00E               	goto	L1
  1776  000B88                     l1295:
  1777                           
  1778                           ;lcd_hd44780_pic16.c: 248: (LCDByte(__cgram[__i],1));
  1779  000B88  0E01               	movlw	1
  1780  000B8A  6E29               	movwf	LCDByte@isdata,c
  1781  000B8C  5031               	movf	LCDInit@__i,w,c
  1782  000B8E  0D01               	mullw	1
  1783  000B90  0E34               	movlw	low ___cgram
  1784  000B92  24F3               	addwf	prodl,w,c
  1785  000B94  6ED9               	movwf	fsr2l,c
  1786  000B96  0E00               	movlw	high ___cgram
  1787  000B98  20F4               	addwfc	prodh,w,c
  1788  000B9A  6EDA               	movwf	fsr2h,c
  1789  000B9C  50DF               	movf	indf2,w,c
  1790  000B9E  ECB0  F006         	call	_LCDByte
  1791  000BA2  2A31               	incf	LCDInit@__i,f,c
  1792  000BA4                     L1:
  1793  000BA4  0E0F               	movlw	15
  1794  000BA6  6431               	cpfsgt	LCDInit@__i,c
  1795  000BA8  D7EF               	goto	l1295
  1796  000BAA  0012               	return	
  1797  000BAC  FFFF               	dw	65535	; errata NOP
  1798  000BAE                     __end_of_LCDInit:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           prodh	equ	0xFF4
  1805                           prodl	equ	0xFF3
  1806                           intcon	equ	0xFF2
  1807                           intcon2	equ	0xFF1
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1l	equ	0xFE1
  1812                           indf2	equ	0xFDF
  1813                           fsr2h	equ	0xFDA
  1814                           fsr2l	equ	0xFD9
  1815                           status	equ	0xFD8
  1816                           
  1817 ;; *************** function _LCDByte *****************
  1818 ;; Defined at:
  1819 ;;		line 81 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  c               1    wreg     unsigned char 
  1822 ;;  isdata          1   40[COMRAM] unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  c               1   44[COMRAM] unsigned char 
  1825 ;;  temp            1   45[COMRAM] unsigned char 
  1826 ;;  ln              1   43[COMRAM] unsigned char 
  1827 ;;  hn              1   42[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;		None               void
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1837 ;;      Params:         1       0       0       0       0       0       0
  1838 ;;      Locals:         4       0       0       0       0       0       0
  1839 ;;      Temps:          1       0       0       0       0       0       0
  1840 ;;      Totals:         6       0       0       0       0       0       0
  1841 ;;Total ram usage:        6 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    5
  1844 ;; This function calls:
  1845 ;;		_LCDBusyLoop
  1846 ;; This function is called by:
  1847 ;;		_LCDInit
  1848 ;;		_LCDWriteString
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text11
  1854  000D60                     __ptext11:
  1855                           	opt stack 0
  1856  000D60                     _LCDByte:
  1857                           	opt stack 24
  1858                           
  1859                           ;incstack = 0
  1860  000D60  FFFF               	dw	65535
  1861                           
  1862                           ;LCDByte@c stored from wreg
  1863  000D62  6E2D               	movwf	LCDByte@c,c
  1864                           
  1865                           ;lcd_hd44780_pic16.c: 90: uint8_t hn,ln;
  1866                           ;lcd_hd44780_pic16.c: 91: uint8_t temp;
  1867                           ;lcd_hd44780_pic16.c: 93: hn=c>>4;
  1868  000D64  382D               	swapf	LCDByte@c,w,c
  1869  000D66  0B0F               	andlw	15
  1870  000D68  6E2B               	movwf	LCDByte@hn,c
  1871                           
  1872                           ;lcd_hd44780_pic16.c: 94: ln=(c & 0x0F);
  1873  000D6A  502D               	movf	LCDByte@c,w,c
  1874  000D6C  0B0F               	andlw	15
  1875  000D6E  6E2C               	movwf	LCDByte@ln,c
  1876                           
  1877                           ;lcd_hd44780_pic16.c: 96: if(isdata==0)
  1878  000D70  6629               	tstfsz	LCDByte@isdata,c
  1879  000D72  D002               	goto	l21
  1880                           
  1881                           ;lcd_hd44780_pic16.c: 97: (RB1=0);
  1882  000D74  9281               	bcf	3969,1,c	;volatile
  1883  000D76  D001               	goto	l22
  1884  000D78                     l21:
  1885                           
  1886                           ;lcd_hd44780_pic16.c: 98: else
  1887                           ;lcd_hd44780_pic16.c: 99: (RB1=1);
  1888  000D78  8281               	bsf	3969,1,c	;volatile
  1889  000D7A                     l22:
  1890                           
  1891                           ;lcd_hd44780_pic16.c: 101: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  1892  000D7A  F000               	nop	
  1893                           
  1894                           ;lcd_hd44780_pic16.c: 103: (RB3=1);
  1895  000D7C  8681               	bsf	3969,3,c	;volatile
  1896                           
  1897                           ;lcd_hd44780_pic16.c: 107: temp=(PORTB & (~(0X0F<<4)))|((hn<<4));
  1898  000D7E  C02B  F02A         	movff	LCDByte@hn,??_LCDByte
  1899  000D82  3A2A               	swapf	??_LCDByte,f,c
  1900  000D84  0EF0               	movlw	240
  1901  000D86  162A               	andwf	??_LCDByte,f,c
  1902  000D88  5081               	movf	3969,w,c	;volatile
  1903  000D8A  0B0F               	andlw	15
  1904  000D8C  102A               	iorwf	??_LCDByte,w,c
  1905  000D8E  6E2E               	movwf	LCDByte@temp,c
  1906                           
  1907                           ;lcd_hd44780_pic16.c: 108: PORTB=temp;
  1908  000D90  C02E  FF81         	movff	LCDByte@temp,3969	;volatile
  1909                           
  1910                           ;lcd_hd44780_pic16.c: 110: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1911  000D94  D000               	nop2		;2 cycle nop
  1912                           
  1913                           ;lcd_hd44780_pic16.c: 114: (RB3=0);
  1914  000D96  9681               	bcf	3969,3,c	;volatile
  1915                           
  1916                           ;lcd_hd44780_pic16.c: 116: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1917  000D98  D000               	nop2		;2 cycle nop
  1918                           
  1919                           ;lcd_hd44780_pic16.c: 119: (RB3=1);
  1920  000D9A  8681               	bsf	3969,3,c	;volatile
  1921                           
  1922                           ;lcd_hd44780_pic16.c: 121: temp=(PORTB & (~(0X0F<<4)))|((ln<<4));
  1923  000D9C  C02C  F02A         	movff	LCDByte@ln,??_LCDByte
  1924  000DA0  3A2A               	swapf	??_LCDByte,f,c
  1925  000DA2  0EF0               	movlw	240
  1926  000DA4  162A               	andwf	??_LCDByte,f,c
  1927  000DA6  5081               	movf	3969,w,c	;volatile
  1928  000DA8  0B0F               	andlw	15
  1929  000DAA  102A               	iorwf	??_LCDByte,w,c
  1930  000DAC  6E2E               	movwf	LCDByte@temp,c
  1931                           
  1932                           ;lcd_hd44780_pic16.c: 123: PORTB=temp;
  1933  000DAE  C02E  FF81         	movff	LCDByte@temp,3969	;volatile
  1934                           
  1935                           ;lcd_hd44780_pic16.c: 125: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1936  000DB2  D000               	nop2		;2 cycle nop
  1937                           
  1938                           ;lcd_hd44780_pic16.c: 129: (RB3=0);
  1939  000DB4  9681               	bcf	3969,3,c	;volatile
  1940                           
  1941                           ;lcd_hd44780_pic16.c: 131: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1942  000DB6  D000               	nop2		;2 cycle nop
  1943                           
  1944                           ;lcd_hd44780_pic16.c: 133: LCDBusyLoop();
  1945  000DB8  EC10  F007         	call	_LCDBusyLoop	;wreg free
  1946  000DBC  0012               	return	
  1947  000DBE  FFFF               	dw	65535	; errata NOP
  1948  000DC0                     __end_of_LCDByte:
  1949                           	opt stack 0
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           prodh	equ	0xFF4
  1955                           prodl	equ	0xFF3
  1956                           intcon	equ	0xFF2
  1957                           intcon2	equ	0xFF1
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1l	equ	0xFE1
  1962                           indf2	equ	0xFDF
  1963                           fsr2h	equ	0xFDA
  1964                           fsr2l	equ	0xFD9
  1965                           status	equ	0xFD8
  1966                           
  1967 ;; *************** function _LCDBusyLoop *****************
  1968 ;; Defined at:
  1969 ;;		line 136 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  status          1   39[COMRAM] unsigned char 
  1974 ;;  temp            1   38[COMRAM] unsigned char 
  1975 ;;  busy            1   37[COMRAM] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;		None               void
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1985 ;;      Params:         0       0       0       0       0       0       0
  1986 ;;      Locals:         3       0       0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0
  1988 ;;      Totals:         3       0       0       0       0       0       0
  1989 ;;Total ram usage:        3 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    4
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_LCDByte
  1996 ;;		_LCDInit
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text12
  2001  000E20                     __ptext12:
  2002                           	opt stack 0
  2003  000E20                     _LCDBusyLoop:
  2004                           	opt stack 24
  2005                           
  2006                           ;incstack = 0
  2007  000E20  FFFF               	dw	65535
  2008                           
  2009                           ;lcd_hd44780_pic16.c: 140: uint8_t busy,status=0x00,temp;
  2010  000E22  0E00               	movlw	0
  2011  000E24  6E28               	movwf	LCDBusyLoop@status,c
  2012                           
  2013                           ;lcd_hd44780_pic16.c: 143: TRISB|=(0x0f<<4);
  2014  000E26  0EF0               	movlw	240
  2015  000E28  1293               	iorwf	3987,f,c	;volatile
  2016                           
  2017                           ;lcd_hd44780_pic16.c: 146: (RB2=1);
  2018  000E2A  8481               	bsf	3969,2,c	;volatile
  2019                           
  2020                           ;lcd_hd44780_pic16.c: 147: (RB1=0);
  2021  000E2C  9281               	bcf	3969,1,c	;volatile
  2022                           
  2023                           ;lcd_hd44780_pic16.c: 151: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2024  000E2E  F000               	nop	
  2025  000E30                     l907:
  2026                           
  2027                           ;lcd_hd44780_pic16.c: 155: {
  2028                           ;lcd_hd44780_pic16.c: 157: (RB3=1);
  2029  000E30  8681               	bsf	3969,3,c	;volatile
  2030                           
  2031                           ;lcd_hd44780_pic16.c: 160: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2032  000E32  F000               	nop	
  2033                           
  2034                           ;lcd_hd44780_pic16.c: 162: status=(PORTB>>4);
  2035  000E34  3881               	swapf	3969,w,c	;volatile
  2036  000E36  0B0F               	andlw	15
  2037  000E38  6E28               	movwf	LCDBusyLoop@status,c
  2038                           
  2039                           ;lcd_hd44780_pic16.c: 163: status=status<<4;
  2040  000E3A  3828               	swapf	LCDBusyLoop@status,w,c
  2041  000E3C  0BF0               	andlw	240
  2042  000E3E  6E28               	movwf	LCDBusyLoop@status,c
  2043                           
  2044                           ;lcd_hd44780_pic16.c: 165: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2045  000E40  F000               	nop	
  2046                           
  2047                           ;lcd_hd44780_pic16.c: 168: (RB3=0);
  2048  000E42  9681               	bcf	3969,3,c	;volatile
  2049                           
  2050                           ;lcd_hd44780_pic16.c: 169: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2051  000E44  D000               	nop2		;2 cycle nop
  2052                           
  2053                           ;lcd_hd44780_pic16.c: 171: (RB3=1);
  2054  000E46  8681               	bsf	3969,3,c	;volatile
  2055                           
  2056                           ;lcd_hd44780_pic16.c: 172: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2057  000E48  F000               	nop	
  2058                           
  2059                           ;lcd_hd44780_pic16.c: 174: temp=(PORTB>>4);
  2060  000E4A  3881               	swapf	3969,w,c	;volatile
  2061  000E4C  0B0F               	andlw	15
  2062  000E4E  6E27               	movwf	LCDBusyLoop@temp,c
  2063                           
  2064                           ;lcd_hd44780_pic16.c: 175: temp&=0x0F;
  2065  000E50  0E0F               	movlw	15
  2066  000E52  1627               	andwf	LCDBusyLoop@temp,f,c
  2067                           
  2068                           ;lcd_hd44780_pic16.c: 177: status=status|temp;
  2069  000E54  5028               	movf	LCDBusyLoop@status,w,c
  2070  000E56  1027               	iorwf	LCDBusyLoop@temp,w,c
  2071  000E58  6E28               	movwf	LCDBusyLoop@status,c
  2072                           
  2073                           ;lcd_hd44780_pic16.c: 179: busy=status & 0b10000000;
  2074  000E5A  5028               	movf	LCDBusyLoop@status,w,c
  2075  000E5C  0B80               	andlw	128
  2076  000E5E  6E26               	movwf	LCDBusyLoop@busy,c
  2077                           
  2078                           ;lcd_hd44780_pic16.c: 181: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2079  000E60  F000               	nop	
  2080                           
  2081                           ;lcd_hd44780_pic16.c: 183: (RB3=0);
  2082  000E62  9681               	bcf	3969,3,c	;volatile
  2083                           
  2084                           ;lcd_hd44780_pic16.c: 184: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2085  000E64  D000               	nop2		;2 cycle nop
  2086                           
  2087                           ;lcd_hd44780_pic16.c: 185: }while(busy);
  2088  000E66  6626               	tstfsz	LCDBusyLoop@busy,c
  2089  000E68  D7E3               	goto	l907
  2090                           
  2091                           ;lcd_hd44780_pic16.c: 187: (RB2=0);
  2092  000E6A  9481               	bcf	3969,2,c	;volatile
  2093                           
  2094                           ;lcd_hd44780_pic16.c: 190: TRISB&=(~(0x0F<<4));
  2095  000E6C  0E0F               	movlw	15
  2096  000E6E  1693               	andwf	3987,f,c	;volatile
  2097  000E70  0012               	return	
  2098  000E72  FFFF               	dw	65535	; errata NOP
  2099  000E74                     __end_of_LCDBusyLoop:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           prodh	equ	0xFF4
  2106                           prodl	equ	0xFF3
  2107                           intcon	equ	0xFF2
  2108                           intcon2	equ	0xFF1
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1l	equ	0xFE1
  2113                           indf2	equ	0xFDF
  2114                           fsr2h	equ	0xFDA
  2115                           fsr2l	equ	0xFD9
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function _One_Sec *****************
  2119 ;; Defined at:
  2120 ;;		line 52 in file "E:\Study Material\XC8 PROJECTS\RTC Library\test.C"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;		None               void
  2127 ;; Registers used:
  2128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2134 ;;      Params:         0       0       0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0
  2136 ;;      Temps:         14       0       0       0       0       0       0
  2137 ;;      Totals:        14       0       0       0       0       0       0
  2138 ;;Total ram usage:       14 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    3
  2141 ;; This function calls:
  2142 ;;		_LCDGotoXY
  2143 ;;		_LCDWriteInt
  2144 ;;		_ds1307_get_time
  2145 ;;		i2_LCDByte
  2146 ;;		i2_LCDWriteString
  2147 ;; This function is called by:
  2148 ;;		Interrupt level 2
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	intcode
  2153  000008                     __pintcode:
  2154                           	opt stack 0
  2155  000008                     _One_Sec:
  2156                           	opt stack 24
  2157                           
  2158                           ;incstack = 0
  2159  000008  FFFF               	dw	65535	; errata NOP
  2160  00000A  CFFA F018          	movff	pclath,??_One_Sec
  2161  00000E  CFFB F019          	movff	pclatu,??_One_Sec+1
  2162  000012  CFE9 F01A          	movff	fsr0l,??_One_Sec+2
  2163  000016  CFEA F01B          	movff	fsr0h,??_One_Sec+3
  2164  00001A  CFE1 F01C          	movff	fsr1l,??_One_Sec+4
  2165  00001E  CFE2 F01D          	movff	fsr1h,??_One_Sec+5
  2166  000022  CFD9 F01E          	movff	fsr2l,??_One_Sec+6
  2167  000026  CFDA F01F          	movff	fsr2h,??_One_Sec+7
  2168  00002A  CFF3 F020          	movff	prodl,??_One_Sec+8
  2169  00002E  CFF4 F021          	movff	prodh,??_One_Sec+9
  2170  000032  CFF6 F022          	movff	tblptrl,??_One_Sec+10
  2171  000036  CFF7 F023          	movff	tblptrh,??_One_Sec+11
  2172  00003A  CFF8 F024          	movff	tblptru,??_One_Sec+12
  2173  00003E  CFF5 F025          	movff	tablat,??_One_Sec+13
  2174                           
  2175                           ;test.C: 54: ds1307_get_time();
  2176  000042  ECD7  F005         	call	_ds1307_get_time	;wreg free
  2177                           
  2178                           ;test.C: 57: (LCDByte(0b00000001,0));
  2179  000046  0E00               	movlw	0
  2180  000048  6E04               	movwf	i2LCDByte@isdata,c
  2181  00004A  0E01               	movlw	1
  2182  00004C  ECE0  F006         	call	i2_LCDByte
  2183                           
  2184                           ;test.C: 60: LCDWriteString("NITIN N. SANGALE");
  2185  000050  0E06               	movlw	high STR_2
  2186  000052  6E0B               	movwf	i2LCDWriteString@msg+1,c
  2187  000054  0E01               	movlw	low STR_2
  2188  000056  6E0A               	movwf	i2LCDWriteString@msg,c
  2189  000058  ECF9  F004         	call	i2_LCDWriteString	;wreg free
  2190                           
  2191                           ;test.C: 61: LCDGotoXY(4,1);
  2192  00005C  0E01               	movlw	1
  2193  00005E  6E0A               	movwf	LCDGotoXY@y,c
  2194  000060  0E04               	movlw	4
  2195  000062  EC64  F007         	call	_LCDGotoXY
  2196                           
  2197                           ;test.C: 62: LCDWriteInt(hr,2);
  2198  000066  C04B  F00A         	movff	_hr,LCDWriteInt@val
  2199  00006A  6A0B               	clrf	LCDWriteInt@val+1,c
  2200  00006C  0E02               	movlw	2
  2201  00006E  6E0C               	movwf	LCDWriteInt@field_length,c
  2202  000070  EC12  F003         	call	_LCDWriteInt	;wreg free
  2203                           
  2204                           ;test.C: 63: LCDGotoXY(6,1);
  2205  000074  0E01               	movlw	1
  2206  000076  6E0A               	movwf	LCDGotoXY@y,c
  2207  000078  0E06               	movlw	6
  2208  00007A  EC64  F007         	call	_LCDGotoXY
  2209                           
  2210                           ;test.C: 64: LCDWriteString(":");
  2211  00007E  0E06               	movlw	high STR_3
  2212  000080  6E0B               	movwf	i2LCDWriteString@msg+1,c
  2213  000082  0E20               	movlw	low STR_3
  2214  000084  6E0A               	movwf	i2LCDWriteString@msg,c
  2215  000086  ECF9  F004         	call	i2_LCDWriteString	;wreg free
  2216                           
  2217                           ;test.C: 65: LCDGotoXY(7,1);
  2218  00008A  0E01               	movlw	1
  2219  00008C  6E0A               	movwf	LCDGotoXY@y,c
  2220  00008E  0E07               	movlw	7
  2221  000090  EC64  F007         	call	_LCDGotoXY
  2222                           
  2223                           ;test.C: 66: LCDWriteInt(min,2);
  2224  000094  C04C  F00A         	movff	_min,LCDWriteInt@val
  2225  000098  6A0B               	clrf	LCDWriteInt@val+1,c
  2226  00009A  0E02               	movlw	2
  2227  00009C  6E0C               	movwf	LCDWriteInt@field_length,c
  2228  00009E  EC12  F003         	call	_LCDWriteInt	;wreg free
  2229                           
  2230                           ;test.C: 67: LCDGotoXY(9,1);
  2231  0000A2  0E01               	movlw	1
  2232  0000A4  6E0A               	movwf	LCDGotoXY@y,c
  2233  0000A6  0E09               	movlw	9
  2234  0000A8  EC64  F007         	call	_LCDGotoXY
  2235                           
  2236                           ;test.C: 68: LCDWriteString(":");
  2237  0000AC  0E06               	movlw	high STR_3
  2238  0000AE  6E0B               	movwf	i2LCDWriteString@msg+1,c
  2239  0000B0  0E20               	movlw	low STR_3
  2240  0000B2  6E0A               	movwf	i2LCDWriteString@msg,c
  2241  0000B4  ECF9  F004         	call	i2_LCDWriteString	;wreg free
  2242                           
  2243                           ;test.C: 69: LCDGotoXY(10,1);
  2244  0000B8  0E01               	movlw	1
  2245  0000BA  6E0A               	movwf	LCDGotoXY@y,c
  2246  0000BC  0E0A               	movlw	10
  2247  0000BE  EC64  F007         	call	_LCDGotoXY
  2248                           
  2249                           ;test.C: 70: LCDWriteInt(sec,2);
  2250  0000C2  C04E  F00A         	movff	_sec,LCDWriteInt@val
  2251  0000C6  6A0B               	clrf	LCDWriteInt@val+1,c
  2252  0000C8  0E02               	movlw	2
  2253  0000CA  6E0C               	movwf	LCDWriteInt@field_length,c
  2254  0000CC  EC12  F003         	call	_LCDWriteInt	;wreg free
  2255                           
  2256                           ;test.C: 72: INT0IF = 0;
  2257  0000D0  92F2               	bcf	intcon,1,c	;volatile
  2258                           
  2259                           ;test.C: 73: return;
  2260  0000D2  C025  FFF5         	movff	??_One_Sec+13,tablat
  2261  0000D6  C024  FFF8         	movff	??_One_Sec+12,tblptru
  2262  0000DA  C023  FFF7         	movff	??_One_Sec+11,tblptrh
  2263  0000DE  C022  FFF6         	movff	??_One_Sec+10,tblptrl
  2264  0000E2  C021  FFF4         	movff	??_One_Sec+9,prodh
  2265  0000E6  C020  FFF3         	movff	??_One_Sec+8,prodl
  2266  0000EA  C01F  FFDA         	movff	??_One_Sec+7,fsr2h
  2267  0000EE  C01E  FFD9         	movff	??_One_Sec+6,fsr2l
  2268  0000F2  C01D  FFE2         	movff	??_One_Sec+5,fsr1h
  2269  0000F6  C01C  FFE1         	movff	??_One_Sec+4,fsr1l
  2270  0000FA  C01B  FFEA         	movff	??_One_Sec+3,fsr0h
  2271  0000FE  C01A  FFE9         	movff	??_One_Sec+2,fsr0l
  2272  000102  C019  FFFB         	movff	??_One_Sec+1,pclatu
  2273  000106  C018  FFFA         	movff	??_One_Sec,pclath
  2274  00010A  0011               	retfie		f
  2275  00010C  FFFF               	dw	65535	; errata NOP
  2276  00010E                     __end_of_One_Sec:
  2277                           	opt stack 0
  2278                           pclatu	equ	0xFFB
  2279                           pclath	equ	0xFFA
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           prodh	equ	0xFF4
  2285                           prodl	equ	0xFF3
  2286                           intcon	equ	0xFF2
  2287                           intcon2	equ	0xFF1
  2288                           postinc0	equ	0xFEE
  2289                           fsr0h	equ	0xFEA
  2290                           fsr0l	equ	0xFE9
  2291                           wreg	equ	0xFE8
  2292                           postdec1	equ	0xFE5
  2293                           fsr1h	equ	0xFE2
  2294                           fsr1l	equ	0xFE1
  2295                           indf2	equ	0xFDF
  2296                           fsr2h	equ	0xFDA
  2297                           fsr2l	equ	0xFD9
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function i2_LCDWriteString *****************
  2301 ;; Defined at:
  2302 ;;		line 252 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  msg             2    9[COMRAM] PTR const unsigned char 
  2305 ;;		 -> STR_4(2), STR_3(2), STR_2(17), STR_1(14), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  LCDWriteStri    1   12[COMRAM] char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;		None               void
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         2       0       0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0       0       0
  2319 ;;      Temps:          1       0       0       0       0       0       0
  2320 ;;      Totals:         4       0       0       0       0       0       0
  2321 ;;Total ram usage:        4 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    2
  2324 ;; This function calls:
  2325 ;;		i2_LCDByte
  2326 ;; This function is called by:
  2327 ;;		_One_Sec
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text14
  2332  0009F2                     __ptext14:
  2333                           	opt stack 0
  2334  0009F2                     i2_LCDWriteString:
  2335                           	opt stack 24
  2336                           
  2337                           ;incstack = 0
  2338  0009F2  FFFF               	dw	65535
  2339                           
  2340                           ;lcd_hd44780_pic16.c: 282: while(*msg!='\0')
  2341  0009F4  D043               	goto	i2l1835
  2342  0009F6                     i2l1815:
  2343                           
  2344                           ;lcd_hd44780_pic16.c: 283: {
  2345                           ;lcd_hd44780_pic16.c: 285: if(*msg=='%')
  2346  0009F6  C00A  FFF6         	movff	i2LCDWriteString@msg,tblptrl
  2347  0009FA  C00B  FFF7         	movff	i2LCDWriteString@msg+1,tblptrh
  2348  0009FE                     	if	0	;tblptru may be non-zero
  2349  0009FE                     	endif
  2350  0009FE                     	if	0	;tblptru may be non-zero
  2351  0009FE                     	endif
  2352  0009FE  0008               	tblrd		*
  2353  000A00  FFFF               	dw	65535	; errata NOP
  2354  000A02  50F5               	movf	tablat,w,c
  2355  000A04  0A25               	xorlw	37
  2356  000A06  A4D8               	btfss	status,2,c
  2357  000A08  D02C               	goto	i2l1831
  2358                           
  2359                           ;lcd_hd44780_pic16.c: 286: {
  2360                           ;lcd_hd44780_pic16.c: 287: msg++;
  2361  000A0A  4A0A               	infsnz	i2LCDWriteString@msg,f,c
  2362  000A0C  2A0B               	incf	i2LCDWriteString@msg+1,f,c
  2363                           
  2364                           ;lcd_hd44780_pic16.c: 288: int8_t cc=*msg-'0';
  2365  000A0E  C00A  FFF6         	movff	i2LCDWriteString@msg,tblptrl
  2366  000A12  C00B  FFF7         	movff	i2LCDWriteString@msg+1,tblptrh
  2367  000A16                     	if	0	;tblptru may be non-zero
  2368  000A16                     	endif
  2369  000A16                     	if	0	;tblptru may be non-zero
  2370  000A16                     	endif
  2371  000A16  0008               	tblrd		*
  2372  000A18  FFFF               	dw	65535	; errata NOP
  2373  000A1A  50F5               	movf	tablat,w,c
  2374  000A1C  0FD0               	addlw	208
  2375  000A1E  6E0D               	movwf	i2LCDWriteString@cc,c
  2376                           
  2377                           ;lcd_hd44780_pic16.c: 290: if(cc>=0 && cc<=7)
  2378  000A20  BE0D               	btfsc	i2LCDWriteString@cc,7,c
  2379  000A22  D00E               	goto	i2l1827
  2380  000A24  500D               	movf	i2LCDWriteString@cc,w,c
  2381  000A26  0A80               	xorlw	128
  2382  000A28  6E0C               	movwf	??i2_LCDWriteString& (0+255),c
  2383  000A2A  0E08               	movlw	8
  2384  000A2C  0A80               	xorlw	128
  2385  000A2E  5C0C               	subwf	??i2_LCDWriteString,w,c
  2386  000A30  B0D8               	btfsc	status,0,c
  2387  000A32  D006               	goto	i2l1827
  2388                           
  2389                           ;lcd_hd44780_pic16.c: 291: {
  2390                           ;lcd_hd44780_pic16.c: 292: (LCDByte(cc,1));
  2391  000A34  0E01               	movlw	1
  2392  000A36  6E04               	movwf	i2LCDByte@isdata,c
  2393  000A38  500D               	movf	i2LCDWriteString@cc,w,c
  2394  000A3A  ECE0  F006         	call	i2_LCDByte
  2395                           
  2396                           ;lcd_hd44780_pic16.c: 293: }
  2397  000A3E  D01C               	goto	i2l1833
  2398  000A40                     i2l1827:
  2399                           
  2400                           ;lcd_hd44780_pic16.c: 294: else
  2401                           ;lcd_hd44780_pic16.c: 295: {
  2402                           ;lcd_hd44780_pic16.c: 296: (LCDByte('%',1));
  2403  000A40  0E01               	movlw	1
  2404  000A42  6E04               	movwf	i2LCDByte@isdata,c
  2405  000A44  0E25               	movlw	37
  2406  000A46  ECE0  F006         	call	i2_LCDByte
  2407                           
  2408                           ;lcd_hd44780_pic16.c: 297: (LCDByte(*msg,1));
  2409  000A4A  0E01               	movlw	1
  2410  000A4C  6E04               	movwf	i2LCDByte@isdata,c
  2411  000A4E  C00A  FFF6         	movff	i2LCDWriteString@msg,tblptrl
  2412  000A52  C00B  FFF7         	movff	i2LCDWriteString@msg+1,tblptrh
  2413  000A56                     	if	0	;tblptru may be non-zero
  2414  000A56                     	endif
  2415  000A56                     	if	0	;tblptru may be non-zero
  2416  000A56                     	endif
  2417  000A56  0008               	tblrd		*
  2418  000A58  FFFF               	dw	65535	; errata NOP
  2419  000A5A  50F5               	movf	tablat,w,c
  2420  000A5C  ECE0  F006         	call	i2_LCDByte
  2421  000A60  D00B               	goto	i2l1833
  2422  000A62                     i2l1831:
  2423                           
  2424                           ;lcd_hd44780_pic16.c: 300: else
  2425                           ;lcd_hd44780_pic16.c: 301: {
  2426                           ;lcd_hd44780_pic16.c: 302: (LCDByte(*msg,1));
  2427  000A62  0E01               	movlw	1
  2428  000A64  6E04               	movwf	i2LCDByte@isdata,c
  2429  000A66  C00A  FFF6         	movff	i2LCDWriteString@msg,tblptrl
  2430  000A6A  C00B  FFF7         	movff	i2LCDWriteString@msg+1,tblptrh
  2431  000A6E                     	if	0	;tblptru may be non-zero
  2432  000A6E                     	endif
  2433  000A6E                     	if	0	;tblptru may be non-zero
  2434  000A6E                     	endif
  2435  000A6E  0008               	tblrd		*
  2436  000A70  FFFF               	dw	65535	; errata NOP
  2437  000A72  50F5               	movf	tablat,w,c
  2438  000A74  ECE0  F006         	call	i2_LCDByte
  2439  000A78                     i2l1833:
  2440                           
  2441                           ;lcd_hd44780_pic16.c: 303: }
  2442                           ;lcd_hd44780_pic16.c: 304: msg++;
  2443  000A78  4A0A               	infsnz	i2LCDWriteString@msg,f,c
  2444  000A7A  2A0B               	incf	i2LCDWriteString@msg+1,f,c
  2445  000A7C                     i2l1835:
  2446  000A7C  C00A  FFF6         	movff	i2LCDWriteString@msg,tblptrl
  2447  000A80  C00B  FFF7         	movff	i2LCDWriteString@msg+1,tblptrh
  2448  000A84                     	if	0	;tblptru may be non-zero
  2449  000A84                     	endif
  2450  000A84                     	if	0	;tblptru may be non-zero
  2451  000A84                     	endif
  2452  000A84  0008               	tblrd		*
  2453  000A86  FFFF               	dw	65535	; errata NOP
  2454  000A88  50F5               	movf	tablat,w,c
  2455  000A8A  0900               	iorlw	0
  2456  000A8C  B4D8               	btfsc	status,2,c
  2457  000A8E  0012               	return	
  2458  000A90  FFFF               	dw	65535	; assembler added errata NOP
  2459  000A92  D7B1               	goto	i2l1815
  2460  000A94  FFFF               	dw	65535	; errata NOP
  2461  000A96                     __end_ofi2_LCDWriteString:
  2462                           	opt stack 0
  2463                           pclatu	equ	0xFFB
  2464                           pclath	equ	0xFFA
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           intcon	equ	0xFF2
  2472                           intcon2	equ	0xFF1
  2473                           postinc0	equ	0xFEE
  2474                           fsr0h	equ	0xFEA
  2475                           fsr0l	equ	0xFE9
  2476                           wreg	equ	0xFE8
  2477                           postdec1	equ	0xFE5
  2478                           fsr1h	equ	0xFE2
  2479                           fsr1l	equ	0xFE1
  2480                           indf2	equ	0xFDF
  2481                           fsr2h	equ	0xFDA
  2482                           fsr2l	equ	0xFD9
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _ds1307_get_time *****************
  2486 ;; Defined at:
  2487 ;;		line 111 in file "E:\Study Material\XC8 PROJECTS\RTC Library\myrtc.C"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;		None               void
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2501 ;;      Params:         0       0       0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0
  2504 ;;      Totals:         0       0       0       0       0       0       0
  2505 ;;Total ram usage:        0 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    2
  2508 ;; This function calls:
  2509 ;;		i2_IdleI2C
  2510 ;;		i2_ReadI2C
  2511 ;;		i2_WriteI2C
  2512 ;;		i2_bcd2bin
  2513 ;; This function is called by:
  2514 ;;		_One_Sec
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text15
  2519  000BAE                     __ptext15:
  2520                           	opt stack 0
  2521  000BAE                     _ds1307_get_time:
  2522                           	opt stack 24
  2523                           
  2524                           ;incstack = 0
  2525  000BAE  FFFF               	dw	65535
  2526                           
  2527                           ;myrtc.C: 113: IdleI2C();
  2528  000BB0  EC21  F008         	call	i2_IdleI2C	;wreg free
  2529                           
  2530                           ;myrtc.C: 114: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2531  000BB4  80C5               	bsf	4037,0,c	;volatile
  2532  000BB6                     i2l157:
  2533  000BB6  B0C5               	btfsc	4037,0,c	;volatile
  2534  000BB8  D7FE               	goto	i2l157
  2535                           
  2536                           ;myrtc.C: 115: WriteI2C(0xD0);
  2537  000BBA  0ED0               	movlw	208
  2538  000BBC  EC4A  F006         	call	i2_WriteI2C
  2539                           
  2540                           ;myrtc.C: 116: IdleI2C();
  2541  000BC0  EC21  F008         	call	i2_IdleI2C	;wreg free
  2542                           
  2543                           ;myrtc.C: 117: WriteI2C(0x00);
  2544  000BC4  0E00               	movlw	0
  2545  000BC6  EC4A  F006         	call	i2_WriteI2C
  2546                           
  2547                           ;myrtc.C: 118: IdleI2C();
  2548  000BCA  EC21  F008         	call	i2_IdleI2C	;wreg free
  2549                           
  2550                           ;myrtc.C: 119: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2551  000BCE  82C5               	bsf	4037,1,c	;volatile
  2552  000BD0                     i2l160:
  2553  000BD0  B2C5               	btfsc	4037,1,c	;volatile
  2554  000BD2  D7FE               	goto	i2l160
  2555                           
  2556                           ;myrtc.C: 120: WriteI2C(0xD1);
  2557  000BD4  0ED1               	movlw	209
  2558  000BD6  EC4A  F006         	call	i2_WriteI2C
  2559                           
  2560                           ;myrtc.C: 121: sec = ReadI2C();
  2561  000BDA  ECB7  F007         	call	i2_ReadI2C	;wreg free
  2562  000BDE  6E4E               	movwf	_sec,c
  2563                           
  2564                           ;myrtc.C: 122: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2565  000BE0  9AC5               	bcf	4037,5,c	;volatile
  2566  000BE2  88C5               	bsf	4037,4,c	;volatile
  2567  000BE4                     i2l163:
  2568  000BE4  B8C5               	btfsc	4037,4,c	;volatile
  2569  000BE6  D7FE               	goto	i2l163
  2570                           
  2571                           ;myrtc.C: 123: min = ReadI2C();
  2572  000BE8  ECB7  F007         	call	i2_ReadI2C	;wreg free
  2573  000BEC  6E4C               	movwf	_min,c
  2574                           
  2575                           ;myrtc.C: 124: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2576  000BEE  9AC5               	bcf	4037,5,c	;volatile
  2577  000BF0  88C5               	bsf	4037,4,c	;volatile
  2578  000BF2                     i2l166:
  2579  000BF2  B8C5               	btfsc	4037,4,c	;volatile
  2580  000BF4  D7FE               	goto	i2l166
  2581                           
  2582                           ;myrtc.C: 125: hr = ReadI2C();
  2583  000BF6  ECB7  F007         	call	i2_ReadI2C	;wreg free
  2584  000BFA  6E4B               	movwf	_hr,c
  2585                           
  2586                           ;myrtc.C: 126: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2587  000BFC  8AC5               	bsf	4037,5,c	;volatile
  2588  000BFE  88C5               	bsf	4037,4,c	;volatile
  2589  000C00                     i2l169:
  2590  000C00  B8C5               	btfsc	4037,4,c	;volatile
  2591  000C02  D7FE               	goto	i2l169
  2592                           
  2593                           ;myrtc.C: 127: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2594  000C04  84C5               	bsf	4037,2,c	;volatile
  2595  000C06                     i2l172:
  2596  000C06  B4C5               	btfsc	4037,2,c	;volatile
  2597  000C08  D7FE               	goto	i2l172
  2598                           
  2599                           ;myrtc.C: 130: sec = bcd2bin(sec & 0x7f);
  2600  000C0A  504E               	movf	_sec,w,c
  2601  000C0C  0B7F               	andlw	127
  2602  000C0E  ECF3  F007         	call	i2_bcd2bin
  2603  000C12  6E4E               	movwf	_sec,c
  2604                           
  2605                           ;myrtc.C: 131: min = bcd2bin(min & 0x7f);
  2606  000C14  504C               	movf	_min,w,c
  2607  000C16  0B7F               	andlw	127
  2608  000C18  ECF3  F007         	call	i2_bcd2bin
  2609  000C1C  6E4C               	movwf	_min,c
  2610                           
  2611                           ;myrtc.C: 132: hr = bcd2bin(hr & 0x3f);
  2612  000C1E  504B               	movf	_hr,w,c
  2613  000C20  0B3F               	andlw	63
  2614  000C22  ECF3  F007         	call	i2_bcd2bin
  2615  000C26  6E4B               	movwf	_hr,c
  2616  000C28  0012               	return	
  2617  000C2A  FFFF               	dw	65535	; errata NOP
  2618  000C2C                     __end_of_ds1307_get_time:
  2619                           	opt stack 0
  2620                           pclatu	equ	0xFFB
  2621                           pclath	equ	0xFFA
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           prodh	equ	0xFF4
  2627                           prodl	equ	0xFF3
  2628                           intcon	equ	0xFF2
  2629                           intcon2	equ	0xFF1
  2630                           postinc0	equ	0xFEE
  2631                           fsr0h	equ	0xFEA
  2632                           fsr0l	equ	0xFE9
  2633                           wreg	equ	0xFE8
  2634                           postdec1	equ	0xFE5
  2635                           fsr1h	equ	0xFE2
  2636                           fsr1l	equ	0xFE1
  2637                           indf2	equ	0xFDF
  2638                           fsr2h	equ	0xFDA
  2639                           fsr2l	equ	0xFD9
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function i2_bcd2bin *****************
  2643 ;; Defined at:
  2644 ;;		line 164 in file "E:\Study Material\XC8 PROJECTS\RTC Library\myrtc.C"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  bcd_value       1    wreg     unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  bcd_value       1    1[COMRAM] unsigned char 
  2649 ;;  bcd2bin         1    2[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      unsigned char 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2659 ;;      Params:         0       0       0       0       0       0       0
  2660 ;;      Locals:         2       0       0       0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0       0       0
  2662 ;;      Totals:         3       0       0       0       0       0       0
  2663 ;;Total ram usage:        3 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_ds1307_get_time
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text16
  2673  000FE6                     __ptext16:
  2674                           	opt stack 0
  2675  000FE6                     i2_bcd2bin:
  2676                           	opt stack 25
  2677                           
  2678                           ;incstack = 0
  2679  000FE6  FFFF               	dw	65535
  2680                           
  2681                           ;i2bcd2bin@bcd_value stored from wreg
  2682  000FE8  6E02               	movwf	i2bcd2bin@bcd_value,c
  2683                           
  2684                           ;myrtc.C: 166: unsigned char temp;
  2685                           ;myrtc.C: 168: temp = bcd_value;
  2686  000FEA  C002  F003         	movff	i2bcd2bin@bcd_value,i2bcd2bin@temp
  2687                           
  2688                           ;myrtc.C: 170: temp >>= 1;
  2689  000FEE  90D8               	bcf	status,0,c
  2690  000FF0  3203               	rrcf	i2bcd2bin@temp,f,c
  2691                           
  2692                           ;myrtc.C: 172: temp &= 0x78;
  2693  000FF2  0E78               	movlw	120
  2694  000FF4  1603               	andwf	i2bcd2bin@temp,f,c
  2695                           
  2696                           ;myrtc.C: 176: return(temp + (temp >> 2) + (bcd_value & 0x0f));
  2697  000FF6  C002  F001         	movff	i2bcd2bin@bcd_value,??i2_bcd2bin
  2698  000FFA  0E0F               	movlw	15
  2699  000FFC  1601               	andwf	??i2_bcd2bin,f,c
  2700  000FFE  4003               	rrncf	i2bcd2bin@temp,w,c
  2701  001000  42E8               	rrncf	wreg,f,c
  2702  001002  0B3F               	andlw	63
  2703  001004  2401               	addwf	??i2_bcd2bin,w,c
  2704  001006  2403               	addwf	i2bcd2bin@temp,w,c
  2705  001008  0012               	return	
  2706  00100A  FFFF               	dw	65535	; errata NOP
  2707  00100C                     __end_ofi2_bcd2bin:
  2708                           	opt stack 0
  2709                           pclatu	equ	0xFFB
  2710                           pclath	equ	0xFFA
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           intcon	equ	0xFF2
  2718                           intcon2	equ	0xFF1
  2719                           postinc0	equ	0xFEE
  2720                           fsr0h	equ	0xFEA
  2721                           fsr0l	equ	0xFE9
  2722                           wreg	equ	0xFE8
  2723                           postdec1	equ	0xFE5
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           fsr2h	equ	0xFDA
  2728                           fsr2l	equ	0xFD9
  2729                           status	equ	0xFD8
  2730                           
  2731 ;; *************** function i2_WriteI2C *****************
  2732 ;; Defined at:
  2733 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_writ.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  data_out        1    wreg     unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  data_out        1    2[COMRAM] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      char 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2747 ;;      Params:         0       0       0       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0       0       0
  2749 ;;      Temps:          1       0       0       0       0       0       0
  2750 ;;      Totals:         2       0       0       0       0       0       0
  2751 ;;Total ram usage:        2 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    1
  2754 ;; This function calls:
  2755 ;;		i2_IdleI2C
  2756 ;; This function is called by:
  2757 ;;		_ds1307_get_time
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text17
  2762  000C94                     __ptext17:
  2763                           	opt stack 0
  2764  000C94                     i2_WriteI2C:
  2765                           	opt stack 24
  2766                           
  2767                           ;incstack = 0
  2768  000C94  FFFF               	dw	65535
  2769                           
  2770                           ;i2WriteI2C@data_out stored from wreg
  2771  000C96  6E03               	movwf	i2WriteI2C@data_out,c
  2772  000C98  C003  FFC9         	movff	i2WriteI2C@data_out,4041	;volatile
  2773  000C9C  BEC6               	btfsc	4038,7,c	;volatile
  2774  000C9E  D02C               	goto	i2l297
  2775                           
  2776                           ;	Return value of i2_WriteI2C is never used
  2777  000CA0  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2778  000CA4  0E0F               	movlw	15
  2779  000CA6  1602               	andwf	??i2_WriteI2C,f,c
  2780  000CA8  5002               	movf	??i2_WriteI2C,w,c
  2781  000CAA  0A08               	xorlw	8
  2782  000CAC  B4D8               	btfsc	status,2,c
  2783  000CAE  D00F               	goto	i2l1715
  2784  000CB0  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2785  000CB4  0E0F               	movlw	15
  2786  000CB6  1602               	andwf	??i2_WriteI2C,f,c
  2787  000CB8  5002               	movf	??i2_WriteI2C,w,c
  2788  000CBA  0A0B               	xorlw	11
  2789  000CBC  B4D8               	btfsc	status,2,c
  2790  000CBE  D007               	goto	i2l1715
  2791  000CC0  88C6               	bsf	4038,4,c	;volatile
  2792  000CC2                     i2l300:
  2793  000CC2  A69E               	btfss	3998,3,c	;volatile
  2794  000CC4  D7FE               	goto	i2l300
  2795  000CC6  B4C7               	btfsc	4039,2,c	;volatile
  2796  000CC8  D017               	goto	i2l297
  2797  000CCA  50C7               	movf	4039,w,c	;volatile
  2798  000CCC  D015               	goto	i2l297
  2799  000CCE                     i2l1715:
  2800  000CCE  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2801  000CD2  0E0F               	movlw	15
  2802  000CD4  1602               	andwf	??i2_WriteI2C,f,c
  2803  000CD6  5002               	movf	??i2_WriteI2C,w,c
  2804  000CD8  0A08               	xorlw	8
  2805  000CDA  B4D8               	btfsc	status,2,c
  2806  000CDC  D008               	goto	i2l309
  2807  000CDE  CFC6 F002          	movff	4038,??i2_WriteI2C	;volatile
  2808  000CE2  0E0F               	movlw	15
  2809  000CE4  1602               	andwf	??i2_WriteI2C,f,c
  2810  000CE6  5002               	movf	??i2_WriteI2C,w,c
  2811  000CE8  0A0B               	xorlw	11
  2812  000CEA  A4D8               	btfss	status,2,c
  2813  000CEC  D005               	goto	i2l297
  2814  000CEE                     i2l309:
  2815  000CEE  B0C7               	btfsc	4039,0,c	;volatile
  2816  000CF0  D7FE               	goto	i2l309
  2817  000CF2  EC21  F008         	call	i2_IdleI2C	;wreg free
  2818  000CF6  50C5               	movf	4037,w,c	;volatile
  2819  000CF8                     i2l297:
  2820  000CF8  0012               	return	
  2821  000CFA  FFFF               	dw	65535	; errata NOP
  2822  000CFC                     __end_ofi2_WriteI2C:
  2823                           	opt stack 0
  2824                           pclatu	equ	0xFFB
  2825                           pclath	equ	0xFFA
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           intcon2	equ	0xFF1
  2834                           postinc0	equ	0xFEE
  2835                           fsr0h	equ	0xFEA
  2836                           fsr0l	equ	0xFE9
  2837                           wreg	equ	0xFE8
  2838                           postdec1	equ	0xFE5
  2839                           fsr1h	equ	0xFE2
  2840                           fsr1l	equ	0xFE1
  2841                           indf2	equ	0xFDF
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function i2_IdleI2C *****************
  2847 ;; Defined at:
  2848 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_idle.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;		None               void
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2862 ;;      Params:         0       0       0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0
  2864 ;;      Temps:          1       0       0       0       0       0       0
  2865 ;;      Totals:         1       0       0       0       0       0       0
  2866 ;;Total ram usage:        1 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_ds1307_get_time
  2872 ;;		i2_WriteI2C
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text18
  2877  001042                     __ptext18:
  2878                           	opt stack 0
  2879  001042                     i2_IdleI2C:
  2880                           	opt stack 24
  2881                           
  2882                           ;incstack = 0
  2883  001042  FFFF               	dw	65535
  2884  001044                     i2l1653:
  2885  001044  CFC5 F001          	movff	4037,??i2_IdleI2C	;volatile
  2886  001048  0E1F               	movlw	31
  2887  00104A  1601               	andwf	??i2_IdleI2C,f,c
  2888  00104C  B4D8               	btfsc	status,2,c
  2889  00104E  B4C7               	btfsc	4039,2,c	;volatile
  2890  001050  D7F9               	goto	i2l1653
  2891  001052  0012               	return	
  2892  001054  FFFF               	dw	65535	; errata NOP
  2893  001056                     __end_ofi2_IdleI2C:
  2894                           	opt stack 0
  2895                           pclatu	equ	0xFFB
  2896                           pclath	equ	0xFFA
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           intcon2	equ	0xFF1
  2905                           postinc0	equ	0xFEE
  2906                           fsr0h	equ	0xFEA
  2907                           fsr0l	equ	0xFE9
  2908                           wreg	equ	0xFE8
  2909                           postdec1	equ	0xFE5
  2910                           fsr1h	equ	0xFE2
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function i2_ReadI2C *****************
  2918 ;; Defined at:
  2919 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\i2c\i2c_read.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      unsigned char 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2933 ;;      Params:         0       0       0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0
  2935 ;;      Temps:          1       0       0       0       0       0       0
  2936 ;;      Totals:         1       0       0       0       0       0       0
  2937 ;;Total ram usage:        1 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_ds1307_get_time
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text19
  2947  000F6E                     __ptext19:
  2948                           	opt stack 0
  2949  000F6E                     i2_ReadI2C:
  2950                           	opt stack 25
  2951                           
  2952                           ;incstack = 0
  2953  000F6E  FFFF               	dw	65535
  2954  000F70  CFC6 F001          	movff	4038,??i2_ReadI2C	;volatile
  2955  000F74  0E0F               	movlw	15
  2956  000F76  1601               	andwf	??i2_ReadI2C,f,c
  2957  000F78  5001               	movf	??i2_ReadI2C,w,c
  2958  000F7A  0A08               	xorlw	8
  2959  000F7C  B4D8               	btfsc	status,2,c
  2960  000F7E  D007               	goto	i2l275
  2961  000F80  CFC6 F001          	movff	4038,??i2_ReadI2C	;volatile
  2962  000F84  0E0F               	movlw	15
  2963  000F86  1601               	andwf	??i2_ReadI2C,f,c
  2964  000F88  5001               	movf	??i2_ReadI2C,w,c
  2965  000F8A  0A0B               	xorlw	11
  2966  000F8C  B4D8               	btfsc	status,2,c
  2967  000F8E                     i2l275:
  2968  000F8E  86C5               	bsf	4037,3,c	;volatile
  2969  000F90                     i2l276:
  2970  000F90  A0C7               	btfss	4039,0,c	;volatile
  2971  000F92  D7FE               	goto	i2l276
  2972  000F94  50C9               	movf	4041,w,c	;volatile
  2973  000F96  0012               	return	
  2974  000F98  FFFF               	dw	65535	; errata NOP
  2975  000F9A                     __end_ofi2_ReadI2C:
  2976                           	opt stack 0
  2977                           pclatu	equ	0xFFB
  2978                           pclath	equ	0xFFA
  2979                           tblptru	equ	0xFF8
  2980                           tblptrh	equ	0xFF7
  2981                           tblptrl	equ	0xFF6
  2982                           tablat	equ	0xFF5
  2983                           prodh	equ	0xFF4
  2984                           prodl	equ	0xFF3
  2985                           intcon	equ	0xFF2
  2986                           intcon2	equ	0xFF1
  2987                           postinc0	equ	0xFEE
  2988                           fsr0h	equ	0xFEA
  2989                           fsr0l	equ	0xFE9
  2990                           wreg	equ	0xFE8
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           indf2	equ	0xFDF
  2995                           fsr2h	equ	0xFDA
  2996                           fsr2l	equ	0xFD9
  2997                           status	equ	0xFD8
  2998                           
  2999 ;; *************** function _LCDWriteInt *****************
  3000 ;; Defined at:
  3001 ;;		line 308 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  val             2    9[COMRAM] int 
  3004 ;;  field_length    1   11[COMRAM] char 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  str             5   14[COMRAM] unsigned char [5]
  3007 ;;  i               2   21[COMRAM] int 
  3008 ;;  j               2   19[COMRAM] int 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;		None               void
  3011 ;; Registers used:
  3012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3018 ;;      Params:         3       0       0       0       0       0       0
  3019 ;;      Locals:         9       0       0       0       0       0       0
  3020 ;;      Temps:          2       0       0       0       0       0       0
  3021 ;;      Totals:        14       0       0       0       0       0       0
  3022 ;;Total ram usage:       14 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    2
  3025 ;; This function calls:
  3026 ;;		___awdiv
  3027 ;;		___awmod
  3028 ;;		i2_LCDByte
  3029 ;; This function is called by:
  3030 ;;		_One_Sec
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text20
  3035  000624                     __ptext20:
  3036                           	opt stack 0
  3037  000624                     _LCDWriteInt:
  3038                           	opt stack 24
  3039                           
  3040                           ;incstack = 0
  3041  000624  FFFF               	dw	65535
  3042                           
  3043                           ;lcd_hd44780_pic16.c: 321: char str[5]={0,0,0,0,0};
  3044  000626  EE20  F044         	lfsr	2,LCDWriteInt@F3701
  3045  00062A  EE10  F00F         	lfsr	1,LCDWriteInt@str
  3046  00062E  0E05               	movlw	5
  3047  000630                     i2u96_41:
  3048  000630  CFDE FFE6          	movff	postinc2,postinc1
  3049  000634  2EE8               	decfsz	wreg,f,c
  3050  000636  D7FC               	goto	i2u96_41
  3051                           
  3052                           ;lcd_hd44780_pic16.c: 322: int i=4,j=0;
  3053  000638  0E00               	movlw	0
  3054  00063A  6E17               	movwf	LCDWriteInt@i+1,c
  3055  00063C  0E04               	movlw	4
  3056  00063E  6E16               	movwf	LCDWriteInt@i,c
  3057  000640  0E00               	movlw	0
  3058  000642  6E15               	movwf	LCDWriteInt@j+1,c
  3059  000644  0E00               	movlw	0
  3060  000646  6E14               	movwf	LCDWriteInt@j,c
  3061                           
  3062                           ;lcd_hd44780_pic16.c: 325: if(val<0)
  3063  000648  500B               	movf	LCDWriteInt@val+1,w,c
  3064  00064A  0A80               	xorlw	128
  3065  00064C  6EF3               	movwf	prodl,c
  3066  00064E  0E80               	movlw	128
  3067  000650  5CF3               	subwf	prodl,w,c
  3068  000652  0E00               	movlw	0
  3069  000654  B4D8               	btfsc	status,2,c
  3070  000656  5C0A               	subwf	LCDWriteInt@val,w,c
  3071  000658  B0D8               	btfsc	status,0,c
  3072  00065A  D02D               	goto	i2l1745
  3073                           
  3074                           ;lcd_hd44780_pic16.c: 326: {
  3075                           ;lcd_hd44780_pic16.c: 327: (LCDByte('-',1));
  3076  00065C  0E01               	movlw	1
  3077  00065E  6E04               	movwf	i2LCDByte@isdata,c
  3078  000660  0E2D               	movlw	45
  3079  000662  ECE0  F006         	call	i2_LCDByte
  3080                           
  3081                           ;lcd_hd44780_pic16.c: 328: val=val*-1;
  3082  000666  6C0A               	negf	LCDWriteInt@val,c
  3083  000668  1E0B               	comf	LCDWriteInt@val+1,f,c
  3084  00066A  B0D8               	btfsc	status,0,c
  3085  00066C  2A0B               	incf	LCDWriteInt@val+1,f,c
  3086  00066E  D023               	goto	i2l1745
  3087  000670                     i2l1739:
  3088                           
  3089                           ;lcd_hd44780_pic16.c: 332: {
  3090                           ;lcd_hd44780_pic16.c: 333: str[i]=val%10;
  3091  000670  0E0F               	movlw	low LCDWriteInt@str
  3092  000672  2416               	addwf	LCDWriteInt@i,w,c
  3093  000674  6ED9               	movwf	fsr2l,c
  3094  000676  0E00               	movlw	high LCDWriteInt@str
  3095  000678  2017               	addwfc	LCDWriteInt@i+1,w,c
  3096  00067A  6EDA               	movwf	fsr2h,c
  3097  00067C  C00A  F001         	movff	LCDWriteInt@val,___awmod@dividend
  3098  000680  C00B  F002         	movff	LCDWriteInt@val+1,___awmod@dividend+1
  3099  000684  0E00               	movlw	0
  3100  000686  6E04               	movwf	___awmod@divisor+1,c
  3101  000688  0E0A               	movlw	10
  3102  00068A  6E03               	movwf	___awmod@divisor,c
  3103  00068C  EC4B  F005         	call	___awmod	;wreg free
  3104  000690  5001               	movf	?___awmod,w,c
  3105  000692  6EDF               	movwf	indf2,c
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 334: val=val/10;
  3108  000694  C00A  F001         	movff	LCDWriteInt@val,___awdiv@dividend
  3109  000698  C00B  F002         	movff	LCDWriteInt@val+1,___awdiv@dividend+1
  3110  00069C  0E00               	movlw	0
  3111  00069E  6E04               	movwf	___awdiv@divisor+1,c
  3112  0006A0  0E0A               	movlw	10
  3113  0006A2  6E03               	movwf	___awdiv@divisor,c
  3114  0006A4  EC53  F004         	call	___awdiv	;wreg free
  3115  0006A8  C001  F00A         	movff	?___awdiv,LCDWriteInt@val
  3116  0006AC  C002  F00B         	movff	?___awdiv+1,LCDWriteInt@val+1
  3117                           
  3118                           ;lcd_hd44780_pic16.c: 335: i--;
  3119  0006B0  0616               	decf	LCDWriteInt@i,f,c
  3120  0006B2  A0D8               	btfss	status,0,c
  3121  0006B4  0617               	decf	LCDWriteInt@i+1,f,c
  3122  0006B6                     i2l1745:
  3123  0006B6  500B               	movf	LCDWriteInt@val+1,w,c
  3124  0006B8  100A               	iorwf	LCDWriteInt@val,w,c
  3125  0006BA  A4D8               	btfss	status,2,c
  3126  0006BC  D7D9               	goto	i2l1739
  3127                           
  3128                           ;lcd_hd44780_pic16.c: 336: }
  3129                           ;lcd_hd44780_pic16.c: 337: if(field_length==-1)
  3130  0006BE  280C               	incf	LCDWriteInt@field_length,w,c
  3131  0006C0  B4D8               	btfsc	status,2,c
  3132  0006C2  D003               	goto	i2l1753
  3133  0006C4  D00C               	goto	i2l1755
  3134  0006C6                     i2l1751:
  3135  0006C6  4A14               	infsnz	LCDWriteInt@j,f,c
  3136  0006C8  2A15               	incf	LCDWriteInt@j+1,f,c
  3137  0006CA                     i2l1753:
  3138  0006CA  0E0F               	movlw	low LCDWriteInt@str
  3139  0006CC  2414               	addwf	LCDWriteInt@j,w,c
  3140  0006CE  6ED9               	movwf	fsr2l,c
  3141  0006D0  0E00               	movlw	high LCDWriteInt@str
  3142  0006D2  2015               	addwfc	LCDWriteInt@j+1,w,c
  3143  0006D4  6EDA               	movwf	fsr2h,c
  3144  0006D6  50DF               	movf	indf2,w,c
  3145  0006D8  A4D8               	btfss	status,2,c
  3146  0006DA  D010               	goto	i2l1757
  3147  0006DC  D7F4               	goto	i2l1751
  3148  0006DE                     i2l1755:
  3149                           
  3150                           ;lcd_hd44780_pic16.c: 339: else
  3151                           ;lcd_hd44780_pic16.c: 340: j=5-field_length;
  3152  0006DE  C00C  F00D         	movff	LCDWriteInt@field_length,??_LCDWriteInt
  3153  0006E2  6A0E               	clrf	(??_LCDWriteInt+1)& (0+255),c
  3154  0006E4  BE0D               	btfsc	??_LCDWriteInt& (0+255),7,c
  3155  0006E6  060E               	decf	(??_LCDWriteInt+1)& (0+255),f,c
  3156  0006E8  1E0D               	comf	??_LCDWriteInt,f,c
  3157  0006EA  1E0E               	comf	??_LCDWriteInt+1,f,c
  3158  0006EC  4A0D               	infsnz	??_LCDWriteInt,f,c
  3159  0006EE  2A0E               	incf	??_LCDWriteInt+1,f,c
  3160  0006F0  0E05               	movlw	5
  3161  0006F2  240D               	addwf	??_LCDWriteInt,w,c
  3162  0006F4  6E14               	movwf	LCDWriteInt@j,c
  3163  0006F6  0E00               	movlw	0
  3164  0006F8  200E               	addwfc	??_LCDWriteInt+1,w,c
  3165  0006FA  6E15               	movwf	LCDWriteInt@j+1,c
  3166  0006FC                     i2l1757:
  3167                           
  3168                           ;lcd_hd44780_pic16.c: 343: for(i=j;i<5;i++)
  3169  0006FC  C014  F016         	movff	LCDWriteInt@j,LCDWriteInt@i
  3170  000700  C015  F017         	movff	LCDWriteInt@j+1,LCDWriteInt@i+1
  3171  000704  5017               	movf	LCDWriteInt@i+1,w,c
  3172  000706  0A80               	xorlw	128
  3173  000708  0F80               	addlw	-128
  3174  00070A  0E05               	movlw	5
  3175  00070C  B4D8               	btfsc	status,2,c
  3176  00070E  5C16               	subwf	LCDWriteInt@i,w,c
  3177  000710  B0D8               	btfsc	status,0,c
  3178  000712  D00F               	goto	i2l59
  3179                           
  3180                           ;lcd_hd44780_pic16.c: 344: {
  3181                           ;lcd_hd44780_pic16.c: 345: (LCDByte(48+str[i],1));
  3182  000714  0E01               	movlw	1
  3183  000716  6E04               	movwf	i2LCDByte@isdata,c
  3184  000718  0E0F               	movlw	low LCDWriteInt@str
  3185  00071A  2416               	addwf	LCDWriteInt@i,w,c
  3186  00071C  6ED9               	movwf	fsr2l,c
  3187  00071E  0E00               	movlw	high LCDWriteInt@str
  3188  000720  2017               	addwfc	LCDWriteInt@i+1,w,c
  3189  000722  6EDA               	movwf	fsr2h,c
  3190  000724  50DF               	movf	indf2,w,c
  3191  000726  0F30               	addlw	48
  3192  000728  ECE0  F006         	call	i2_LCDByte
  3193  00072C  4A16               	infsnz	LCDWriteInt@i,f,c
  3194  00072E  2A17               	incf	LCDWriteInt@i+1,f,c
  3195  000730  D7E9               	goto	L2
  3196  000732                     i2l59:
  3197  000732  0012               	return	
  3198  000734  FFFF               	dw	65535	; errata NOP
  3199  000736                     __end_of_LCDWriteInt:
  3200                           	opt stack 0
  3201                           pclatu	equ	0xFFB
  3202                           pclath	equ	0xFFA
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           prodh	equ	0xFF4
  3208                           prodl	equ	0xFF3
  3209                           intcon	equ	0xFF2
  3210                           intcon2	equ	0xFF1
  3211                           postinc0	equ	0xFEE
  3212                           fsr0h	equ	0xFEA
  3213                           fsr0l	equ	0xFE9
  3214                           wreg	equ	0xFE8
  3215                           postinc1	equ	0xFE6
  3216                           postdec1	equ	0xFE5
  3217                           fsr1h	equ	0xFE2
  3218                           fsr1l	equ	0xFE1
  3219                           indf2	equ	0xFDF
  3220                           postinc2	equ	0xFDE
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8
  3224                           
  3225 ;; *************** function ___awmod *****************
  3226 ;; Defined at:
  3227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  dividend        2    0[COMRAM] int 
  3230 ;;  divisor         2    2[COMRAM] int 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  sign            1    5[COMRAM] unsigned char 
  3233 ;;  counter         1    4[COMRAM] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2    0[COMRAM] int 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, prodl
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3243 ;;      Params:         4       0       0       0       0       0       0
  3244 ;;      Locals:         2       0       0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0
  3246 ;;      Totals:         6       0       0       0       0       0       0
  3247 ;;Total ram usage:        6 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_LCDWriteInt
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text21
  3257  000A96                     __ptext21:
  3258                           	opt stack 0
  3259  000A96                     ___awmod:
  3260                           	opt stack 25
  3261                           
  3262                           ;incstack = 0
  3263  000A96  FFFF               	dw	65535
  3264  000A98  0E00               	movlw	0
  3265  000A9A  6E06               	movwf	___awmod@sign,c
  3266  000A9C  5002               	movf	___awmod@dividend+1,w,c
  3267  000A9E  0A80               	xorlw	128
  3268  000AA0  6EF3               	movwf	prodl,c
  3269  000AA2  0E80               	movlw	128
  3270  000AA4  5CF3               	subwf	prodl,w,c
  3271  000AA6  0E00               	movlw	0
  3272  000AA8  B4D8               	btfsc	status,2,c
  3273  000AAA  5C01               	subwf	___awmod@dividend,w,c
  3274  000AAC  B0D8               	btfsc	status,0,c
  3275  000AAE  D006               	goto	i2l1145
  3276  000AB0  6C01               	negf	___awmod@dividend,c
  3277  000AB2  1E02               	comf	___awmod@dividend+1,f,c
  3278  000AB4  B0D8               	btfsc	status,0,c
  3279  000AB6  2A02               	incf	___awmod@dividend+1,f,c
  3280  000AB8  0E01               	movlw	1
  3281  000ABA  6E06               	movwf	___awmod@sign,c
  3282  000ABC                     i2l1145:
  3283  000ABC  5004               	movf	___awmod@divisor+1,w,c
  3284  000ABE  0A80               	xorlw	128
  3285  000AC0  6EF3               	movwf	prodl,c
  3286  000AC2  0E80               	movlw	128
  3287  000AC4  5CF3               	subwf	prodl,w,c
  3288  000AC6  0E00               	movlw	0
  3289  000AC8  B4D8               	btfsc	status,2,c
  3290  000ACA  5C03               	subwf	___awmod@divisor,w,c
  3291  000ACC  B0D8               	btfsc	status,0,c
  3292  000ACE  D004               	goto	i2l1149
  3293  000AD0  6C03               	negf	___awmod@divisor,c
  3294  000AD2  1E04               	comf	___awmod@divisor+1,f,c
  3295  000AD4  B0D8               	btfsc	status,0,c
  3296  000AD6  2A04               	incf	___awmod@divisor+1,f,c
  3297  000AD8                     i2l1149:
  3298  000AD8  5004               	movf	___awmod@divisor+1,w,c
  3299  000ADA  1003               	iorwf	___awmod@divisor,w,c
  3300  000ADC  B4D8               	btfsc	status,2,c
  3301  000ADE  D018               	goto	i2l1165
  3302  000AE0  0E01               	movlw	1
  3303  000AE2  6E05               	movwf	___awmod@counter,c
  3304  000AE4  D004               	goto	i2l1155
  3305  000AE6                     i2l1153:
  3306  000AE6  90D8               	bcf	status,0,c
  3307  000AE8  3603               	rlcf	___awmod@divisor,f,c
  3308  000AEA  3604               	rlcf	___awmod@divisor+1,f,c
  3309  000AEC  2A05               	incf	___awmod@counter,f,c
  3310  000AEE                     i2l1155:
  3311  000AEE  AE04               	btfss	___awmod@divisor+1,7,c
  3312  000AF0  D7FA               	goto	i2l1153
  3313  000AF2                     i2l1157:
  3314  000AF2  5003               	movf	___awmod@divisor,w,c
  3315  000AF4  5C01               	subwf	___awmod@dividend,w,c
  3316  000AF6  5004               	movf	___awmod@divisor+1,w,c
  3317  000AF8  5802               	subwfb	___awmod@dividend+1,w,c
  3318  000AFA  A0D8               	btfss	status,0,c
  3319  000AFC  D004               	goto	i2l1161
  3320  000AFE  5003               	movf	___awmod@divisor,w,c
  3321  000B00  5E01               	subwf	___awmod@dividend,f,c
  3322  000B02  5004               	movf	___awmod@divisor+1,w,c
  3323  000B04  5A02               	subwfb	___awmod@dividend+1,f,c
  3324  000B06                     i2l1161:
  3325  000B06  90D8               	bcf	status,0,c
  3326  000B08  3204               	rrcf	___awmod@divisor+1,f,c
  3327  000B0A  3203               	rrcf	___awmod@divisor,f,c
  3328  000B0C  2E05               	decfsz	___awmod@counter,f,c
  3329  000B0E  D7F1               	goto	i2l1157
  3330  000B10                     i2l1165:
  3331  000B10  5006               	movf	___awmod@sign,w,c
  3332  000B12  B4D8               	btfsc	status,2,c
  3333  000B14  D004               	goto	i2l1169
  3334  000B16  6C01               	negf	___awmod@dividend,c
  3335  000B18  1E02               	comf	___awmod@dividend+1,f,c
  3336  000B1A  B0D8               	btfsc	status,0,c
  3337  000B1C  2A02               	incf	___awmod@dividend+1,f,c
  3338  000B1E                     i2l1169:
  3339  000B1E  C001  F001         	movff	___awmod@dividend,?___awmod
  3340  000B22  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3341  000B26  0012               	return	
  3342  000B28  FFFF               	dw	65535	; errata NOP
  3343  000B2A                     __end_of___awmod:
  3344                           	opt stack 0
  3345                           pclatu	equ	0xFFB
  3346                           pclath	equ	0xFFA
  3347                           tblptru	equ	0xFF8
  3348                           tblptrh	equ	0xFF7
  3349                           tblptrl	equ	0xFF6
  3350                           tablat	equ	0xFF5
  3351                           prodh	equ	0xFF4
  3352                           prodl	equ	0xFF3
  3353                           intcon	equ	0xFF2
  3354                           intcon2	equ	0xFF1
  3355                           postinc0	equ	0xFEE
  3356                           fsr0h	equ	0xFEA
  3357                           fsr0l	equ	0xFE9
  3358                           wreg	equ	0xFE8
  3359                           postinc1	equ	0xFE6
  3360                           postdec1	equ	0xFE5
  3361                           fsr1h	equ	0xFE2
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function ___awdiv *****************
  3370 ;; Defined at:
  3371 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  dividend        2    0[COMRAM] int 
  3374 ;;  divisor         2    2[COMRAM] int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  quotient        2    6[COMRAM] int 
  3377 ;;  sign            1    5[COMRAM] unsigned char 
  3378 ;;  counter         1    4[COMRAM] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  2    0[COMRAM] int 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0, prodl
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         4       0       0       0       0       0       0
  3389 ;;      Locals:         4       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0
  3391 ;;      Totals:         8       0       0       0       0       0       0
  3392 ;;Total ram usage:        8 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_LCDWriteInt
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text22
  3402  0008A6                     __ptext22:
  3403                           	opt stack 0
  3404  0008A6                     ___awdiv:
  3405                           	opt stack 25
  3406                           
  3407                           ;incstack = 0
  3408  0008A6  FFFF               	dw	65535
  3409  0008A8  0E00               	movlw	0
  3410  0008AA  6E06               	movwf	___awdiv@sign,c
  3411  0008AC  5004               	movf	___awdiv@divisor+1,w,c
  3412  0008AE  0A80               	xorlw	128
  3413  0008B0  6EF3               	movwf	prodl,c
  3414  0008B2  0E80               	movlw	128
  3415  0008B4  5CF3               	subwf	prodl,w,c
  3416  0008B6  0E00               	movlw	0
  3417  0008B8  B4D8               	btfsc	status,2,c
  3418  0008BA  5C03               	subwf	___awdiv@divisor,w,c
  3419  0008BC  B0D8               	btfsc	status,0,c
  3420  0008BE  D006               	goto	i2l1101
  3421  0008C0  6C03               	negf	___awdiv@divisor,c
  3422  0008C2  1E04               	comf	___awdiv@divisor+1,f,c
  3423  0008C4  B0D8               	btfsc	status,0,c
  3424  0008C6  2A04               	incf	___awdiv@divisor+1,f,c
  3425  0008C8  0E01               	movlw	1
  3426  0008CA  6E06               	movwf	___awdiv@sign,c
  3427  0008CC                     i2l1101:
  3428  0008CC  5002               	movf	___awdiv@dividend+1,w,c
  3429  0008CE  0A80               	xorlw	128
  3430  0008D0  6EF3               	movwf	prodl,c
  3431  0008D2  0E80               	movlw	128
  3432  0008D4  5CF3               	subwf	prodl,w,c
  3433  0008D6  0E00               	movlw	0
  3434  0008D8  B4D8               	btfsc	status,2,c
  3435  0008DA  5C01               	subwf	___awdiv@dividend,w,c
  3436  0008DC  B0D8               	btfsc	status,0,c
  3437  0008DE  D006               	goto	i2l1107
  3438  0008E0  6C01               	negf	___awdiv@dividend,c
  3439  0008E2  1E02               	comf	___awdiv@dividend+1,f,c
  3440  0008E4  B0D8               	btfsc	status,0,c
  3441  0008E6  2A02               	incf	___awdiv@dividend+1,f,c
  3442  0008E8  0E01               	movlw	1
  3443  0008EA  1A06               	xorwf	___awdiv@sign,f,c
  3444  0008EC                     i2l1107:
  3445  0008EC  0E00               	movlw	0
  3446  0008EE  6E08               	movwf	___awdiv@quotient+1,c
  3447  0008F0  0E00               	movlw	0
  3448  0008F2  6E07               	movwf	___awdiv@quotient,c
  3449  0008F4  5004               	movf	___awdiv@divisor+1,w,c
  3450  0008F6  1003               	iorwf	___awdiv@divisor,w,c
  3451  0008F8  B4D8               	btfsc	status,2,c
  3452  0008FA  D01C               	goto	i2l1129
  3453  0008FC  0E01               	movlw	1
  3454  0008FE  6E05               	movwf	___awdiv@counter,c
  3455  000900  D004               	goto	i2l1115
  3456  000902                     i2l1113:
  3457  000902  90D8               	bcf	status,0,c
  3458  000904  3603               	rlcf	___awdiv@divisor,f,c
  3459  000906  3604               	rlcf	___awdiv@divisor+1,f,c
  3460  000908  2A05               	incf	___awdiv@counter,f,c
  3461  00090A                     i2l1115:
  3462  00090A  AE04               	btfss	___awdiv@divisor+1,7,c
  3463  00090C  D7FA               	goto	i2l1113
  3464  00090E                     i2l1117:
  3465  00090E  90D8               	bcf	status,0,c
  3466  000910  3607               	rlcf	___awdiv@quotient,f,c
  3467  000912  3608               	rlcf	___awdiv@quotient+1,f,c
  3468  000914  5003               	movf	___awdiv@divisor,w,c
  3469  000916  5C01               	subwf	___awdiv@dividend,w,c
  3470  000918  5004               	movf	___awdiv@divisor+1,w,c
  3471  00091A  5802               	subwfb	___awdiv@dividend+1,w,c
  3472  00091C  A0D8               	btfss	status,0,c
  3473  00091E  D005               	goto	i2l1125
  3474  000920  5003               	movf	___awdiv@divisor,w,c
  3475  000922  5E01               	subwf	___awdiv@dividend,f,c
  3476  000924  5004               	movf	___awdiv@divisor+1,w,c
  3477  000926  5A02               	subwfb	___awdiv@dividend+1,f,c
  3478  000928  8007               	bsf	___awdiv@quotient,0,c
  3479  00092A                     i2l1125:
  3480  00092A  90D8               	bcf	status,0,c
  3481  00092C  3204               	rrcf	___awdiv@divisor+1,f,c
  3482  00092E  3203               	rrcf	___awdiv@divisor,f,c
  3483  000930  2E05               	decfsz	___awdiv@counter,f,c
  3484  000932  D7ED               	goto	i2l1117
  3485  000934                     i2l1129:
  3486  000934  5006               	movf	___awdiv@sign,w,c
  3487  000936  B4D8               	btfsc	status,2,c
  3488  000938  D004               	goto	i2l1133
  3489  00093A  6C07               	negf	___awdiv@quotient,c
  3490  00093C  1E08               	comf	___awdiv@quotient+1,f,c
  3491  00093E  B0D8               	btfsc	status,0,c
  3492  000940  2A08               	incf	___awdiv@quotient+1,f,c
  3493  000942                     i2l1133:
  3494  000942  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3495  000946  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3496  00094A  0012               	return	
  3497  00094C  FFFF               	dw	65535	; errata NOP
  3498  00094E                     __end_of___awdiv:
  3499                           	opt stack 0
  3500                           pclatu	equ	0xFFB
  3501                           pclath	equ	0xFFA
  3502                           tblptru	equ	0xFF8
  3503                           tblptrh	equ	0xFF7
  3504                           tblptrl	equ	0xFF6
  3505                           tablat	equ	0xFF5
  3506                           prodh	equ	0xFF4
  3507                           prodl	equ	0xFF3
  3508                           intcon	equ	0xFF2
  3509                           intcon2	equ	0xFF1
  3510                           postinc0	equ	0xFEE
  3511                           fsr0h	equ	0xFEA
  3512                           fsr0l	equ	0xFE9
  3513                           wreg	equ	0xFE8
  3514                           postinc1	equ	0xFE6
  3515                           postdec1	equ	0xFE5
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           postinc2	equ	0xFDE
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _LCDGotoXY *****************
  3525 ;; Defined at:
  3526 ;;		line 353 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  x               1    wreg     unsigned char 
  3529 ;;  y               1    9[COMRAM] unsigned char 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  x               1   10[COMRAM] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;		None               void
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3541 ;;      Params:         1       0       0       0       0       0       0
  3542 ;;      Locals:         1       0       0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0
  3544 ;;      Totals:         2       0       0       0       0       0       0
  3545 ;;Total ram usage:        2 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    2
  3548 ;; This function calls:
  3549 ;;		i2_LCDByte
  3550 ;; This function is called by:
  3551 ;;		_One_Sec
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text23
  3556  000EC8                     __ptext23:
  3557                           	opt stack 0
  3558  000EC8                     _LCDGotoXY:
  3559                           	opt stack 24
  3560                           
  3561                           ;incstack = 0
  3562  000EC8  FFFF               	dw	65535
  3563                           
  3564                           ;LCDGotoXY@x stored from wreg
  3565  000ECA  6E0B               	movwf	LCDGotoXY@x,c
  3566                           
  3567                           ;lcd_hd44780_pic16.c: 355: if(x>=20) return;
  3568  000ECC  0E13               	movlw	19
  3569  000ECE  640B               	cpfsgt	LCDGotoXY@x,c
  3570  000ED0  D008               	goto	i2l1779
  3571  000ED2  D01A               	goto	i2l63
  3572  000ED4                     i2l1771:
  3573                           
  3574                           ;lcd_hd44780_pic16.c: 364: x|=0b01000000;
  3575  000ED4  8C0B               	bsf	LCDGotoXY@x,6,c
  3576                           
  3577                           ;lcd_hd44780_pic16.c: 365: break;
  3578  000ED6  D012               	goto	i2l1781
  3579  000ED8                     i2l1773:
  3580                           
  3581                           ;lcd_hd44780_pic16.c: 367: x+=0x14;
  3582  000ED8  0E14               	movlw	20
  3583  000EDA  D001               	goto	L3
  3584  000EDC                     i2l1775:
  3585                           
  3586                           ;lcd_hd44780_pic16.c: 370: x+=0x54;
  3587  000EDC  0E54               	movlw	84
  3588  000EDE                     L3:
  3589  000EDE  260B               	addwf	LCDGotoXY@x,f,c
  3590                           
  3591                           ;lcd_hd44780_pic16.c: 371: break;
  3592  000EE0  D00D               	goto	i2l1781
  3593  000EE2                     i2l1779:
  3594  000EE2  500A               	movf	LCDGotoXY@y,w,c
  3595                           
  3596                           ; Switch size 1, requested type "space"
  3597                           ; Number of cases is 4, Range of values is 0 to 3
  3598                           ; switch strategies available:
  3599                           ; Name         Instructions Cycles
  3600                           ; simple_byte           13     7 (average)
  3601                           ;	Chosen strategy is simple_byte
  3602  000EE4  0A00               	xorlw	0	; case 0
  3603  000EE6  B4D8               	btfsc	status,2,c
  3604  000EE8  D009               	goto	i2l1781
  3605  000EEA  0A01               	xorlw	1	; case 1
  3606  000EEC  B4D8               	btfsc	status,2,c
  3607  000EEE  D7F2               	goto	i2l1771
  3608  000EF0  0A03               	xorlw	3	; case 2
  3609  000EF2  B4D8               	btfsc	status,2,c
  3610  000EF4  D7F1               	goto	i2l1773
  3611  000EF6  0A01               	xorlw	1	; case 3
  3612  000EF8  B4D8               	btfsc	status,2,c
  3613  000EFA  D7F0               	goto	i2l1775
  3614  000EFC                     i2l1781:
  3615                           
  3616                           ;lcd_hd44780_pic16.c: 394: x|=0b10000000;
  3617  000EFC  8E0B               	bsf	LCDGotoXY@x,7,c
  3618                           
  3619                           ;lcd_hd44780_pic16.c: 395: (LCDByte(x,0));
  3620  000EFE  0E00               	movlw	0
  3621  000F00  6E04               	movwf	i2LCDByte@isdata,c
  3622  000F02  500B               	movf	LCDGotoXY@x,w,c
  3623  000F04  ECE0  F006         	call	i2_LCDByte
  3624  000F08                     i2l63:
  3625  000F08  0012               	return	
  3626  000F0A  FFFF               	dw	65535	; errata NOP
  3627  000F0C                     __end_of_LCDGotoXY:
  3628                           	opt stack 0
  3629                           pclatu	equ	0xFFB
  3630                           pclath	equ	0xFFA
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           intcon	equ	0xFF2
  3638                           intcon2	equ	0xFF1
  3639                           postinc0	equ	0xFEE
  3640                           fsr0h	equ	0xFEA
  3641                           fsr0l	equ	0xFE9
  3642                           wreg	equ	0xFE8
  3643                           postinc1	equ	0xFE6
  3644                           postdec1	equ	0xFE5
  3645                           fsr1h	equ	0xFE2
  3646                           fsr1l	equ	0xFE1
  3647                           indf2	equ	0xFDF
  3648                           postinc2	equ	0xFDE
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8
  3652                           
  3653 ;; *************** function i2_LCDByte *****************
  3654 ;; Defined at:
  3655 ;;		line 81 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  c               1    wreg     unsigned char 
  3658 ;;  isdata          1    3[COMRAM] unsigned char 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  c               1    5[COMRAM] unsigned char 
  3661 ;;  LCDByte         1    8[COMRAM] unsigned char 
  3662 ;;  LCDByte         1    7[COMRAM] unsigned char 
  3663 ;;  LCDByte         1    6[COMRAM] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3673 ;;      Params:         1       0       0       0       0       0       0
  3674 ;;      Locals:         4       0       0       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0       0       0
  3676 ;;      Totals:         6       0       0       0       0       0       0
  3677 ;;Total ram usage:        6 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    1
  3680 ;; This function calls:
  3681 ;;		i2_LCDBusyLoop
  3682 ;; This function is called by:
  3683 ;;		_LCDWriteInt
  3684 ;;		_LCDGotoXY
  3685 ;;		_One_Sec
  3686 ;;		i2_LCDWriteString
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text24
  3691  000DC0                     __ptext24:
  3692                           	opt stack 0
  3693  000DC0                     i2_LCDByte:
  3694                           	opt stack 24
  3695                           
  3696                           ;incstack = 0
  3697  000DC0  FFFF               	dw	65535
  3698                           
  3699                           ;i2LCDByte@c stored from wreg
  3700  000DC2  6E06               	movwf	i2LCDByte@c,c
  3701                           
  3702                           ;lcd_hd44780_pic16.c: 90: uint8_t hn,ln;
  3703                           ;lcd_hd44780_pic16.c: 91: uint8_t temp;
  3704                           ;lcd_hd44780_pic16.c: 93: hn=c>>4;
  3705  000DC4  3806               	swapf	i2LCDByte@c,w,c
  3706  000DC6  0B0F               	andlw	15
  3707  000DC8  6E07               	movwf	i2LCDByte@hn,c
  3708                           
  3709                           ;lcd_hd44780_pic16.c: 94: ln=(c & 0x0F);
  3710  000DCA  5006               	movf	i2LCDByte@c,w,c
  3711  000DCC  0B0F               	andlw	15
  3712  000DCE  6E08               	movwf	i2LCDByte@ln,c
  3713                           
  3714                           ;lcd_hd44780_pic16.c: 96: if(isdata==0)
  3715  000DD0  6604               	tstfsz	i2LCDByte@isdata,c
  3716  000DD2  D002               	goto	i2l21
  3717                           
  3718                           ;lcd_hd44780_pic16.c: 97: (RB1=0);
  3719  000DD4  9281               	bcf	3969,1,c	;volatile
  3720  000DD6  D001               	goto	i2l22
  3721  000DD8                     i2l21:
  3722                           
  3723                           ;lcd_hd44780_pic16.c: 98: else
  3724                           ;lcd_hd44780_pic16.c: 99: (RB1=1);
  3725  000DD8  8281               	bsf	3969,1,c	;volatile
  3726  000DDA                     i2l22:
  3727                           
  3728                           ;lcd_hd44780_pic16.c: 101: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  3729  000DDA  F000               	nop	
  3730                           
  3731                           ;lcd_hd44780_pic16.c: 103: (RB3=1);
  3732  000DDC  8681               	bsf	3969,3,c	;volatile
  3733                           
  3734                           ;lcd_hd44780_pic16.c: 107: temp=(PORTB & (~(0X0F<<4)))|((hn<<4));
  3735  000DDE  C007  F005         	movff	i2LCDByte@hn,??i2_LCDByte
  3736  000DE2  3A05               	swapf	??i2_LCDByte,f,c
  3737  000DE4  0EF0               	movlw	240
  3738  000DE6  1605               	andwf	??i2_LCDByte,f,c
  3739  000DE8  5081               	movf	3969,w,c	;volatile
  3740  000DEA  0B0F               	andlw	15
  3741  000DEC  1005               	iorwf	??i2_LCDByte,w,c
  3742  000DEE  6E09               	movwf	i2LCDByte@temp,c
  3743                           
  3744                           ;lcd_hd44780_pic16.c: 108: PORTB=temp;
  3745  000DF0  C009  FF81         	movff	i2LCDByte@temp,3969	;volatile
  3746                           
  3747                           ;lcd_hd44780_pic16.c: 110: _delay((unsigned long)((1)*(10000000/4000000.0)));
  3748  000DF4  D000               	nop2		;2 cycle nop
  3749                           
  3750                           ;lcd_hd44780_pic16.c: 114: (RB3=0);
  3751  000DF6  9681               	bcf	3969,3,c	;volatile
  3752                           
  3753                           ;lcd_hd44780_pic16.c: 116: _delay((unsigned long)((1)*(10000000/4000000.0)));
  3754  000DF8  D000               	nop2		;2 cycle nop
  3755                           
  3756                           ;lcd_hd44780_pic16.c: 119: (RB3=1);
  3757  000DFA  8681               	bsf	3969,3,c	;volatile
  3758                           
  3759                           ;lcd_hd44780_pic16.c: 121: temp=(PORTB & (~(0X0F<<4)))|((ln<<4));
  3760  000DFC  C008  F005         	movff	i2LCDByte@ln,??i2_LCDByte
  3761  000E00  3A05               	swapf	??i2_LCDByte,f,c
  3762  000E02  0EF0               	movlw	240
  3763  000E04  1605               	andwf	??i2_LCDByte,f,c
  3764  000E06  5081               	movf	3969,w,c	;volatile
  3765  000E08  0B0F               	andlw	15
  3766  000E0A  1005               	iorwf	??i2_LCDByte,w,c
  3767  000E0C  6E09               	movwf	i2LCDByte@temp,c
  3768                           
  3769                           ;lcd_hd44780_pic16.c: 123: PORTB=temp;
  3770  000E0E  C009  FF81         	movff	i2LCDByte@temp,3969	;volatile
  3771                           
  3772                           ;lcd_hd44780_pic16.c: 125: _delay((unsigned long)((1)*(10000000/4000000.0)));
  3773  000E12  D000               	nop2		;2 cycle nop
  3774                           
  3775                           ;lcd_hd44780_pic16.c: 129: (RB3=0);
  3776  000E14  9681               	bcf	3969,3,c	;volatile
  3777                           
  3778                           ;lcd_hd44780_pic16.c: 131: _delay((unsigned long)((1)*(10000000/4000000.0)));
  3779  000E16  D000               	nop2		;2 cycle nop
  3780                           
  3781                           ;lcd_hd44780_pic16.c: 133: LCDBusyLoop();
  3782  000E18  EC3A  F007         	call	i2_LCDBusyLoop	;wreg free
  3783  000E1C  0012               	return	
  3784  000E1E  FFFF               	dw	65535	; errata NOP
  3785  000E20                     __end_ofi2_LCDByte:
  3786                           	opt stack 0
  3787                           pclatu	equ	0xFFB
  3788                           pclath	equ	0xFFA
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           intcon2	equ	0xFF1
  3797                           postinc0	equ	0xFEE
  3798                           fsr0h	equ	0xFEA
  3799                           fsr0l	equ	0xFE9
  3800                           wreg	equ	0xFE8
  3801                           postinc1	equ	0xFE6
  3802                           postdec1	equ	0xFE5
  3803                           fsr1h	equ	0xFE2
  3804                           fsr1l	equ	0xFE1
  3805                           indf2	equ	0xFDF
  3806                           postinc2	equ	0xFDE
  3807                           fsr2h	equ	0xFDA
  3808                           fsr2l	equ	0xFD9
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function i2_LCDBusyLoop *****************
  3812 ;; Defined at:
  3813 ;;		line 136 in file "E:\Study Material\XC8 PROJECTS\RTC Library\lcd_hd44780_pic16.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  LCDBusyLoop     1    2[COMRAM] unsigned char 
  3818 ;;  LCDBusyLoop     1    1[COMRAM] unsigned char 
  3819 ;;  LCDBusyLoop     1    0[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;		None               void
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3829 ;;      Params:         0       0       0       0       0       0       0
  3830 ;;      Locals:         3       0       0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0
  3832 ;;      Totals:         3       0       0       0       0       0       0
  3833 ;;Total ram usage:        3 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		i2_LCDByte
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text25
  3843  000E74                     __ptext25:
  3844                           	opt stack 0
  3845  000E74                     i2_LCDBusyLoop:
  3846                           	opt stack 24
  3847                           
  3848                           ;incstack = 0
  3849  000E74  FFFF               	dw	65535
  3850                           
  3851                           ;lcd_hd44780_pic16.c: 140: uint8_t busy,status=0x00,temp;
  3852  000E76  0E00               	movlw	0
  3853  000E78  6E03               	movwf	i2LCDBusyLoop@status,c
  3854                           
  3855                           ;lcd_hd44780_pic16.c: 143: TRISB|=(0x0f<<4);
  3856  000E7A  0EF0               	movlw	240
  3857  000E7C  1293               	iorwf	3987,f,c	;volatile
  3858                           
  3859                           ;lcd_hd44780_pic16.c: 146: (RB2=1);
  3860  000E7E  8481               	bsf	3969,2,c	;volatile
  3861                           
  3862                           ;lcd_hd44780_pic16.c: 147: (RB1=0);
  3863  000E80  9281               	bcf	3969,1,c	;volatile
  3864                           
  3865                           ;lcd_hd44780_pic16.c: 151: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  3866  000E82  F000               	nop	
  3867  000E84                     i2l1615:
  3868                           
  3869                           ;lcd_hd44780_pic16.c: 155: {
  3870                           ;lcd_hd44780_pic16.c: 157: (RB3=1);
  3871  000E84  8681               	bsf	3969,3,c	;volatile
  3872                           
  3873                           ;lcd_hd44780_pic16.c: 160: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  3874  000E86  F000               	nop	
  3875                           
  3876                           ;lcd_hd44780_pic16.c: 162: status=(PORTB>>4);
  3877  000E88  3881               	swapf	3969,w,c	;volatile
  3878  000E8A  0B0F               	andlw	15
  3879  000E8C  6E03               	movwf	i2LCDBusyLoop@status,c
  3880                           
  3881                           ;lcd_hd44780_pic16.c: 163: status=status<<4;
  3882  000E8E  3803               	swapf	i2LCDBusyLoop@status,w,c
  3883  000E90  0BF0               	andlw	240
  3884  000E92  6E03               	movwf	i2LCDBusyLoop@status,c
  3885                           
  3886                           ;lcd_hd44780_pic16.c: 165: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  3887  000E94  F000               	nop	
  3888                           
  3889                           ;lcd_hd44780_pic16.c: 168: (RB3=0);
  3890  000E96  9681               	bcf	3969,3,c	;volatile
  3891                           
  3892                           ;lcd_hd44780_pic16.c: 169: _delay((unsigned long)((1)*(10000000/4000000.0)));
  3893  000E98  D000               	nop2		;2 cycle nop
  3894                           
  3895                           ;lcd_hd44780_pic16.c: 171: (RB3=1);
  3896  000E9A  8681               	bsf	3969,3,c	;volatile
  3897                           
  3898                           ;lcd_hd44780_pic16.c: 172: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  3899  000E9C  F000               	nop	
  3900                           
  3901                           ;lcd_hd44780_pic16.c: 174: temp=(PORTB>>4);
  3902  000E9E  3881               	swapf	3969,w,c	;volatile
  3903  000EA0  0B0F               	andlw	15
  3904  000EA2  6E02               	movwf	i2LCDBusyLoop@temp,c
  3905                           
  3906                           ;lcd_hd44780_pic16.c: 175: temp&=0x0F;
  3907  000EA4  0E0F               	movlw	15
  3908  000EA6  1602               	andwf	i2LCDBusyLoop@temp,f,c
  3909                           
  3910                           ;lcd_hd44780_pic16.c: 177: status=status|temp;
  3911  000EA8  5003               	movf	i2LCDBusyLoop@status,w,c
  3912  000EAA  1002               	iorwf	i2LCDBusyLoop@temp,w,c
  3913  000EAC  6E03               	movwf	i2LCDBusyLoop@status,c
  3914                           
  3915                           ;lcd_hd44780_pic16.c: 179: busy=status & 0b10000000;
  3916  000EAE  5003               	movf	i2LCDBusyLoop@status,w,c
  3917  000EB0  0B80               	andlw	128
  3918  000EB2  6E01               	movwf	i2LCDBusyLoop@busy,c
  3919                           
  3920                           ;lcd_hd44780_pic16.c: 181: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  3921  000EB4  F000               	nop	
  3922                           
  3923                           ;lcd_hd44780_pic16.c: 183: (RB3=0);
  3924  000EB6  9681               	bcf	3969,3,c	;volatile
  3925                           
  3926                           ;lcd_hd44780_pic16.c: 184: _delay((unsigned long)((1)*(10000000/4000000.0)));
  3927  000EB8  D000               	nop2		;2 cycle nop
  3928                           
  3929                           ;lcd_hd44780_pic16.c: 185: }while(busy);
  3930  000EBA  6601               	tstfsz	i2LCDBusyLoop@busy,c
  3931  000EBC  D7E3               	goto	i2l1615
  3932                           
  3933                           ;lcd_hd44780_pic16.c: 187: (RB2=0);
  3934  000EBE  9481               	bcf	3969,2,c	;volatile
  3935                           
  3936                           ;lcd_hd44780_pic16.c: 190: TRISB&=(~(0x0F<<4));
  3937  000EC0  0E0F               	movlw	15
  3938  000EC2  1693               	andwf	3987,f,c	;volatile
  3939  000EC4  0012               	return	
  3940  000EC6  FFFF               	dw	65535	; errata NOP
  3941  000EC8                     __end_ofi2_LCDBusyLoop:
  3942                           	opt stack 0
  3943                           pclatu	equ	0xFFB
  3944                           pclath	equ	0xFFA
  3945                           tblptru	equ	0xFF8
  3946                           tblptrh	equ	0xFF7
  3947                           tblptrl	equ	0xFF6
  3948                           tablat	equ	0xFF5
  3949                           prodh	equ	0xFF4
  3950                           prodl	equ	0xFF3
  3951                           intcon	equ	0xFF2
  3952                           intcon2	equ	0xFF1
  3953                           postinc0	equ	0xFEE
  3954                           fsr0h	equ	0xFEA
  3955                           fsr0l	equ	0xFE9
  3956                           wreg	equ	0xFE8
  3957                           postinc1	equ	0xFE6
  3958                           postdec1	equ	0xFE5
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           indf2	equ	0xFDF
  3962                           postinc2	equ	0xFDE
  3963                           fsr2h	equ	0xFDA
  3964                           fsr2l	equ	0xFD9
  3965                           status	equ	0xFD8
  3966                           pclatu	equ	0xFFB
  3967                           pclath	equ	0xFFA
  3968                           tblptru	equ	0xFF8
  3969                           tblptrh	equ	0xFF7
  3970                           tblptrl	equ	0xFF6
  3971                           tablat	equ	0xFF5
  3972                           prodh	equ	0xFF4
  3973                           prodl	equ	0xFF3
  3974                           intcon	equ	0xFF2
  3975                           intcon2	equ	0xFF1
  3976                           postinc0	equ	0xFEE
  3977                           fsr0h	equ	0xFEA
  3978                           fsr0l	equ	0xFE9
  3979                           wreg	equ	0xFE8
  3980                           postinc1	equ	0xFE6
  3981                           postdec1	equ	0xFE5
  3982                           fsr1h	equ	0xFE2
  3983                           fsr1l	equ	0xFE1
  3984                           indf2	equ	0xFDF
  3985                           postinc2	equ	0xFDE
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990                           	psect	rparam
  3991  0000                     pclatu	equ	0xFFB
  3992                           pclath	equ	0xFFA
  3993                           tblptru	equ	0xFF8
  3994                           tblptrh	equ	0xFF7
  3995                           tblptrl	equ	0xFF6
  3996                           tablat	equ	0xFF5
  3997                           prodh	equ	0xFF4
  3998                           prodl	equ	0xFF3
  3999                           intcon	equ	0xFF2
  4000                           intcon2	equ	0xFF1
  4001                           postinc0	equ	0xFEE
  4002                           fsr0h	equ	0xFEA
  4003                           fsr0l	equ	0xFE9
  4004                           wreg	equ	0xFE8
  4005                           postinc1	equ	0xFE6
  4006                           postdec1	equ	0xFE5
  4007                           fsr1h	equ	0xFE2
  4008                           fsr1l	equ	0xFE1
  4009                           indf2	equ	0xFDF
  4010                           postinc2	equ	0xFDE
  4011                           fsr2h	equ	0xFDA
  4012                           fsr2l	equ	0xFD9
  4013                           status	equ	0xFD8


Data Sizes:
    Strings     33
    Constant    0
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[17]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_LCDWriteString
    _ds1307_set_date_time->_WriteI2C
    _ds1307_set_date_time->_bin2bcd
    _ds1307_init->_WriteI2C
    _ds1307_init->_bcd2bin
    _ds1307_init->_bin2bcd
    _WriteI2C->_IdleI2C
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _One_Sec in COMRAM

    _One_Sec->_LCDWriteInt
    i2_LCDWriteString->i2_LCDByte
    _ds1307_get_time->i2_WriteI2C
    _ds1307_get_time->i2_bcd2bin
    i2_WriteI2C->i2_IdleI2C
    _LCDWriteInt->i2_LCDByte
    _LCDGotoXY->i2_LCDByte
    i2_LCDByte->i2_LCDBusyLoop

Critical Paths under _main in BANK0

    None.

Critical Paths under _One_Sec in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _One_Sec in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _One_Sec in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _One_Sec in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _One_Sec in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _One_Sec in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2687
                                             50 COMRAM     1     1      0
                            _LCDByte
                            _LCDInit
                     _LCDWriteString
                            _OpenI2C
                        _ds1307_init
               _ds1307_set_date_time
 ---------------------------------------------------------------------------------
 (1) _ds1307_set_date_time                                 0     0      0      75
                            _IdleI2C
                           _WriteI2C
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (1) _ds1307_init                                          1     1      0     180
                                             40 COMRAM     1     1      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
                            _bcd2bin
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (2) _bin2bcd                                              3     3      0      60
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _bcd2bin                                              3     3      0      60
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      15
                                             38 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (3) _IdleI2C                                              1     1      0       0
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              2     1      1      73
                                             37 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2     898
                                             46 COMRAM     4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              3     3      0     798
                                             46 COMRAM     3     3      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              6     5      1     663
                                             40 COMRAM     6     5      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          3     3      0      75
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _One_Sec                                             14    14      0    3883
                                             23 COMRAM    14    14      0
                          _LCDGotoXY
                        _LCDWriteInt
                    _ds1307_get_time
                          i2_LCDByte
                   i2_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i2_LCDWriteString                                     4     2      2     740
                                              9 COMRAM     4     2      2
                          i2_LCDByte
 ---------------------------------------------------------------------------------
 (5) _ds1307_get_time                                      0     0      0     113
                          i2_IdleI2C
                          i2_ReadI2C
                         i2_WriteI2C
                          i2_bcd2bin
 ---------------------------------------------------------------------------------
 (6) i2_bcd2bin                                            3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) i2_WriteI2C                                           2     2      0      22
                                              1 COMRAM     2     2      0
                          i2_IdleI2C
 ---------------------------------------------------------------------------------
 (7) i2_IdleI2C                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) i2_ReadI2C                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _LCDWriteInt                                         14    11      3    1729
                                              9 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                          i2_LCDByte
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     281
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     281
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _LCDGotoXY                                            2     1      1     818
                                              9 COMRAM     2     1      1
                          i2_LCDByte
 ---------------------------------------------------------------------------------
 (6) i2_LCDByte                                            6     5      1     483
                                              3 COMRAM     6     5      1
                      i2_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i2_LCDBusyLoop                                        3     3      0     117
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _OpenI2C
   _ds1307_init
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C
     _bcd2bin
     _bin2bcd
   _ds1307_set_date_time
     _IdleI2C
     _WriteI2C
       _IdleI2C
     _bin2bcd

 _One_Sec (ROOT)
   _LCDGotoXY
     i2_LCDByte
       i2_LCDBusyLoop
   _LCDWriteInt
     ___awdiv
     ___awmod
     i2_LCDByte
       i2_LCDBusyLoop
   _ds1307_get_time
     i2_IdleI2C
     i2_ReadI2C
     i2_WriteI2C
       i2_IdleI2C
     i2_bcd2bin
   i2_LCDByte
     i2_LCDBusyLoop
   i2_LCDWriteString
     i2_LCDByte
       i2_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      4F       1       62.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      15        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Dec 06 17:22:00 2015

                 ?_LCDBusyLoop 0001                    _SSPSTATbits 000FC7                             l21 0D78  
                           l22 0D7A                   ___awdiv@sign 0006                             _hr 004B  
                   i2_WriteI2C 0C94                    __CFG_OSC$HS 000000                            l100 07FC  
                          l103 0816                            l112 0854                            l106 082A  
                          l115 0878                            l300 0C5A                            l124 077C  
                          l109 0830                            l118 089C                            l127 07E6  
                          l235 0D5E                            l309 0C86                            l275 0F62  
                          l276 0F64                            l297 0C90                            l907 0E30  
                          l945 1030                            _RB1 007C09                            _RB2 007C0A  
                          _RB3 007C0B                   __CFG_BOR$OFF 000000                            _day 0049  
                          _dow 004A                            _min 004C                            _sec 004E  
                 ___awmod@sign 0006                            prod 000FF3                            wreg 000FE8  
             i2_LCDWriteString 09F2        LCDWriteInt@field_length 000C              ??_ds1307_get_time 0004  
              __end_of_LCDByte 0DC0                __end_of_LCDInit 0BAE                   __CFG_LVP$OFF 000000  
                 ?_LCDWriteInt 000A                    LCDByte@temp 002E                   __CFG_WDT$OFF 000000  
                         l1303 0952                           l1321 09D4                           l1049 0C66  
                         l1315 099C                           l1323 09D8                           l1083 0FA6  
                         l1319 09BE                           l1087 0FB6                           l1295 0B88  
                         STR_1 0612                           STR_2 0601                           STR_3 0620  
                         STR_4 0620                           u1147 0848                           u1157 0B34  
                         i2l21 0DD8                           i2l22 0DDA                           i2l63 0F08  
                         i2l59 0732                           _main 0CFC             __size_of_LCDGotoXY 0044  
                         _year 004F                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 010E  
              __end_of_IdleI2C 1042                __end_of_ReadI2C 0F6E                __end_of_One_Sec 010E  
              __end_of_OpenI2C 102E             __size_ofi2_LCDByte 0060                  i2bcd2bin@temp 0003  
                __CFG_OSCS$OFF 000000                __end_of_bcd2bin 0FE6               bcd2bin@bcd_value 0027  
                        ?_main 0001                __end_of___awdiv 094E                __end_of___awmod 0B2A  
                 LCDInit@style 0030                ___awdiv@divisor 0003                __end_of_bin2bcd 0FC0  
                        i2l300 0CC2                          i2l160 0BD0                          i2l163 0BE4  
                        i2l172 0C06                          i2l309 0CEE                          i2l157 0BB6  
                        i2l166 0BF2                          i2l169 0C00                          i2l275 0F8E  
                        i2l276 0F90                          i2l297 0CF8                ___awdiv@counter 0005  
                        _PORTB 000F81                          _TRISB 000F93             i2LCDWriteString@cc 000D  
                __CFG_PWRT$OFF 000000             __size_ofi2_IdleI2C 0014                          _month 004D  
           __size_ofi2_ReadI2C 002C                          tablat 000FF5                          status 000FD8  
           __size_ofi2_bcd2bin 0026                  ??_ds1307_init 0029                __initialization 0F0C  
                 __end_of_main 0D60                    ?i2_WriteI2C 0001                         ??_main 0033  
            __end_of_LCDGotoXY 0F0C                  __activetblptr 000002                  LCDByte@isdata 0029  
                    ??_LCDByte 002A                      ??_LCDInit 002F               ___awdiv@dividend 0001  
             __end_of_WriteI2C 0C94                         _INT0IE 007F94                         _INT0IF 007F91  
            __end_ofi2_LCDByte 0E20                    OpenI2C@slew 0026                         i2l1101 08CC  
                       i2l1113 0902                         i2l1115 090A                         i2l1107 08EC  
                       i2l1133 0942                         i2l1125 092A                         i2l1117 090E  
                       i2l1129 0934                         i2l1161 0B06                         i2l1153 0AE6  
                       i2l1145 0ABC                         i2l1155 0AEE                         i2l1157 0AF2  
                       i2l1165 0B10                         i2l1149 0AD8                         i2l1169 0B1E  
                       i2l1615 0E84                         i2l1715 0CCE                         i2l1653 1044  
                       i2l1751 06C6                         i2l1831 0A62                         i2l1815 09F6  
                       i2l1753 06CA                         i2l1745 06B6                         i2l1833 0A78  
                       i2l1771 0ED4                         i2l1755 06DE                         i2l1739 0670  
                       i2l1827 0A40                         i2l1835 0A7C                         i2l1773 0ED8  
                       i2l1781 0EFC                         i2l1757 06FC                         i2l1775 0EDC  
                       i2l1779 0EE2                      ??_IdleI2C 0026                         _SSPADD 000FC8  
                       _SSPBUF 000FC9                      ??_ReadI2C 0026            i2LCDWriteString@msg 000A  
                    ??_One_Sec 0018                      ??_OpenI2C 0027                 _LCDWriteString 094E  
            __end_ofi2_IdleI2C 1056                      ??_bcd2bin 0026                      ??___awdiv 0005  
                    ??___awmod 0005                      ??_bin2bcd 0026              __end_ofi2_ReadI2C 0F9A  
          __end_of_ds1307_init 08A6           __size_of_LCDBusyLoop 0054                         clear_0 0F12  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                ___awmod@counter 0005  
            __end_ofi2_bcd2bin 100C                   __pdataCOMRAM 0034                   LCDWriteInt@i 0016  
                 LCDWriteInt@j 0014                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8         __size_ofi2_LCDBusyLoop 0054  
         __size_of_LCDWriteInt 0112                     __accesstop 0080        __end_of__initialization 0F38  
          __size_ofi2_WriteI2C 0068         __end_of_LCDWriteString 09F2                      LCDByte@hn 002B  
                    LCDByte@ln 002C                 __pcstackCOMRAM 0001       __end_ofi2_LCDWriteString 0A96  
           ds1307_init@seconds 0029                _ds1307_get_time 0BAE  __size_of_ds1307_set_date_time 00BA  
              ?_LCDWriteString 002F                    _ds1307_init 07F0                  i2_LCDBusyLoop 0E74  
                    ?_WriteI2C 0001                        _LCDByte 0D60                        _LCDInit 0B2A  
                      _INTEDG0 007F8E                        i2u96_41 0630                        _SSPCON1 000FC6  
                      _SSPCON2 000FC5                        _SSPSTAT 000FC7              i2LCDBusyLoop@busy 0001  
            i2LCDBusyLoop@temp 0002                        _IdleI2C 102E                        _ReadI2C 0F42  
                      _One_Sec 0008                        _OpenI2C 100C                        __Hparam 0000  
                      __Lparam 0000        __end_of_ds1307_get_time 0C2C                        _bcd2bin 0FC0  
                      ___cgram 0034                 ?i2_LCDBusyLoop 0001                        ___awdiv 08A6  
                      ___awmod 0A96                        _bin2bcd 0F9A                   __psmallconst 0600  
                 ??i2_WriteI2C 0002                        __pcinit 0F0C                     ??_WriteI2C 0027  
                      __ramtop 0600                        __ptext0 0CFC                        __ptext1 0736  
                      __ptext2 07F0                        __ptext3 0F9A                        __ptext4 0FC0  
                      __ptext5 0C2C                        __ptext6 102E                        __ptext7 0F42  
                      __ptext8 100C                        __ptext9 094E               ___awmod@dividend 0001  
           i2bcd2bin@bcd_value 0002                      _LCDGotoXY 0EC8           end_of_initialization 0F38  
                __Lmediumconst 0000             __end_ofi2_WriteI2C 0CFC                      i2_LCDByte 0DC0  
                      postdec1 000FE5                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                    bcd2bin@temp 0028                      i2_IdleI2C 1042  
                    i2_ReadI2C 0F6E              LCDWriteString@msg 002F                      _TRISBbits 000F93  
                    _TRISCbits 000F94                     ?_LCDGotoXY 000A                      i2_bcd2bin 0FE6  
          i2LCDBusyLoop@status 0003                     LCDInit@__i 0031                     LCDGotoXY@x 000B  
                   LCDGotoXY@y 000A                     ?i2_LCDByte 0004                ??i2_LCDBusyLoop 0001  
             ?_ds1307_get_time 0001                  ??_LCDBusyLoop 0026              ?i2_LCDWriteString 000A  
           ??i2_LCDWriteString 000C                  __pidataCOMRAM 1056                     ?i2_IdleI2C 0001  
                   ?i2_ReadI2C 0001            start_initialization 0F0C            bin2bcd@binary_value 0026  
                   ?i2_bcd2bin 0001                  ??_LCDWriteInt 000D               WriteI2C@data_out 0028  
              i2LCDByte@isdata 0004               ??_LCDWriteString 0031                  bin2bcd@retval 0027  
                 ?_ds1307_init 0001   __end_of_ds1307_set_date_time 07F0            __end_of_LCDBusyLoop 0E74  
            __size_of_WriteI2C 0068                       ?_LCDByte 0029                       ?_LCDInit 0001  
                  __pbssCOMRAM 0044                       LCDByte@c 002D                    ??_LCDGotoXY 000B  
          __end_of__stringdata 0622                  i2LCDByte@temp 0009                    bin2bcd@temp 0028  
                     ?_IdleI2C 0001               LCDWriteInt@F3701 0044                       ?_ReadI2C 0001  
          __end_of_LCDWriteInt 0736                    ??i2_LCDByte 0005                       ?_One_Sec 0001  
                  i2LCDByte@hn 0007                       ?_OpenI2C 0026                    i2LCDByte@ln 0008  
                    __pintcode 0008                       ?_bcd2bin 0001                       ?___awdiv 0001  
                     ?___awmod 0001                       ?_bin2bcd 0001                    ??i2_IdleI2C 0001  
                  ??i2_ReadI2C 0001                    __smallconst 0600                LCDBusyLoop@busy 0026  
              LCDBusyLoop@temp 0027                    ??i2_bcd2bin 0001                       _PIR1bits 000F9E  
                  _LCDBusyLoop 0E20               LCDWriteString@cc 0032                    __stringdata 0601  
                    main@count 0033               __size_of_LCDByte 0060               __size_of_LCDInit 0084  
         _ds1307_set_date_time 0736                    _LCDWriteInt 0624                      copy_data0 0F2C  
             OpenI2C@sync_mode 0027               __size_of_IdleI2C 0014               __size_of_ReadI2C 002C  
                     __Hrparam 0000               __size_of_One_Sec 0106               __size_of_OpenI2C 0022  
                     __Lrparam 0000           __size_of_ds1307_init 00B6               __size_of_bcd2bin 0026  
             __size_of___awdiv 00A8               __size_of___awmod 0094               __size_of_bin2bcd 0026  
            LCDBusyLoop@status 0028                       _WriteI2C 0C2C                     i2LCDByte@c 0006  
        ?_ds1307_set_date_time 0001      __size_ofi2_LCDWriteString 00A4                       __ptext10 0B2A  
                     __ptext11 0D60                       __ptext20 0624                       __ptext12 0E20  
                     __ptext21 0A96                       __ptext22 08A6                       __ptext14 09F2  
                     __ptext23 0EC8                       __ptext15 0BAE                       __ptext24 0DC0  
                     __ptext16 0FE6                       __ptext25 0E74                       __ptext17 0C94  
                     __ptext18 1042                       __ptext19 0F6E                  __size_of_main 0064  
        __end_ofi2_LCDBusyLoop 0EC8       __size_of_ds1307_get_time 007E                     _INTCONbits 000FF2  
                     intlevel2 1066                 LCDWriteInt@val 000A                 LCDWriteInt@str 000F  
           i2WriteI2C@data_out 0003         ??_ds1307_set_date_time 0029                    _SSPCON1bits 000FC6  
                  _SSPCON2bits 000FC5        __size_of_LCDWriteString 00A4  
