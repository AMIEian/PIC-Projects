

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Apr 28 18:04:45 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  000E                     	;# 
    43  000F                     	;# 
    44  0010                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0092                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0092                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0092                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164                           
   165                           	psect	idataBANK1
   166  00F1                     __pidataBANK1:	
   167                           
   168                           ;initializer for _AccidentG
   169  00F1  34B8               	retlw	184
   170  00F2  34FE               	retlw	254
   171  00F3  343F               	retlw	63
   172                           
   173                           ;initializer for _Vib_Sensitivity
   174  00F4  3400               	retlw	0
   175  00F5  34A0               	retlw	160
   176  00F6  3441               	retlw	65
   177  001F                     _ADCON0bits	set	31
   178  001E                     _ADRESH	set	30
   179  0030                     _RB0	set	48
   180  0031                     _RB1	set	49
   181  0032                     _RB2	set	50
   182  0034                     _RB4	set	52
   183  009F                     _ADCON1bits	set	159
   184  009E                     _ADRESL	set	158
   185  0086                     _TRISB	set	134
   186                           
   187                           	psect	cinit
   188  07F0                     start_initialization:	
   189                           ; #config settings
   190                           
   191  07F0                     __initialization:	
   192                           
   193                           ; Initialize objects allocated to BANK1
   194  07F0  1683               	bsf	3,5	;RP0=1, select bank1
   195  07F1  1303               	bcf	3,6	;RP1=0, select bank1
   196  07F2  20F1               	fcall	__pidataBANK1	;fetch initializer
   197  07F3  00A0               	movwf	__pdataBANK1& (0+127)
   198  07F4  20F2               	fcall	__pidataBANK1+1	;fetch initializer
   199  07F5  00A1               	movwf	(__pdataBANK1+1)& (0+127)
   200  07F6  20F3               	fcall	__pidataBANK1+2	;fetch initializer
   201  07F7  00A2               	movwf	(__pdataBANK1+2)& (0+127)
   202  07F8  20F4               	fcall	__pidataBANK1+3	;fetch initializer
   203  07F9  00A3               	movwf	(__pdataBANK1+3)& (0+127)
   204  07FA  20F5               	fcall	__pidataBANK1+4	;fetch initializer
   205  07FB  00A4               	movwf	(__pdataBANK1+4)& (0+127)
   206  07FC  20F6               	fcall	__pidataBANK1+5	;fetch initializer
   207  07FD  00A5               	movwf	(__pdataBANK1+5)& (0+127)
   208  07FE                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211  07FE                     __end_of__initialization:	
   212  07FE  0183               	clrf	3
   213  07FF  2894               	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	dataBANK1
   216  00A0                     __pdataBANK1:	
   217  00A0                     _AccidentG:	
   218  00A0                     	ds	3
   219  00A3                     _Vib_Sensitivity:	
   220  00A3                     	ds	3
   221                           
   222                           	psect	cstackCOMMON
   223  0070                     __pcstackCOMMON:	
   224  0070                     ?_ADCInit:	
   225  0070                     ??_ADCInit:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_Accident_Detect:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_Vib_Detect:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?___bmul:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_delay:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_ReadADC:	
   244                           ; 2 bytes @ 0x0
   245                           
   246  0070                     ?___lwdiv:	
   247                           ; 2 bytes @ 0x0
   248                           
   249  0070                     ?___ftpack:	
   250                           ; 2 bytes @ 0x0
   251                           
   252  0070                     ?___ftneg:	
   253                           ; 3 bytes @ 0x0
   254                           
   255  0070                     ___bmul@multiplicand:	
   256                           ; 3 bytes @ 0x0
   257                           
   258  0070                     ___lwdiv@divisor:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ___ftpack@arg:	
   262                           ; 2 bytes @ 0x0
   263                           
   264  0070                     ___ftneg@f1:	
   265                           ; 3 bytes @ 0x0
   266                           
   267                           
   268                           ; 3 bytes @ 0x0
   269  0070                     	ds	1
   270  0071                     ??___bmul:	
   271                           
   272                           ; 0 bytes @ 0x1
   273  0071                     	ds	1
   274  0072                     ??_delay:	
   275  0072                     ??_ReadADC:	
   276                           ; 0 bytes @ 0x2
   277                           
   278  0072                     ___bmul@product:	
   279                           ; 0 bytes @ 0x2
   280                           
   281  0072                     ___lwdiv@dividend:	
   282                           ; 1 bytes @ 0x2
   283                           
   284                           
   285                           ; 2 bytes @ 0x2
   286  0072                     	ds	1
   287  0073                     ??___ftneg:	
   288  0073                     ReadADC@ch:	
   289                           ; 0 bytes @ 0x3
   290                           
   291  0073                     ___bmul@multiplier:	
   292                           ; 1 bytes @ 0x3
   293                           
   294  0073                     ___ftpack@exp:	
   295                           ; 1 bytes @ 0x3
   296                           
   297                           
   298                           ; 1 bytes @ 0x3
   299  0073                     	ds	1
   300  0074                     ??___lwdiv:	
   301  0074                     ___ftpack@sign:	
   302                           ; 0 bytes @ 0x4
   303                           
   304                           
   305                           ; 1 bytes @ 0x4
   306  0074                     	ds	1
   307  0075                     ??___ftpack:	
   308  0075                     ___lwdiv@quotient:	
   309                           ; 0 bytes @ 0x5
   310                           
   311                           
   312                           ; 2 bytes @ 0x5
   313  0075                     	ds	2
   314  0077                     ___lwdiv@counter:	
   315                           
   316                           ; 1 bytes @ 0x7
   317  0077                     	ds	1
   318  0078                     ?___lbtoft:	
   319  0078                     ?___lwtoft:	
   320                           ; 3 bytes @ 0x8
   321                           
   322  0078                     ___lwtoft@c:	
   323                           ; 3 bytes @ 0x8
   324                           
   325                           
   326                           ; 2 bytes @ 0x8
   327  0078                     	ds	3
   328  007B                     ??___lwtoft:	
   329  007B                     ___lbtoft@c:	
   330                           ; 0 bytes @ 0xB
   331                           
   332                           
   333                           ; 1 bytes @ 0xB
   334  007B                     	ds	1
   335  007C                     ??_GetXAccl:	
   336  007C                     ??_GetYAccl:	
   337                           ; 0 bytes @ 0xC
   338                           
   339  007C                     ??_GetZAccl:	
   340                           ; 0 bytes @ 0xC
   341                           
   342                           
   343                           ; 0 bytes @ 0xC
   344  007C                     	ds	1
   345  007D                     ??_Accident_Detect:	
   346  007D                     main@count:	
   347                           ; 0 bytes @ 0xD
   348                           
   349                           
   350                           ; 1 bytes @ 0xD
   351  007D                     	ds	1
   352                           
   353                           	psect	cstackBANK0
   354  0020                     __pcstackBANK0:	
   355  0020                     ??___lbtoft:	
   356  0020                     ?___ftdiv:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0020                     ___ftdiv@f2:	
   360                           ; 3 bytes @ 0x0
   361                           
   362                           
   363                           ; 3 bytes @ 0x0
   364  0020                     	ds	3
   365  0023                     ___ftdiv@f1:	
   366                           
   367                           ; 3 bytes @ 0x3
   368  0023                     	ds	1
   369  0024                     ?___ftge:	
   370  0024                     ___ftge@ff1:	
   371                           ; 1 bit 
   372                           
   373                           
   374                           ; 3 bytes @ 0x4
   375  0024                     	ds	2
   376  0026                     ??___ftdiv:	
   377                           
   378                           ; 0 bytes @ 0x6
   379  0026                     	ds	1
   380  0027                     ___ftge@ff2:	
   381                           
   382                           ; 3 bytes @ 0x7
   383  0027                     	ds	3
   384  002A                     ??___ftge:	
   385  002A                     ___ftdiv@cntr:	
   386                           ; 0 bytes @ 0xA
   387                           
   388                           
   389                           ; 1 bytes @ 0xA
   390  002A                     	ds	1
   391  002B                     ___ftdiv@f3:	
   392                           
   393                           ; 3 bytes @ 0xB
   394  002B                     	ds	3
   395  002E                     ___ftdiv@exp:	
   396                           
   397                           ; 1 bytes @ 0xE
   398  002E                     	ds	1
   399  002F                     ___ftdiv@sign:	
   400                           
   401                           ; 1 bytes @ 0xF
   402  002F                     	ds	1
   403  0030                     ?___ftmul:	
   404  0030                     ___ftmul@f1:	
   405                           ; 3 bytes @ 0x10
   406                           
   407                           
   408                           ; 3 bytes @ 0x10
   409  0030                     	ds	3
   410  0033                     ___ftmul@f2:	
   411                           
   412                           ; 3 bytes @ 0x13
   413  0033                     	ds	3
   414  0036                     ??___ftmul:	
   415                           
   416                           ; 0 bytes @ 0x16
   417  0036                     	ds	4
   418  003A                     ___ftmul@exp:	
   419                           
   420                           ; 1 bytes @ 0x1A
   421  003A                     	ds	1
   422  003B                     ___ftmul@f3_as_product:	
   423                           
   424                           ; 3 bytes @ 0x1B
   425  003B                     	ds	3
   426  003E                     ___ftmul@cntr:	
   427                           
   428                           ; 1 bytes @ 0x1E
   429  003E                     	ds	1
   430  003F                     ___ftmul@sign:	
   431                           
   432                           ; 1 bytes @ 0x1F
   433  003F                     	ds	1
   434  0040                     ?_GetXAccl:	
   435  0040                     ?_GetYAccl:	
   436                           ; 3 bytes @ 0x20
   437                           
   438  0040                     ?_GetZAccl:	
   439                           ; 3 bytes @ 0x20
   440                           
   441                           
   442                           ; 3 bytes @ 0x20
   443  0040                     	ds	3
   444  0043                     GetXAccl@t:	
   445  0043                     GetYAccl@t:	
   446                           ; 3 bytes @ 0x23
   447                           
   448  0043                     GetZAccl@t:	
   449                           ; 3 bytes @ 0x23
   450                           
   451                           
   452                           ; 3 bytes @ 0x23
   453  0043                     	ds	3
   454  0046                     GetXAccl@adc_value:	
   455  0046                     GetYAccl@adc_value:	
   456                           ; 2 bytes @ 0x26
   457                           
   458  0046                     GetZAccl@adc_value:	
   459                           ; 2 bytes @ 0x26
   460                           
   461                           
   462                           ; 2 bytes @ 0x26
   463  0046                     	ds	2
   464  0048                     ?___ftadd:	
   465  0048                     ?___fttol:	
   466                           ; 3 bytes @ 0x28
   467                           
   468  0048                     ___ftadd@f1:	
   469                           ; 4 bytes @ 0x28
   470                           
   471  0048                     ___fttol@f1:	
   472                           ; 3 bytes @ 0x28
   473                           
   474                           
   475                           ; 3 bytes @ 0x28
   476  0048                     	ds	3
   477  004B                     ___ftadd@f2:	
   478                           
   479                           ; 3 bytes @ 0x2B
   480  004B                     	ds	1
   481  004C                     ??___fttol:	
   482                           
   483                           ; 0 bytes @ 0x2C
   484  004C                     	ds	2
   485  004E                     ??___ftadd:	
   486                           
   487                           ; 0 bytes @ 0x2E
   488  004E                     	ds	2
   489  0050                     ___fttol@sign1:	
   490                           
   491                           ; 1 bytes @ 0x30
   492  0050                     	ds	1
   493  0051                     ___fttol@lval:	
   494                           
   495                           ; 4 bytes @ 0x31
   496  0051                     	ds	1
   497  0052                     ___ftadd@sign:	
   498                           
   499                           ; 1 bytes @ 0x32
   500  0052                     	ds	1
   501  0053                     ___ftadd@exp2:	
   502                           
   503                           ; 1 bytes @ 0x33
   504  0053                     	ds	1
   505  0054                     ___ftadd@exp1:	
   506                           
   507                           ; 1 bytes @ 0x34
   508  0054                     	ds	1
   509  0055                     ___fttol@exp1:	
   510  0055                     _Accident_Detect$563:	
   511                           ; 1 bytes @ 0x35
   512                           
   513                           
   514                           ; 3 bytes @ 0x35
   515  0055                     	ds	1
   516  0056                     ??_Vib_Detect:	
   517                           
   518                           ; 0 bytes @ 0x36
   519  0056                     	ds	2
   520  0058                     Vib_Detect@X:	
   521  0058                     _Accident_Detect$564:	
   522                           ; 2 bytes @ 0x38
   523                           
   524                           
   525                           ; 3 bytes @ 0x38
   526  0058                     	ds	2
   527  005A                     Vib_Detect@Y:	
   528                           
   529                           ; 2 bytes @ 0x3A
   530  005A                     	ds	1
   531  005B                     _Accident_Detect$565:	
   532                           
   533                           ; 3 bytes @ 0x3B
   534  005B                     	ds	1
   535  005C                     Vib_Detect@Z:	
   536                           
   537                           ; 2 bytes @ 0x3C
   538  005C                     	ds	2
   539  005E                     Vib_Detect@counter:	
   540  005E                     Accident_Detect@zero_G:	
   541                           ; 1 bytes @ 0x3E
   542                           
   543                           
   544                           ; 3 bytes @ 0x3E
   545  005E                     	ds	1
   546  005F                     Vib_Detect@looper:	
   547                           
   548                           ; 1 bytes @ 0x3F
   549  005F                     	ds	1
   550  0060                     Vib_Detect@readings:	
   551                           
   552                           ; 1 bytes @ 0x40
   553  0060                     	ds	1
   554  0061                     Vib_Detect@X_Diff:	
   555  0061                     Accident_Detect@scale:	
   556                           ; 1 bytes @ 0x41
   557                           
   558                           
   559                           ; 3 bytes @ 0x41
   560  0061                     	ds	1
   561  0062                     Vib_Detect@Y_Diff:	
   562                           
   563                           ; 1 bytes @ 0x42
   564  0062                     	ds	1
   565  0063                     Vib_Detect@Z_Diff:	
   566                           
   567                           ; 1 bytes @ 0x43
   568  0063                     	ds	1
   569  0064                     Accident_Detect@x_G:	
   570                           
   571                           ; 3 bytes @ 0x44
   572  0064                     	ds	3
   573  0067                     Accident_Detect@y_G:	
   574                           
   575                           ; 3 bytes @ 0x47
   576  0067                     	ds	3
   577  006A                     Accident_Detect@z_G:	
   578                           
   579                           ; 3 bytes @ 0x4A
   580  006A                     	ds	3
   581  006D                     ??_main:	
   582                           
   583                           ; 0 bytes @ 0x4D
   584  006D                     	ds	3
   585                           
   586                           	psect	maintext
   587  0094                     __pmaintext:	
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 12 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\motion_det.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  count           1   13[COMMON] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;		None               void
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 17F/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1
   607 ;;      Params:         0       0       0
   608 ;;      Locals:         1       0       0
   609 ;;      Temps:          0       3       0
   610 ;;      Totals:         1       3       0
   611 ;;Total ram usage:        4 bytes
   612 ;; Hardware stack levels required when called:    4
   613 ;; This function calls:
   614 ;;		_ADCInit
   615 ;;		_Accident_Detect
   616 ;;		_Vib_Detect
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _main
   624  0094                     _main:	
   625                           
   626                           ;motion_det.c: 14: char count;
   627                           ;motion_det.c: 15: TRISB = 0xF0;
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _main: [allreg]
   631  0094  30F0               	movlw	240
   632  0095  1683               	bsf	3,5	;RP0=1, select bank1
   633  0096  1303               	bcf	3,6	;RP1=0, select bank1
   634  0097  0086               	movwf	6	;volatile
   635                           
   636                           ;motion_det.c: 18: for(count = 0; count < 5; count++)
   637  0098  01FD               	clrf	main@count
   638  0099  3005               	movlw	5
   639  009A  027D               	subwf	main@count,w
   640  009B  1803               	btfsc	3,0
   641  009C  28C6               	goto	l1576
   642  009D                     l33:	
   643                           
   644                           ;motion_det.c: 19: {
   645                           ;motion_det.c: 20: RB2 = 1;
   646  009D  1283               	bcf	3,5	;RP0=0, select bank0
   647  009E  1506               	bsf	6,2	;volatile
   648                           
   649                           ;motion_det.c: 21: _delay(1000000);
   650  009F  3006               	movlw	6
   651  00A0  00EF               	movwf	??_main+2
   652  00A1  3013               	movlw	19
   653  00A2  00EE               	movwf	??_main+1
   654  00A3  30B1               	movlw	177
   655  00A4  00ED               	movwf	??_main
   656  00A5                     u2097:	
   657  00A5  0BED               	decfsz	??_main,f
   658  00A6  28A5               	goto	u2097
   659  00A7  0BEE               	decfsz	??_main+1,f
   660  00A8  28A5               	goto	u2097
   661  00A9  0BEF               	decfsz	??_main+2,f
   662  00AA  28A5               	goto	u2097
   663  00AB  28AC               	nop2
   664                           
   665                           ;motion_det.c: 22: RB2 = 0;
   666  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   667  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   668  00AE  1106               	bcf	6,2	;volatile
   669                           
   670                           ;motion_det.c: 23: _delay(1000000);
   671  00AF  3006               	movlw	6
   672  00B0  00EF               	movwf	??_main+2
   673  00B1  3013               	movlw	19
   674  00B2  00EE               	movwf	??_main+1
   675  00B3  30B1               	movlw	177
   676  00B4  00ED               	movwf	??_main
   677  00B5                     u2107:	
   678  00B5  0BED               	decfsz	??_main,f
   679  00B6  28B5               	goto	u2107
   680  00B7  0BEE               	decfsz	??_main+1,f
   681  00B8  28B5               	goto	u2107
   682  00B9  0BEF               	decfsz	??_main+2,f
   683  00BA  28B5               	goto	u2107
   684  00BB  28BC               	nop2
   685  00BC  3001               	movlw	1
   686  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   687  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   688  00BF  00ED               	movwf	??_main
   689  00C0  086D               	movf	??_main,w
   690  00C1  07FD               	addwf	main@count,f
   691  00C2  3005               	movlw	5
   692  00C3  027D               	subwf	main@count,w
   693  00C4  1C03               	skipc
   694  00C5  289D               	goto	l33
   695  00C6                     l1576:	
   696                           
   697                           ;motion_det.c: 24: }
   698                           ;motion_det.c: 26: ADCInit();
   699  00C6  2000               	fcall	_ADCInit
   700  00C7                     l35:	
   701                           ;motion_det.c: 28: while(1)
   702                           
   703                           
   704                           ;motion_det.c: 29: {
   705                           ;motion_det.c: 30: if(Accident_Detect() == 1)
   706  00C7  2675               	fcall	_Accident_Detect
   707  00C8  3A01               	xorlw	1
   708  00C9  1D03               	skipz
   709  00CA  28D8               	goto	l1584
   710                           
   711                           ;motion_det.c: 31: {
   712                           ;motion_det.c: 32: RB1 = 1;
   713  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   714  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   715  00CD  1486               	bsf	6,1	;volatile
   716  00CE                     l1582:	
   717                           ;motion_det.c: 34: while(RB4 == 0)
   718                           
   719  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   720  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   721  00D0  1A06               	btfsc	6,4	;volatile
   722  00D1  28D7               	goto	l39
   723                           
   724                           ;motion_det.c: 35: {
   725                           ;motion_det.c: 36: _delay(10);
   726  00D2  3003               	movlw	3
   727  00D3  00ED               	movwf	??_main
   728  00D4                     u2117:	
   729  00D4  0BED               	decfsz	??_main,f
   730  00D5  28D4               	goto	u2117
   731  00D6  28CE               	goto	l1582
   732  00D7                     l39:	
   733                           
   734                           ;motion_det.c: 37: }
   735                           ;motion_det.c: 38: RB1 = 0;
   736  00D7  1086               	bcf	6,1	;volatile
   737  00D8                     l1584:	
   738                           
   739                           ;motion_det.c: 39: }
   740                           ;motion_det.c: 40: if(Vib_Detect() == 1)
   741  00D8  2561               	fcall	_Vib_Detect
   742  00D9  3A01               	xorlw	1
   743  00DA  1D03               	skipz
   744  00DB  28DF               	goto	l40
   745                           
   746                           ;motion_det.c: 41: RB0 = 1;
   747  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   748  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   749  00DE  1406               	bsf	6,0	;volatile
   750  00DF                     l40:	
   751                           
   752                           ;motion_det.c: 42: if(RB4 == 1)
   753  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   754  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   755  00E1  1E06               	btfss	6,4	;volatile
   756  00E2  28C7               	goto	l35
   757                           
   758                           ;motion_det.c: 43: {
   759                           ;motion_det.c: 44: _delay(5000);
   760  00E3  3007               	movlw	7
   761  00E4  00EE               	movwf	??_main+1
   762  00E5  307D               	movlw	125
   763  00E6  00ED               	movwf	??_main
   764  00E7                     u2127:	
   765  00E7  0BED               	decfsz	??_main,f
   766  00E8  28E7               	goto	u2127
   767  00E9  0BEE               	decfsz	??_main+1,f
   768  00EA  28E7               	goto	u2127
   769                           
   770                           ;motion_det.c: 45: if(RB4 == 1)
   771  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   772  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   773  00ED  1E06               	btfss	6,4	;volatile
   774  00EE  28C7               	goto	l35
   775                           
   776                           ;motion_det.c: 46: RB0 = 0;
   777  00EF  1006               	bcf	6,0	;volatile
   778  00F0  28C7               	goto	l35
   779  00F1                     __end_of_main:	
   780                           
   781                           	psect	text1
   782  0561                     __ptext1:	
   783 ;; *************** function _Vib_Detect *****************
   784 ;; Defined at:
   785 ;;		line 74 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\motion_det.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  Z               2   60[BANK0 ] int 
   790 ;;  Y               2   58[BANK0 ] int 
   791 ;;  X               2   56[BANK0 ] int 
   792 ;;  Z_Diff          1   67[BANK0 ] unsigned char 
   793 ;;  Y_Diff          1   66[BANK0 ] unsigned char 
   794 ;;  X_Diff          1   65[BANK0 ] unsigned char 
   795 ;;  readings        1   64[BANK0 ] unsigned char 
   796 ;;  looper          1   63[BANK0 ] unsigned char 
   797 ;;  counter         1   62[BANK0 ] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      unsigned char 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1
   807 ;;      Params:         0       0       0
   808 ;;      Locals:         0      12       0
   809 ;;      Temps:          0       2       0
   810 ;;      Totals:         0      14       0
   811 ;;Total ram usage:       14 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    3
   814 ;; This function calls:
   815 ;;		_GetXAccl
   816 ;;		_GetYAccl
   817 ;;		_GetZAccl
   818 ;;		___bmul
   819 ;;		___ftge
   820 ;;		___fttol
   821 ;;		___lbtoft
   822 ;;		_delay
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _Vib_Detect
   830  0561                     _Vib_Detect:	
   831                           
   832                           ;motion_det.c: 76: unsigned char X_Diff = 0;
   833                           
   834                           ;incstack = 0
   835                           ; Regs used in _Vib_Detect: [allreg]
   836  0561  1283               	bcf	3,5	;RP0=0, select bank0
   837  0562  1303               	bcf	3,6	;RP1=0, select bank0
   838  0563  01E1               	clrf	Vib_Detect@X_Diff
   839                           
   840                           ;motion_det.c: 77: unsigned char Y_Diff = 0;
   841  0564  01E2               	clrf	Vib_Detect@Y_Diff
   842                           
   843                           ;motion_det.c: 78: unsigned char Z_Diff = 0;
   844  0565  01E3               	clrf	Vib_Detect@Z_Diff
   845                           
   846                           ;motion_det.c: 79: int X = 0;
   847  0566  01D8               	clrf	Vib_Detect@X
   848  0567  01D9               	clrf	Vib_Detect@X+1
   849                           
   850                           ;motion_det.c: 80: int Y = 0;
   851  0568  01DA               	clrf	Vib_Detect@Y
   852  0569  01DB               	clrf	Vib_Detect@Y+1
   853                           
   854                           ;motion_det.c: 81: int Z = 0;
   855  056A  01DC               	clrf	Vib_Detect@Z
   856  056B  01DD               	clrf	Vib_Detect@Z+1
   857                           
   858                           ;motion_det.c: 82: char readings = 0;
   859  056C  01E0               	clrf	Vib_Detect@readings
   860                           
   861                           ;motion_det.c: 83: char counter = 0;
   862  056D  01DE               	clrf	Vib_Detect@counter
   863                           
   864                           ;motion_det.c: 84: char looper = 1;
   865  056E  01DF               	clrf	Vib_Detect@looper
   866  056F  0ADF               	incf	Vib_Detect@looper,f
   867                           
   868                           ;motion_det.c: 85: while(looper == 1 && counter < 5)
   869  0570  2E6B               	goto	l1552
   870  0571                     l1508:	
   871                           
   872                           ;motion_det.c: 86: {
   873                           ;motion_det.c: 88: for(readings = 0; readings < 10; readings++)
   874  0571  01E0               	clrf	Vib_Detect@readings
   875  0572  300A               	movlw	10
   876  0573  0260               	subwf	Vib_Detect@readings,w
   877  0574  1803               	btfsc	3,0
   878  0575  2DF8               	goto	l1534
   879  0576                     l1514:	
   880                           
   881                           ;motion_det.c: 89: {
   882                           ;motion_det.c: 91: X = (int)GetXAccl();
   883  0576  20EC               	fcall	_GetXAccl
   884  0577  1283               	bcf	3,5	;RP0=0, select bank0
   885  0578  1303               	bcf	3,6	;RP1=0, select bank0
   886  0579  0840               	movf	?_GetXAccl,w
   887  057A  00C8               	movwf	___fttol@f1
   888  057B  0841               	movf	?_GetXAccl+1,w
   889  057C  00C9               	movwf	___fttol@f1+1
   890  057D  0842               	movf	?_GetXAccl+2,w
   891  057E  00CA               	movwf	___fttol@f1+2
   892  057F  2245               	fcall	___fttol
   893  0580  1283               	bcf	3,5	;RP0=0, select bank0
   894  0581  1303               	bcf	3,6	;RP1=0, select bank0
   895  0582  0849               	movf	?___fttol+1,w
   896  0583  01D9               	clrf	Vib_Detect@X+1
   897  0584  07D9               	addwf	Vib_Detect@X+1,f
   898  0585  0848               	movf	?___fttol,w
   899  0586  01D8               	clrf	Vib_Detect@X
   900  0587  07D8               	addwf	Vib_Detect@X,f
   901                           
   902                           ;motion_det.c: 92: Y = (int)GetYAccl();
   903  0588  215F               	fcall	_GetYAccl
   904  0589  1283               	bcf	3,5	;RP0=0, select bank0
   905  058A  1303               	bcf	3,6	;RP1=0, select bank0
   906  058B  0840               	movf	?_GetYAccl,w
   907  058C  00C8               	movwf	___fttol@f1
   908  058D  0841               	movf	?_GetYAccl+1,w
   909  058E  00C9               	movwf	___fttol@f1+1
   910  058F  0842               	movf	?_GetYAccl+2,w
   911  0590  00CA               	movwf	___fttol@f1+2
   912  0591  2245               	fcall	___fttol
   913  0592  1283               	bcf	3,5	;RP0=0, select bank0
   914  0593  1303               	bcf	3,6	;RP1=0, select bank0
   915  0594  0849               	movf	?___fttol+1,w
   916  0595  01DB               	clrf	Vib_Detect@Y+1
   917  0596  07DB               	addwf	Vib_Detect@Y+1,f
   918  0597  0848               	movf	?___fttol,w
   919  0598  01DA               	clrf	Vib_Detect@Y
   920  0599  07DA               	addwf	Vib_Detect@Y,f
   921                           
   922                           ;motion_det.c: 93: Z = (int)GetZAccl();
   923  059A  21D2               	fcall	_GetZAccl
   924  059B  1283               	bcf	3,5	;RP0=0, select bank0
   925  059C  1303               	bcf	3,6	;RP1=0, select bank0
   926  059D  0840               	movf	?_GetZAccl,w
   927  059E  00C8               	movwf	___fttol@f1
   928  059F  0841               	movf	?_GetZAccl+1,w
   929  05A0  00C9               	movwf	___fttol@f1+1
   930  05A1  0842               	movf	?_GetZAccl+2,w
   931  05A2  00CA               	movwf	___fttol@f1+2
   932  05A3  2245               	fcall	___fttol
   933  05A4  1283               	bcf	3,5	;RP0=0, select bank0
   934  05A5  1303               	bcf	3,6	;RP1=0, select bank0
   935  05A6  0849               	movf	?___fttol+1,w
   936  05A7  01DD               	clrf	Vib_Detect@Z+1
   937  05A8  07DD               	addwf	Vib_Detect@Z+1,f
   938  05A9  0848               	movf	?___fttol,w
   939  05AA  01DC               	clrf	Vib_Detect@Z
   940  05AB  07DC               	addwf	Vib_Detect@Z,f
   941                           
   942                           ;motion_det.c: 95: delay(5000);
   943  05AC  3088               	movlw	136
   944  05AD  00F0               	movwf	?_delay
   945  05AE  3013               	movlw	19
   946  05AF  00F1               	movwf	?_delay+1
   947  05B0  2000               	fcall	_delay
   948                           
   949                           ;motion_det.c: 96: X_Diff = X_Diff + ((int)GetXAccl() - X);
   950  05B1  20EC               	fcall	_GetXAccl
   951  05B2  1283               	bcf	3,5	;RP0=0, select bank0
   952  05B3  1303               	bcf	3,6	;RP1=0, select bank0
   953  05B4  0840               	movf	?_GetXAccl,w
   954  05B5  00C8               	movwf	___fttol@f1
   955  05B6  0841               	movf	?_GetXAccl+1,w
   956  05B7  00C9               	movwf	___fttol@f1+1
   957  05B8  0842               	movf	?_GetXAccl+2,w
   958  05B9  00CA               	movwf	___fttol@f1+2
   959  05BA  2245               	fcall	___fttol
   960  05BB  1283               	bcf	3,5	;RP0=0, select bank0
   961  05BC  1303               	bcf	3,6	;RP1=0, select bank0
   962  05BD  0358               	decf	Vib_Detect@X,w
   963  05BE  3AFF               	xorlw	255
   964  05BF  0748               	addwf	?___fttol,w
   965  05C0  00D6               	movwf	??_Vib_Detect
   966  05C1  0861               	movf	Vib_Detect@X_Diff,w
   967  05C2  0756               	addwf	??_Vib_Detect,w
   968  05C3  00D7               	movwf	??_Vib_Detect+1
   969  05C4  0857               	movf	??_Vib_Detect+1,w
   970  05C5  00E1               	movwf	Vib_Detect@X_Diff
   971                           
   972                           ;motion_det.c: 97: Y_Diff = Y_Diff + ((int)GetYAccl() - Y);
   973  05C6  215F               	fcall	_GetYAccl
   974  05C7  1283               	bcf	3,5	;RP0=0, select bank0
   975  05C8  1303               	bcf	3,6	;RP1=0, select bank0
   976  05C9  0840               	movf	?_GetYAccl,w
   977  05CA  00C8               	movwf	___fttol@f1
   978  05CB  0841               	movf	?_GetYAccl+1,w
   979  05CC  00C9               	movwf	___fttol@f1+1
   980  05CD  0842               	movf	?_GetYAccl+2,w
   981  05CE  00CA               	movwf	___fttol@f1+2
   982  05CF  2245               	fcall	___fttol
   983  05D0  1283               	bcf	3,5	;RP0=0, select bank0
   984  05D1  1303               	bcf	3,6	;RP1=0, select bank0
   985  05D2  035A               	decf	Vib_Detect@Y,w
   986  05D3  3AFF               	xorlw	255
   987  05D4  0748               	addwf	?___fttol,w
   988  05D5  00D6               	movwf	??_Vib_Detect
   989  05D6  0862               	movf	Vib_Detect@Y_Diff,w
   990  05D7  0756               	addwf	??_Vib_Detect,w
   991  05D8  00D7               	movwf	??_Vib_Detect+1
   992  05D9  0857               	movf	??_Vib_Detect+1,w
   993  05DA  00E2               	movwf	Vib_Detect@Y_Diff
   994                           
   995                           ;motion_det.c: 98: Z_Diff = Z_Diff + ((int)GetZAccl() - Z);
   996  05DB  21D2               	fcall	_GetZAccl
   997  05DC  1283               	bcf	3,5	;RP0=0, select bank0
   998  05DD  1303               	bcf	3,6	;RP1=0, select bank0
   999  05DE  0840               	movf	?_GetZAccl,w
  1000  05DF  00C8               	movwf	___fttol@f1
  1001  05E0  0841               	movf	?_GetZAccl+1,w
  1002  05E1  00C9               	movwf	___fttol@f1+1
  1003  05E2  0842               	movf	?_GetZAccl+2,w
  1004  05E3  00CA               	movwf	___fttol@f1+2
  1005  05E4  2245               	fcall	___fttol
  1006  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1007  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1008  05E7  035C               	decf	Vib_Detect@Z,w
  1009  05E8  3AFF               	xorlw	255
  1010  05E9  0748               	addwf	?___fttol,w
  1011  05EA  00D6               	movwf	??_Vib_Detect
  1012  05EB  0863               	movf	Vib_Detect@Z_Diff,w
  1013  05EC  0756               	addwf	??_Vib_Detect,w
  1014                           
  1015                           ;motion_det.c: 105: Z_Diff = Z_Diff * -1;
  1016                           
  1017                           ;motion_det.c: 104: if(Z_Diff < 0)
  1018                           
  1019                           ;motion_det.c: 103: Y_Diff = Y_Diff * -1;
  1020                           
  1021                           ;motion_det.c: 102: if(Y_Diff < 0)
  1022                           
  1023                           ;motion_det.c: 101: X_Diff = X_Diff * -1;
  1024                           
  1025                           ;motion_det.c: 100: if(X_Diff < 0)
  1026  05ED  00D7               	movwf	??_Vib_Detect+1
  1027  05EE  0857               	movf	??_Vib_Detect+1,w
  1028  05EF  00E3               	movwf	Vib_Detect@Z_Diff
  1029  05F0  3001               	movlw	1
  1030  05F1  00D6               	movwf	??_Vib_Detect
  1031  05F2  0856               	movf	??_Vib_Detect,w
  1032  05F3  07E0               	addwf	Vib_Detect@readings,f
  1033  05F4  300A               	movlw	10
  1034  05F5  0260               	subwf	Vib_Detect@readings,w
  1035  05F6  1C03               	skipc
  1036  05F7  2D76               	goto	l1514
  1037  05F8                     l1534:	
  1038                           
  1039                           ;motion_det.c: 106: }
  1040                           ;motion_det.c: 107: if(X_Diff >= Vib_Sensitivity || Y_Diff >= Vib_Sensitivity || Z_Diff 
      +                          >= Vib_Sensitivity)
  1041  05F8  0861               	movf	Vib_Detect@X_Diff,w
  1042  05F9  200B               	fcall	___lbtoft
  1043  05FA  0878               	movf	?___lbtoft,w
  1044  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1045  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1046  05FD  00A4               	movwf	___ftge@ff1
  1047  05FE  0879               	movf	?___lbtoft+1,w
  1048  05FF  00A5               	movwf	___ftge@ff1+1
  1049  0600  087A               	movf	?___lbtoft+2,w
  1050  0601  00A6               	movwf	___ftge@ff1+2
  1051  0602  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0603  1303               	bcf	3,6	;RP1=0, select bank1
  1053  0604  0823               	movf	_Vib_Sensitivity^(0+128),w
  1054  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0607  00A7               	movwf	___ftge@ff2
  1057  0608  1683               	bsf	3,5	;RP0=1, select bank1
  1058  0609  1303               	bcf	3,6	;RP1=0, select bank1
  1059  060A  0824               	movf	(_Vib_Sensitivity+1)^(0+128),w
  1060  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1061  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1062  060D  00A8               	movwf	___ftge@ff2+1
  1063  060E  1683               	bsf	3,5	;RP0=1, select bank1
  1064  060F  1303               	bcf	3,6	;RP1=0, select bank1
  1065  0610  0825               	movf	(_Vib_Sensitivity+2)^(0+128),w
  1066  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0613  00A9               	movwf	___ftge@ff2+2
  1069  0614  2025               	fcall	___ftge
  1070  0615  1803               	btfsc	3,0
  1071  0616  2E59               	goto	l1540
  1072  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0619  0862               	movf	Vib_Detect@Y_Diff,w
  1075  061A  200B               	fcall	___lbtoft
  1076  061B  0878               	movf	?___lbtoft,w
  1077  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1078  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1079  061E  00A4               	movwf	___ftge@ff1
  1080  061F  0879               	movf	?___lbtoft+1,w
  1081  0620  00A5               	movwf	___ftge@ff1+1
  1082  0621  087A               	movf	?___lbtoft+2,w
  1083  0622  00A6               	movwf	___ftge@ff1+2
  1084  0623  1683               	bsf	3,5	;RP0=1, select bank1
  1085  0624  1303               	bcf	3,6	;RP1=0, select bank1
  1086  0625  0823               	movf	_Vib_Sensitivity^(0+128),w
  1087  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0628  00A7               	movwf	___ftge@ff2
  1090  0629  1683               	bsf	3,5	;RP0=1, select bank1
  1091  062A  1303               	bcf	3,6	;RP1=0, select bank1
  1092  062B  0824               	movf	(_Vib_Sensitivity+1)^(0+128),w
  1093  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1094  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1095  062E  00A8               	movwf	___ftge@ff2+1
  1096  062F  1683               	bsf	3,5	;RP0=1, select bank1
  1097  0630  1303               	bcf	3,6	;RP1=0, select bank1
  1098  0631  0825               	movf	(_Vib_Sensitivity+2)^(0+128),w
  1099  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0634  00A9               	movwf	___ftge@ff2+2
  1102  0635  2025               	fcall	___ftge
  1103  0636  1803               	btfsc	3,0
  1104  0637  2E59               	goto	l1540
  1105  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1107  063A  0863               	movf	Vib_Detect@Z_Diff,w
  1108  063B  200B               	fcall	___lbtoft
  1109  063C  0878               	movf	?___lbtoft,w
  1110  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1111  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1112  063F  00A4               	movwf	___ftge@ff1
  1113  0640  0879               	movf	?___lbtoft+1,w
  1114  0641  00A5               	movwf	___ftge@ff1+1
  1115  0642  087A               	movf	?___lbtoft+2,w
  1116  0643  00A6               	movwf	___ftge@ff1+2
  1117  0644  1683               	bsf	3,5	;RP0=1, select bank1
  1118  0645  1303               	bcf	3,6	;RP1=0, select bank1
  1119  0646  0823               	movf	_Vib_Sensitivity^(0+128),w
  1120  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0649  00A7               	movwf	___ftge@ff2
  1123  064A  1683               	bsf	3,5	;RP0=1, select bank1
  1124  064B  1303               	bcf	3,6	;RP1=0, select bank1
  1125  064C  0824               	movf	(_Vib_Sensitivity+1)^(0+128),w
  1126  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1127  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1128  064F  00A8               	movwf	___ftge@ff2+1
  1129  0650  1683               	bsf	3,5	;RP0=1, select bank1
  1130  0651  1303               	bcf	3,6	;RP1=0, select bank1
  1131  0652  0825               	movf	(_Vib_Sensitivity+2)^(0+128),w
  1132  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0655  00A9               	movwf	___ftge@ff2+2
  1135  0656  2025               	fcall	___ftge
  1136  0657  1C03               	btfss	3,0
  1137  0658  2E68               	goto	l1550
  1138  0659                     l1540:	
  1139                           
  1140                           ;motion_det.c: 108: {
  1141                           ;motion_det.c: 109: delay(5000);
  1142  0659  3088               	movlw	136
  1143  065A  00F0               	movwf	?_delay
  1144  065B  3013               	movlw	19
  1145  065C  00F1               	movwf	?_delay+1
  1146  065D  2000               	fcall	_delay
  1147                           
  1148                           ;motion_det.c: 110: counter++;
  1149  065E  3001               	movlw	1
  1150  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0661  00D6               	movwf	??_Vib_Detect
  1153  0662  0856               	movf	??_Vib_Detect,w
  1154  0663  07DE               	addwf	Vib_Detect@counter,f
  1155                           
  1156                           ;motion_det.c: 111: X_Diff = 0;
  1157  0664  01E1               	clrf	Vib_Detect@X_Diff
  1158                           
  1159                           ;motion_det.c: 112: Y_Diff = 0;
  1160  0665  01E2               	clrf	Vib_Detect@Y_Diff
  1161                           
  1162                           ;motion_det.c: 113: Z_Diff = 0;
  1163  0666  01E3               	clrf	Vib_Detect@Z_Diff
  1164                           
  1165                           ;motion_det.c: 114: }
  1166  0667  2E6B               	goto	l1552
  1167  0668                     l1550:	
  1168                           
  1169                           ;motion_det.c: 115: else
  1170                           ;motion_det.c: 116: looper = 0;
  1171  0668  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0669  1303               	bcf	3,6	;RP1=0, select bank0
  1173  066A  01DF               	clrf	Vib_Detect@looper
  1174  066B                     l1552:	
  1175  066B  085F               	movf	Vib_Detect@looper,w
  1176  066C  3A01               	xorlw	1
  1177  066D  1D03               	skipz
  1178  066E  2E73               	goto	l1556
  1179  066F  3005               	movlw	5
  1180  0670  025E               	subwf	Vib_Detect@counter,w
  1181  0671  1C03               	skipc
  1182  0672  2D71               	goto	l1508
  1183  0673                     l1556:	
  1184                           
  1185                           ;motion_det.c: 117: }
  1186                           ;motion_det.c: 118: return looper;
  1187  0673  085F               	movf	Vib_Detect@looper,w
  1188  0674  0008               	return
  1189  0675                     __end_of_Vib_Detect:	
  1190                           
  1191                           	psect	text2
  1192  000B                     __ptext2:	
  1193 ;; *************** function ___lbtoft *****************
  1194 ;; Defined at:
  1195 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  c               1    wreg     unsigned char 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  c               1   11[COMMON] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  3    8[COMMON] float 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1
  1209 ;;      Params:         3       0       0
  1210 ;;      Locals:         1       0       0
  1211 ;;      Temps:          0       4       0
  1212 ;;      Totals:         4       4       0
  1213 ;;Total ram usage:        8 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    1
  1216 ;; This function calls:
  1217 ;;		___ftpack
  1218 ;; This function is called by:
  1219 ;;		_Vib_Detect
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function ___lbtoft
  1225  000B                     ___lbtoft:	
  1226                           
  1227                           ;incstack = 0
  1228                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  1229                           ;___lbtoft@c stored from wreg
  1230  000B  00FB               	movwf	___lbtoft@c
  1231  000C  087B               	movf	___lbtoft@c,w
  1232  000D  1283               	bcf	3,5	;RP0=0, select bank0
  1233  000E  1303               	bcf	3,6	;RP1=0, select bank0
  1234  000F  00A0               	movwf	??___lbtoft
  1235  0010  01A1               	clrf	??___lbtoft+1
  1236  0011  01A2               	clrf	??___lbtoft+2
  1237  0012  0820               	movf	??___lbtoft,w
  1238  0013  00F0               	movwf	___ftpack@arg
  1239  0014  0821               	movf	??___lbtoft+1,w
  1240  0015  00F1               	movwf	___ftpack@arg+1
  1241  0016  0822               	movf	??___lbtoft+2,w
  1242  0017  00F2               	movwf	___ftpack@arg+2
  1243  0018  308E               	movlw	142
  1244  0019  00A3               	movwf	??___lbtoft+3
  1245  001A  0823               	movf	??___lbtoft+3,w
  1246  001B  00F3               	movwf	___ftpack@exp
  1247  001C  01F4               	clrf	___ftpack@sign
  1248  001D  2084               	fcall	___ftpack
  1249  001E  0870               	movf	?___ftpack,w
  1250  001F  00F8               	movwf	?___lbtoft
  1251  0020  0871               	movf	?___ftpack+1,w
  1252  0021  00F9               	movwf	?___lbtoft+1
  1253  0022  0872               	movf	?___ftpack+2,w
  1254  0023  00FA               	movwf	?___lbtoft+2
  1255  0024  0008               	return
  1256  0025                     __end_of___lbtoft:	
  1257                           
  1258                           	psect	text3
  1259  0245                     __ptext3:	
  1260 ;; *************** function ___fttol *****************
  1261 ;; Defined at:
  1262 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  f1              3   40[BANK0 ] float 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  lval            4   49[BANK0 ] unsigned long 
  1267 ;;  exp1            1   53[BANK0 ] unsigned char 
  1268 ;;  sign1           1   48[BANK0 ] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  4   40[BANK0 ] long 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1
  1278 ;;      Params:         0       4       0
  1279 ;;      Locals:         0       6       0
  1280 ;;      Temps:          0       4       0
  1281 ;;      Totals:         0      14       0
  1282 ;;Total ram usage:       14 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_Vib_Detect
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function ___fttol
  1293  0245                     ___fttol:	
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1297  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0247  0848               	movf	___fttol@f1,w
  1300  0248  00CC               	movwf	??___fttol
  1301  0249  0849               	movf	___fttol@f1+1,w
  1302  024A  00CD               	movwf	??___fttol+1
  1303  024B  084A               	movf	___fttol@f1+2,w
  1304  024C  00CE               	movwf	??___fttol+2
  1305  024D  1003               	clrc
  1306  024E  0D4D               	rlf	??___fttol+1,w
  1307  024F  0D4E               	rlf	??___fttol+2,w
  1308  0250  00CF               	movwf	??___fttol+3
  1309  0251  084F               	movf	??___fttol+3,w
  1310  0252  00D5               	movwf	___fttol@exp1
  1311  0253  08D5               	movf	___fttol@exp1,f
  1312  0254  1D03               	skipz
  1313  0255  2A5F               	goto	l1420
  1314  0256  3000               	movlw	0
  1315  0257  00CB               	movwf	?___fttol+3
  1316  0258  3000               	movlw	0
  1317  0259  00CA               	movwf	?___fttol+2
  1318  025A  3000               	movlw	0
  1319  025B  00C9               	movwf	?___fttol+1
  1320  025C  3000               	movlw	0
  1321  025D  00C8               	movwf	?___fttol
  1322  025E  0008               	return
  1323  025F                     l1420:	
  1324  025F  0848               	movf	___fttol@f1,w
  1325  0260  00CC               	movwf	??___fttol
  1326  0261  0849               	movf	___fttol@f1+1,w
  1327  0262  00CD               	movwf	??___fttol+1
  1328  0263  084A               	movf	___fttol@f1+2,w
  1329  0264  00CE               	movwf	??___fttol+2
  1330  0265  3017               	movlw	23
  1331  0266                     u1805:	
  1332  0266  1003               	clrc
  1333  0267  0CCE               	rrf	??___fttol+2,f
  1334  0268  0CCD               	rrf	??___fttol+1,f
  1335  0269  0CCC               	rrf	??___fttol,f
  1336  026A  3EFF               	addlw	-1
  1337  026B  1D03               	skipz
  1338  026C  2A66               	goto	u1805
  1339  026D  084C               	movf	??___fttol,w
  1340  026E  00CF               	movwf	??___fttol+3
  1341  026F  084F               	movf	??___fttol+3,w
  1342  0270  00D0               	movwf	___fttol@sign1
  1343  0271  17C9               	bsf	___fttol@f1+1,7
  1344  0272  30FF               	movlw	255
  1345  0273  05C8               	andwf	___fttol@f1,f
  1346  0274  30FF               	movlw	255
  1347  0275  05C9               	andwf	___fttol@f1+1,f
  1348  0276  3000               	movlw	0
  1349  0277  05CA               	andwf	___fttol@f1+2,f
  1350  0278  0848               	movf	___fttol@f1,w
  1351  0279  00D1               	movwf	___fttol@lval
  1352  027A  0849               	movf	___fttol@f1+1,w
  1353  027B  00D2               	movwf	___fttol@lval+1
  1354  027C  084A               	movf	___fttol@f1+2,w
  1355  027D  00D3               	movwf	___fttol@lval+2
  1356  027E  01D4               	clrf	___fttol@lval+3
  1357  027F  308E               	movlw	142
  1358  0280  02D5               	subwf	___fttol@exp1,f
  1359  0281  1FD5               	btfss	___fttol@exp1,7
  1360  0282  2AA1               	goto	l1440
  1361  0283  0855               	movf	___fttol@exp1,w
  1362  0284  3A80               	xorlw	128
  1363  0285  3E8F               	addlw	143
  1364  0286  1803               	skipnc
  1365  0287  2A91               	goto	l1438
  1366  0288  3000               	movlw	0
  1367  0289  00CB               	movwf	?___fttol+3
  1368  028A  3000               	movlw	0
  1369  028B  00CA               	movwf	?___fttol+2
  1370  028C  3000               	movlw	0
  1371  028D  00C9               	movwf	?___fttol+1
  1372  028E  3000               	movlw	0
  1373  028F  00C8               	movwf	?___fttol
  1374  0290  0008               	return
  1375  0291                     l1438:	
  1376  0291  3001               	movlw	1
  1377  0292                     u1835:	
  1378  0292  1003               	clrc
  1379  0293  0CD4               	rrf	___fttol@lval+3,f
  1380  0294  0CD3               	rrf	___fttol@lval+2,f
  1381  0295  0CD2               	rrf	___fttol@lval+1,f
  1382  0296  0CD1               	rrf	___fttol@lval,f
  1383  0297  3EFF               	addlw	-1
  1384  0298  1D03               	skipz
  1385  0299  2A92               	goto	u1835
  1386  029A  3001               	movlw	1
  1387  029B  00CC               	movwf	??___fttol
  1388  029C  084C               	movf	??___fttol,w
  1389  029D  07D5               	addwf	___fttol@exp1,f
  1390  029E  1903               	btfsc	3,2
  1391  029F  2ABC               	goto	l1450
  1392  02A0  2A91               	goto	l1438
  1393  02A1                     l1440:	
  1394  02A1  3018               	movlw	24
  1395  02A2  0255               	subwf	___fttol@exp1,w
  1396  02A3  1C03               	skipc
  1397  02A4  2AB9               	goto	l1448
  1398  02A5  3000               	movlw	0
  1399  02A6  00CB               	movwf	?___fttol+3
  1400  02A7  3000               	movlw	0
  1401  02A8  00CA               	movwf	?___fttol+2
  1402  02A9  3000               	movlw	0
  1403  02AA  00C9               	movwf	?___fttol+1
  1404  02AB  3000               	movlw	0
  1405  02AC  00C8               	movwf	?___fttol
  1406  02AD  0008               	return
  1407  02AE                     l1446:	
  1408  02AE  3001               	movlw	1
  1409  02AF  00CC               	movwf	??___fttol
  1410  02B0                     u1865:	
  1411  02B0  1003               	clrc
  1412  02B1  0DD1               	rlf	___fttol@lval,f
  1413  02B2  0DD2               	rlf	___fttol@lval+1,f
  1414  02B3  0DD3               	rlf	___fttol@lval+2,f
  1415  02B4  0DD4               	rlf	___fttol@lval+3,f
  1416  02B5  0BCC               	decfsz	??___fttol,f
  1417  02B6  2AB0               	goto	u1865
  1418  02B7  3001               	movlw	1
  1419  02B8  02D5               	subwf	___fttol@exp1,f
  1420  02B9                     l1448:	
  1421  02B9  08D5               	movf	___fttol@exp1,f
  1422  02BA  1D03               	skipz
  1423  02BB  2AAE               	goto	l1446
  1424  02BC                     l1450:	
  1425  02BC  0850               	movf	___fttol@sign1,w
  1426  02BD  1903               	btfsc	3,2
  1427  02BE  2ACA               	goto	l1454
  1428  02BF  09D1               	comf	___fttol@lval,f
  1429  02C0  09D2               	comf	___fttol@lval+1,f
  1430  02C1  09D3               	comf	___fttol@lval+2,f
  1431  02C2  09D4               	comf	___fttol@lval+3,f
  1432  02C3  0AD1               	incf	___fttol@lval,f
  1433  02C4  1903               	skipnz
  1434  02C5  0AD2               	incf	___fttol@lval+1,f
  1435  02C6  1903               	skipnz
  1436  02C7  0AD3               	incf	___fttol@lval+2,f
  1437  02C8  1903               	skipnz
  1438  02C9  0AD4               	incf	___fttol@lval+3,f
  1439  02CA                     l1454:	
  1440  02CA  0854               	movf	___fttol@lval+3,w
  1441  02CB  00CB               	movwf	?___fttol+3
  1442  02CC  0853               	movf	___fttol@lval+2,w
  1443  02CD  00CA               	movwf	?___fttol+2
  1444  02CE  0852               	movf	___fttol@lval+1,w
  1445  02CF  00C9               	movwf	?___fttol+1
  1446  02D0  0851               	movf	___fttol@lval,w
  1447  02D1  00C8               	movwf	?___fttol
  1448  02D2  0008               	return
  1449  02D3                     __end_of___fttol:	
  1450                           
  1451                           	psect	text4
  1452  0083                     __ptext4:	
  1453 ;; *************** function ___bmul *****************
  1454 ;; Defined at:
  1455 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  multiplier      1    wreg     unsigned char 
  1458 ;;  multiplicand    1    0[COMMON] unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  multiplier      1    3[COMMON] unsigned char 
  1461 ;;  product         1    2[COMMON] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1
  1471 ;;      Params:         1       0       0
  1472 ;;      Locals:         2       0       0
  1473 ;;      Temps:          1       0       0
  1474 ;;      Totals:         4       0       0
  1475 ;;Total ram usage:        4 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_Vib_Detect
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function ___bmul
  1486  0083                     ___bmul:	
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1490                           ;___bmul@multiplier stored from wreg
  1491  0083  00F3               	movwf	___bmul@multiplier
  1492  0084  01F2               	clrf	___bmul@product
  1493  0085                     l1300:	
  1494  0085  1C73               	btfss	___bmul@multiplier,0
  1495  0086  288B               	goto	l1304
  1496  0087  0870               	movf	___bmul@multiplicand,w
  1497  0088  00F1               	movwf	??___bmul
  1498  0089  0871               	movf	??___bmul,w
  1499  008A  07F2               	addwf	___bmul@product,f
  1500  008B                     l1304:	
  1501  008B  1003               	clrc
  1502  008C  0DF0               	rlf	___bmul@multiplicand,f
  1503  008D  1003               	clrc
  1504  008E  0CF3               	rrf	___bmul@multiplier,f
  1505  008F  08F3               	movf	___bmul@multiplier,f
  1506  0090  1D03               	skipz
  1507  0091  2885               	goto	l1300
  1508  0092  0872               	movf	___bmul@product,w
  1509  0093  0008               	return
  1510  0094                     __end_of___bmul:	
  1511                           
  1512                           	psect	text5
  1513  0675                     __ptext5:	
  1514 ;; *************** function _Accident_Detect *****************
  1515 ;; Defined at:
  1516 ;;		line 51 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\motion_det.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  z_G             3   74[BANK0 ] float 
  1521 ;;  y_G             3   71[BANK0 ] float 
  1522 ;;  x_G             3   68[BANK0 ] float 
  1523 ;;  scale           3   65[BANK0 ] float 
  1524 ;;  zero_G          3   62[BANK0 ] float 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      unsigned char 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1
  1534 ;;      Params:         0       0       0
  1535 ;;      Locals:         0      24       0
  1536 ;;      Temps:          0       0       0
  1537 ;;      Totals:         0      24       0
  1538 ;;Total ram usage:       24 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    3
  1541 ;; This function calls:
  1542 ;;		_GetXAccl
  1543 ;;		_GetYAccl
  1544 ;;		_GetZAccl
  1545 ;;		___ftadd
  1546 ;;		___ftdiv
  1547 ;;		___ftge
  1548 ;;		___ftmul
  1549 ;;		___ftneg
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           
  1556                           ;psect for function _Accident_Detect
  1557  0675                     _Accident_Detect:	
  1558                           
  1559                           ;motion_det.c: 53: float zero_G = 512.0f;
  1560                           
  1561                           ;incstack = 0
  1562                           ; Regs used in _Accident_Detect: [wreg+status,2+status,0+pclath+cstack]
  1563  0675  3000               	movlw	0
  1564  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0678  00DE               	movwf	Accident_Detect@zero_G
  1567  0679  3000               	movlw	0
  1568  067A  00DF               	movwf	Accident_Detect@zero_G+1
  1569  067B  3044               	movlw	68
  1570  067C  00E0               	movwf	Accident_Detect@zero_G+2
  1571                           
  1572                           ;motion_det.c: 54: float scale = 102.3f;
  1573  067D  309A               	movlw	154
  1574  067E  00E1               	movwf	Accident_Detect@scale
  1575  067F  30CC               	movlw	204
  1576  0680  00E2               	movwf	Accident_Detect@scale+1
  1577  0681  3042               	movlw	66
  1578  0682  00E3               	movwf	Accident_Detect@scale+2
  1579                           
  1580                           ;motion_det.c: 56: float x_G = (GetXAccl() - zero_G)/scale;
  1581  0683  085E               	movf	Accident_Detect@zero_G,w
  1582  0684  00F0               	movwf	___ftneg@f1
  1583  0685  085F               	movf	Accident_Detect@zero_G+1,w
  1584  0686  00F1               	movwf	___ftneg@f1+1
  1585  0687  0860               	movf	Accident_Detect@zero_G+2,w
  1586  0688  00F2               	movwf	___ftneg@f1+2
  1587  0689  2003               	fcall	___ftneg
  1588  068A  0870               	movf	?___ftneg,w
  1589  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1590  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1591  068D  00C8               	movwf	___ftadd@f1
  1592  068E  0871               	movf	?___ftneg+1,w
  1593  068F  00C9               	movwf	___ftadd@f1+1
  1594  0690  0872               	movf	?___ftneg+2,w
  1595  0691  00CA               	movwf	___ftadd@f1+2
  1596  0692  20EC               	fcall	_GetXAccl
  1597  0693  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0694  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0695  0840               	movf	?_GetXAccl,w
  1600  0696  00CB               	movwf	___ftadd@f2
  1601  0697  0841               	movf	?_GetXAccl+1,w
  1602  0698  00CC               	movwf	___ftadd@f2+1
  1603  0699  0842               	movf	?_GetXAccl+2,w
  1604  069A  00CD               	movwf	___ftadd@f2+2
  1605  069B  245A               	fcall	___ftadd
  1606  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1607  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1608  069E  0848               	movf	?___ftadd,w
  1609  069F  00D5               	movwf	_Accident_Detect$563
  1610  06A0  0849               	movf	?___ftadd+1,w
  1611  06A1  00D6               	movwf	_Accident_Detect$563+1
  1612  06A2  084A               	movf	?___ftadd+2,w
  1613  06A3  00D7               	movwf	_Accident_Detect$563+2
  1614                           
  1615                           ;motion_det.c: 56: float x_G = (GetXAccl() - zero_G)/scale;
  1616  06A4  0861               	movf	Accident_Detect@scale,w
  1617  06A5  00A0               	movwf	___ftdiv@f2
  1618  06A6  0862               	movf	Accident_Detect@scale+1,w
  1619  06A7  00A1               	movwf	___ftdiv@f2+1
  1620  06A8  0863               	movf	Accident_Detect@scale+2,w
  1621  06A9  00A2               	movwf	___ftdiv@f2+2
  1622  06AA  0855               	movf	_Accident_Detect$563,w
  1623  06AB  00A3               	movwf	___ftdiv@f1
  1624  06AC  0856               	movf	_Accident_Detect$563+1,w
  1625  06AD  00A4               	movwf	___ftdiv@f1+1
  1626  06AE  0857               	movf	_Accident_Detect$563+2,w
  1627  06AF  00A5               	movwf	___ftdiv@f1+2
  1628  06B0  22D3               	fcall	___ftdiv
  1629  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1630  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1631  06B3  0820               	movf	?___ftdiv,w
  1632  06B4  00E4               	movwf	Accident_Detect@x_G
  1633  06B5  0821               	movf	?___ftdiv+1,w
  1634  06B6  00E5               	movwf	Accident_Detect@x_G+1
  1635  06B7  0822               	movf	?___ftdiv+2,w
  1636  06B8  00E6               	movwf	Accident_Detect@x_G+2
  1637                           
  1638                           ;motion_det.c: 57: float y_G = (GetYAccl() - zero_G)/scale;
  1639  06B9  085E               	movf	Accident_Detect@zero_G,w
  1640  06BA  00F0               	movwf	___ftneg@f1
  1641  06BB  085F               	movf	Accident_Detect@zero_G+1,w
  1642  06BC  00F1               	movwf	___ftneg@f1+1
  1643  06BD  0860               	movf	Accident_Detect@zero_G+2,w
  1644  06BE  00F2               	movwf	___ftneg@f1+2
  1645  06BF  2003               	fcall	___ftneg
  1646  06C0  0870               	movf	?___ftneg,w
  1647  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1648  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1649  06C3  00C8               	movwf	___ftadd@f1
  1650  06C4  0871               	movf	?___ftneg+1,w
  1651  06C5  00C9               	movwf	___ftadd@f1+1
  1652  06C6  0872               	movf	?___ftneg+2,w
  1653  06C7  00CA               	movwf	___ftadd@f1+2
  1654  06C8  215F               	fcall	_GetYAccl
  1655  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1656  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1657  06CB  0840               	movf	?_GetYAccl,w
  1658  06CC  00CB               	movwf	___ftadd@f2
  1659  06CD  0841               	movf	?_GetYAccl+1,w
  1660  06CE  00CC               	movwf	___ftadd@f2+1
  1661  06CF  0842               	movf	?_GetYAccl+2,w
  1662  06D0  00CD               	movwf	___ftadd@f2+2
  1663  06D1  245A               	fcall	___ftadd
  1664  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1665  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1666  06D4  0848               	movf	?___ftadd,w
  1667  06D5  00D8               	movwf	_Accident_Detect$564
  1668  06D6  0849               	movf	?___ftadd+1,w
  1669  06D7  00D9               	movwf	_Accident_Detect$564+1
  1670  06D8  084A               	movf	?___ftadd+2,w
  1671  06D9  00DA               	movwf	_Accident_Detect$564+2
  1672                           
  1673                           ;motion_det.c: 57: float y_G = (GetYAccl() - zero_G)/scale;
  1674  06DA  0861               	movf	Accident_Detect@scale,w
  1675  06DB  00A0               	movwf	___ftdiv@f2
  1676  06DC  0862               	movf	Accident_Detect@scale+1,w
  1677  06DD  00A1               	movwf	___ftdiv@f2+1
  1678  06DE  0863               	movf	Accident_Detect@scale+2,w
  1679  06DF  00A2               	movwf	___ftdiv@f2+2
  1680  06E0  0858               	movf	_Accident_Detect$564,w
  1681  06E1  00A3               	movwf	___ftdiv@f1
  1682  06E2  0859               	movf	_Accident_Detect$564+1,w
  1683  06E3  00A4               	movwf	___ftdiv@f1+1
  1684  06E4  085A               	movf	_Accident_Detect$564+2,w
  1685  06E5  00A5               	movwf	___ftdiv@f1+2
  1686  06E6  22D3               	fcall	___ftdiv
  1687  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1688  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1689  06E9  0820               	movf	?___ftdiv,w
  1690  06EA  00E7               	movwf	Accident_Detect@y_G
  1691  06EB  0821               	movf	?___ftdiv+1,w
  1692  06EC  00E8               	movwf	Accident_Detect@y_G+1
  1693  06ED  0822               	movf	?___ftdiv+2,w
  1694  06EE  00E9               	movwf	Accident_Detect@y_G+2
  1695                           
  1696                           ;motion_det.c: 58: float z_G = (GetZAccl() - zero_G)/scale;
  1697  06EF  085E               	movf	Accident_Detect@zero_G,w
  1698  06F0  00F0               	movwf	___ftneg@f1
  1699  06F1  085F               	movf	Accident_Detect@zero_G+1,w
  1700  06F2  00F1               	movwf	___ftneg@f1+1
  1701  06F3  0860               	movf	Accident_Detect@zero_G+2,w
  1702  06F4  00F2               	movwf	___ftneg@f1+2
  1703  06F5  2003               	fcall	___ftneg
  1704  06F6  0870               	movf	?___ftneg,w
  1705  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1706  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1707  06F9  00C8               	movwf	___ftadd@f1
  1708  06FA  0871               	movf	?___ftneg+1,w
  1709  06FB  00C9               	movwf	___ftadd@f1+1
  1710  06FC  0872               	movf	?___ftneg+2,w
  1711  06FD  00CA               	movwf	___ftadd@f1+2
  1712  06FE  21D2               	fcall	_GetZAccl
  1713  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0701  0840               	movf	?_GetZAccl,w
  1716  0702  00CB               	movwf	___ftadd@f2
  1717  0703  0841               	movf	?_GetZAccl+1,w
  1718  0704  00CC               	movwf	___ftadd@f2+1
  1719  0705  0842               	movf	?_GetZAccl+2,w
  1720  0706  00CD               	movwf	___ftadd@f2+2
  1721  0707  245A               	fcall	___ftadd
  1722  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1724  070A  0848               	movf	?___ftadd,w
  1725  070B  00DB               	movwf	_Accident_Detect$565
  1726  070C  0849               	movf	?___ftadd+1,w
  1727  070D  00DC               	movwf	_Accident_Detect$565+1
  1728  070E  084A               	movf	?___ftadd+2,w
  1729  070F  00DD               	movwf	_Accident_Detect$565+2
  1730                           
  1731                           ;motion_det.c: 58: float z_G = (GetZAccl() - zero_G)/scale;
  1732  0710  0861               	movf	Accident_Detect@scale,w
  1733  0711  00A0               	movwf	___ftdiv@f2
  1734  0712  0862               	movf	Accident_Detect@scale+1,w
  1735  0713  00A1               	movwf	___ftdiv@f2+1
  1736  0714  0863               	movf	Accident_Detect@scale+2,w
  1737  0715  00A2               	movwf	___ftdiv@f2+2
  1738  0716  085B               	movf	_Accident_Detect$565,w
  1739  0717  00A3               	movwf	___ftdiv@f1
  1740  0718  085C               	movf	_Accident_Detect$565+1,w
  1741  0719  00A4               	movwf	___ftdiv@f1+1
  1742  071A  085D               	movf	_Accident_Detect$565+2,w
  1743  071B  00A5               	movwf	___ftdiv@f1+2
  1744  071C  22D3               	fcall	___ftdiv
  1745  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1746  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1747  071F  0820               	movf	?___ftdiv,w
  1748  0720  00EA               	movwf	Accident_Detect@z_G
  1749  0721  0821               	movf	?___ftdiv+1,w
  1750  0722  00EB               	movwf	Accident_Detect@z_G+1
  1751  0723  0822               	movf	?___ftdiv+2,w
  1752  0724  00EC               	movwf	Accident_Detect@z_G+2
  1753                           
  1754                           ;motion_det.c: 61: if(x_G < 0)
  1755  0725  0864               	movf	Accident_Detect@x_G,w
  1756  0726  00A4               	movwf	___ftge@ff1
  1757  0727  0865               	movf	Accident_Detect@x_G+1,w
  1758  0728  00A5               	movwf	___ftge@ff1+1
  1759  0729  0866               	movf	Accident_Detect@x_G+2,w
  1760  072A  00A6               	movwf	___ftge@ff1+2
  1761  072B  3000               	movlw	0
  1762  072C  00A7               	movwf	___ftge@ff2
  1763  072D  3000               	movlw	0
  1764  072E  00A8               	movwf	___ftge@ff2+1
  1765  072F  3000               	movlw	0
  1766  0730  00A9               	movwf	___ftge@ff2+2
  1767  0731  2025               	fcall	___ftge
  1768  0732  1803               	btfsc	3,0
  1769  0733  2F4B               	goto	l48
  1770                           
  1771                           ;motion_det.c: 62: x_G = x_G * -1;
  1772  0734  3000               	movlw	0
  1773  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0737  00B0               	movwf	___ftmul@f1
  1776  0738  3080               	movlw	128
  1777  0739  00B1               	movwf	___ftmul@f1+1
  1778  073A  30BF               	movlw	191
  1779  073B  00B2               	movwf	___ftmul@f1+2
  1780  073C  0864               	movf	Accident_Detect@x_G,w
  1781  073D  00B3               	movwf	___ftmul@f2
  1782  073E  0865               	movf	Accident_Detect@x_G+1,w
  1783  073F  00B4               	movwf	___ftmul@f2+1
  1784  0740  0866               	movf	Accident_Detect@x_G+2,w
  1785  0741  00B5               	movwf	___ftmul@f2+2
  1786  0742  2389               	fcall	___ftmul
  1787  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0745  0830               	movf	?___ftmul,w
  1790  0746  00E4               	movwf	Accident_Detect@x_G
  1791  0747  0831               	movf	?___ftmul+1,w
  1792  0748  00E5               	movwf	Accident_Detect@x_G+1
  1793  0749  0832               	movf	?___ftmul+2,w
  1794  074A  00E6               	movwf	Accident_Detect@x_G+2
  1795  074B                     l48:	
  1796                           
  1797                           ;motion_det.c: 63: if(y_G < 0)
  1798  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1799  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1800  074D  0867               	movf	Accident_Detect@y_G,w
  1801  074E  00A4               	movwf	___ftge@ff1
  1802  074F  0868               	movf	Accident_Detect@y_G+1,w
  1803  0750  00A5               	movwf	___ftge@ff1+1
  1804  0751  0869               	movf	Accident_Detect@y_G+2,w
  1805  0752  00A6               	movwf	___ftge@ff1+2
  1806  0753  3000               	movlw	0
  1807  0754  00A7               	movwf	___ftge@ff2
  1808  0755  3000               	movlw	0
  1809  0756  00A8               	movwf	___ftge@ff2+1
  1810  0757  3000               	movlw	0
  1811  0758  00A9               	movwf	___ftge@ff2+2
  1812  0759  2025               	fcall	___ftge
  1813  075A  1803               	btfsc	3,0
  1814  075B  2F73               	goto	l49
  1815                           
  1816                           ;motion_det.c: 64: y_G = y_G * -1;
  1817  075C  3000               	movlw	0
  1818  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1819  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1820  075F  00B0               	movwf	___ftmul@f1
  1821  0760  3080               	movlw	128
  1822  0761  00B1               	movwf	___ftmul@f1+1
  1823  0762  30BF               	movlw	191
  1824  0763  00B2               	movwf	___ftmul@f1+2
  1825  0764  0867               	movf	Accident_Detect@y_G,w
  1826  0765  00B3               	movwf	___ftmul@f2
  1827  0766  0868               	movf	Accident_Detect@y_G+1,w
  1828  0767  00B4               	movwf	___ftmul@f2+1
  1829  0768  0869               	movf	Accident_Detect@y_G+2,w
  1830  0769  00B5               	movwf	___ftmul@f2+2
  1831  076A  2389               	fcall	___ftmul
  1832  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1833  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1834  076D  0830               	movf	?___ftmul,w
  1835  076E  00E7               	movwf	Accident_Detect@y_G
  1836  076F  0831               	movf	?___ftmul+1,w
  1837  0770  00E8               	movwf	Accident_Detect@y_G+1
  1838  0771  0832               	movf	?___ftmul+2,w
  1839  0772  00E9               	movwf	Accident_Detect@y_G+2
  1840  0773                     l49:	
  1841                           
  1842                           ;motion_det.c: 65: if(z_G < 0)
  1843  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0775  086A               	movf	Accident_Detect@z_G,w
  1846  0776  00A4               	movwf	___ftge@ff1
  1847  0777  086B               	movf	Accident_Detect@z_G+1,w
  1848  0778  00A5               	movwf	___ftge@ff1+1
  1849  0779  086C               	movf	Accident_Detect@z_G+2,w
  1850  077A  00A6               	movwf	___ftge@ff1+2
  1851  077B  3000               	movlw	0
  1852  077C  00A7               	movwf	___ftge@ff2
  1853  077D  3000               	movlw	0
  1854  077E  00A8               	movwf	___ftge@ff2+1
  1855  077F  3000               	movlw	0
  1856  0780  00A9               	movwf	___ftge@ff2+2
  1857  0781  2025               	fcall	___ftge
  1858  0782  1803               	btfsc	3,0
  1859  0783  2F9B               	goto	l50
  1860                           
  1861                           ;motion_det.c: 66: z_G = z_G * -1;
  1862  0784  3000               	movlw	0
  1863  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0787  00B0               	movwf	___ftmul@f1
  1866  0788  3080               	movlw	128
  1867  0789  00B1               	movwf	___ftmul@f1+1
  1868  078A  30BF               	movlw	191
  1869  078B  00B2               	movwf	___ftmul@f1+2
  1870  078C  086A               	movf	Accident_Detect@z_G,w
  1871  078D  00B3               	movwf	___ftmul@f2
  1872  078E  086B               	movf	Accident_Detect@z_G+1,w
  1873  078F  00B4               	movwf	___ftmul@f2+1
  1874  0790  086C               	movf	Accident_Detect@z_G+2,w
  1875  0791  00B5               	movwf	___ftmul@f2+2
  1876  0792  2389               	fcall	___ftmul
  1877  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0794  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0795  0830               	movf	?___ftmul,w
  1880  0796  00EA               	movwf	Accident_Detect@z_G
  1881  0797  0831               	movf	?___ftmul+1,w
  1882  0798  00EB               	movwf	Accident_Detect@z_G+1
  1883  0799  0832               	movf	?___ftmul+2,w
  1884  079A  00EC               	movwf	Accident_Detect@z_G+2
  1885  079B                     l50:	
  1886                           
  1887                           ;motion_det.c: 68: if(x_G > AccidentG || y_G > AccidentG || z_G > AccidentG)
  1888  079B  1683               	bsf	3,5	;RP0=1, select bank1
  1889  079C  1303               	bcf	3,6	;RP1=0, select bank1
  1890  079D  0820               	movf	_AccidentG^(0+128),w
  1891  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1892  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1893  07A0  00A4               	movwf	___ftge@ff1
  1894  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  1895  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  1896  07A3  0821               	movf	(_AccidentG+1)^(0+128),w
  1897  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1898  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1899  07A6  00A5               	movwf	___ftge@ff1+1
  1900  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  1901  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  1902  07A9  0822               	movf	(_AccidentG+2)^(0+128),w
  1903  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1904  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1905  07AC  00A6               	movwf	___ftge@ff1+2
  1906  07AD  0864               	movf	Accident_Detect@x_G,w
  1907  07AE  00A7               	movwf	___ftge@ff2
  1908  07AF  0865               	movf	Accident_Detect@x_G+1,w
  1909  07B0  00A8               	movwf	___ftge@ff2+1
  1910  07B1  0866               	movf	Accident_Detect@x_G+2,w
  1911  07B2  00A9               	movwf	___ftge@ff2+2
  1912  07B3  2025               	fcall	___ftge
  1913  07B4  1C03               	btfss	3,0
  1914  07B5  2FEC               	goto	l1494
  1915  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  1916  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  1917  07B8  0820               	movf	_AccidentG^(0+128),w
  1918  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1919  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1920  07BB  00A4               	movwf	___ftge@ff1
  1921  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  1922  07BD  1303               	bcf	3,6	;RP1=0, select bank1
  1923  07BE  0821               	movf	(_AccidentG+1)^(0+128),w
  1924  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1925  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1926  07C1  00A5               	movwf	___ftge@ff1+1
  1927  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  1928  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  1929  07C4  0822               	movf	(_AccidentG+2)^(0+128),w
  1930  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  1931  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  1932  07C7  00A6               	movwf	___ftge@ff1+2
  1933  07C8  0867               	movf	Accident_Detect@y_G,w
  1934  07C9  00A7               	movwf	___ftge@ff2
  1935  07CA  0868               	movf	Accident_Detect@y_G+1,w
  1936  07CB  00A8               	movwf	___ftge@ff2+1
  1937  07CC  0869               	movf	Accident_Detect@y_G+2,w
  1938  07CD  00A9               	movwf	___ftge@ff2+2
  1939  07CE  2025               	fcall	___ftge
  1940  07CF  1C03               	btfss	3,0
  1941  07D0  2FEC               	goto	l1494
  1942  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  1943  07D2  1303               	bcf	3,6	;RP1=0, select bank1
  1944  07D3  0820               	movf	_AccidentG^(0+128),w
  1945  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1946  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1947  07D6  00A4               	movwf	___ftge@ff1
  1948  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  1949  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  1950  07D9  0821               	movf	(_AccidentG+1)^(0+128),w
  1951  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1952  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1953  07DC  00A5               	movwf	___ftge@ff1+1
  1954  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  1955  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  1956  07DF  0822               	movf	(_AccidentG+2)^(0+128),w
  1957  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1958  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1959  07E2  00A6               	movwf	___ftge@ff1+2
  1960  07E3  086A               	movf	Accident_Detect@z_G,w
  1961  07E4  00A7               	movwf	___ftge@ff2
  1962  07E5  086B               	movf	Accident_Detect@z_G+1,w
  1963  07E6  00A8               	movwf	___ftge@ff2+1
  1964  07E7  086C               	movf	Accident_Detect@z_G+2,w
  1965  07E8  00A9               	movwf	___ftge@ff2+2
  1966  07E9  2025               	fcall	___ftge
  1967  07EA  1803               	btfsc	3,0
  1968  07EB  2FEE               	goto	l1500
  1969  07EC                     l1494:	
  1970                           
  1971                           ;motion_det.c: 69: return 1;
  1972  07EC  3001               	movlw	1
  1973  07ED  0008               	return
  1974  07EE                     l1500:	
  1975                           
  1976                           ;motion_det.c: 70: else
  1977                           ;motion_det.c: 71: return 0;
  1978  07EE  3000               	movlw	0
  1979  07EF  0008               	return
  1980  07F0                     __end_of_Accident_Detect:	
  1981                           
  1982                           	psect	text6
  1983  0003                     __ptext6:	
  1984 ;; *************** function ___ftneg *****************
  1985 ;; Defined at:
  1986 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  f1              3    0[COMMON] float 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  3    0[COMMON] float 
  1993 ;; Registers used:
  1994 ;;		wreg
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1
  2000 ;;      Params:         3       0       0
  2001 ;;      Locals:         0       0       0
  2002 ;;      Temps:          0       0       0
  2003 ;;      Totals:         3       0       0
  2004 ;;Total ram usage:        3 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_Accident_Detect
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           
  2014                           ;psect for function ___ftneg
  2015  0003                     ___ftneg:	
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in ___ftneg: [wreg]
  2019  0003  0872               	movf	___ftneg@f1+2,w
  2020  0004  0471               	iorwf	___ftneg@f1+1,w
  2021  0005  0470               	iorwf	___ftneg@f1,w
  2022  0006  1903               	skipnz
  2023  0007  0008               	return
  2024  0008  3080               	movlw	128
  2025  0009  06F2               	xorwf	___ftneg@f1+2,f
  2026  000A  0008               	return
  2027  000B                     __end_of___ftneg:	
  2028                           
  2029                           	psect	text7
  2030  0025                     __ptext7:	
  2031 ;; *************** function ___ftge *****************
  2032 ;; Defined at:
  2033 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  ff1             3    4[BANK0 ] float 
  2036 ;;  ff2             3    7[BANK0 ] float 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;		None               void
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1
  2048 ;;      Params:         0       6       0
  2049 ;;      Locals:         0       0       0
  2050 ;;      Temps:          0       6       0
  2051 ;;      Totals:         0      12       0
  2052 ;;Total ram usage:       12 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_Accident_Detect
  2058 ;;		_Vib_Detect
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function ___ftge
  2064  0025                     ___ftge:	
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2068  0025  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0026  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0027  1FA6               	btfss	___ftge@ff1+2,7
  2071  0028  284E               	goto	l1390
  2072  0029  3000               	movlw	0
  2073  002A  00AA               	movwf	??___ftge
  2074  002B  3000               	movlw	0
  2075  002C  00AB               	movwf	??___ftge+1
  2076  002D  3080               	movlw	128
  2077  002E  00AC               	movwf	??___ftge+2
  2078  002F  0924               	comf	___ftge@ff1,w
  2079  0030  00AD               	movwf	??___ftge+3
  2080  0031  0925               	comf	___ftge@ff1+1,w
  2081  0032  00AE               	movwf	??___ftge+4
  2082  0033  0926               	comf	___ftge@ff1+2,w
  2083  0034  00AF               	movwf	??___ftge+5
  2084  0035  0AAD               	incf	??___ftge+3,f
  2085  0036  1903               	skipnz
  2086  0037  0AAE               	incf	??___ftge+4,f
  2087  0038  1903               	skipnz
  2088  0039  0AAF               	incf	??___ftge+5,f
  2089  003A  082D               	movf	??___ftge+3,w
  2090  003B  07AA               	addwf	??___ftge,f
  2091  003C  082E               	movf	??___ftge+4,w
  2092  003D  1803               	skipnc
  2093  003E  0F2E               	incfsz	??___ftge+4,w
  2094  003F  2841               	goto	u1741
  2095  0040  2842               	goto	u1742
  2096  0041                     u1741:	
  2097  0041  07AB               	addwf	??___ftge+1,f
  2098  0042                     u1742:	
  2099  0042  082F               	movf	??___ftge+5,w
  2100  0043  1803               	skipnc
  2101  0044  0F2F               	incfsz	??___ftge+5,w
  2102  0045  2847               	goto	u1743
  2103  0046  2848               	goto	u1744
  2104  0047                     u1743:	
  2105  0047  07AC               	addwf	??___ftge+2,f
  2106  0048                     u1744:	
  2107  0048  082A               	movf	??___ftge,w
  2108  0049  00A4               	movwf	___ftge@ff1
  2109  004A  082B               	movf	??___ftge+1,w
  2110  004B  00A5               	movwf	___ftge@ff1+1
  2111  004C  082C               	movf	??___ftge+2,w
  2112  004D  00A6               	movwf	___ftge@ff1+2
  2113  004E                     l1390:	
  2114  004E  1FA9               	btfss	___ftge@ff2+2,7
  2115  004F  2875               	goto	l1394
  2116  0050  3000               	movlw	0
  2117  0051  00AA               	movwf	??___ftge
  2118  0052  3000               	movlw	0
  2119  0053  00AB               	movwf	??___ftge+1
  2120  0054  3080               	movlw	128
  2121  0055  00AC               	movwf	??___ftge+2
  2122  0056  0927               	comf	___ftge@ff2,w
  2123  0057  00AD               	movwf	??___ftge+3
  2124  0058  0928               	comf	___ftge@ff2+1,w
  2125  0059  00AE               	movwf	??___ftge+4
  2126  005A  0929               	comf	___ftge@ff2+2,w
  2127  005B  00AF               	movwf	??___ftge+5
  2128  005C  0AAD               	incf	??___ftge+3,f
  2129  005D  1903               	skipnz
  2130  005E  0AAE               	incf	??___ftge+4,f
  2131  005F  1903               	skipnz
  2132  0060  0AAF               	incf	??___ftge+5,f
  2133  0061  082D               	movf	??___ftge+3,w
  2134  0062  07AA               	addwf	??___ftge,f
  2135  0063  082E               	movf	??___ftge+4,w
  2136  0064  1803               	skipnc
  2137  0065  0F2E               	incfsz	??___ftge+4,w
  2138  0066  2868               	goto	u1761
  2139  0067  2869               	goto	u1762
  2140  0068                     u1761:	
  2141  0068  07AB               	addwf	??___ftge+1,f
  2142  0069                     u1762:	
  2143  0069  082F               	movf	??___ftge+5,w
  2144  006A  1803               	skipnc
  2145  006B  0F2F               	incfsz	??___ftge+5,w
  2146  006C  286E               	goto	u1763
  2147  006D  286F               	goto	u1764
  2148  006E                     u1763:	
  2149  006E  07AC               	addwf	??___ftge+2,f
  2150  006F                     u1764:	
  2151  006F  082A               	movf	??___ftge,w
  2152  0070  00A7               	movwf	___ftge@ff2
  2153  0071  082B               	movf	??___ftge+1,w
  2154  0072  00A8               	movwf	___ftge@ff2+1
  2155  0073  082C               	movf	??___ftge+2,w
  2156  0074  00A9               	movwf	___ftge@ff2+2
  2157  0075                     l1394:	
  2158  0075  3080               	movlw	128
  2159  0076  06A6               	xorwf	___ftge@ff1+2,f
  2160  0077  3080               	movlw	128
  2161  0078  06A9               	xorwf	___ftge@ff2+2,f
  2162  0079  0829               	movf	___ftge@ff2+2,w
  2163  007A  0226               	subwf	___ftge@ff1+2,w
  2164  007B  1D03               	skipz
  2165  007C  0008               	return
  2166  007D  0828               	movf	___ftge@ff2+1,w
  2167  007E  0225               	subwf	___ftge@ff1+1,w
  2168  007F  1D03               	skipz
  2169  0080  0008               	return
  2170  0081  0827               	movf	___ftge@ff2,w
  2171  0082  0224               	subwf	___ftge@ff1,w
  2172  0083  0008               	return
  2173  0084                     __end_of___ftge:	
  2174                           
  2175                           	psect	text8
  2176  045A                     __ptext8:	
  2177 ;; *************** function ___ftadd *****************
  2178 ;; Defined at:
  2179 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  f1              3   40[BANK0 ] float 
  2182 ;;  f2              3   43[BANK0 ] float 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  exp1            1   52[BANK0 ] unsigned char 
  2185 ;;  exp2            1   51[BANK0 ] unsigned char 
  2186 ;;  sign            1   50[BANK0 ] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  3   40[BANK0 ] float 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1
  2196 ;;      Params:         0       6       0
  2197 ;;      Locals:         0       3       0
  2198 ;;      Temps:          0       4       0
  2199 ;;      Totals:         0      13       0
  2200 ;;Total ram usage:       13 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    1
  2203 ;; This function calls:
  2204 ;;		___ftpack
  2205 ;; This function is called by:
  2206 ;;		_Accident_Detect
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function ___ftadd
  2212  045A                     ___ftadd:	
  2213                           
  2214                           ;incstack = 0
  2215                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2216  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2217  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2218  045C  0848               	movf	___ftadd@f1,w
  2219  045D  00CE               	movwf	??___ftadd
  2220  045E  0849               	movf	___ftadd@f1+1,w
  2221  045F  00CF               	movwf	??___ftadd+1
  2222  0460  084A               	movf	___ftadd@f1+2,w
  2223  0461  00D0               	movwf	??___ftadd+2
  2224  0462  1003               	clrc
  2225  0463  0D4F               	rlf	??___ftadd+1,w
  2226  0464  0D50               	rlf	??___ftadd+2,w
  2227  0465  00D1               	movwf	??___ftadd+3
  2228  0466  0851               	movf	??___ftadd+3,w
  2229  0467  00D4               	movwf	___ftadd@exp1
  2230  0468  084B               	movf	___ftadd@f2,w
  2231  0469  00CE               	movwf	??___ftadd
  2232  046A  084C               	movf	___ftadd@f2+1,w
  2233  046B  00CF               	movwf	??___ftadd+1
  2234  046C  084D               	movf	___ftadd@f2+2,w
  2235  046D  00D0               	movwf	??___ftadd+2
  2236  046E  1003               	clrc
  2237  046F  0D4F               	rlf	??___ftadd+1,w
  2238  0470  0D50               	rlf	??___ftadd+2,w
  2239  0471  00D1               	movwf	??___ftadd+3
  2240  0472  0851               	movf	??___ftadd+3,w
  2241  0473  00D3               	movwf	___ftadd@exp2
  2242  0474  0854               	movf	___ftadd@exp1,w
  2243  0475  1903               	btfsc	3,2
  2244  0476  2C83               	goto	l1322
  2245  0477  0853               	movf	___ftadd@exp2,w
  2246  0478  0254               	subwf	___ftadd@exp1,w
  2247  0479  1803               	skipnc
  2248  047A  2C8A               	goto	l1326
  2249  047B  0354               	decf	___ftadd@exp1,w
  2250  047C  3AFF               	xorlw	255
  2251  047D  0753               	addwf	___ftadd@exp2,w
  2252  047E  00CE               	movwf	??___ftadd
  2253  047F  3019               	movlw	25
  2254  0480  024E               	subwf	??___ftadd,w
  2255  0481  1C03               	skipc
  2256  0482  2C8A               	goto	l1326
  2257  0483                     l1322:	
  2258  0483  084B               	movf	___ftadd@f2,w
  2259  0484  00C8               	movwf	?___ftadd
  2260  0485  084C               	movf	___ftadd@f2+1,w
  2261  0486  00C9               	movwf	?___ftadd+1
  2262  0487  084D               	movf	___ftadd@f2+2,w
  2263  0488  00CA               	movwf	?___ftadd+2
  2264  0489  0008               	return
  2265  048A                     l1326:	
  2266  048A  0853               	movf	___ftadd@exp2,w
  2267  048B  1903               	btfsc	3,2
  2268  048C  0008               	return
  2269  048D  0854               	movf	___ftadd@exp1,w
  2270  048E  0253               	subwf	___ftadd@exp2,w
  2271  048F  1803               	skipnc
  2272  0490  2C99               	goto	l1332
  2273  0491  0353               	decf	___ftadd@exp2,w
  2274  0492  3AFF               	xorlw	255
  2275  0493  0754               	addwf	___ftadd@exp1,w
  2276  0494  00CE               	movwf	??___ftadd
  2277  0495  3019               	movlw	25
  2278  0496  024E               	subwf	??___ftadd,w
  2279  0497  1803               	btfsc	3,0
  2280  0498  0008               	return
  2281  0499                     l1332:	
  2282  0499  3006               	movlw	6
  2283  049A  00CE               	movwf	??___ftadd
  2284  049B  084E               	movf	??___ftadd,w
  2285  049C  00D2               	movwf	___ftadd@sign
  2286  049D  1BCA               	btfsc	___ftadd@f1+2,7
  2287  049E  17D2               	bsf	___ftadd@sign,7
  2288  049F  1BCD               	btfsc	___ftadd@f2+2,7
  2289  04A0  1752               	bsf	___ftadd@sign,6
  2290  04A1  17C9               	bsf	___ftadd@f1+1,7
  2291  04A2  30FF               	movlw	255
  2292  04A3  05C8               	andwf	___ftadd@f1,f
  2293  04A4  30FF               	movlw	255
  2294  04A5  05C9               	andwf	___ftadd@f1+1,f
  2295  04A6  3000               	movlw	0
  2296  04A7  05CA               	andwf	___ftadd@f1+2,f
  2297  04A8  17CC               	bsf	___ftadd@f2+1,7
  2298  04A9  30FF               	movlw	255
  2299  04AA  05CB               	andwf	___ftadd@f2,f
  2300  04AB  30FF               	movlw	255
  2301  04AC  05CC               	andwf	___ftadd@f2+1,f
  2302  04AD  3000               	movlw	0
  2303  04AE  05CD               	andwf	___ftadd@f2+2,f
  2304  04AF  0853               	movf	___ftadd@exp2,w
  2305  04B0  0254               	subwf	___ftadd@exp1,w
  2306  04B1  1803               	skipnc
  2307  04B2  2CD9               	goto	l1354
  2308  04B3                     l1344:	
  2309  04B3  3001               	movlw	1
  2310  04B4                     u1585:	
  2311  04B4  1003               	clrc
  2312  04B5  0DCB               	rlf	___ftadd@f2,f
  2313  04B6  0DCC               	rlf	___ftadd@f2+1,f
  2314  04B7  0DCD               	rlf	___ftadd@f2+2,f
  2315  04B8  3EFF               	addlw	-1
  2316  04B9  1D03               	skipz
  2317  04BA  2CB4               	goto	u1585
  2318  04BB  3001               	movlw	1
  2319  04BC  02D3               	subwf	___ftadd@exp2,f
  2320  04BD  0853               	movf	___ftadd@exp2,w
  2321  04BE  0654               	xorwf	___ftadd@exp1,w
  2322  04BF  1903               	skipnz
  2323  04C0  2CD4               	goto	l1352
  2324  04C1  3001               	movlw	1
  2325  04C2  02D2               	subwf	___ftadd@sign,f
  2326  04C3  0852               	movf	___ftadd@sign,w
  2327  04C4  3907               	andlw	7
  2328  04C5  1903               	btfsc	3,2
  2329  04C6  2CD4               	goto	l1352
  2330  04C7  2CB3               	goto	l1344
  2331  04C8                     l1350:	
  2332  04C8  3001               	movlw	1
  2333  04C9                     u1615:	
  2334  04C9  1003               	clrc
  2335  04CA  0CCA               	rrf	___ftadd@f1+2,f
  2336  04CB  0CC9               	rrf	___ftadd@f1+1,f
  2337  04CC  0CC8               	rrf	___ftadd@f1,f
  2338  04CD  3EFF               	addlw	-1
  2339  04CE  1D03               	skipz
  2340  04CF  2CC9               	goto	u1615
  2341  04D0  3001               	movlw	1
  2342  04D1  00CE               	movwf	??___ftadd
  2343  04D2  084E               	movf	??___ftadd,w
  2344  04D3  07D4               	addwf	___ftadd@exp1,f
  2345  04D4                     l1352:	
  2346  04D4  0854               	movf	___ftadd@exp1,w
  2347  04D5  0653               	xorwf	___ftadd@exp2,w
  2348  04D6  1903               	btfsc	3,2
  2349  04D7  2D02               	goto	l379
  2350  04D8  2CC8               	goto	l1350
  2351  04D9                     l1354:	
  2352  04D9  0854               	movf	___ftadd@exp1,w
  2353  04DA  0253               	subwf	___ftadd@exp2,w
  2354  04DB  1803               	skipnc
  2355  04DC  2D02               	goto	l379
  2356  04DD                     l1356:	
  2357  04DD  3001               	movlw	1
  2358  04DE                     u1645:	
  2359  04DE  1003               	clrc
  2360  04DF  0DC8               	rlf	___ftadd@f1,f
  2361  04E0  0DC9               	rlf	___ftadd@f1+1,f
  2362  04E1  0DCA               	rlf	___ftadd@f1+2,f
  2363  04E2  3EFF               	addlw	-1
  2364  04E3  1D03               	skipz
  2365  04E4  2CDE               	goto	u1645
  2366  04E5  3001               	movlw	1
  2367  04E6  02D4               	subwf	___ftadd@exp1,f
  2368  04E7  0853               	movf	___ftadd@exp2,w
  2369  04E8  0654               	xorwf	___ftadd@exp1,w
  2370  04E9  1903               	skipnz
  2371  04EA  2CFE               	goto	l1364
  2372  04EB  3001               	movlw	1
  2373  04EC  02D2               	subwf	___ftadd@sign,f
  2374  04ED  0852               	movf	___ftadd@sign,w
  2375  04EE  3907               	andlw	7
  2376  04EF  1903               	btfsc	3,2
  2377  04F0  2CFE               	goto	l1364
  2378  04F1  2CDD               	goto	l1356
  2379  04F2                     l1362:	
  2380  04F2  3001               	movlw	1
  2381  04F3                     u1675:	
  2382  04F3  1003               	clrc
  2383  04F4  0CCD               	rrf	___ftadd@f2+2,f
  2384  04F5  0CCC               	rrf	___ftadd@f2+1,f
  2385  04F6  0CCB               	rrf	___ftadd@f2,f
  2386  04F7  3EFF               	addlw	-1
  2387  04F8  1D03               	skipz
  2388  04F9  2CF3               	goto	u1675
  2389  04FA  3001               	movlw	1
  2390  04FB  00CE               	movwf	??___ftadd
  2391  04FC  084E               	movf	??___ftadd,w
  2392  04FD  07D3               	addwf	___ftadd@exp2,f
  2393  04FE                     l1364:	
  2394  04FE  0854               	movf	___ftadd@exp1,w
  2395  04FF  0653               	xorwf	___ftadd@exp2,w
  2396  0500  1D03               	skipz
  2397  0501  2CF2               	goto	l1362
  2398  0502                     l379:	
  2399  0502  1FD2               	btfss	___ftadd@sign,7
  2400  0503  2D14               	goto	l1368
  2401  0504  30FF               	movlw	255
  2402  0505  06C8               	xorwf	___ftadd@f1,f
  2403  0506  30FF               	movlw	255
  2404  0507  06C9               	xorwf	___ftadd@f1+1,f
  2405  0508  30FF               	movlw	255
  2406  0509  06CA               	xorwf	___ftadd@f1+2,f
  2407  050A  3001               	movlw	1
  2408  050B  07C8               	addwf	___ftadd@f1,f
  2409  050C  3000               	movlw	0
  2410  050D  1803               	skipnc
  2411  050E  3001               	movlw	1
  2412  050F  07C9               	addwf	___ftadd@f1+1,f
  2413  0510  3000               	movlw	0
  2414  0511  1803               	skipnc
  2415  0512  3001               	movlw	1
  2416  0513  07CA               	addwf	___ftadd@f1+2,f
  2417  0514                     l1368:	
  2418  0514  1F52               	btfss	___ftadd@sign,6
  2419  0515  2D26               	goto	l1372
  2420  0516  30FF               	movlw	255
  2421  0517  06CB               	xorwf	___ftadd@f2,f
  2422  0518  30FF               	movlw	255
  2423  0519  06CC               	xorwf	___ftadd@f2+1,f
  2424  051A  30FF               	movlw	255
  2425  051B  06CD               	xorwf	___ftadd@f2+2,f
  2426  051C  3001               	movlw	1
  2427  051D  07CB               	addwf	___ftadd@f2,f
  2428  051E  3000               	movlw	0
  2429  051F  1803               	skipnc
  2430  0520  3001               	movlw	1
  2431  0521  07CC               	addwf	___ftadd@f2+1,f
  2432  0522  3000               	movlw	0
  2433  0523  1803               	skipnc
  2434  0524  3001               	movlw	1
  2435  0525  07CD               	addwf	___ftadd@f2+2,f
  2436  0526                     l1372:	
  2437  0526  01D2               	clrf	___ftadd@sign
  2438  0527  0848               	movf	___ftadd@f1,w
  2439  0528  07CB               	addwf	___ftadd@f2,f
  2440  0529  0849               	movf	___ftadd@f1+1,w
  2441  052A  1103               	clrz
  2442  052B  1803               	skipnc
  2443  052C  0A49               	incf	___ftadd@f1+1,w
  2444  052D  1D03               	btfss	3,2
  2445  052E  07CC               	addwf	___ftadd@f2+1,f
  2446  052F  084A               	movf	___ftadd@f1+2,w
  2447  0530  1103               	clrz
  2448  0531  1803               	skipnc
  2449  0532  0A4A               	incf	___ftadd@f1+2,w
  2450  0533  1D03               	btfss	3,2
  2451  0534  07CD               	addwf	___ftadd@f2+2,f
  2452  0535  1FCD               	btfss	___ftadd@f2+2,7
  2453  0536  2D49               	goto	l1382
  2454  0537  30FF               	movlw	255
  2455  0538  06CB               	xorwf	___ftadd@f2,f
  2456  0539  30FF               	movlw	255
  2457  053A  06CC               	xorwf	___ftadd@f2+1,f
  2458  053B  30FF               	movlw	255
  2459  053C  06CD               	xorwf	___ftadd@f2+2,f
  2460  053D  3001               	movlw	1
  2461  053E  07CB               	addwf	___ftadd@f2,f
  2462  053F  3000               	movlw	0
  2463  0540  1803               	skipnc
  2464  0541  3001               	movlw	1
  2465  0542  07CC               	addwf	___ftadd@f2+1,f
  2466  0543  3000               	movlw	0
  2467  0544  1803               	skipnc
  2468  0545  3001               	movlw	1
  2469  0546  07CD               	addwf	___ftadd@f2+2,f
  2470  0547  01D2               	clrf	___ftadd@sign
  2471  0548  0AD2               	incf	___ftadd@sign,f
  2472  0549                     l1382:	
  2473  0549  084B               	movf	___ftadd@f2,w
  2474  054A  00F0               	movwf	___ftpack@arg
  2475  054B  084C               	movf	___ftadd@f2+1,w
  2476  054C  00F1               	movwf	___ftpack@arg+1
  2477  054D  084D               	movf	___ftadd@f2+2,w
  2478  054E  00F2               	movwf	___ftpack@arg+2
  2479  054F  0854               	movf	___ftadd@exp1,w
  2480  0550  00CE               	movwf	??___ftadd
  2481  0551  084E               	movf	??___ftadd,w
  2482  0552  00F3               	movwf	___ftpack@exp
  2483  0553  0852               	movf	___ftadd@sign,w
  2484  0554  00CF               	movwf	??___ftadd+1
  2485  0555  084F               	movf	??___ftadd+1,w
  2486  0556  00F4               	movwf	___ftpack@sign
  2487  0557  2084               	fcall	___ftpack
  2488  0558  0870               	movf	?___ftpack,w
  2489  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2490  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2491  055B  00C8               	movwf	?___ftadd
  2492  055C  0871               	movf	?___ftpack+1,w
  2493  055D  00C9               	movwf	?___ftadd+1
  2494  055E  0872               	movf	?___ftpack+2,w
  2495  055F  00CA               	movwf	?___ftadd+2
  2496  0560  0008               	return
  2497  0561                     __end_of___ftadd:	
  2498                           
  2499                           	psect	text9
  2500  01D2                     __ptext9:	
  2501 ;; *************** function _GetZAccl *****************
  2502 ;; Defined at:
  2503 ;;		line 55 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\adxl335.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  t               3   35[BANK0 ] float 
  2508 ;;  adc_value       2   38[BANK0 ] unsigned int 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  3   32[BANK0 ] float 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0, pclath, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1
  2518 ;;      Params:         0       3       0
  2519 ;;      Locals:         0       5       0
  2520 ;;      Temps:          1       0       0
  2521 ;;      Totals:         1       8       0
  2522 ;;Total ram usage:        9 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		_ReadADC
  2527 ;;		___ftdiv
  2528 ;;		___ftmul
  2529 ;;		___lwdiv
  2530 ;;		___lwtoft
  2531 ;; This function is called by:
  2532 ;;		_Accident_Detect
  2533 ;;		_Vib_Detect
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _GetZAccl
  2539  01D2                     _GetZAccl:	
  2540                           
  2541                           ;adxl335.c: 58: float t;
  2542                           ;adxl335.c: 61: uint16_t adc_value=ReadADC(2);
  2543                           
  2544                           ;incstack = 0
  2545                           ; Regs used in _GetZAccl: [wreg+status,2+status,0+pclath+cstack]
  2546  01D2  3002               	movlw	2
  2547  01D3  200D               	fcall	_ReadADC
  2548  01D4  0871               	movf	?_ReadADC+1,w
  2549  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2550  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2551  01D7  01C7               	clrf	GetZAccl@adc_value+1
  2552  01D8  07C7               	addwf	GetZAccl@adc_value+1,f
  2553  01D9  0870               	movf	?_ReadADC,w
  2554  01DA  01C6               	clrf	GetZAccl@adc_value
  2555  01DB  07C6               	addwf	GetZAccl@adc_value,f
  2556                           
  2557                           ;adxl335.c: 62: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2558  01DC  3021               	movlw	33
  2559  01DD  00FC               	movwf	??_GetZAccl
  2560  01DE                     u2137:	
  2561  01DE  0BFC               	decfsz	??_GetZAccl,f
  2562  01DF  29DE               	goto	u2137
  2563                           
  2564                           ;adxl335.c: 64: adc_value+=ReadADC(2);
  2565  01E0  3002               	movlw	2
  2566  01E1  200D               	fcall	_ReadADC
  2567  01E2  0870               	movf	?_ReadADC,w
  2568  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2569  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2570  01E5  07C6               	addwf	GetZAccl@adc_value,f
  2571  01E6  1803               	skipnc
  2572  01E7  0AC7               	incf	GetZAccl@adc_value+1,f
  2573  01E8  0871               	movf	?_ReadADC+1,w
  2574  01E9  07C7               	addwf	GetZAccl@adc_value+1,f
  2575                           
  2576                           ;adxl335.c: 65: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2577  01EA  3021               	movlw	33
  2578  01EB  00FC               	movwf	??_GetZAccl
  2579  01EC                     u2147:	
  2580  01EC  0BFC               	decfsz	??_GetZAccl,f
  2581  01ED  29EC               	goto	u2147
  2582                           
  2583                           ;adxl335.c: 67: adc_value+=ReadADC(2);
  2584  01EE  3002               	movlw	2
  2585  01EF  200D               	fcall	_ReadADC
  2586  01F0  0870               	movf	?_ReadADC,w
  2587  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2588  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2589  01F3  07C6               	addwf	GetZAccl@adc_value,f
  2590  01F4  1803               	skipnc
  2591  01F5  0AC7               	incf	GetZAccl@adc_value+1,f
  2592  01F6  0871               	movf	?_ReadADC+1,w
  2593  01F7  07C7               	addwf	GetZAccl@adc_value+1,f
  2594                           
  2595                           ;adxl335.c: 68: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2596  01F8  3021               	movlw	33
  2597  01F9  00FC               	movwf	??_GetZAccl
  2598  01FA                     u2157:	
  2599  01FA  0BFC               	decfsz	??_GetZAccl,f
  2600  01FB  29FA               	goto	u2157
  2601                           
  2602                           ;adxl335.c: 70: adc_value=adc_value/3;
  2603  01FC  3003               	movlw	3
  2604  01FD  00F0               	movwf	___lwdiv@divisor
  2605  01FE  3000               	movlw	0
  2606  01FF  00F1               	movwf	___lwdiv@divisor+1
  2607  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0202  0847               	movf	GetZAccl@adc_value+1,w
  2610  0203  01F3               	clrf	___lwdiv@dividend+1
  2611  0204  07F3               	addwf	___lwdiv@dividend+1,f
  2612  0205  0846               	movf	GetZAccl@adc_value,w
  2613  0206  01F2               	clrf	___lwdiv@dividend
  2614  0207  07F2               	addwf	___lwdiv@dividend,f
  2615  0208  2033               	fcall	___lwdiv
  2616  0209  0871               	movf	?___lwdiv+1,w
  2617  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2618  020B  1303               	bcf	3,6	;RP1=0, select bank0
  2619  020C  01C7               	clrf	GetZAccl@adc_value+1
  2620  020D  07C7               	addwf	GetZAccl@adc_value+1,f
  2621  020E  0870               	movf	?___lwdiv,w
  2622  020F  01C6               	clrf	GetZAccl@adc_value
  2623  0210  07C6               	addwf	GetZAccl@adc_value,f
  2624                           
  2625                           ;adxl335.c: 73: t=((adc_value/1023.00)*500.00);
  2626  0211  3000               	movlw	0
  2627  0212  00B0               	movwf	___ftmul@f1
  2628  0213  30FA               	movlw	250
  2629  0214  00B1               	movwf	___ftmul@f1+1
  2630  0215  3043               	movlw	67
  2631  0216  00B2               	movwf	___ftmul@f1+2
  2632  0217  30C0               	movlw	192
  2633  0218  00A0               	movwf	___ftdiv@f2
  2634  0219  307F               	movlw	127
  2635  021A  00A1               	movwf	___ftdiv@f2+1
  2636  021B  3044               	movlw	68
  2637  021C  00A2               	movwf	___ftdiv@f2+2
  2638  021D  0847               	movf	GetZAccl@adc_value+1,w
  2639  021E  01F9               	clrf	___lwtoft@c+1
  2640  021F  07F9               	addwf	___lwtoft@c+1,f
  2641  0220  0846               	movf	GetZAccl@adc_value,w
  2642  0221  01F8               	clrf	___lwtoft@c
  2643  0222  07F8               	addwf	___lwtoft@c,f
  2644  0223  2071               	fcall	___lwtoft
  2645  0224  0878               	movf	?___lwtoft,w
  2646  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0227  00A3               	movwf	___ftdiv@f1
  2649  0228  0879               	movf	?___lwtoft+1,w
  2650  0229  00A4               	movwf	___ftdiv@f1+1
  2651  022A  087A               	movf	?___lwtoft+2,w
  2652  022B  00A5               	movwf	___ftdiv@f1+2
  2653  022C  22D3               	fcall	___ftdiv
  2654  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2655  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2656  022F  0820               	movf	?___ftdiv,w
  2657  0230  00B3               	movwf	___ftmul@f2
  2658  0231  0821               	movf	?___ftdiv+1,w
  2659  0232  00B4               	movwf	___ftmul@f2+1
  2660  0233  0822               	movf	?___ftdiv+2,w
  2661  0234  00B5               	movwf	___ftmul@f2+2
  2662  0235  2389               	fcall	___ftmul
  2663  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0238  0830               	movf	?___ftmul,w
  2666  0239  00C3               	movwf	GetZAccl@t
  2667  023A  0831               	movf	?___ftmul+1,w
  2668  023B  00C4               	movwf	GetZAccl@t+1
  2669  023C  0832               	movf	?___ftmul+2,w
  2670  023D  00C5               	movwf	GetZAccl@t+2
  2671                           
  2672                           ;adxl335.c: 75: return t;
  2673  023E  0843               	movf	GetZAccl@t,w
  2674  023F  00C0               	movwf	?_GetZAccl
  2675  0240  0844               	movf	GetZAccl@t+1,w
  2676  0241  00C1               	movwf	?_GetZAccl+1
  2677  0242  0845               	movf	GetZAccl@t+2,w
  2678  0243  00C2               	movwf	?_GetZAccl+2
  2679  0244  0008               	return
  2680  0245                     __end_of_GetZAccl:	
  2681                           
  2682                           	psect	text10
  2683  015F                     __ptext10:	
  2684 ;; *************** function _GetYAccl *****************
  2685 ;; Defined at:
  2686 ;;		line 32 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\adxl335.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  t               3   35[BANK0 ] float 
  2691 ;;  adc_value       2   38[BANK0 ] unsigned int 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  3   32[BANK0 ] float 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1
  2701 ;;      Params:         0       3       0
  2702 ;;      Locals:         0       5       0
  2703 ;;      Temps:          1       0       0
  2704 ;;      Totals:         1       8       0
  2705 ;;Total ram usage:        9 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    2
  2708 ;; This function calls:
  2709 ;;		_ReadADC
  2710 ;;		___ftdiv
  2711 ;;		___ftmul
  2712 ;;		___lwdiv
  2713 ;;		___lwtoft
  2714 ;; This function is called by:
  2715 ;;		_Accident_Detect
  2716 ;;		_Vib_Detect
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _GetYAccl
  2722  015F                     _GetYAccl:	
  2723                           
  2724                           ;adxl335.c: 35: float t;
  2725                           ;adxl335.c: 38: uint16_t adc_value=ReadADC(1);
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _GetYAccl: [wreg+status,2+status,0+pclath+cstack]
  2729  015F  3001               	movlw	1
  2730  0160  200D               	fcall	_ReadADC
  2731  0161  0871               	movf	?_ReadADC+1,w
  2732  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0163  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0164  01C7               	clrf	GetYAccl@adc_value+1
  2735  0165  07C7               	addwf	GetYAccl@adc_value+1,f
  2736  0166  0870               	movf	?_ReadADC,w
  2737  0167  01C6               	clrf	GetYAccl@adc_value
  2738  0168  07C6               	addwf	GetYAccl@adc_value,f
  2739                           
  2740                           ;adxl335.c: 39: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2741  0169  3021               	movlw	33
  2742  016A  00FC               	movwf	??_GetYAccl
  2743  016B                     u2167:	
  2744  016B  0BFC               	decfsz	??_GetYAccl,f
  2745  016C  296B               	goto	u2167
  2746                           
  2747                           ;adxl335.c: 41: adc_value+=ReadADC(1);
  2748  016D  3001               	movlw	1
  2749  016E  200D               	fcall	_ReadADC
  2750  016F  0870               	movf	?_ReadADC,w
  2751  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0172  07C6               	addwf	GetYAccl@adc_value,f
  2754  0173  1803               	skipnc
  2755  0174  0AC7               	incf	GetYAccl@adc_value+1,f
  2756  0175  0871               	movf	?_ReadADC+1,w
  2757  0176  07C7               	addwf	GetYAccl@adc_value+1,f
  2758                           
  2759                           ;adxl335.c: 42: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2760  0177  3021               	movlw	33
  2761  0178  00FC               	movwf	??_GetYAccl
  2762  0179                     u2177:	
  2763  0179  0BFC               	decfsz	??_GetYAccl,f
  2764  017A  2979               	goto	u2177
  2765                           
  2766                           ;adxl335.c: 44: adc_value+=ReadADC(1);
  2767  017B  3001               	movlw	1
  2768  017C  200D               	fcall	_ReadADC
  2769  017D  0870               	movf	?_ReadADC,w
  2770  017E  1283               	bcf	3,5	;RP0=0, select bank0
  2771  017F  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0180  07C6               	addwf	GetYAccl@adc_value,f
  2773  0181  1803               	skipnc
  2774  0182  0AC7               	incf	GetYAccl@adc_value+1,f
  2775  0183  0871               	movf	?_ReadADC+1,w
  2776  0184  07C7               	addwf	GetYAccl@adc_value+1,f
  2777                           
  2778                           ;adxl335.c: 45: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2779  0185  3021               	movlw	33
  2780  0186  00FC               	movwf	??_GetYAccl
  2781  0187                     u2187:	
  2782  0187  0BFC               	decfsz	??_GetYAccl,f
  2783  0188  2987               	goto	u2187
  2784                           
  2785                           ;adxl335.c: 47: adc_value=adc_value/3;
  2786  0189  3003               	movlw	3
  2787  018A  00F0               	movwf	___lwdiv@divisor
  2788  018B  3000               	movlw	0
  2789  018C  00F1               	movwf	___lwdiv@divisor+1
  2790  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2791  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2792  018F  0847               	movf	GetYAccl@adc_value+1,w
  2793  0190  01F3               	clrf	___lwdiv@dividend+1
  2794  0191  07F3               	addwf	___lwdiv@dividend+1,f
  2795  0192  0846               	movf	GetYAccl@adc_value,w
  2796  0193  01F2               	clrf	___lwdiv@dividend
  2797  0194  07F2               	addwf	___lwdiv@dividend,f
  2798  0195  2033               	fcall	___lwdiv
  2799  0196  0871               	movf	?___lwdiv+1,w
  2800  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0199  01C7               	clrf	GetYAccl@adc_value+1
  2803  019A  07C7               	addwf	GetYAccl@adc_value+1,f
  2804  019B  0870               	movf	?___lwdiv,w
  2805  019C  01C6               	clrf	GetYAccl@adc_value
  2806  019D  07C6               	addwf	GetYAccl@adc_value,f
  2807                           
  2808                           ;adxl335.c: 50: t=((adc_value/1023.00)*500.00);
  2809  019E  3000               	movlw	0
  2810  019F  00B0               	movwf	___ftmul@f1
  2811  01A0  30FA               	movlw	250
  2812  01A1  00B1               	movwf	___ftmul@f1+1
  2813  01A2  3043               	movlw	67
  2814  01A3  00B2               	movwf	___ftmul@f1+2
  2815  01A4  30C0               	movlw	192
  2816  01A5  00A0               	movwf	___ftdiv@f2
  2817  01A6  307F               	movlw	127
  2818  01A7  00A1               	movwf	___ftdiv@f2+1
  2819  01A8  3044               	movlw	68
  2820  01A9  00A2               	movwf	___ftdiv@f2+2
  2821  01AA  0847               	movf	GetYAccl@adc_value+1,w
  2822  01AB  01F9               	clrf	___lwtoft@c+1
  2823  01AC  07F9               	addwf	___lwtoft@c+1,f
  2824  01AD  0846               	movf	GetYAccl@adc_value,w
  2825  01AE  01F8               	clrf	___lwtoft@c
  2826  01AF  07F8               	addwf	___lwtoft@c,f
  2827  01B0  2071               	fcall	___lwtoft
  2828  01B1  0878               	movf	?___lwtoft,w
  2829  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2830  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2831  01B4  00A3               	movwf	___ftdiv@f1
  2832  01B5  0879               	movf	?___lwtoft+1,w
  2833  01B6  00A4               	movwf	___ftdiv@f1+1
  2834  01B7  087A               	movf	?___lwtoft+2,w
  2835  01B8  00A5               	movwf	___ftdiv@f1+2
  2836  01B9  22D3               	fcall	___ftdiv
  2837  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2838  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2839  01BC  0820               	movf	?___ftdiv,w
  2840  01BD  00B3               	movwf	___ftmul@f2
  2841  01BE  0821               	movf	?___ftdiv+1,w
  2842  01BF  00B4               	movwf	___ftmul@f2+1
  2843  01C0  0822               	movf	?___ftdiv+2,w
  2844  01C1  00B5               	movwf	___ftmul@f2+2
  2845  01C2  2389               	fcall	___ftmul
  2846  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2847  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2848  01C5  0830               	movf	?___ftmul,w
  2849  01C6  00C3               	movwf	GetYAccl@t
  2850  01C7  0831               	movf	?___ftmul+1,w
  2851  01C8  00C4               	movwf	GetYAccl@t+1
  2852  01C9  0832               	movf	?___ftmul+2,w
  2853  01CA  00C5               	movwf	GetYAccl@t+2
  2854                           
  2855                           ;adxl335.c: 52: return t;
  2856  01CB  0843               	movf	GetYAccl@t,w
  2857  01CC  00C0               	movwf	?_GetYAccl
  2858  01CD  0844               	movf	GetYAccl@t+1,w
  2859  01CE  00C1               	movwf	?_GetYAccl+1
  2860  01CF  0845               	movf	GetYAccl@t+2,w
  2861  01D0  00C2               	movwf	?_GetYAccl+2
  2862  01D1  0008               	return
  2863  01D2                     __end_of_GetYAccl:	
  2864                           
  2865                           	psect	text11
  2866  00EC                     __ptext11:	
  2867 ;; *************** function _GetXAccl *****************
  2868 ;; Defined at:
  2869 ;;		line 9 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\adxl335.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  t               3   35[BANK0 ] float 
  2874 ;;  adc_value       2   38[BANK0 ] unsigned int 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  3   32[BANK0 ] float 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, pclath, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1
  2884 ;;      Params:         0       3       0
  2885 ;;      Locals:         0       5       0
  2886 ;;      Temps:          1       0       0
  2887 ;;      Totals:         1       8       0
  2888 ;;Total ram usage:        9 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    2
  2891 ;; This function calls:
  2892 ;;		_ReadADC
  2893 ;;		___ftdiv
  2894 ;;		___ftmul
  2895 ;;		___lwdiv
  2896 ;;		___lwtoft
  2897 ;; This function is called by:
  2898 ;;		_Accident_Detect
  2899 ;;		_Vib_Detect
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _GetXAccl
  2905  00EC                     _GetXAccl:	
  2906                           
  2907                           ;adxl335.c: 12: float t;
  2908                           ;adxl335.c: 15: uint16_t adc_value=ReadADC(0);
  2909                           
  2910                           ;incstack = 0
  2911                           ; Regs used in _GetXAccl: [wreg+status,2+status,0+pclath+cstack]
  2912  00EC  3000               	movlw	0
  2913  00ED  200D               	fcall	_ReadADC
  2914  00EE  0871               	movf	?_ReadADC+1,w
  2915  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2916  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2917  00F1  01C7               	clrf	GetXAccl@adc_value+1
  2918  00F2  07C7               	addwf	GetXAccl@adc_value+1,f
  2919  00F3  0870               	movf	?_ReadADC,w
  2920  00F4  01C6               	clrf	GetXAccl@adc_value
  2921  00F5  07C6               	addwf	GetXAccl@adc_value,f
  2922                           
  2923                           ;adxl335.c: 16: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2924  00F6  3021               	movlw	33
  2925  00F7  00FC               	movwf	??_GetXAccl
  2926  00F8                     u2197:	
  2927  00F8  0BFC               	decfsz	??_GetXAccl,f
  2928  00F9  28F8               	goto	u2197
  2929                           
  2930                           ;adxl335.c: 18: adc_value+=ReadADC(0);
  2931  00FA  3000               	movlw	0
  2932  00FB  200D               	fcall	_ReadADC
  2933  00FC  0870               	movf	?_ReadADC,w
  2934  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2935  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2936  00FF  07C6               	addwf	GetXAccl@adc_value,f
  2937  0100  1803               	skipnc
  2938  0101  0AC7               	incf	GetXAccl@adc_value+1,f
  2939  0102  0871               	movf	?_ReadADC+1,w
  2940  0103  07C7               	addwf	GetXAccl@adc_value+1,f
  2941                           
  2942                           ;adxl335.c: 19: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2943  0104  3021               	movlw	33
  2944  0105  00FC               	movwf	??_GetXAccl
  2945  0106                     u2207:	
  2946  0106  0BFC               	decfsz	??_GetXAccl,f
  2947  0107  2906               	goto	u2207
  2948                           
  2949                           ;adxl335.c: 21: adc_value+=ReadADC(0);
  2950  0108  3000               	movlw	0
  2951  0109  200D               	fcall	_ReadADC
  2952  010A  0870               	movf	?_ReadADC,w
  2953  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2954  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2955  010D  07C6               	addwf	GetXAccl@adc_value,f
  2956  010E  1803               	skipnc
  2957  010F  0AC7               	incf	GetXAccl@adc_value+1,f
  2958  0110  0871               	movf	?_ReadADC+1,w
  2959  0111  07C7               	addwf	GetXAccl@adc_value+1,f
  2960                           
  2961                           ;adxl335.c: 22: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2962  0112  3021               	movlw	33
  2963  0113  00FC               	movwf	??_GetXAccl
  2964  0114                     u2217:	
  2965  0114  0BFC               	decfsz	??_GetXAccl,f
  2966  0115  2914               	goto	u2217
  2967                           
  2968                           ;adxl335.c: 24: adc_value=adc_value/3;
  2969  0116  3003               	movlw	3
  2970  0117  00F0               	movwf	___lwdiv@divisor
  2971  0118  3000               	movlw	0
  2972  0119  00F1               	movwf	___lwdiv@divisor+1
  2973  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2974  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2975  011C  0847               	movf	GetXAccl@adc_value+1,w
  2976  011D  01F3               	clrf	___lwdiv@dividend+1
  2977  011E  07F3               	addwf	___lwdiv@dividend+1,f
  2978  011F  0846               	movf	GetXAccl@adc_value,w
  2979  0120  01F2               	clrf	___lwdiv@dividend
  2980  0121  07F2               	addwf	___lwdiv@dividend,f
  2981  0122  2033               	fcall	___lwdiv
  2982  0123  0871               	movf	?___lwdiv+1,w
  2983  0124  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0125  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0126  01C7               	clrf	GetXAccl@adc_value+1
  2986  0127  07C7               	addwf	GetXAccl@adc_value+1,f
  2987  0128  0870               	movf	?___lwdiv,w
  2988  0129  01C6               	clrf	GetXAccl@adc_value
  2989  012A  07C6               	addwf	GetXAccl@adc_value,f
  2990                           
  2991                           ;adxl335.c: 27: t=((adc_value/1023.00)*500.00);
  2992  012B  3000               	movlw	0
  2993  012C  00B0               	movwf	___ftmul@f1
  2994  012D  30FA               	movlw	250
  2995  012E  00B1               	movwf	___ftmul@f1+1
  2996  012F  3043               	movlw	67
  2997  0130  00B2               	movwf	___ftmul@f1+2
  2998  0131  30C0               	movlw	192
  2999  0132  00A0               	movwf	___ftdiv@f2
  3000  0133  307F               	movlw	127
  3001  0134  00A1               	movwf	___ftdiv@f2+1
  3002  0135  3044               	movlw	68
  3003  0136  00A2               	movwf	___ftdiv@f2+2
  3004  0137  0847               	movf	GetXAccl@adc_value+1,w
  3005  0138  01F9               	clrf	___lwtoft@c+1
  3006  0139  07F9               	addwf	___lwtoft@c+1,f
  3007  013A  0846               	movf	GetXAccl@adc_value,w
  3008  013B  01F8               	clrf	___lwtoft@c
  3009  013C  07F8               	addwf	___lwtoft@c,f
  3010  013D  2071               	fcall	___lwtoft
  3011  013E  0878               	movf	?___lwtoft,w
  3012  013F  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0140  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0141  00A3               	movwf	___ftdiv@f1
  3015  0142  0879               	movf	?___lwtoft+1,w
  3016  0143  00A4               	movwf	___ftdiv@f1+1
  3017  0144  087A               	movf	?___lwtoft+2,w
  3018  0145  00A5               	movwf	___ftdiv@f1+2
  3019  0146  22D3               	fcall	___ftdiv
  3020  0147  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0148  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0149  0820               	movf	?___ftdiv,w
  3023  014A  00B3               	movwf	___ftmul@f2
  3024  014B  0821               	movf	?___ftdiv+1,w
  3025  014C  00B4               	movwf	___ftmul@f2+1
  3026  014D  0822               	movf	?___ftdiv+2,w
  3027  014E  00B5               	movwf	___ftmul@f2+2
  3028  014F  2389               	fcall	___ftmul
  3029  0150  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0151  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0152  0830               	movf	?___ftmul,w
  3032  0153  00C3               	movwf	GetXAccl@t
  3033  0154  0831               	movf	?___ftmul+1,w
  3034  0155  00C4               	movwf	GetXAccl@t+1
  3035  0156  0832               	movf	?___ftmul+2,w
  3036  0157  00C5               	movwf	GetXAccl@t+2
  3037                           
  3038                           ;adxl335.c: 29: return t;
  3039  0158  0843               	movf	GetXAccl@t,w
  3040  0159  00C0               	movwf	?_GetXAccl
  3041  015A  0844               	movf	GetXAccl@t+1,w
  3042  015B  00C1               	movwf	?_GetXAccl+1
  3043  015C  0845               	movf	GetXAccl@t+2,w
  3044  015D  00C2               	movwf	?_GetXAccl+2
  3045  015E  0008               	return
  3046  015F                     __end_of_GetXAccl:	
  3047                           
  3048                           	psect	text12
  3049  0071                     __ptext12:	
  3050 ;; *************** function ___lwtoft *****************
  3051 ;; Defined at:
  3052 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  c               2    8[COMMON] unsigned int 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  3    8[COMMON] float 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1
  3066 ;;      Params:         3       0       0
  3067 ;;      Locals:         0       0       0
  3068 ;;      Temps:          1       0       0
  3069 ;;      Totals:         4       0       0
  3070 ;;Total ram usage:        4 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    1
  3073 ;; This function calls:
  3074 ;;		___ftpack
  3075 ;; This function is called by:
  3076 ;;		_GetXAccl
  3077 ;;		_GetYAccl
  3078 ;;		_GetZAccl
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function ___lwtoft
  3084  0071                     ___lwtoft:	
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3088  0071  0878               	movf	___lwtoft@c,w
  3089  0072  00F0               	movwf	___ftpack@arg
  3090  0073  0879               	movf	___lwtoft@c+1,w
  3091  0074  00F1               	movwf	___ftpack@arg+1
  3092  0075  01F2               	clrf	___ftpack@arg+2
  3093  0076  308E               	movlw	142
  3094  0077  00FB               	movwf	??___lwtoft
  3095  0078  087B               	movf	??___lwtoft,w
  3096  0079  00F3               	movwf	___ftpack@exp
  3097  007A  01F4               	clrf	___ftpack@sign
  3098  007B  2084               	fcall	___ftpack
  3099  007C  0870               	movf	?___ftpack,w
  3100  007D  00F8               	movwf	?___lwtoft
  3101  007E  0871               	movf	?___ftpack+1,w
  3102  007F  00F9               	movwf	?___lwtoft+1
  3103  0080  0872               	movf	?___ftpack+2,w
  3104  0081  00FA               	movwf	?___lwtoft+2
  3105  0082  0008               	return
  3106  0083                     __end_of___lwtoft:	
  3107                           
  3108                           	psect	text13
  3109  0033                     __ptext13:	
  3110 ;; *************** function ___lwdiv *****************
  3111 ;; Defined at:
  3112 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  divisor         2    0[COMMON] unsigned int 
  3115 ;;  dividend        2    2[COMMON] unsigned int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  quotient        2    5[COMMON] unsigned int 
  3118 ;;  counter         1    7[COMMON] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  2    0[COMMON] unsigned int 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1
  3128 ;;      Params:         4       0       0
  3129 ;;      Locals:         3       0       0
  3130 ;;      Temps:          1       0       0
  3131 ;;      Totals:         8       0       0
  3132 ;;Total ram usage:        8 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_GetXAccl
  3138 ;;		_GetYAccl
  3139 ;;		_GetZAccl
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function ___lwdiv
  3145  0033                     ___lwdiv:	
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3149  0033  01F5               	clrf	___lwdiv@quotient
  3150  0034  01F6               	clrf	___lwdiv@quotient+1
  3151  0035  0871               	movf	___lwdiv@divisor+1,w
  3152  0036  0470               	iorwf	___lwdiv@divisor,w
  3153  0037  1903               	skipnz
  3154  0038  286A               	goto	l1248
  3155  0039  01F7               	clrf	___lwdiv@counter
  3156  003A  0AF7               	incf	___lwdiv@counter,f
  3157  003B                     l1236:	
  3158  003B  1BF1               	btfsc	___lwdiv@divisor+1,7
  3159  003C  2849               	goto	l1238
  3160  003D  3001               	movlw	1
  3161  003E                     u1415:	
  3162  003E  1003               	clrc
  3163  003F  0DF0               	rlf	___lwdiv@divisor,f
  3164  0040  0DF1               	rlf	___lwdiv@divisor+1,f
  3165  0041  3EFF               	addlw	-1
  3166  0042  1D03               	skipz
  3167  0043  283E               	goto	u1415
  3168  0044  3001               	movlw	1
  3169  0045  00F4               	movwf	??___lwdiv
  3170  0046  0874               	movf	??___lwdiv,w
  3171  0047  07F7               	addwf	___lwdiv@counter,f
  3172  0048  283B               	goto	l1236
  3173  0049                     l1238:	
  3174  0049  3001               	movlw	1
  3175  004A                     u1435:	
  3176  004A  1003               	clrc
  3177  004B  0DF5               	rlf	___lwdiv@quotient,f
  3178  004C  0DF6               	rlf	___lwdiv@quotient+1,f
  3179  004D  3EFF               	addlw	-1
  3180  004E  1D03               	skipz
  3181  004F  284A               	goto	u1435
  3182  0050  0871               	movf	___lwdiv@divisor+1,w
  3183  0051  0273               	subwf	___lwdiv@dividend+1,w
  3184  0052  1D03               	skipz
  3185  0053  2856               	goto	u1445
  3186  0054  0870               	movf	___lwdiv@divisor,w
  3187  0055  0272               	subwf	___lwdiv@dividend,w
  3188  0056                     u1445:	
  3189  0056  1C03               	skipc
  3190  0057  285F               	goto	l1244
  3191  0058  0870               	movf	___lwdiv@divisor,w
  3192  0059  02F2               	subwf	___lwdiv@dividend,f
  3193  005A  0871               	movf	___lwdiv@divisor+1,w
  3194  005B  1C03               	skipc
  3195  005C  03F3               	decf	___lwdiv@dividend+1,f
  3196  005D  02F3               	subwf	___lwdiv@dividend+1,f
  3197  005E  1475               	bsf	___lwdiv@quotient,0
  3198  005F                     l1244:	
  3199  005F  3001               	movlw	1
  3200  0060                     u1455:	
  3201  0060  1003               	clrc
  3202  0061  0CF1               	rrf	___lwdiv@divisor+1,f
  3203  0062  0CF0               	rrf	___lwdiv@divisor,f
  3204  0063  3EFF               	addlw	-1
  3205  0064  1D03               	skipz
  3206  0065  2860               	goto	u1455
  3207  0066  3001               	movlw	1
  3208  0067  02F7               	subwf	___lwdiv@counter,f
  3209  0068  1D03               	btfss	3,2
  3210  0069  2849               	goto	l1238
  3211  006A                     l1248:	
  3212  006A  0876               	movf	___lwdiv@quotient+1,w
  3213  006B  01F1               	clrf	?___lwdiv+1
  3214  006C  07F1               	addwf	?___lwdiv+1,f
  3215  006D  0875               	movf	___lwdiv@quotient,w
  3216  006E  01F0               	clrf	?___lwdiv
  3217  006F  07F0               	addwf	?___lwdiv,f
  3218  0070  0008               	return
  3219  0071                     __end_of___lwdiv:	
  3220                           
  3221                           	psect	text14
  3222  0389                     __ptext14:	
  3223 ;; *************** function ___ftmul *****************
  3224 ;; Defined at:
  3225 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  f1              3   16[BANK0 ] float 
  3228 ;;  f2              3   19[BANK0 ] float 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  3231 ;;  sign            1   31[BANK0 ] unsigned char 
  3232 ;;  cntr            1   30[BANK0 ] unsigned char 
  3233 ;;  exp             1   26[BANK0 ] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  3   16[BANK0 ] float 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1
  3243 ;;      Params:         0       6       0
  3244 ;;      Locals:         0       6       0
  3245 ;;      Temps:          0       4       0
  3246 ;;      Totals:         0      16       0
  3247 ;;Total ram usage:       16 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    1
  3250 ;; This function calls:
  3251 ;;		___ftpack
  3252 ;; This function is called by:
  3253 ;;		_Accident_Detect
  3254 ;;		_GetXAccl
  3255 ;;		_GetYAccl
  3256 ;;		_GetZAccl
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function ___ftmul
  3262  0389                     ___ftmul:	
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3266  0389  1283               	bcf	3,5	;RP0=0, select bank0
  3267  038A  1303               	bcf	3,6	;RP1=0, select bank0
  3268  038B  0830               	movf	___ftmul@f1,w
  3269  038C  00B6               	movwf	??___ftmul
  3270  038D  0831               	movf	___ftmul@f1+1,w
  3271  038E  00B7               	movwf	??___ftmul+1
  3272  038F  0832               	movf	___ftmul@f1+2,w
  3273  0390  00B8               	movwf	??___ftmul+2
  3274  0391  1003               	clrc
  3275  0392  0D37               	rlf	??___ftmul+1,w
  3276  0393  0D38               	rlf	??___ftmul+2,w
  3277  0394  00B9               	movwf	??___ftmul+3
  3278  0395  0839               	movf	??___ftmul+3,w
  3279  0396  00BA               	movwf	___ftmul@exp
  3280  0397  08BA               	movf	___ftmul@exp,f
  3281  0398  1D03               	skipz
  3282  0399  2BA1               	goto	l1182
  3283  039A  3000               	movlw	0
  3284  039B  00B0               	movwf	?___ftmul
  3285  039C  3000               	movlw	0
  3286  039D  00B1               	movwf	?___ftmul+1
  3287  039E  3000               	movlw	0
  3288  039F  00B2               	movwf	?___ftmul+2
  3289  03A0  0008               	return
  3290  03A1                     l1182:	
  3291  03A1  0833               	movf	___ftmul@f2,w
  3292  03A2  00B6               	movwf	??___ftmul
  3293  03A3  0834               	movf	___ftmul@f2+1,w
  3294  03A4  00B7               	movwf	??___ftmul+1
  3295  03A5  0835               	movf	___ftmul@f2+2,w
  3296  03A6  00B8               	movwf	??___ftmul+2
  3297  03A7  1003               	clrc
  3298  03A8  0D37               	rlf	??___ftmul+1,w
  3299  03A9  0D38               	rlf	??___ftmul+2,w
  3300  03AA  00B9               	movwf	??___ftmul+3
  3301  03AB  0839               	movf	??___ftmul+3,w
  3302  03AC  00BF               	movwf	___ftmul@sign
  3303  03AD  08BF               	movf	___ftmul@sign,f
  3304  03AE  1D03               	skipz
  3305  03AF  2BB7               	goto	l1188
  3306  03B0  3000               	movlw	0
  3307  03B1  00B0               	movwf	?___ftmul
  3308  03B2  3000               	movlw	0
  3309  03B3  00B1               	movwf	?___ftmul+1
  3310  03B4  3000               	movlw	0
  3311  03B5  00B2               	movwf	?___ftmul+2
  3312  03B6  0008               	return
  3313  03B7                     l1188:	
  3314  03B7  083F               	movf	___ftmul@sign,w
  3315  03B8  3E7B               	addlw	123
  3316  03B9  00B6               	movwf	??___ftmul
  3317  03BA  0836               	movf	??___ftmul,w
  3318  03BB  07BA               	addwf	___ftmul@exp,f
  3319  03BC  0830               	movf	___ftmul@f1,w
  3320  03BD  00B6               	movwf	??___ftmul
  3321  03BE  0831               	movf	___ftmul@f1+1,w
  3322  03BF  00B7               	movwf	??___ftmul+1
  3323  03C0  0832               	movf	___ftmul@f1+2,w
  3324  03C1  00B8               	movwf	??___ftmul+2
  3325  03C2  3010               	movlw	16
  3326  03C3                     u1285:	
  3327  03C3  1003               	clrc
  3328  03C4  0CB8               	rrf	??___ftmul+2,f
  3329  03C5  0CB7               	rrf	??___ftmul+1,f
  3330  03C6  0CB6               	rrf	??___ftmul,f
  3331  03C7  3EFF               	addlw	-1
  3332  03C8  1D03               	skipz
  3333  03C9  2BC3               	goto	u1285
  3334  03CA  0836               	movf	??___ftmul,w
  3335  03CB  00B9               	movwf	??___ftmul+3
  3336  03CC  0839               	movf	??___ftmul+3,w
  3337  03CD  00BF               	movwf	___ftmul@sign
  3338  03CE  0833               	movf	___ftmul@f2,w
  3339  03CF  00B6               	movwf	??___ftmul
  3340  03D0  0834               	movf	___ftmul@f2+1,w
  3341  03D1  00B7               	movwf	??___ftmul+1
  3342  03D2  0835               	movf	___ftmul@f2+2,w
  3343  03D3  00B8               	movwf	??___ftmul+2
  3344  03D4  3010               	movlw	16
  3345  03D5                     u1295:	
  3346  03D5  1003               	clrc
  3347  03D6  0CB8               	rrf	??___ftmul+2,f
  3348  03D7  0CB7               	rrf	??___ftmul+1,f
  3349  03D8  0CB6               	rrf	??___ftmul,f
  3350  03D9  3EFF               	addlw	-1
  3351  03DA  1D03               	skipz
  3352  03DB  2BD5               	goto	u1295
  3353  03DC  0836               	movf	??___ftmul,w
  3354  03DD  00B9               	movwf	??___ftmul+3
  3355  03DE  0839               	movf	??___ftmul+3,w
  3356  03DF  06BF               	xorwf	___ftmul@sign,f
  3357  03E0  3080               	movlw	128
  3358  03E1  00B6               	movwf	??___ftmul
  3359  03E2  0836               	movf	??___ftmul,w
  3360  03E3  05BF               	andwf	___ftmul@sign,f
  3361  03E4  17B1               	bsf	___ftmul@f1+1,7
  3362  03E5  17B4               	bsf	___ftmul@f2+1,7
  3363  03E6  30FF               	movlw	255
  3364  03E7  05B3               	andwf	___ftmul@f2,f
  3365  03E8  30FF               	movlw	255
  3366  03E9  05B4               	andwf	___ftmul@f2+1,f
  3367  03EA  3000               	movlw	0
  3368  03EB  05B5               	andwf	___ftmul@f2+2,f
  3369  03EC  3000               	movlw	0
  3370  03ED  00BB               	movwf	___ftmul@f3_as_product
  3371  03EE  3000               	movlw	0
  3372  03EF  00BC               	movwf	___ftmul@f3_as_product+1
  3373  03F0  3000               	movlw	0
  3374  03F1  00BD               	movwf	___ftmul@f3_as_product+2
  3375  03F2  3007               	movlw	7
  3376  03F3  00B6               	movwf	??___ftmul
  3377  03F4  0836               	movf	??___ftmul,w
  3378  03F5  00BE               	movwf	___ftmul@cntr
  3379  03F6                     l1200:	
  3380  03F6  1C30               	btfss	___ftmul@f1,0
  3381  03F7  2C06               	goto	l1204
  3382  03F8  0833               	movf	___ftmul@f2,w
  3383  03F9  07BB               	addwf	___ftmul@f3_as_product,f
  3384  03FA  0834               	movf	___ftmul@f2+1,w
  3385  03FB  1103               	clrz
  3386  03FC  1803               	skipnc
  3387  03FD  0A34               	incf	___ftmul@f2+1,w
  3388  03FE  1D03               	btfss	3,2
  3389  03FF  07BC               	addwf	___ftmul@f3_as_product+1,f
  3390  0400  0835               	movf	___ftmul@f2+2,w
  3391  0401  1103               	clrz
  3392  0402  1803               	skipnc
  3393  0403  0A35               	incf	___ftmul@f2+2,w
  3394  0404  1D03               	btfss	3,2
  3395  0405  07BD               	addwf	___ftmul@f3_as_product+2,f
  3396  0406                     l1204:	
  3397  0406  3001               	movlw	1
  3398  0407                     u1325:	
  3399  0407  1003               	clrc
  3400  0408  0CB2               	rrf	___ftmul@f1+2,f
  3401  0409  0CB1               	rrf	___ftmul@f1+1,f
  3402  040A  0CB0               	rrf	___ftmul@f1,f
  3403  040B  3EFF               	addlw	-1
  3404  040C  1D03               	skipz
  3405  040D  2C07               	goto	u1325
  3406  040E  3001               	movlw	1
  3407  040F                     u1335:	
  3408  040F  1003               	clrc
  3409  0410  0DB3               	rlf	___ftmul@f2,f
  3410  0411  0DB4               	rlf	___ftmul@f2+1,f
  3411  0412  0DB5               	rlf	___ftmul@f2+2,f
  3412  0413  3EFF               	addlw	-1
  3413  0414  1D03               	skipz
  3414  0415  2C0F               	goto	u1335
  3415  0416  3001               	movlw	1
  3416  0417  02BE               	subwf	___ftmul@cntr,f
  3417  0418  1D03               	btfss	3,2
  3418  0419  2BF6               	goto	l1200
  3419  041A  3009               	movlw	9
  3420  041B  00B6               	movwf	??___ftmul
  3421  041C  0836               	movf	??___ftmul,w
  3422  041D  00BE               	movwf	___ftmul@cntr
  3423  041E                     l1212:	
  3424  041E  1C30               	btfss	___ftmul@f1,0
  3425  041F  2C2E               	goto	l1216
  3426  0420  0833               	movf	___ftmul@f2,w
  3427  0421  07BB               	addwf	___ftmul@f3_as_product,f
  3428  0422  0834               	movf	___ftmul@f2+1,w
  3429  0423  1103               	clrz
  3430  0424  1803               	skipnc
  3431  0425  0A34               	incf	___ftmul@f2+1,w
  3432  0426  1D03               	btfss	3,2
  3433  0427  07BC               	addwf	___ftmul@f3_as_product+1,f
  3434  0428  0835               	movf	___ftmul@f2+2,w
  3435  0429  1103               	clrz
  3436  042A  1803               	skipnc
  3437  042B  0A35               	incf	___ftmul@f2+2,w
  3438  042C  1D03               	btfss	3,2
  3439  042D  07BD               	addwf	___ftmul@f3_as_product+2,f
  3440  042E                     l1216:	
  3441  042E  3001               	movlw	1
  3442  042F                     u1375:	
  3443  042F  1003               	clrc
  3444  0430  0CB2               	rrf	___ftmul@f1+2,f
  3445  0431  0CB1               	rrf	___ftmul@f1+1,f
  3446  0432  0CB0               	rrf	___ftmul@f1,f
  3447  0433  3EFF               	addlw	-1
  3448  0434  1D03               	skipz
  3449  0435  2C2F               	goto	u1375
  3450  0436  3001               	movlw	1
  3451  0437                     u1385:	
  3452  0437  1003               	clrc
  3453  0438  0CBD               	rrf	___ftmul@f3_as_product+2,f
  3454  0439  0CBC               	rrf	___ftmul@f3_as_product+1,f
  3455  043A  0CBB               	rrf	___ftmul@f3_as_product,f
  3456  043B  3EFF               	addlw	-1
  3457  043C  1D03               	skipz
  3458  043D  2C37               	goto	u1385
  3459  043E  3001               	movlw	1
  3460  043F  02BE               	subwf	___ftmul@cntr,f
  3461  0440  1D03               	btfss	3,2
  3462  0441  2C1E               	goto	l1212
  3463  0442  083B               	movf	___ftmul@f3_as_product,w
  3464  0443  00F0               	movwf	___ftpack@arg
  3465  0444  083C               	movf	___ftmul@f3_as_product+1,w
  3466  0445  00F1               	movwf	___ftpack@arg+1
  3467  0446  083D               	movf	___ftmul@f3_as_product+2,w
  3468  0447  00F2               	movwf	___ftpack@arg+2
  3469  0448  083A               	movf	___ftmul@exp,w
  3470  0449  00B6               	movwf	??___ftmul
  3471  044A  0836               	movf	??___ftmul,w
  3472  044B  00F3               	movwf	___ftpack@exp
  3473  044C  083F               	movf	___ftmul@sign,w
  3474  044D  00B7               	movwf	??___ftmul+1
  3475  044E  0837               	movf	??___ftmul+1,w
  3476  044F  00F4               	movwf	___ftpack@sign
  3477  0450  2084               	fcall	___ftpack
  3478  0451  0870               	movf	?___ftpack,w
  3479  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0454  00B0               	movwf	?___ftmul
  3482  0455  0871               	movf	?___ftpack+1,w
  3483  0456  00B1               	movwf	?___ftmul+1
  3484  0457  0872               	movf	?___ftpack+2,w
  3485  0458  00B2               	movwf	?___ftmul+2
  3486  0459  0008               	return
  3487  045A                     __end_of___ftmul:	
  3488                           
  3489                           	psect	text15
  3490  02D3                     __ptext15:	
  3491 ;; *************** function ___ftdiv *****************
  3492 ;; Defined at:
  3493 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  f2              3    0[BANK0 ] float 
  3496 ;;  f1              3    3[BANK0 ] float 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  f3              3   11[BANK0 ] float 
  3499 ;;  sign            1   15[BANK0 ] unsigned char 
  3500 ;;  exp             1   14[BANK0 ] unsigned char 
  3501 ;;  cntr            1   10[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  3    0[BANK0 ] float 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1
  3511 ;;      Params:         0       6       0
  3512 ;;      Locals:         0       6       0
  3513 ;;      Temps:          0       4       0
  3514 ;;      Totals:         0      16       0
  3515 ;;Total ram usage:       16 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    1
  3518 ;; This function calls:
  3519 ;;		___ftpack
  3520 ;; This function is called by:
  3521 ;;		_Accident_Detect
  3522 ;;		_GetXAccl
  3523 ;;		_GetYAccl
  3524 ;;		_GetZAccl
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function ___ftdiv
  3530  02D3                     ___ftdiv:	
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3534  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3535  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3536  02D5  0823               	movf	___ftdiv@f1,w
  3537  02D6  00A6               	movwf	??___ftdiv
  3538  02D7  0824               	movf	___ftdiv@f1+1,w
  3539  02D8  00A7               	movwf	??___ftdiv+1
  3540  02D9  0825               	movf	___ftdiv@f1+2,w
  3541  02DA  00A8               	movwf	??___ftdiv+2
  3542  02DB  1003               	clrc
  3543  02DC  0D27               	rlf	??___ftdiv+1,w
  3544  02DD  0D28               	rlf	??___ftdiv+2,w
  3545  02DE  00A9               	movwf	??___ftdiv+3
  3546  02DF  0829               	movf	??___ftdiv+3,w
  3547  02E0  00AE               	movwf	___ftdiv@exp
  3548  02E1  08AE               	movf	___ftdiv@exp,f
  3549  02E2  1D03               	skipz
  3550  02E3  2AEB               	goto	l1140
  3551  02E4  3000               	movlw	0
  3552  02E5  00A0               	movwf	?___ftdiv
  3553  02E6  3000               	movlw	0
  3554  02E7  00A1               	movwf	?___ftdiv+1
  3555  02E8  3000               	movlw	0
  3556  02E9  00A2               	movwf	?___ftdiv+2
  3557  02EA  0008               	return
  3558  02EB                     l1140:	
  3559  02EB  0820               	movf	___ftdiv@f2,w
  3560  02EC  00A6               	movwf	??___ftdiv
  3561  02ED  0821               	movf	___ftdiv@f2+1,w
  3562  02EE  00A7               	movwf	??___ftdiv+1
  3563  02EF  0822               	movf	___ftdiv@f2+2,w
  3564  02F0  00A8               	movwf	??___ftdiv+2
  3565  02F1  1003               	clrc
  3566  02F2  0D27               	rlf	??___ftdiv+1,w
  3567  02F3  0D28               	rlf	??___ftdiv+2,w
  3568  02F4  00A9               	movwf	??___ftdiv+3
  3569  02F5  0829               	movf	??___ftdiv+3,w
  3570  02F6  00AF               	movwf	___ftdiv@sign
  3571  02F7  08AF               	movf	___ftdiv@sign,f
  3572  02F8  1D03               	skipz
  3573  02F9  2B01               	goto	l1146
  3574  02FA  3000               	movlw	0
  3575  02FB  00A0               	movwf	?___ftdiv
  3576  02FC  3000               	movlw	0
  3577  02FD  00A1               	movwf	?___ftdiv+1
  3578  02FE  3000               	movlw	0
  3579  02FF  00A2               	movwf	?___ftdiv+2
  3580  0300  0008               	return
  3581  0301                     l1146:	
  3582  0301  3000               	movlw	0
  3583  0302  00AB               	movwf	___ftdiv@f3
  3584  0303  3000               	movlw	0
  3585  0304  00AC               	movwf	___ftdiv@f3+1
  3586  0305  3000               	movlw	0
  3587  0306  00AD               	movwf	___ftdiv@f3+2
  3588  0307  3089               	movlw	137
  3589  0308  072F               	addwf	___ftdiv@sign,w
  3590  0309  00A6               	movwf	??___ftdiv
  3591  030A  0826               	movf	??___ftdiv,w
  3592  030B  02AE               	subwf	___ftdiv@exp,f
  3593  030C  0823               	movf	___ftdiv@f1,w
  3594  030D  00A6               	movwf	??___ftdiv
  3595  030E  0824               	movf	___ftdiv@f1+1,w
  3596  030F  00A7               	movwf	??___ftdiv+1
  3597  0310  0825               	movf	___ftdiv@f1+2,w
  3598  0311  00A8               	movwf	??___ftdiv+2
  3599  0312  3010               	movlw	16
  3600  0313                     u1205:	
  3601  0313  1003               	clrc
  3602  0314  0CA8               	rrf	??___ftdiv+2,f
  3603  0315  0CA7               	rrf	??___ftdiv+1,f
  3604  0316  0CA6               	rrf	??___ftdiv,f
  3605  0317  3EFF               	addlw	-1
  3606  0318  1D03               	skipz
  3607  0319  2B13               	goto	u1205
  3608  031A  0826               	movf	??___ftdiv,w
  3609  031B  00A9               	movwf	??___ftdiv+3
  3610  031C  0829               	movf	??___ftdiv+3,w
  3611  031D  00AF               	movwf	___ftdiv@sign
  3612  031E  0820               	movf	___ftdiv@f2,w
  3613  031F  00A6               	movwf	??___ftdiv
  3614  0320  0821               	movf	___ftdiv@f2+1,w
  3615  0321  00A7               	movwf	??___ftdiv+1
  3616  0322  0822               	movf	___ftdiv@f2+2,w
  3617  0323  00A8               	movwf	??___ftdiv+2
  3618  0324  3010               	movlw	16
  3619  0325                     u1215:	
  3620  0325  1003               	clrc
  3621  0326  0CA8               	rrf	??___ftdiv+2,f
  3622  0327  0CA7               	rrf	??___ftdiv+1,f
  3623  0328  0CA6               	rrf	??___ftdiv,f
  3624  0329  3EFF               	addlw	-1
  3625  032A  1D03               	skipz
  3626  032B  2B25               	goto	u1215
  3627  032C  0826               	movf	??___ftdiv,w
  3628  032D  00A9               	movwf	??___ftdiv+3
  3629  032E  0829               	movf	??___ftdiv+3,w
  3630  032F  06AF               	xorwf	___ftdiv@sign,f
  3631  0330  3080               	movlw	128
  3632  0331  00A6               	movwf	??___ftdiv
  3633  0332  0826               	movf	??___ftdiv,w
  3634  0333  05AF               	andwf	___ftdiv@sign,f
  3635  0334  17A4               	bsf	___ftdiv@f1+1,7
  3636  0335  30FF               	movlw	255
  3637  0336  05A3               	andwf	___ftdiv@f1,f
  3638  0337  30FF               	movlw	255
  3639  0338  05A4               	andwf	___ftdiv@f1+1,f
  3640  0339  3000               	movlw	0
  3641  033A  05A5               	andwf	___ftdiv@f1+2,f
  3642  033B  17A1               	bsf	___ftdiv@f2+1,7
  3643  033C  30FF               	movlw	255
  3644  033D  05A0               	andwf	___ftdiv@f2,f
  3645  033E  30FF               	movlw	255
  3646  033F  05A1               	andwf	___ftdiv@f2+1,f
  3647  0340  3000               	movlw	0
  3648  0341  05A2               	andwf	___ftdiv@f2+2,f
  3649  0342  3018               	movlw	24
  3650  0343  00A6               	movwf	??___ftdiv
  3651  0344  0826               	movf	??___ftdiv,w
  3652  0345  00AA               	movwf	___ftdiv@cntr
  3653  0346                     l1160:	
  3654  0346  3001               	movlw	1
  3655  0347                     u1225:	
  3656  0347  1003               	clrc
  3657  0348  0DAB               	rlf	___ftdiv@f3,f
  3658  0349  0DAC               	rlf	___ftdiv@f3+1,f
  3659  034A  0DAD               	rlf	___ftdiv@f3+2,f
  3660  034B  3EFF               	addlw	-1
  3661  034C  1D03               	skipz
  3662  034D  2B47               	goto	u1225
  3663  034E  0822               	movf	___ftdiv@f2+2,w
  3664  034F  0225               	subwf	___ftdiv@f1+2,w
  3665  0350  1D03               	skipz
  3666  0351  2B58               	goto	u1235
  3667  0352  0821               	movf	___ftdiv@f2+1,w
  3668  0353  0224               	subwf	___ftdiv@f1+1,w
  3669  0354  1D03               	skipz
  3670  0355  2B58               	goto	u1235
  3671  0356  0820               	movf	___ftdiv@f2,w
  3672  0357  0223               	subwf	___ftdiv@f1,w
  3673  0358                     u1235:	
  3674  0358  1C03               	skipc
  3675  0359  2B65               	goto	l1168
  3676  035A  0820               	movf	___ftdiv@f2,w
  3677  035B  02A3               	subwf	___ftdiv@f1,f
  3678  035C  0821               	movf	___ftdiv@f2+1,w
  3679  035D  1C03               	skipc
  3680  035E  0F21               	incfsz	___ftdiv@f2+1,w
  3681  035F  02A4               	subwf	___ftdiv@f1+1,f
  3682  0360  0822               	movf	___ftdiv@f2+2,w
  3683  0361  1C03               	skipc
  3684  0362  0A22               	incf	___ftdiv@f2+2,w
  3685  0363  02A5               	subwf	___ftdiv@f1+2,f
  3686  0364  142B               	bsf	___ftdiv@f3,0
  3687  0365                     l1168:	
  3688  0365  3001               	movlw	1
  3689  0366                     u1245:	
  3690  0366  1003               	clrc
  3691  0367  0DA3               	rlf	___ftdiv@f1,f
  3692  0368  0DA4               	rlf	___ftdiv@f1+1,f
  3693  0369  0DA5               	rlf	___ftdiv@f1+2,f
  3694  036A  3EFF               	addlw	-1
  3695  036B  1D03               	skipz
  3696  036C  2B66               	goto	u1245
  3697  036D  3001               	movlw	1
  3698  036E  02AA               	subwf	___ftdiv@cntr,f
  3699  036F  1D03               	btfss	3,2
  3700  0370  2B46               	goto	l1160
  3701  0371  082B               	movf	___ftdiv@f3,w
  3702  0372  00F0               	movwf	___ftpack@arg
  3703  0373  082C               	movf	___ftdiv@f3+1,w
  3704  0374  00F1               	movwf	___ftpack@arg+1
  3705  0375  082D               	movf	___ftdiv@f3+2,w
  3706  0376  00F2               	movwf	___ftpack@arg+2
  3707  0377  082E               	movf	___ftdiv@exp,w
  3708  0378  00A6               	movwf	??___ftdiv
  3709  0379  0826               	movf	??___ftdiv,w
  3710  037A  00F3               	movwf	___ftpack@exp
  3711  037B  082F               	movf	___ftdiv@sign,w
  3712  037C  00A7               	movwf	??___ftdiv+1
  3713  037D  0827               	movf	??___ftdiv+1,w
  3714  037E  00F4               	movwf	___ftpack@sign
  3715  037F  2084               	fcall	___ftpack
  3716  0380  0870               	movf	?___ftpack,w
  3717  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0383  00A0               	movwf	?___ftdiv
  3720  0384  0871               	movf	?___ftpack+1,w
  3721  0385  00A1               	movwf	?___ftdiv+1
  3722  0386  0872               	movf	?___ftpack+2,w
  3723  0387  00A2               	movwf	?___ftdiv+2
  3724  0388  0008               	return
  3725  0389                     __end_of___ftdiv:	
  3726                           
  3727                           	psect	text16
  3728  0084                     __ptext16:	
  3729 ;; *************** function ___ftpack *****************
  3730 ;; Defined at:
  3731 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  arg             3    0[COMMON] unsigned um
  3734 ;;  exp             1    3[COMMON] unsigned char 
  3735 ;;  sign            1    4[COMMON] unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  3    0[COMMON] float 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1
  3747 ;;      Params:         5       0       0
  3748 ;;      Locals:         0       0       0
  3749 ;;      Temps:          3       0       0
  3750 ;;      Totals:         8       0       0
  3751 ;;Total ram usage:        8 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		___ftadd
  3757 ;;		___ftdiv
  3758 ;;		___ftmul
  3759 ;;		___lbtoft
  3760 ;;		___lwtoft
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function ___ftpack
  3766  0084                     ___ftpack:	
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3770  0084  0873               	movf	___ftpack@exp,w
  3771  0085  1903               	btfsc	3,2
  3772  0086  288C               	goto	l1092
  3773  0087  0872               	movf	___ftpack@arg+2,w
  3774  0088  0471               	iorwf	___ftpack@arg+1,w
  3775  0089  0470               	iorwf	___ftpack@arg,w
  3776  008A  1D03               	skipz
  3777  008B  289F               	goto	l1098
  3778  008C                     l1092:	
  3779  008C  3000               	movlw	0
  3780  008D  00F0               	movwf	?___ftpack
  3781  008E  3000               	movlw	0
  3782  008F  00F1               	movwf	?___ftpack+1
  3783  0090  3000               	movlw	0
  3784  0091  00F2               	movwf	?___ftpack+2
  3785  0092  0008               	return
  3786  0093                     l1096:	
  3787  0093  3001               	movlw	1
  3788  0094  00F5               	movwf	??___ftpack
  3789  0095  0875               	movf	??___ftpack,w
  3790  0096  07F3               	addwf	___ftpack@exp,f
  3791  0097  3001               	movlw	1
  3792  0098                     u1075:	
  3793  0098  1003               	clrc
  3794  0099  0CF2               	rrf	___ftpack@arg+2,f
  3795  009A  0CF1               	rrf	___ftpack@arg+1,f
  3796  009B  0CF0               	rrf	___ftpack@arg,f
  3797  009C  3EFF               	addlw	-1
  3798  009D  1D03               	skipz
  3799  009E  2898               	goto	u1075
  3800  009F                     l1098:	
  3801  009F  30FE               	movlw	254
  3802  00A0  0572               	andwf	___ftpack@arg+2,w
  3803  00A1  1903               	btfsc	3,2
  3804  00A2  28BA               	goto	l350
  3805  00A3  2893               	goto	l1096
  3806  00A4                     l1100:	
  3807  00A4  3001               	movlw	1
  3808  00A5  00F5               	movwf	??___ftpack
  3809  00A6  0875               	movf	??___ftpack,w
  3810  00A7  07F3               	addwf	___ftpack@exp,f
  3811  00A8  3001               	movlw	1
  3812  00A9  07F0               	addwf	___ftpack@arg,f
  3813  00AA  3000               	movlw	0
  3814  00AB  1803               	skipnc
  3815  00AC  3001               	movlw	1
  3816  00AD  07F1               	addwf	___ftpack@arg+1,f
  3817  00AE  3000               	movlw	0
  3818  00AF  1803               	skipnc
  3819  00B0  3001               	movlw	1
  3820  00B1  07F2               	addwf	___ftpack@arg+2,f
  3821  00B2  3001               	movlw	1
  3822  00B3                     u1095:	
  3823  00B3  1003               	clrc
  3824  00B4  0CF2               	rrf	___ftpack@arg+2,f
  3825  00B5  0CF1               	rrf	___ftpack@arg+1,f
  3826  00B6  0CF0               	rrf	___ftpack@arg,f
  3827  00B7  3EFF               	addlw	-1
  3828  00B8  1D03               	skipz
  3829  00B9  28B3               	goto	u1095
  3830  00BA                     l350:	
  3831  00BA  30FF               	movlw	255
  3832  00BB  0572               	andwf	___ftpack@arg+2,w
  3833  00BC  1903               	btfsc	3,2
  3834  00BD  28C9               	goto	l1108
  3835  00BE  28A4               	goto	l1100
  3836  00BF                     l1106:	
  3837  00BF  3001               	movlw	1
  3838  00C0  02F3               	subwf	___ftpack@exp,f
  3839  00C1  3001               	movlw	1
  3840  00C2                     u1115:	
  3841  00C2  1003               	clrc
  3842  00C3  0DF0               	rlf	___ftpack@arg,f
  3843  00C4  0DF1               	rlf	___ftpack@arg+1,f
  3844  00C5  0DF2               	rlf	___ftpack@arg+2,f
  3845  00C6  3EFF               	addlw	-1
  3846  00C7  1D03               	skipz
  3847  00C8  28C2               	goto	u1115
  3848  00C9                     l1108:	
  3849  00C9  1FF1               	btfss	___ftpack@arg+1,7
  3850  00CA  28BF               	goto	l1106
  3851  00CB  1873               	btfsc	___ftpack@exp,0
  3852  00CC  28D3               	goto	l356
  3853  00CD  30FF               	movlw	255
  3854  00CE  05F0               	andwf	___ftpack@arg,f
  3855  00CF  307F               	movlw	127
  3856  00D0  05F1               	andwf	___ftpack@arg+1,f
  3857  00D1  30FF               	movlw	255
  3858  00D2  05F2               	andwf	___ftpack@arg+2,f
  3859  00D3                     l356:	
  3860  00D3  1003               	clrc
  3861  00D4  0CF3               	rrf	___ftpack@exp,f
  3862  00D5  0873               	movf	___ftpack@exp,w
  3863  00D6  00F5               	movwf	??___ftpack
  3864  00D7  01F6               	clrf	??___ftpack+1
  3865  00D8  01F7               	clrf	??___ftpack+2
  3866  00D9  3010               	movlw	16
  3867  00DA                     u1145:	
  3868  00DA  1003               	clrc
  3869  00DB  0DF5               	rlf	??___ftpack,f
  3870  00DC  0DF6               	rlf	??___ftpack+1,f
  3871  00DD  0DF7               	rlf	??___ftpack+2,f
  3872  00DE  3EFF               	addlw	-1
  3873  00DF  1D03               	skipz
  3874  00E0  28DA               	goto	u1145
  3875  00E1  0875               	movf	??___ftpack,w
  3876  00E2  04F0               	iorwf	___ftpack@arg,f
  3877  00E3  0876               	movf	??___ftpack+1,w
  3878  00E4  04F1               	iorwf	___ftpack@arg+1,f
  3879  00E5  0877               	movf	??___ftpack+2,w
  3880  00E6  04F2               	iorwf	___ftpack@arg+2,f
  3881  00E7  0874               	movf	___ftpack@sign,w
  3882  00E8  1903               	btfsc	3,2
  3883  00E9  0008               	return
  3884  00EA  17F2               	bsf	___ftpack@arg+2,7
  3885  00EB  0008               	return
  3886  00EC                     __end_of___ftpack:	
  3887                           
  3888                           	psect	text17
  3889  000D                     __ptext17:	
  3890 ;; *************** function _ReadADC *****************
  3891 ;; Defined at:
  3892 ;;		line 25 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\adc_pic16.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  ch              1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  ch              1    3[COMMON] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  2    0[COMMON] unsigned int 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1
  3906 ;;      Params:         2       0       0
  3907 ;;      Locals:         1       0       0
  3908 ;;      Temps:          1       0       0
  3909 ;;      Totals:         4       0       0
  3910 ;;Total ram usage:        4 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_GetXAccl
  3916 ;;		_GetYAccl
  3917 ;;		_GetZAccl
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           
  3922                           ;psect for function _ReadADC
  3923  000D                     _ReadADC:	
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  3927                           ;ReadADC@ch stored from wreg
  3928  000D  00F3               	movwf	ReadADC@ch
  3929                           
  3930                           ;adc_pic16.c: 27: if(ch>7) return 0;
  3931  000E  3008               	movlw	8
  3932  000F  0273               	subwf	ReadADC@ch,w
  3933  0010  1C03               	skipc
  3934  0011  2815               	goto	l1124
  3935  0012  01F0               	clrf	?_ReadADC
  3936  0013  01F1               	clrf	?_ReadADC+1
  3937  0014  0008               	return
  3938  0015                     l1124:	
  3939                           
  3940                           ;adc_pic16.c: 29: ADCON0bits.CHS=ch;
  3941  0015  0873               	movf	ReadADC@ch,w
  3942  0016  00F2               	movwf	??_ReadADC
  3943  0017  0DF2               	rlf	??_ReadADC,f
  3944  0018  0DF2               	rlf	??_ReadADC,f
  3945  0019  0DF2               	rlf	??_ReadADC,f
  3946  001A  1283               	bcf	3,5	;RP0=0, select bank0
  3947  001B  1303               	bcf	3,6	;RP1=0, select bank0
  3948  001C  081F               	movf	31,w	;volatile
  3949  001D  0672               	xorwf	??_ReadADC,w
  3950  001E  39C7               	andlw	-57
  3951  001F  0672               	xorwf	??_ReadADC,w
  3952  0020  009F               	movwf	31	;volatile
  3953                           
  3954                           ;adc_pic16.c: 32: _delay((unsigned long)((100)*(4000000/4000000.0)));
  3955  0021  3021               	movlw	33
  3956  0022  00F2               	movwf	??_ReadADC
  3957  0023                     u2227:	
  3958  0023  0BF2               	decfsz	??_ReadADC,f
  3959  0024  2823               	goto	u2227
  3960                           
  3961                           ;adc_pic16.c: 35: ADCON0bits.GO=1;
  3962  0025  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0026  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0027  151F               	bsf	31,2	;volatile
  3965  0028                     l90:	
  3966                           ;adc_pic16.c: 38: while(ADCON0bits.GO);
  3967                           
  3968  0028  191F               	btfsc	31,2	;volatile
  3969  0029  2828               	goto	l90
  3970                           
  3971                           ;adc_pic16.c: 40: return ((ADRESH<<8)|ADRESL);
  3972  002A  081E               	movf	30,w	;volatile
  3973  002B  01F1               	clrf	?_ReadADC+1
  3974  002C  07F1               	addwf	?_ReadADC+1,f
  3975  002D  1683               	bsf	3,5	;RP0=1, select bank1
  3976  002E  1303               	bcf	3,6	;RP1=0, select bank1
  3977  002F  081E               	movf	30,w	;volatile
  3978  0030  01F0               	clrf	?_ReadADC
  3979  0031  07F0               	addwf	?_ReadADC,f
  3980  0032  0008               	return
  3981  0033                     __end_of_ReadADC:	
  3982                           
  3983                           	psect	text18
  3984  0000                     __ptext18:	
  3985 ;; *************** function _ADCInit *****************
  3986 ;; Defined at:
  3987 ;;		line 8 in file "E:\Study Material\XC8 PROJECTS\Motion Detector\adc_pic16.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;		None               void
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1
  4001 ;;      Params:         0       0       0
  4002 ;;      Locals:         0       0       0
  4003 ;;      Temps:          0       0       0
  4004 ;;      Totals:         0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _ADCInit
  4016  0000                     _ADCInit:	
  4017                           
  4018                           ;adc_pic16.c: 10: ADCON1bits.ADFM=1;
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  4022  0000  1683               	bsf	3,5	;RP0=1, select bank1
  4023  0001  1303               	bcf	3,6	;RP1=0, select bank1
  4024  0002  179F               	bsf	31,7	;volatile
  4025                           
  4026                           ;adc_pic16.c: 15: ADCON1bits.PCFG=0x00;
  4027  0003  30F0               	movlw	-16
  4028  0004  059F               	andwf	31,f	;volatile
  4029                           
  4030                           ;adc_pic16.c: 18: ADCON0bits.ADCS=0b10;
  4031  0005  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0006  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0007  081F               	movf	31,w	;volatile
  4034  0008  393F               	andlw	-193
  4035  0009  3880               	iorlw	128
  4036  000A  009F               	movwf	31	;volatile
  4037                           
  4038                           ;adc_pic16.c: 22: ADCON0bits.ADON=1;
  4039  000B  141F               	bsf	31,0	;volatile
  4040  000C  0008               	return
  4041  000D                     __end_of_ADCInit:	
  4042  007E                     btemp	set	126	;btemp
  4043  007E                     wtemp	set	126
  4044  007E                     wtemp0	set	126
  4045  0080                     wtemp1	set	128
  4046  0082                     wtemp2	set	130
  4047  0084                     wtemp3	set	132
  4048  0086                     wtemp4	set	134
  4049  0088                     wtemp5	set	136
  4050  007F                     wtemp6	set	127
  4051  007E                     ttemp	set	126
  4052  007E                     ttemp0	set	126
  4053  0081                     ttemp1	set	129
  4054  0084                     ttemp2	set	132
  4055  0087                     ttemp3	set	135
  4056  007F                     ttemp4	set	127
  4057  007E                     ltemp	set	126
  4058  007E                     ltemp0	set	126
  4059  0082                     ltemp1	set	130
  4060  0086                     ltemp2	set	134
  4061  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            32      0       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Vib_Detect->_GetXAccl
    _Vib_Detect->_GetYAccl
    _Vib_Detect->_GetZAccl
    ___lbtoft->___ftpack
    ___fttol->_GetXAccl
    ___fttol->_GetYAccl
    ___fttol->_GetZAccl
    _Accident_Detect->_GetXAccl
    _Accident_Detect->_GetYAccl
    _Accident_Detect->_GetZAccl
    ___ftge->___lbtoft
    ___ftadd->_GetXAccl
    ___ftadd->_GetYAccl
    ___ftadd->_GetZAccl
    _GetZAccl->___lwtoft
    _GetYAccl->___lwtoft
    _GetXAccl->___lwtoft
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _main->_Accident_Detect
    _Vib_Detect->___fttol
    ___fttol->_GetXAccl
    ___fttol->_GetYAccl
    ___fttol->_GetZAccl
    _Accident_Detect->___ftadd
    ___ftge->___lbtoft
    ___ftadd->_GetXAccl
    ___ftadd->_GetYAccl
    ___ftadd->_GetZAccl
    _GetZAccl->___ftmul
    _GetYAccl->___ftmul
    _GetXAccl->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   72091
                                             13 COMMON     1     1      0
                                             77 BANK0      3     3      0
                            _ADCInit
                    _Accident_Detect
                         _Vib_Detect
 ---------------------------------------------------------------------------------
 (1) _Vib_Detect                                          14    14      0   32550
                                             54 BANK0     14    14      0
                           _GetXAccl
                           _GetYAccl
                           _GetZAccl
                             ___bmul
                             ___ftge
                            ___fttol
                           ___lbtoft
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    2109
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     636
                                             40 BANK0     14    10      4
                           _GetXAccl (ARG)
                           _GetYAccl (ARG)
                           _GetZAccl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     284
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Accident_Detect                                     24    24      0   39495
                                             53 BANK0     24    24      0
                           _GetXAccl
                           _GetYAccl
                           _GetZAccl
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6    1288
                                              4 BANK0     12     6      6
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3413
                                             40 BANK0     13     7      6
                           _GetXAccl (ARG)
                           _GetYAccl (ARG)
                           _GetZAccl (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _GetZAccl                                             9     6      3    9278
                                             12 COMMON     1     1      0
                                             32 BANK0      8     5      3
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _GetYAccl                                             9     6      3    9278
                                             12 COMMON     1     1      0
                                             32 BANK0      8     5      3
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _GetXAccl                                             9     6      3    9278
                                             12 COMMON     1     1      0
                                             32 BANK0      8     5      3
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2301
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3181
                                             16 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3135
                                              0 BANK0     16    10      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _Accident_Detect
     _GetXAccl
       _ReadADC
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack
     _GetYAccl
       _ReadADC
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack
     _GetZAccl
       _ReadADC
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack
     ___ftadd
       _GetXAccl (ARG)
         _ReadADC
         ___ftdiv
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
       _GetYAccl (ARG)
         _ReadADC
         ___ftdiv
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
       _GetZAccl (ARG)
         _ReadADC
         ___ftdiv
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
       ___ftdiv (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftge
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
   _Vib_Detect
     _GetXAccl
       _ReadADC
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack
     _GetYAccl
       _ReadADC
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack
     _GetZAccl
       _ReadADC
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack
     ___bmul
     ___ftge
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       _GetXAccl (ARG)
         _ReadADC
         ___ftdiv
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
       _GetYAccl (ARG)
         _ReadADC
         ___ftdiv
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
       _GetZAccl (ARG)
         _ReadADC
         ___ftdiv
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
     ___lbtoft
       ___ftpack
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       6       7       18.8%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64       8        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Apr 28 18:04:45 2016

          ___bmul@product 0072                        l40 00DF                        l33 009D  
                      l50 079B                        l35 00C7                        l39 00D7  
                      l48 074B                        l49 0773                        l90 0028  
            ___ftadd@exp1 0054              ___ftadd@exp2 0053              ___ftadd@sign 0052  
                     l350 00BA                       l356 00D3                       l379 0502  
         _Vib_Sensitivity 00A3                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RB4 0034           __end_of_ADCInit 000D  
            ___ftdiv@cntr 002A              ___ftdiv@sign 002F                      l1100 00A4  
                    l1200 03F6                      l1106 00BF                      l1124 0015  
                    l1108 00C9                      l1140 02EB                      l1212 041E  
                    l1204 0406                      l1300 0085                      l1160 0346  
                    l1216 042E                      l1304 008B                      l1146 0301  
                    l1322 0483                      l1092 008C                      l1244 005F  
                    l1236 003B                      l1332 0499                      l1500 07EE  
                    l1420 025F                      l1182 03A1                      l1238 0049  
                    l1350 04C8                      l1326 048A                      l1096 0093  
                    l1168 0365                      l1248 006A                      l1352 04D4  
                    l1344 04B3                      l1440 02A1                      l1098 009F  
                    l1362 04F2                      l1354 04D9                      l1450 02BC  
                    l1514 0576                      l1188 03B7                      l1372 0526  
                    l1364 04FE                      l1356 04DD                      l1540 0659  
                    l1508 0571                      l1382 0549                      l1390 004E  
                    l1454 02CA                      l1446 02AE                      l1438 0291  
                    l1550 0668                      l1534 05F8                      l1368 0514  
                    l1448 02B9                      l1552 066B                      l1394 0075  
                    l1556 0673                      l1494 07EC                      l1582 00CE  
                    l1584 00D8                      l1576 00C6                      u1115 00C2  
                    u1205 0313                      u1215 0325                      u1145 00DA  
                    u1225 0347                      u1075 0098                      u1235 0358  
                    u2107 00B5                      u1245 0366                      u1325 0407  
                    u2117 00D4                      u1095 00B3                      u1335 040F  
                    u1415 003E                      u2207 0106                      u2127 00E7  
                    u2217 0114                      u2137 01DE                      u2227 0023  
                    u1435 004A                      u2147 01EC                      u1285 03C3  
                    u1445 0056                      u2157 01FA                      u1375 042F  
                    u1295 03D5                      u1455 0060                      u2167 016B  
                    u1615 04C9                      u1385 0437                      u2177 0179  
                    u2097 00A5                      u2187 0187                      u2197 00F8  
                    u1645 04DE                      u1741 0041                      u1805 0266  
                    u1742 0042                      u1743 0047                      u1744 0048  
                    u1585 04B4                      u1761 0068                      u1762 0069  
                    u1675 04F3                      u1763 006E                      u1835 0292  
                    u1764 006F                      u1865 02B0                      _main 0094  
            ___ftpack@arg 0070              ___ftpack@exp 0073                      btemp 007E  
                    ltemp 007E                      start 0000                      ttemp 007E  
                    wtemp 007E         ___bmul@multiplier 0073              ___ftmul@cntr 003E  
    Accident_Detect@scale 0061              ___ftmul@sign 003F           __end_of_ReadADC 0033  
            ___fttol@exp1 0055              ___fttol@lval 0051                     ?_main 0070  
         __end_of___ftadd 0561           __end_of___ftdiv 0389           __end_of___ftneg 000B  
         __end_of___ftmul 045A           __end_of___fttol 02D3           __end_of___lwdiv 0071  
                   _TRISB 0086                     _delay 0000             ___ftpack@sign 0074  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F          Vib_Detect@X_Diff 0061  
        Vib_Detect@Y_Diff 0062          Vib_Detect@Z_Diff 0063          __end_of_GetXAccl 015F  
        __end_of_GetYAccl 01D2          __end_of_GetZAccl 0245           __initialization 07F0  
            __end_of_main 00F1     Accident_Detect@zero_G 005E          Vib_Detect@looper 005F  
               ??_ADCInit 0070                    ??_main 006D             ___fttol@sign1 0050  
                  ?_delay 0070                    _ADRESH 001E                    _ADRESL 009E  
        __end_of___ftpack 00EC          __end_of___lbtoft 0025                _Vib_Detect 0561  
         _Accident_Detect 0675          __end_of___lwtoft 0083                 ??_ReadADC 0072  
                  ___bmul 0083                    ___ftge 0025                 ??___ftadd 004E  
               ??___ftdiv 0026                 ??___ftneg 0073                 ??___ftmul 0036  
               ??___fttol 004C                 ??___lwdiv 0074     ___ftmul@f3_as_product 003B  
 __end_of__initialization 07FE                ___ftadd@f1 0048                ___ftadd@f2 004B  
              ___ftge@ff1 0024                ___ftge@ff2 0027                ___ftdiv@f1 0023  
              ___ftdiv@f2 0020                ___ftdiv@f3 002B         GetYAccl@adc_value 0046  
              ___ftneg@f1 0070                ___lbtoft@c 007B       ___bmul@multiplicand 0070  
              ___ftmul@f1 0030                ___ftmul@f2 0033                ___fttol@f1 0048  
          __pcstackCOMMON 0070              __pidataBANK1 00F1         Vib_Detect@counter 005E  
             Vib_Detect@X 0058               Vib_Detect@Y 005A               Vib_Detect@Z 005C  
              ___lwtoft@c 0078   __end_of_Accident_Detect 07F0                 ?_GetXAccl 0040  
               ?_GetYAccl 0040                 ?_GetZAccl 0040                   ??_delay 0072  
             ?_Vib_Detect 0070                __pmaintext 0094                   ?___bmul 0070  
                 ?___ftge 0024                   _ADCInit 0000                 ?___ftpack 0070  
               ?___lbtoft 0078                 ?___lwtoft 0078                ??_GetXAccl 007C  
              ??_GetYAccl 007C                ??_GetZAccl 007C                   _ReadADC 000D  
         __size_of___bmul 0011           __size_of___ftge 005F                   ___ftadd 045A  
                 ___ftdiv 02D3                   ___ftneg 0003                   ___ftmul 0389  
                 ___fttol 0245                   ___lwdiv 0033                ??___ftpack 0075  
              ??___lbtoft 0020       __size_of_Vib_Detect 0114                   __ptext1 0561  
                 __ptext2 000B                   __ptext3 0245                   __ptext4 0083  
                 __ptext5 0675                   __ptext6 0003                   __ptext7 0025  
                 __ptext8 045A                   __ptext9 01D2                ??___lwtoft 007B  
        ?_Accident_Detect 0070      end_of_initialization 07FE                 GetXAccl@t 0043  
               GetYAccl@t 0043                 GetZAccl@t 0043                 _AccidentG 00A0  
               ReadADC@ch 0073        Accident_Detect@x_G 0064        Accident_Detect@y_G 0067  
      Accident_Detect@z_G 006A               ___ftdiv@exp 002E         GetZAccl@adc_value 0046  
             ___ftmul@exp 003A            __end_of___bmul 0094            __end_of___ftge 0084  
     start_initialization 07F0        Vib_Detect@readings 0060         __size_of_GetXAccl 0073  
       __size_of_GetYAccl 0073         __size_of_GetZAccl 0073              ??_Vib_Detect 0056  
                ??___bmul 0071                  ??___ftge 002A               __pdataBANK1 00A0  
                ?_ADCInit 0070        __end_of_Vib_Detect 0675         __size_of___ftpack 0068  
       __size_of___lbtoft 001A                 ___latbits 0000         __size_of___lwtoft 0012  
           __pcstackBANK0 0020                  ?_ReadADC 0070          ___lwdiv@dividend 0072  
                ?___ftadd 0048                  ?___ftdiv 0020                  ?___ftneg 0070  
                ?___ftmul 0030                  ?___fttol 0048                  ?___lwdiv 0070  
        ___lwdiv@quotient 0075          __size_of_ADCInit 000D                _ADCON0bits 001F  
              _ADCON1bits 009F                 main@count 007D                  _GetXAccl 00EC  
                _GetYAccl 015F                  _GetZAccl 01D2  __size_of_Accident_Detect 017B  
        __size_of_ReadADC 0026          __size_of___ftadd 0107          __size_of___ftdiv 00B6  
        __size_of___ftneg 0008          __size_of___ftmul 00D1          __size_of___fttol 008E  
        __size_of___lwdiv 003E                  ___ftpack 0084                  ___lbtoft 000B  
                ___lwtoft 0071           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 015F                  __ptext11 00EC                  __ptext12 0071  
                __ptext13 0033                  __ptext14 0389                  __ptext15 02D3  
                __ptext16 0084                  __ptext17 000D                  __ptext18 0000  
           __size_of_main 005D       _Accident_Detect$563 0055       _Accident_Detect$564 0058  
     _Accident_Detect$565 005B         ??_Accident_Detect 007D         GetXAccl@adc_value 0046  
