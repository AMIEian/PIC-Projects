

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Sep 12 18:42:29 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000D                     	;# 
    42  000E                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0015                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0087                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0092                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0092                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120                           
   121                           	psect	idataBANK0
   122  01A5                     __pidataBANK0:	
   123                           
   124                           ;initializer for ___cgram
   125  01A5  340C               	retlw	12
   126  01A6  3412               	retlw	18
   127  01A7  3412               	retlw	18
   128  01A8  340C               	retlw	12
   129  01A9  3400               	retlw	0
   130  01AA  3400               	retlw	0
   131  01AB  3400               	retlw	0
   132  01AC  3400               	retlw	0
   133  01AD  3400               	retlw	0
   134  01AE  3404               	retlw	4
   135  01AF  340E               	retlw	14
   136  01B0  341F               	retlw	31
   137  01B1  340E               	retlw	14
   138  01B2  3404               	retlw	4
   139  01B3  3400               	retlw	0
   140  01B4  3400               	retlw	0
   141  000E                     _TMR1	set	14
   142  0005                     _PORTA	set	5
   143  0007                     _PORTC	set	7
   144  0007                     _PORTCbits	set	7
   145  003D                     _RC5	set	61
   146  003E                     _RC6	set	62
   147  003F                     _RC7	set	63
   148  0084                     _T1CKPS0	set	132
   149  0080                     _TMR1ON	set	128
   150  0085                     _TRISA	set	133
   151  0087                     _TRISC	set	135
   152  0087                     _TRISCbits	set	135
   153  04F9                     _PCFG1	set	1273
   154  04FA                     _PCFG2	set	1274
   155                           
   156                           	psect	strings
   157  0001                     __pstrings:	
   158  0001                     stringtab:	
   159  0001                     __stringtab:	
   160  0001                     stringcode:	
   161                           ;	String table - string pointers are 1 byte each
   162                           
   163  0001                     stringdir:	
   164  0001  3000               	movlw	high stringdir
   165  0002  008A               	movwf	10
   166  0003  0804               	movf	4,w
   167  0004  0A84               	incf	4,f
   168  0005  0782               	addwf	2,f
   169  0006                     __stringbase:	
   170  0006  3400               	retlw	0
   171  0007                     __end_of__stringtab:	
   172  0007                     __stringdata:	
   173  0007                     STR_1:	
   174  0007  3420               	retlw	32	;' '
   175  0008  3420               	retlw	32	;' '
   176  0009  3420               	retlw	32	;' '
   177  000A  3420               	retlw	32	;' '
   178  000B  3420               	retlw	32	;' '
   179  000C  344E               	retlw	78	;'N'
   180  000D  3449               	retlw	73	;'I'
   181  000E  3454               	retlw	84	;'T'
   182  000F  3449               	retlw	73	;'I'
   183  0010  344E               	retlw	78	;'N'
   184  0011  3420               	retlw	32	;' '
   185  0012  3420               	retlw	32	;' '
   186  0013  3420               	retlw	32	;' '
   187  0014  3420               	retlw	32	;' '
   188  0015  3420               	retlw	32	;' '
   189  0016  3420               	retlw	32	;' '
   190  0017  3420               	retlw	32	;' '
   191  0018  3400               	retlw	0
   192  0019                     STR_2:	
   193  0019  3420               	retlw	32	;' '
   194  001A  3420               	retlw	32	;' '
   195  001B  3420               	retlw	32	;' '
   196  001C  3420               	retlw	32	;' '
   197  001D  3453               	retlw	83	;'S'
   198  001E  3441               	retlw	65	;'A'
   199  001F  344E               	retlw	78	;'N'
   200  0020  3447               	retlw	71	;'G'
   201  0021  3441               	retlw	65	;'A'
   202  0022  344C               	retlw	76	;'L'
   203  0023  3445               	retlw	69	;'E'
   204  0024  3420               	retlw	32	;' '
   205  0025  3420               	retlw	32	;' '
   206  0026  3420               	retlw	32	;' '
   207  0027  3420               	retlw	32	;' '
   208  0028  3420               	retlw	32	;' '
   209  0029  3420               	retlw	32	;' '
   210  002A  3400               	retlw	0
   211  002B                     STR_3:	
   212  002B  3444               	retlw	68	;'D'
   213  002C  3449               	retlw	73	;'I'
   214  002D  3453               	retlw	83	;'S'
   215  002E  3454               	retlw	84	;'T'
   216  002F  3441               	retlw	65	;'A'
   217  0030  344E               	retlw	78	;'N'
   218  0031  3443               	retlw	67	;'C'
   219  0032  3445               	retlw	69	;'E'
   220  0033  3420               	retlw	32	;' '
   221  0034  344D               	retlw	77	;'M'
   222  0035  3445               	retlw	69	;'E'
   223  0036  3454               	retlw	84	;'T'
   224  0037  3445               	retlw	69	;'E'
   225  0038  3452               	retlw	82	;'R'
   226  0039  3400               	retlw	0
   227  003A                     STR_5:	
   228  003A  3443               	retlw	67	;'C'
   229  003B  346C               	retlw	108	;'l'
   230  003C  3465               	retlw	101	;'e'
   231  003D  3461               	retlw	97	;'a'
   232  003E  3472               	retlw	114	;'r'
   233  003F  3420               	retlw	32	;' '
   234  0040  3421               	retlw	33	;'!'
   235  0041  3420               	retlw	32	;' '
   236  0042  3420               	retlw	32	;' '
   237  0043  3400               	retlw	0
   238  0044                     STR_6:	
   239  0044  3444               	retlw	68	;'D'
   240  0045  3469               	retlw	105	;'i'
   241  0046  3473               	retlw	115	;'s'
   242  0047  3474               	retlw	116	;'t'
   243  0048  3461               	retlw	97	;'a'
   244  0049  346E               	retlw	110	;'n'
   245  004A  3463               	retlw	99	;'c'
   246  004B  3465               	retlw	101	;'e'
   247  004C  343A               	retlw	58	;':'
   248  004D  3400               	retlw	0
   249  004E                     STR_4:	
   250  004E  3445               	retlw	69	;'E'
   251  004F  3472               	retlw	114	;'r'
   252  0050  3472               	retlw	114	;'r'
   253  0051  346F               	retlw	111	;'o'
   254  0052  3472               	retlw	114	;'r'
   255  0053  3420               	retlw	32	;' '
   256  0054  3421               	retlw	33	;'!'
   257  0055  3420               	retlw	32	;' '
   258  0056  3400               	retlw	0
   259  0057                     STR_7:	
   260  0057  3420               	retlw	32	;' '
   261  0058  3463               	retlw	99	;'c'
   262  0059  346D               	retlw	109	;'m'
   263  005A  3400               	retlw	0
   264  005B                     __end_of__stringdata:	
   265                           
   266                           	psect	cinit
   267  07D9                     start_initialization:	
   268                           ; #config settings
   269                           
   270  07D9                     __initialization:	
   271                           
   272                           ; Clear objects allocated to BANK0
   273  07D9  01DF               	clrf	__pbssBANK0& (0+127)
   274  07DA  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   275  07DB  01E1               	clrf	(__pbssBANK0+2)& (0+127)
   276  07DC  01E2               	clrf	(__pbssBANK0+3)& (0+127)
   277  07DD  01E3               	clrf	(__pbssBANK0+4)& (0+127)
   278                           
   279                           ; Initialize objects allocated to BANK0
   280  07DE  21A5               	fcall	__pidataBANK0	;fetch initializer
   281  07DF  00CF               	movwf	__pdataBANK0& (0+127)
   282  07E0  21A6               	fcall	__pidataBANK0+1	;fetch initializer
   283  07E1  00D0               	movwf	(__pdataBANK0+1)& (0+127)
   284  07E2  21A7               	fcall	__pidataBANK0+2	;fetch initializer
   285  07E3  00D1               	movwf	(__pdataBANK0+2)& (0+127)
   286  07E4  21A8               	fcall	__pidataBANK0+3	;fetch initializer
   287  07E5  00D2               	movwf	(__pdataBANK0+3)& (0+127)
   288  07E6  21A9               	fcall	__pidataBANK0+4	;fetch initializer
   289  07E7  00D3               	movwf	(__pdataBANK0+4)& (0+127)
   290  07E8  21AA               	fcall	__pidataBANK0+5	;fetch initializer
   291  07E9  00D4               	movwf	(__pdataBANK0+5)& (0+127)
   292  07EA  21AB               	fcall	__pidataBANK0+6	;fetch initializer
   293  07EB  00D5               	movwf	(__pdataBANK0+6)& (0+127)
   294  07EC  21AC               	fcall	__pidataBANK0+7	;fetch initializer
   295  07ED  00D6               	movwf	(__pdataBANK0+7)& (0+127)
   296  07EE  21AD               	fcall	__pidataBANK0+8	;fetch initializer
   297  07EF  00D7               	movwf	(__pdataBANK0+8)& (0+127)
   298  07F0  21AE               	fcall	__pidataBANK0+9	;fetch initializer
   299  07F1  00D8               	movwf	(__pdataBANK0+9)& (0+127)
   300  07F2  21AF               	fcall	__pidataBANK0+10	;fetch initializer
   301  07F3  00D9               	movwf	(__pdataBANK0+10)& (0+127)
   302  07F4  21B0               	fcall	__pidataBANK0+11	;fetch initializer
   303  07F5  00DA               	movwf	(__pdataBANK0+11)& (0+127)
   304  07F6  21B1               	fcall	__pidataBANK0+12	;fetch initializer
   305  07F7  00DB               	movwf	(__pdataBANK0+12)& (0+127)
   306  07F8  21B2               	fcall	__pidataBANK0+13	;fetch initializer
   307  07F9  00DC               	movwf	(__pdataBANK0+13)& (0+127)
   308  07FA  21B3               	fcall	__pidataBANK0+14	;fetch initializer
   309  07FB  00DD               	movwf	(__pdataBANK0+14)& (0+127)
   310  07FC  21B4               	fcall	__pidataBANK0+15	;fetch initializer
   311  07FD  00DE               	movwf	(__pdataBANK0+15)& (0+127)
   312  07FE                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FE                     __end_of__initialization:	
   316  07FE  0183               	clrf	3
   317  07FF  2CD0               	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssBANK0
   320  005F                     __pbssBANK0:	
   321  005F                     LCDWriteInt@F784:	
   322  005F                     	ds	5
   323                           
   324                           	psect	dataBANK0
   325  004F                     __pdataBANK0:	
   326  004F                     ___cgram:	
   327  004F                     	ds	16
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:	
   331  0070                     ?_LCDBusyLoop:	
   332  0070                     ??_LCDBusyLoop:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_LCDInit:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_LCDWriteString:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_HCSR04Init:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ??_HCSR04Init:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_HCSR04Trigger:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ??_HCSR04Trigger:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0070                     ?___awdiv:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0070                     ?___awmod:	
   360                           ; 2 bytes @ 0x0
   361                           
   362  0070                     ?___ftpack:	
   363                           ; 2 bytes @ 0x0
   364                           
   365  0070                     ___awdiv@divisor:	
   366                           ; 3 bytes @ 0x0
   367                           
   368  0070                     ___awmod@divisor:	
   369                           ; 2 bytes @ 0x0
   370                           
   371  0070                     ___ftpack@arg:	
   372                           ; 2 bytes @ 0x0
   373                           
   374                           
   375                           ; 3 bytes @ 0x0
   376  0070                     	ds	2
   377  0072                     LCDBusyLoop@busy:	
   378  0072                     ___awdiv@dividend:	
   379                           ; 1 bytes @ 0x2
   380                           
   381  0072                     ___awmod@dividend:	
   382                           ; 2 bytes @ 0x2
   383                           
   384                           
   385                           ; 2 bytes @ 0x2
   386  0072                     	ds	1
   387  0073                     LCDBusyLoop@temp:	
   388  0073                     ___ftpack@exp:	
   389                           ; 1 bytes @ 0x3
   390                           
   391                           
   392                           ; 1 bytes @ 0x3
   393  0073                     	ds	1
   394  0074                     ??___awdiv:	
   395  0074                     ??___awmod:	
   396                           ; 0 bytes @ 0x4
   397                           
   398  0074                     LCDBusyLoop@status:	
   399                           ; 0 bytes @ 0x4
   400                           
   401  0074                     ___ftpack@sign:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 1 bytes @ 0x4
   406  0074                     	ds	1
   407  0075                     ??___ftpack:	
   408  0075                     ?_LCDByte:	
   409                           ; 0 bytes @ 0x5
   410                           
   411  0075                     LCDByte@isdata:	
   412                           ; 0 bytes @ 0x5
   413                           
   414  0075                     ___awdiv@counter:	
   415                           ; 1 bytes @ 0x5
   416                           
   417  0075                     ___awmod@counter:	
   418                           ; 1 bytes @ 0x5
   419                           
   420                           
   421                           ; 1 bytes @ 0x5
   422  0075                     	ds	1
   423  0076                     ??_LCDByte:	
   424  0076                     ___awdiv@sign:	
   425                           ; 0 bytes @ 0x6
   426                           
   427  0076                     ___awmod@sign:	
   428                           ; 1 bytes @ 0x6
   429                           
   430                           
   431                           ; 1 bytes @ 0x6
   432  0076                     	ds	1
   433  0077                     ___awdiv@quotient:	
   434                           
   435                           ; 2 bytes @ 0x7
   436  0077                     	ds	1
   437  0078                     ?___awtoft:	
   438  0078                     ?___lltoft:	
   439                           ; 3 bytes @ 0x8
   440                           
   441  0078                     LCDByte@hn:	
   442                           ; 3 bytes @ 0x8
   443                           
   444  0078                     ___awtoft@c:	
   445                           ; 1 bytes @ 0x8
   446                           
   447  0078                     ___lltoft@c:	
   448                           ; 2 bytes @ 0x8
   449                           
   450                           
   451                           ; 4 bytes @ 0x8
   452  0078                     	ds	1
   453  0079                     LCDByte@ln:	
   454                           
   455                           ; 1 bytes @ 0x9
   456  0079                     	ds	1
   457  007A                     LCDByte@c:	
   458                           
   459                           ; 1 bytes @ 0xA
   460  007A                     	ds	1
   461  007B                     ??___awtoft:	
   462  007B                     LCDByte@temp:	
   463                           ; 0 bytes @ 0xB
   464                           
   465                           
   466                           ; 1 bytes @ 0xB
   467  007B                     	ds	1
   468  007C                     ??_LCDInit:	
   469  007C                     ??_LCDWriteString:	
   470                           ; 0 bytes @ 0xC
   471                           
   472  007C                     ??_LCDWriteInt:	
   473                           ; 0 bytes @ 0xC
   474                           
   475  007C                     ?_LCDGotoXY:	
   476                           ; 0 bytes @ 0xC
   477                           
   478  007C                     ??___lltoft:	
   479                           ; 0 bytes @ 0xC
   480                           
   481  007C                     LCDGotoXY@y:	
   482                           ; 0 bytes @ 0xC
   483                           
   484                           
   485                           ; 1 bytes @ 0xC
   486  007C                     	ds	1
   487  007D                     ??_LCDGotoXY:	
   488  007D                     ___awtoft@sign:	
   489                           ; 0 bytes @ 0xD
   490                           
   491  007D                     ___lltoft@exp:	
   492                           ; 1 bytes @ 0xD
   493                           
   494                           
   495                           ; 1 bytes @ 0xD
   496  007D                     	ds	1
   497  007E                     ??_GetPulseWidth:	
   498                           
   499                           	psect	cstackBANK0
   500  0020                     __pcstackBANK0:	
   501                           ; 0 bytes @ 0xE
   502                           
   503  0020                     ?_LCDWriteInt:	
   504  0020                     ?___ftmul:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     LCDInit@style:	
   508                           ; 3 bytes @ 0x0
   509                           
   510  0020                     LCDWriteString@cc:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0020                     LCDGotoXY@x:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0020                     LCDWriteInt@val:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0020                     ___ftmul@f1:	
   520                           ; 2 bytes @ 0x0
   521                           
   522                           
   523                           ; 3 bytes @ 0x0
   524  0020                     	ds	1
   525  0021                     LCDInit@__i:	
   526  0021                     LCDWriteString@msg:	
   527                           ; 1 bytes @ 0x1
   528                           
   529                           
   530                           ; 1 bytes @ 0x1
   531  0021                     	ds	1
   532  0022                     LCDWriteInt@field_length:	
   533                           
   534                           ; 1 bytes @ 0x2
   535  0022                     	ds	1
   536  0023                     ___ftmul@f2:	
   537  0023                     LCDWriteInt@str:	
   538                           ; 3 bytes @ 0x3
   539                           
   540                           
   541                           ; 5 bytes @ 0x3
   542  0023                     	ds	3
   543  0026                     ??___ftmul:	
   544                           
   545                           ; 0 bytes @ 0x6
   546  0026                     	ds	2
   547  0028                     LCDWriteInt@j:	
   548                           
   549                           ; 2 bytes @ 0x8
   550  0028                     	ds	2
   551  002A                     ___ftmul@exp:	
   552  002A                     LCDWriteInt@i:	
   553                           ; 1 bytes @ 0xA
   554                           
   555                           
   556                           ; 2 bytes @ 0xA
   557  002A                     	ds	1
   558  002B                     ___ftmul@f3_as_product:	
   559                           
   560                           ; 3 bytes @ 0xB
   561  002B                     	ds	3
   562  002E                     ___ftmul@cntr:	
   563                           
   564                           ; 1 bytes @ 0xE
   565  002E                     	ds	1
   566  002F                     ___ftmul@sign:	
   567                           
   568                           ; 1 bytes @ 0xF
   569  002F                     	ds	1
   570  0030                     ?___fttol:	
   571  0030                     ___fttol@f1:	
   572                           ; 4 bytes @ 0x10
   573                           
   574                           
   575                           ; 3 bytes @ 0x10
   576  0030                     	ds	4
   577  0034                     ??___fttol:	
   578                           
   579                           ; 0 bytes @ 0x14
   580  0034                     	ds	4
   581  0038                     ___fttol@sign1:	
   582                           
   583                           ; 1 bytes @ 0x18
   584  0038                     	ds	1
   585  0039                     ___fttol@lval:	
   586                           
   587                           ; 4 bytes @ 0x19
   588  0039                     	ds	4
   589  003D                     ___fttol@exp1:	
   590                           
   591                           ; 1 bytes @ 0x1D
   592  003D                     	ds	1
   593  003E                     ?_GetPulseWidth:	
   594                           
   595                           ; 2 bytes @ 0x1E
   596  003E                     	ds	2
   597  0040                     GetPulseWidth@result:	
   598                           
   599                           ; 4 bytes @ 0x20
   600  0040                     	ds	4
   601  0044                     GetPulseWidth@i:	
   602                           
   603                           ; 4 bytes @ 0x24
   604  0044                     	ds	4
   605  0048                     ??_main:	
   606                           
   607                           ; 0 bytes @ 0x28
   608  0048                     	ds	3
   609  004B                     main@d:	
   610                           
   611                           ; 2 bytes @ 0x2B
   612  004B                     	ds	2
   613  004D                     main@r:	
   614                           
   615                           ; 2 bytes @ 0x2D
   616  004D                     	ds	2
   617                           
   618                           	psect	maintext
   619  04D0                     __pmaintext:	
   620 ;;
   621 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   622 ;;
   623 ;; *************** function _main *****************
   624 ;; Defined at:
   625 ;;		line 143 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  d               2   43[BANK0 ] int 
   630 ;;  r               2   45[BANK0 ] int 
   631 ;; Return value:  Size  Location     Type
   632 ;;		None               void
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 17F/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1
   640 ;;      Params:         0       0       0
   641 ;;      Locals:         0       4       0
   642 ;;      Temps:          0       3       0
   643 ;;      Totals:         0       7       0
   644 ;;Total ram usage:        7 bytes
   645 ;; Hardware stack levels required when called:    3
   646 ;; This function calls:
   647 ;;		_GetPulseWidth
   648 ;;		_HCSR04Init
   649 ;;		_HCSR04Trigger
   650 ;;		_LCDByte
   651 ;;		_LCDGotoXY
   652 ;;		_LCDInit
   653 ;;		_LCDWriteInt
   654 ;;		_LCDWriteString
   655 ;;		___awtoft
   656 ;;		___ftmul
   657 ;;		___fttol
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _main
   665  04D0                     _main:	
   666                           
   667                           ;main.c: 145: int16_t r;
   668                           ;main.c: 150: PCFG2=1;
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   672  04D0  1683               	bsf	3,5	;RP0=1, select bank1
   673  04D1  1303               	bcf	3,6	;RP1=0, select bank1
   674  04D2  151F               	bsf	31,2	;volatile
   675                           
   676                           ;main.c: 151: PCFG1=1;
   677  04D3  149F               	bsf	31,1	;volatile
   678                           
   679                           ;main.c: 154: LCDInit(0B00000000);
   680  04D4  3000               	movlw	0
   681  04D5  2295               	fcall	_LCDInit
   682                           
   683                           ;main.c: 156: TRISCbits.TRISC2=0;
   684  04D6  1683               	bsf	3,5	;RP0=1, select bank1
   685  04D7  1303               	bcf	3,6	;RP1=0, select bank1
   686  04D8  1107               	bcf	7,2	;volatile
   687                           
   688                           ;main.c: 157: PORTCbits.RC2=1;
   689  04D9  1283               	bcf	3,5	;RP0=0, select bank0
   690  04DA  1303               	bcf	3,6	;RP1=0, select bank0
   691  04DB  1507               	bsf	7,2	;volatile
   692                           
   693                           ;main.c: 160: (LCDByte(0b00000001,0));
   694  04DC  01F5               	clrf	LCDByte@isdata
   695  04DD  3001               	movlw	1
   696  04DE  2256               	fcall	_LCDByte
   697                           
   698                           ;main.c: 163: HCSR04Init();
   699  04DF  2190               	fcall	_HCSR04Init
   700                           
   701                           ;main.c: 166: { LCDGotoXY(0,0); LCDWriteString("     NITIN       ");};
   702  04E0  01FC               	clrf	LCDGotoXY@y
   703  04E1  3000               	movlw	0
   704  04E2  21D4               	fcall	_LCDGotoXY
   705  04E3  3001               	movlw	(STR_1-__stringbase)& (0+255)
   706  04E4  221E               	fcall	_LCDWriteString
   707                           
   708                           ;main.c: 167: { LCDGotoXY(0,1); LCDWriteString("    SANGALE      ");};
   709  04E5  01FC               	clrf	LCDGotoXY@y
   710  04E6  0AFC               	incf	LCDGotoXY@y,f
   711  04E7  3000               	movlw	0
   712  04E8  21D4               	fcall	_LCDGotoXY
   713  04E9  3013               	movlw	(STR_2-__stringbase)& (0+255)
   714  04EA  221E               	fcall	_LCDWriteString
   715                           
   716                           ;main.c: 169: _delay((unsigned long)((2000)*(10000000/4000.0)));
   717  04EB  301A               	movlw	26
   718  04EC  1283               	bcf	3,5	;RP0=0, select bank0
   719  04ED  1303               	bcf	3,6	;RP1=0, select bank0
   720  04EE  00CA               	movwf	??_main+2
   721  04EF  305E               	movlw	94
   722  04F0  00C9               	movwf	??_main+1
   723  04F1  3086               	movlw	134
   724  04F2  00C8               	movwf	??_main
   725  04F3                     u1777:	
   726  04F3  0BC8               	decfsz	??_main,f
   727  04F4  2CF3               	goto	u1777
   728  04F5  0BC9               	decfsz	??_main+1,f
   729  04F6  2CF3               	goto	u1777
   730  04F7  0BCA               	decfsz	??_main+2,f
   731  04F8  2CF3               	goto	u1777
   732  04F9  0000               	nop
   733  04FA                     l1689:	
   734                           ;main.c: 171: while(1)
   735                           
   736                           
   737                           ;main.c: 172: {
   738                           ;main.c: 174: HCSR04Trigger();
   739  04FA  2197               	fcall	_HCSR04Trigger
   740                           
   741                           ;main.c: 177: r=GetPulseWidth();
   742  04FB  2639               	fcall	_GetPulseWidth
   743  04FC  1283               	bcf	3,5	;RP0=0, select bank0
   744  04FD  1303               	bcf	3,6	;RP1=0, select bank0
   745  04FE  083F               	movf	?_GetPulseWidth+1,w
   746  04FF  01CE               	clrf	main@r+1
   747  0500  07CE               	addwf	main@r+1,f
   748  0501  083E               	movf	?_GetPulseWidth,w
   749  0502  01CD               	clrf	main@r
   750  0503  07CD               	addwf	main@r,f
   751                           
   752                           ;main.c: 179: (LCDByte(0b00000001,0));
   753  0504  01F5               	clrf	LCDByte@isdata
   754  0505  3001               	movlw	1
   755  0506  2256               	fcall	_LCDByte
   756                           
   757                           ;main.c: 180: { LCDGotoXY(0,0); LCDWriteString("DISTANCE METER");};
   758  0507  01FC               	clrf	LCDGotoXY@y
   759  0508  3000               	movlw	0
   760  0509  21D4               	fcall	_LCDGotoXY
   761  050A  3025               	movlw	(STR_3-__stringbase)& (0+255)
   762  050B  221E               	fcall	_LCDWriteString
   763                           
   764                           ;main.c: 183: if(r==-1)
   765  050C  30FF               	movlw	255
   766  050D  1283               	bcf	3,5	;RP0=0, select bank0
   767  050E  1303               	bcf	3,6	;RP1=0, select bank0
   768  050F  064E               	xorwf	main@r+1,w
   769  0510  1D03               	skipz
   770  0511  2D14               	goto	u1755
   771  0512  30FF               	movlw	255
   772  0513  064D               	xorwf	main@r,w
   773  0514                     u1755:	
   774  0514  1D03               	skipz
   775  0515  2D1C               	goto	l1703
   776                           
   777                           ;main.c: 184: {
   778                           ;main.c: 185: { LCDGotoXY(0,1); LCDWriteString("Error ! ");};
   779  0516  01FC               	clrf	LCDGotoXY@y
   780  0517  0AFC               	incf	LCDGotoXY@y,f
   781  0518  3000               	movlw	0
   782  0519  21D4               	fcall	_LCDGotoXY
   783  051A  3048               	movlw	(STR_4-__stringbase)& (0+255)
   784  051B  2D6D               	goto	L1
   785  051C                     l1703:	
   786                           ;main.c: 186: }
   787                           
   788                           
   789                           ;main.c: 187: else if(r==-2)
   790  051C  30FF               	movlw	255
   791  051D  1283               	bcf	3,5	;RP0=0, select bank0
   792  051E  1303               	bcf	3,6	;RP1=0, select bank0
   793  051F  064E               	xorwf	main@r+1,w
   794  0520  1D03               	skipz
   795  0521  2D24               	goto	u1765
   796  0522  30FE               	movlw	254
   797  0523  064D               	xorwf	main@r,w
   798  0524                     u1765:	
   799  0524  1D03               	skipz
   800  0525  2D2C               	goto	l1707
   801                           
   802                           ;main.c: 188: {
   803                           ;main.c: 189: { LCDGotoXY(0,1); LCDWriteString("Clear !  ");};
   804  0526  01FC               	clrf	LCDGotoXY@y
   805  0527  0AFC               	incf	LCDGotoXY@y,f
   806  0528  3000               	movlw	0
   807  0529  21D4               	fcall	_LCDGotoXY
   808  052A  3034               	movlw	(STR_5-__stringbase)& (0+255)
   809  052B  2D6D               	goto	L1
   810  052C                     l1707:	
   811                           ;main.c: 190: }
   812                           
   813                           
   814                           ;main.c: 191: else
   815                           ;main.c: 192: {
   816                           ;main.c: 193: int d;
   817                           ;main.c: 194: d=(r*0.01718);
   818  052C  1283               	bcf	3,5	;RP0=0, select bank0
   819  052D  1303               	bcf	3,6	;RP1=0, select bank0
   820  052E  084E               	movf	main@r+1,w
   821  052F  01F9               	clrf	___awtoft@c+1
   822  0530  07F9               	addwf	___awtoft@c+1,f
   823  0531  084D               	movf	main@r,w
   824  0532  01F8               	clrf	___awtoft@c
   825  0533  07F8               	addwf	___awtoft@c,f
   826  0534  21B5               	fcall	___awtoft
   827  0535  0878               	movf	?___awtoft,w
   828  0536  1283               	bcf	3,5	;RP0=0, select bank0
   829  0537  1303               	bcf	3,6	;RP1=0, select bank0
   830  0538  00A3               	movwf	___ftmul@f2
   831  0539  0879               	movf	?___awtoft+1,w
   832  053A  00A4               	movwf	___ftmul@f2+1
   833  053B  087A               	movf	?___awtoft+2,w
   834  053C  00A5               	movwf	___ftmul@f2+2
   835  053D  30BD               	movlw	189
   836  053E  00A0               	movwf	___ftmul@f1
   837  053F  308C               	movlw	140
   838  0540  00A1               	movwf	___ftmul@f1+1
   839  0541  303C               	movlw	60
   840  0542  00A2               	movwf	___ftmul@f1+2
   841  0543  2708               	fcall	___ftmul
   842  0544  1283               	bcf	3,5	;RP0=0, select bank0
   843  0545  1303               	bcf	3,6	;RP1=0, select bank0
   844  0546  0820               	movf	?___ftmul,w
   845  0547  00B0               	movwf	___fttol@f1
   846  0548  0821               	movf	?___ftmul+1,w
   847  0549  00B1               	movwf	___fttol@f1+1
   848  054A  0822               	movf	?___ftmul+2,w
   849  054B  00B2               	movwf	___fttol@f1+2
   850  054C  2442               	fcall	___fttol
   851  054D  1283               	bcf	3,5	;RP0=0, select bank0
   852  054E  1303               	bcf	3,6	;RP1=0, select bank0
   853  054F  0831               	movf	?___fttol+1,w
   854  0550  01CC               	clrf	main@d+1
   855  0551  07CC               	addwf	main@d+1,f
   856  0552  0830               	movf	?___fttol,w
   857  0553  01CB               	clrf	main@d
   858  0554  07CB               	addwf	main@d,f
   859                           
   860                           ;main.c: 196: { LCDGotoXY(0,1); LCDWriteString("Distance:");};
   861  0555  01FC               	clrf	LCDGotoXY@y
   862  0556  0AFC               	incf	LCDGotoXY@y,f
   863  0557  3000               	movlw	0
   864  0558  21D4               	fcall	_LCDGotoXY
   865  0559  303E               	movlw	(STR_6-__stringbase)& (0+255)
   866  055A  221E               	fcall	_LCDWriteString
   867                           
   868                           ;main.c: 197: { LCDGotoXY(9,1); LCDWriteInt(d,3);};
   869  055B  01FC               	clrf	LCDGotoXY@y
   870  055C  0AFC               	incf	LCDGotoXY@y,f
   871  055D  3009               	movlw	9
   872  055E  21D4               	fcall	_LCDGotoXY
   873  055F  1283               	bcf	3,5	;RP0=0, select bank0
   874  0560  1303               	bcf	3,6	;RP1=0, select bank0
   875  0561  084C               	movf	main@d+1,w
   876  0562  01A1               	clrf	LCDWriteInt@val+1
   877  0563  07A1               	addwf	LCDWriteInt@val+1,f
   878  0564  084B               	movf	main@d,w
   879  0565  01A0               	clrf	LCDWriteInt@val
   880  0566  07A0               	addwf	LCDWriteInt@val,f
   881  0567  3003               	movlw	3
   882  0568  00C8               	movwf	??_main
   883  0569  0848               	movf	??_main,w
   884  056A  00A2               	movwf	LCDWriteInt@field_length
   885  056B  257E               	fcall	_LCDWriteInt
   886                           
   887                           ;main.c: 198: LCDWriteString(" cm");
   888  056C  3051               	movlw	(STR_7-__stringbase)& (0+255)
   889  056D                     L1:	
   890  056D  221E               	fcall	_LCDWriteString
   891                           
   892                           ;main.c: 200: }
   893                           ;main.c: 201: _delay((unsigned long)((250)*(10000000/4000.0)));
   894  056E  3004               	movlw	4
   895  056F  1283               	bcf	3,5	;RP0=0, select bank0
   896  0570  1303               	bcf	3,6	;RP1=0, select bank0
   897  0571  00CA               	movwf	??_main+2
   898  0572  302C               	movlw	44
   899  0573  00C9               	movwf	??_main+1
   900  0574  30AD               	movlw	173
   901  0575  00C8               	movwf	??_main
   902  0576                     u1787:	
   903  0576  0BC8               	decfsz	??_main,f
   904  0577  2D76               	goto	u1787
   905  0578  0BC9               	decfsz	??_main+1,f
   906  0579  2D76               	goto	u1787
   907  057A  0BCA               	decfsz	??_main+2,f
   908  057B  2D76               	goto	u1787
   909  057C  2D7D               	nop2
   910  057D  2CFA               	goto	l1689
   911  057E                     __end_of_main:	
   912                           
   913                           	psect	text1
   914  01B5                     __ptext1:	
   915 ;; *************** function ___awtoft *****************
   916 ;; Defined at:
   917 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  c               2    8[COMMON] int 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  sign            1   13[COMMON] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  3    8[COMMON] float 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1
   931 ;;      Params:         3       0       0
   932 ;;      Locals:         1       0       0
   933 ;;      Temps:          2       0       0
   934 ;;      Totals:         6       0       0
   935 ;;Total ram usage:        6 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    1
   938 ;; This function calls:
   939 ;;		___ftpack
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           
   946                           ;psect for function ___awtoft
   947  01B5                     ___awtoft:	
   948                           
   949                           ;incstack = 0
   950                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
   951  01B5  01FD               	clrf	___awtoft@sign
   952  01B6  1FF9               	btfss	___awtoft@c+1,7
   953  01B7  29BF               	goto	l1671
   954  01B8  09F8               	comf	___awtoft@c,f
   955  01B9  09F9               	comf	___awtoft@c+1,f
   956  01BA  0AF8               	incf	___awtoft@c,f
   957  01BB  1903               	skipnz
   958  01BC  0AF9               	incf	___awtoft@c+1,f
   959  01BD  01FD               	clrf	___awtoft@sign
   960  01BE  0AFD               	incf	___awtoft@sign,f
   961  01BF                     l1671:	
   962  01BF  0878               	movf	___awtoft@c,w
   963  01C0  00F0               	movwf	___ftpack@arg
   964  01C1  0879               	movf	___awtoft@c+1,w
   965  01C2  00F1               	movwf	___ftpack@arg+1
   966  01C3  01F2               	clrf	___ftpack@arg+2
   967  01C4  308E               	movlw	142
   968  01C5  00FB               	movwf	??___awtoft
   969  01C6  087B               	movf	??___awtoft,w
   970  01C7  00F3               	movwf	___ftpack@exp
   971  01C8  087D               	movf	___awtoft@sign,w
   972  01C9  00FC               	movwf	??___awtoft+1
   973  01CA  087C               	movf	??___awtoft+1,w
   974  01CB  00F4               	movwf	___ftpack@sign
   975  01CC  23DA               	fcall	___ftpack
   976  01CD  0870               	movf	?___ftpack,w
   977  01CE  00F8               	movwf	?___awtoft
   978  01CF  0871               	movf	?___ftpack+1,w
   979  01D0  00F9               	movwf	?___awtoft+1
   980  01D1  0872               	movf	?___ftpack+2,w
   981  01D2  00FA               	movwf	?___awtoft+2
   982  01D3  0008               	return
   983  01D4                     __end_of___awtoft:	
   984                           
   985                           	psect	text2
   986  021E                     __ptext2:	
   987 ;; *************** function _LCDWriteString *****************
   988 ;; Defined at:
   989 ;;		line 253 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\lcd_hd44780_pic16.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  msg             1    wreg     PTR const unsigned char 
   992 ;;		 -> STR_7(4), STR_6(10), STR_5(10), STR_4(9), 
   993 ;;		 -> STR_3(15), STR_2(18), STR_1(18), 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
   996 ;;		 -> STR_7(4), STR_6(10), STR_5(10), STR_4(9), 
   997 ;;		 -> STR_3(15), STR_2(18), STR_1(18), 
   998 ;;  cc              1    0[BANK0 ] char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1
  1008 ;;      Params:         0       0       0
  1009 ;;      Locals:         0       2       0
  1010 ;;      Temps:          1       0       0
  1011 ;;      Totals:         1       2       0
  1012 ;;Total ram usage:        3 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    2
  1015 ;; This function calls:
  1016 ;;		_LCDByte
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _LCDWriteString
  1024  021E                     _LCDWriteString:	
  1025                           
  1026                           ;incstack = 0
  1027                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1028                           ;LCDWriteString@msg stored from wreg
  1029  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1030  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0220  00A1               	movwf	LCDWriteString@msg
  1032  0221                     l1531:	
  1033                           ;lcd_hd44780_pic16.c: 283: while(*msg!='\0')
  1034                           
  1035  0221  0821               	movf	LCDWriteString@msg,w
  1036  0222  0084               	movwf	4
  1037  0223  2001               	fcall	stringdir
  1038  0224  3800               	iorlw	0
  1039  0225  1903               	btfsc	3,2
  1040  0226  0008               	return
  1041                           
  1042                           ;lcd_hd44780_pic16.c: 284: {
  1043                           ;lcd_hd44780_pic16.c: 286: if(*msg=='%')
  1044  0227  0821               	movf	LCDWriteString@msg,w
  1045  0228  0084               	movwf	4
  1046  0229  2001               	fcall	stringdir
  1047  022A  3A25               	xorlw	37
  1048  022B  1D03               	skipz
  1049  022C  2A47               	goto	l1527
  1050                           
  1051                           ;lcd_hd44780_pic16.c: 287: {
  1052                           ;lcd_hd44780_pic16.c: 288: msg++;
  1053  022D  3001               	movlw	1
  1054  022E  00FC               	movwf	??_LCDWriteString
  1055  022F  087C               	movf	??_LCDWriteString,w
  1056  0230  07A1               	addwf	LCDWriteString@msg,f
  1057                           
  1058                           ;lcd_hd44780_pic16.c: 289: int8_t cc=*msg-'0';
  1059  0231  0821               	movf	LCDWriteString@msg,w
  1060  0232  0084               	movwf	4
  1061  0233  2001               	fcall	stringdir
  1062  0234  3ED0               	addlw	-48
  1063  0235  00FC               	movwf	??_LCDWriteString
  1064  0236  087C               	movf	??_LCDWriteString,w
  1065  0237  00A0               	movwf	LCDWriteString@cc
  1066                           
  1067                           ;lcd_hd44780_pic16.c: 291: if(cc>=0 && cc<=7)
  1068  0238  1BA0               	btfsc	LCDWriteString@cc,7
  1069  0239  2A43               	goto	l1523
  1070  023A  0820               	movf	LCDWriteString@cc,w
  1071  023B  3A80               	xorlw	128
  1072  023C  3E78               	addlw	-136
  1073  023D  1803               	skipnc
  1074  023E  2A43               	goto	l1523
  1075                           
  1076                           ;lcd_hd44780_pic16.c: 292: {
  1077                           ;lcd_hd44780_pic16.c: 293: (LCDByte(cc,1));
  1078  023F  01F5               	clrf	LCDByte@isdata
  1079  0240  0AF5               	incf	LCDByte@isdata,f
  1080  0241  0820               	movf	LCDWriteString@cc,w
  1081  0242  2A4E               	goto	L2
  1082  0243                     l1523:	
  1083                           ;lcd_hd44780_pic16.c: 294: }
  1084                           
  1085                           
  1086                           ;lcd_hd44780_pic16.c: 295: else
  1087                           ;lcd_hd44780_pic16.c: 296: {
  1088                           ;lcd_hd44780_pic16.c: 297: (LCDByte('%',1));
  1089  0243  01F5               	clrf	LCDByte@isdata
  1090  0244  0AF5               	incf	LCDByte@isdata,f
  1091  0245  3025               	movlw	37
  1092  0246  2256               	fcall	_LCDByte
  1093  0247                     l1527:	
  1094                           ;lcd_hd44780_pic16.c: 299: }
  1095                           ;lcd_hd44780_pic16.c: 300: }
  1096                           
  1097                           ;lcd_hd44780_pic16.c: 298: (LCDByte(*msg,1));
  1098                           
  1099                           
  1100                           ;lcd_hd44780_pic16.c: 301: else
  1101                           ;lcd_hd44780_pic16.c: 302: {
  1102                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
  1103  0247  01F5               	clrf	LCDByte@isdata
  1104  0248  0AF5               	incf	LCDByte@isdata,f
  1105  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1106  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1107  024B  0821               	movf	LCDWriteString@msg,w
  1108  024C  0084               	movwf	4
  1109  024D  2001               	fcall	stringdir
  1110  024E                     L2:	
  1111  024E  2256               	fcall	_LCDByte
  1112                           
  1113                           ;lcd_hd44780_pic16.c: 304: }
  1114                           ;lcd_hd44780_pic16.c: 305: msg++;
  1115  024F  3001               	movlw	1
  1116  0250  00FC               	movwf	??_LCDWriteString
  1117  0251  087C               	movf	??_LCDWriteString,w
  1118  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0254  07A1               	addwf	LCDWriteString@msg,f
  1121  0255  2A21               	goto	l1531
  1122  0256                     __end_of_LCDWriteString:	
  1123                           
  1124                           	psect	text3
  1125  057E                     __ptext3:	
  1126 ;; *************** function _LCDWriteInt *****************
  1127 ;; Defined at:
  1128 ;;		line 309 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\lcd_hd44780_pic16.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  val             2    0[BANK0 ] int 
  1131 ;;  field_length    1    2[BANK0 ] char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  str             5    3[BANK0 ] unsigned char [5]
  1134 ;;  i               2   10[BANK0 ] int 
  1135 ;;  j               2    8[BANK0 ] int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;		None               void
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1
  1145 ;;      Params:         0       3       0
  1146 ;;      Locals:         0       9       0
  1147 ;;      Temps:          2       0       0
  1148 ;;      Totals:         2      12       0
  1149 ;;Total ram usage:       14 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    2
  1152 ;; This function calls:
  1153 ;;		_LCDByte
  1154 ;;		___awdiv
  1155 ;;		___awmod
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _LCDWriteInt
  1163  057E                     _LCDWriteInt:	
  1164                           
  1165                           ;lcd_hd44780_pic16.c: 322: char str[5]={0,0,0,0,0};
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1169  057E  3023               	movlw	LCDWriteInt@str& (0+255)
  1170  057F  0084               	movwf	4
  1171  0580  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0581  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0582  085F               	movf	LCDWriteInt@F784,w
  1174  0583  1383               	bcf	3,7	;select IRP bank0
  1175  0584  0080               	movwf	0
  1176  0585  0A84               	incf	4,f
  1177  0586  0860               	movf	LCDWriteInt@F784+1,w
  1178  0587  0080               	movwf	0
  1179  0588  0A84               	incf	4,f
  1180  0589  0861               	movf	LCDWriteInt@F784+2,w
  1181  058A  0080               	movwf	0
  1182  058B  0A84               	incf	4,f
  1183  058C  0862               	movf	LCDWriteInt@F784+3,w
  1184  058D  0080               	movwf	0
  1185  058E  0A84               	incf	4,f
  1186  058F  0863               	movf	LCDWriteInt@F784+4,w
  1187  0590  0080               	movwf	0
  1188                           
  1189                           ;lcd_hd44780_pic16.c: 323: int i=4,j=0;
  1190  0591  3004               	movlw	4
  1191  0592  00AA               	movwf	LCDWriteInt@i
  1192  0593  3000               	movlw	0
  1193  0594  00AB               	movwf	LCDWriteInt@i+1
  1194  0595  01A8               	clrf	LCDWriteInt@j
  1195  0596  01A9               	clrf	LCDWriteInt@j+1
  1196                           
  1197                           ;lcd_hd44780_pic16.c: 326: if(val<0)
  1198  0597  1FA1               	btfss	LCDWriteInt@val+1,7
  1199  0598  2DA5               	goto	l1545
  1200                           
  1201                           ;lcd_hd44780_pic16.c: 327: {
  1202                           ;lcd_hd44780_pic16.c: 328: (LCDByte('-',1));
  1203  0599  01F5               	clrf	LCDByte@isdata
  1204  059A  0AF5               	incf	LCDByte@isdata,f
  1205  059B  302D               	movlw	45
  1206  059C  2256               	fcall	_LCDByte
  1207                           
  1208                           ;lcd_hd44780_pic16.c: 329: val=val*-1;
  1209  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1210  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1211  059F  09A0               	comf	LCDWriteInt@val,f
  1212  05A0  09A1               	comf	LCDWriteInt@val+1,f
  1213  05A1  0AA0               	incf	LCDWriteInt@val,f
  1214  05A2  1903               	skipnz
  1215  05A3  0AA1               	incf	LCDWriteInt@val+1,f
  1216                           
  1217                           ;lcd_hd44780_pic16.c: 330: }
  1218  05A4  2DA9               	goto	l1547
  1219  05A5                     l1545:	
  1220                           
  1221                           ;lcd_hd44780_pic16.c: 331: else
  1222                           ;lcd_hd44780_pic16.c: 332: {
  1223                           ;lcd_hd44780_pic16.c: 333: (LCDByte(' ',1));
  1224  05A5  01F5               	clrf	LCDByte@isdata
  1225  05A6  0AF5               	incf	LCDByte@isdata,f
  1226  05A7  3020               	movlw	32
  1227  05A8  2256               	fcall	_LCDByte
  1228  05A9                     l1547:	
  1229                           
  1230                           ;lcd_hd44780_pic16.c: 334: }
  1231                           ;lcd_hd44780_pic16.c: 336: if(val==0 && field_length<1)
  1232  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1233  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1234  05AB  0821               	movf	LCDWriteInt@val+1,w
  1235  05AC  0420               	iorwf	LCDWriteInt@val,w
  1236  05AD  1D03               	skipz
  1237  05AE  2DE9               	goto	l1561
  1238  05AF  0822               	movf	LCDWriteInt@field_length,w
  1239  05B0  3A80               	xorlw	128
  1240  05B1  3E7F               	addlw	-129
  1241  05B2  1803               	skipnc
  1242  05B3  2DE9               	goto	l1561
  1243                           
  1244                           ;lcd_hd44780_pic16.c: 337: {
  1245                           ;lcd_hd44780_pic16.c: 338: (LCDByte('0',1));
  1246  05B4  01F5               	clrf	LCDByte@isdata
  1247  05B5  0AF5               	incf	LCDByte@isdata,f
  1248  05B6  3030               	movlw	48
  1249  05B7  2256               	fcall	_LCDByte
  1250                           
  1251                           ;lcd_hd44780_pic16.c: 339: return;
  1252  05B8  0008               	return
  1253  05B9                     l1555:	
  1254                           ;lcd_hd44780_pic16.c: 340: }
  1255                           ;lcd_hd44780_pic16.c: 342: while(val)
  1256                           
  1257                           
  1258                           ;lcd_hd44780_pic16.c: 343: {
  1259                           ;lcd_hd44780_pic16.c: 344: str[i]=val%10;
  1260  05B9  300A               	movlw	10
  1261  05BA  00F0               	movwf	___awmod@divisor
  1262  05BB  3000               	movlw	0
  1263  05BC  00F1               	movwf	___awmod@divisor+1
  1264  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1265  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1266  05BF  0821               	movf	LCDWriteInt@val+1,w
  1267  05C0  01F3               	clrf	___awmod@dividend+1
  1268  05C1  07F3               	addwf	___awmod@dividend+1,f
  1269  05C2  0820               	movf	LCDWriteInt@val,w
  1270  05C3  01F2               	clrf	___awmod@dividend
  1271  05C4  07F2               	addwf	___awmod@dividend,f
  1272  05C5  22E0               	fcall	___awmod
  1273  05C6  0870               	movf	?___awmod,w
  1274  05C7  00FC               	movwf	??_LCDWriteInt
  1275  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1276  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1277  05CA  082A               	movf	LCDWriteInt@i,w
  1278  05CB  3E23               	addlw	LCDWriteInt@str& (0+255)
  1279  05CC  0084               	movwf	4
  1280  05CD  087C               	movf	??_LCDWriteInt,w
  1281  05CE  1383               	bcf	3,7	;select IRP bank0
  1282  05CF  0080               	movwf	0
  1283                           
  1284                           ;lcd_hd44780_pic16.c: 345: val=val/10;
  1285  05D0  300A               	movlw	10
  1286  05D1  00F0               	movwf	___awdiv@divisor
  1287  05D2  3000               	movlw	0
  1288  05D3  00F1               	movwf	___awdiv@divisor+1
  1289  05D4  0821               	movf	LCDWriteInt@val+1,w
  1290  05D5  01F3               	clrf	___awdiv@dividend+1
  1291  05D6  07F3               	addwf	___awdiv@dividend+1,f
  1292  05D7  0820               	movf	LCDWriteInt@val,w
  1293  05D8  01F2               	clrf	___awdiv@dividend
  1294  05D9  07F2               	addwf	___awdiv@dividend,f
  1295  05DA  237F               	fcall	___awdiv
  1296  05DB  0871               	movf	?___awdiv+1,w
  1297  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1298  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1299  05DE  01A1               	clrf	LCDWriteInt@val+1
  1300  05DF  07A1               	addwf	LCDWriteInt@val+1,f
  1301  05E0  0870               	movf	?___awdiv,w
  1302  05E1  01A0               	clrf	LCDWriteInt@val
  1303  05E2  07A0               	addwf	LCDWriteInt@val,f
  1304                           
  1305                           ;lcd_hd44780_pic16.c: 346: i--;
  1306  05E3  30FF               	movlw	255
  1307  05E4  07AA               	addwf	LCDWriteInt@i,f
  1308  05E5  1803               	skipnc
  1309  05E6  0AAB               	incf	LCDWriteInt@i+1,f
  1310  05E7  30FF               	movlw	255
  1311  05E8  07AB               	addwf	LCDWriteInt@i+1,f
  1312  05E9                     l1561:	
  1313  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1314  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1315  05EB  0821               	movf	LCDWriteInt@val+1,w
  1316  05EC  0420               	iorwf	LCDWriteInt@val,w
  1317  05ED  1D03               	skipz
  1318  05EE  2DB9               	goto	l1555
  1319                           
  1320                           ;lcd_hd44780_pic16.c: 347: }
  1321                           ;lcd_hd44780_pic16.c: 348: if(field_length==-1)
  1322  05EF  0822               	movf	LCDWriteInt@field_length,w
  1323  05F0  3AFF               	xorlw	-1
  1324  05F1  1903               	btfsc	3,2
  1325  05F2  2DFA               	goto	l1569
  1326  05F3  2E02               	goto	l1571
  1327  05F4                     l1567:	
  1328                           ;lcd_hd44780_pic16.c: 349: while(str[j]==0) j++;
  1329                           
  1330  05F4  3001               	movlw	1
  1331  05F5  07A8               	addwf	LCDWriteInt@j,f
  1332  05F6  1803               	skipnc
  1333  05F7  0AA9               	incf	LCDWriteInt@j+1,f
  1334  05F8  3000               	movlw	0
  1335  05F9  07A9               	addwf	LCDWriteInt@j+1,f
  1336  05FA                     l1569:	
  1337  05FA  0828               	movf	LCDWriteInt@j,w
  1338  05FB  3E23               	addlw	LCDWriteInt@str& (0+255)
  1339  05FC  0084               	movwf	4
  1340  05FD  1383               	bcf	3,7	;select IRP bank0
  1341  05FE  0880               	movf	0,f
  1342  05FF  1D03               	btfss	3,2
  1343  0600  2E14               	goto	l59
  1344  0601  2DF4               	goto	l1567
  1345  0602                     l1571:	
  1346                           
  1347                           ;lcd_hd44780_pic16.c: 350: else
  1348                           ;lcd_hd44780_pic16.c: 351: j=5-field_length;
  1349  0602  0822               	movf	LCDWriteInt@field_length,w
  1350  0603  00FC               	movwf	??_LCDWriteInt
  1351  0604  01FD               	clrf	??_LCDWriteInt+1
  1352  0605  1BFC               	btfsc	??_LCDWriteInt,7
  1353  0606  03FD               	decf	??_LCDWriteInt+1,f
  1354  0607  09FC               	comf	??_LCDWriteInt,f
  1355  0608  09FD               	comf	??_LCDWriteInt+1,f
  1356  0609  0AFC               	incf	??_LCDWriteInt,f
  1357  060A  1903               	skipnz
  1358  060B  0AFD               	incf	??_LCDWriteInt+1,f
  1359  060C  087C               	movf	??_LCDWriteInt,w
  1360  060D  3E05               	addlw	5
  1361  060E  00A8               	movwf	LCDWriteInt@j
  1362  060F  087D               	movf	??_LCDWriteInt+1,w
  1363  0610  1803               	skipnc
  1364  0611  3E01               	addlw	1
  1365  0612  3E00               	addlw	0
  1366  0613  00A9               	movwf	LCDWriteInt@j+1
  1367  0614                     l59:	
  1368                           
  1369                           ;lcd_hd44780_pic16.c: 354: for(i=j;i<5;i++)
  1370  0614  0829               	movf	LCDWriteInt@j+1,w
  1371  0615  01AB               	clrf	LCDWriteInt@i+1
  1372  0616  07AB               	addwf	LCDWriteInt@i+1,f
  1373  0617  0828               	movf	LCDWriteInt@j,w
  1374  0618  01AA               	clrf	LCDWriteInt@i
  1375  0619  07AA               	addwf	LCDWriteInt@i,f
  1376  061A                     L3:	
  1377  061A  082B               	movf	LCDWriteInt@i+1,w
  1378  061B  3A80               	xorlw	128
  1379  061C  00FF               	movwf	127
  1380  061D  3080               	movlw	128
  1381  061E  027F               	subwf	127,w
  1382  061F  1D03               	skipz
  1383  0620  2E23               	goto	u1615
  1384  0621  3005               	movlw	5
  1385  0622  022A               	subwf	LCDWriteInt@i,w
  1386  0623                     u1615:	
  1387  0623  1803               	btfsc	3,0
  1388  0624  0008               	return
  1389                           
  1390                           ;lcd_hd44780_pic16.c: 355: {
  1391                           ;lcd_hd44780_pic16.c: 356: (LCDByte(48+str[i],1));
  1392  0625  01F5               	clrf	LCDByte@isdata
  1393  0626  0AF5               	incf	LCDByte@isdata,f
  1394  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0629  082A               	movf	LCDWriteInt@i,w
  1397  062A  3E23               	addlw	LCDWriteInt@str& (0+255)
  1398  062B  0084               	movwf	4
  1399  062C  1383               	bcf	3,7	;select IRP bank0
  1400  062D  0800               	movf	0,w
  1401  062E  3E30               	addlw	48
  1402  062F  2256               	fcall	_LCDByte
  1403  0630  3001               	movlw	1
  1404  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0633  07AA               	addwf	LCDWriteInt@i,f
  1407  0634  1803               	skipnc
  1408  0635  0AAB               	incf	LCDWriteInt@i+1,f
  1409  0636  3000               	movlw	0
  1410  0637  07AB               	addwf	LCDWriteInt@i+1,f
  1411  0638  2E1A               	goto	L3
  1412  0639                     __end_of_LCDWriteInt:	
  1413                           
  1414                           	psect	text4
  1415  02E0                     __ptext4:	
  1416 ;; *************** function ___awmod *****************
  1417 ;; Defined at:
  1418 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  divisor         2    0[COMMON] int 
  1421 ;;  dividend        2    2[COMMON] int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  sign            1    6[COMMON] unsigned char 
  1424 ;;  counter         1    5[COMMON] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2    0[COMMON] int 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1
  1434 ;;      Params:         4       0       0
  1435 ;;      Locals:         2       0       0
  1436 ;;      Temps:          1       0       0
  1437 ;;      Totals:         7       0       0
  1438 ;;Total ram usage:        7 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_LCDWriteInt
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function ___awmod
  1449  02E0                     ___awmod:	
  1450                           
  1451                           ;incstack = 0
  1452                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1453  02E0  01F6               	clrf	___awmod@sign
  1454  02E1  1FF3               	btfss	___awmod@dividend+1,7
  1455  02E2  2AEA               	goto	l1325
  1456  02E3  09F2               	comf	___awmod@dividend,f
  1457  02E4  09F3               	comf	___awmod@dividend+1,f
  1458  02E5  0AF2               	incf	___awmod@dividend,f
  1459  02E6  1903               	skipnz
  1460  02E7  0AF3               	incf	___awmod@dividend+1,f
  1461  02E8  01F6               	clrf	___awmod@sign
  1462  02E9  0AF6               	incf	___awmod@sign,f
  1463  02EA                     l1325:	
  1464  02EA  1FF1               	btfss	___awmod@divisor+1,7
  1465  02EB  2AF1               	goto	l1329
  1466  02EC  09F0               	comf	___awmod@divisor,f
  1467  02ED  09F1               	comf	___awmod@divisor+1,f
  1468  02EE  0AF0               	incf	___awmod@divisor,f
  1469  02EF  1903               	skipnz
  1470  02F0  0AF1               	incf	___awmod@divisor+1,f
  1471  02F1                     l1329:	
  1472  02F1  0871               	movf	___awmod@divisor+1,w
  1473  02F2  0470               	iorwf	___awmod@divisor,w
  1474  02F3  1903               	skipnz
  1475  02F4  2B1E               	goto	l1347
  1476  02F5  01F5               	clrf	___awmod@counter
  1477  02F6  0AF5               	incf	___awmod@counter,f
  1478  02F7                     l1337:	
  1479  02F7  1BF1               	btfsc	___awmod@divisor+1,7
  1480  02F8  2B05               	goto	l1339
  1481  02F9  3001               	movlw	1
  1482  02FA                     u1175:	
  1483  02FA  1003               	clrc
  1484  02FB  0DF0               	rlf	___awmod@divisor,f
  1485  02FC  0DF1               	rlf	___awmod@divisor+1,f
  1486  02FD  3EFF               	addlw	-1
  1487  02FE  1D03               	skipz
  1488  02FF  2AFA               	goto	u1175
  1489  0300  3001               	movlw	1
  1490  0301  00F4               	movwf	??___awmod
  1491  0302  0874               	movf	??___awmod,w
  1492  0303  07F5               	addwf	___awmod@counter,f
  1493  0304  2AF7               	goto	l1337
  1494  0305                     l1339:	
  1495  0305  0871               	movf	___awmod@divisor+1,w
  1496  0306  0273               	subwf	___awmod@dividend+1,w
  1497  0307  1D03               	skipz
  1498  0308  2B0B               	goto	u1195
  1499  0309  0870               	movf	___awmod@divisor,w
  1500  030A  0272               	subwf	___awmod@dividend,w
  1501  030B                     u1195:	
  1502  030B  1C03               	skipc
  1503  030C  2B13               	goto	l1343
  1504  030D  0870               	movf	___awmod@divisor,w
  1505  030E  02F2               	subwf	___awmod@dividend,f
  1506  030F  0871               	movf	___awmod@divisor+1,w
  1507  0310  1C03               	skipc
  1508  0311  03F3               	decf	___awmod@dividend+1,f
  1509  0312  02F3               	subwf	___awmod@dividend+1,f
  1510  0313                     l1343:	
  1511  0313  3001               	movlw	1
  1512  0314                     u1205:	
  1513  0314  1003               	clrc
  1514  0315  0CF1               	rrf	___awmod@divisor+1,f
  1515  0316  0CF0               	rrf	___awmod@divisor,f
  1516  0317  3EFF               	addlw	-1
  1517  0318  1D03               	skipz
  1518  0319  2B14               	goto	u1205
  1519  031A  3001               	movlw	1
  1520  031B  02F5               	subwf	___awmod@counter,f
  1521  031C  1D03               	btfss	3,2
  1522  031D  2B05               	goto	l1339
  1523  031E                     l1347:	
  1524  031E  0876               	movf	___awmod@sign,w
  1525  031F  1903               	btfsc	3,2
  1526  0320  2B26               	goto	l1351
  1527  0321  09F2               	comf	___awmod@dividend,f
  1528  0322  09F3               	comf	___awmod@dividend+1,f
  1529  0323  0AF2               	incf	___awmod@dividend,f
  1530  0324  1903               	skipnz
  1531  0325  0AF3               	incf	___awmod@dividend+1,f
  1532  0326                     l1351:	
  1533  0326  0873               	movf	___awmod@dividend+1,w
  1534  0327  01F1               	clrf	?___awmod+1
  1535  0328  07F1               	addwf	?___awmod+1,f
  1536  0329  0872               	movf	___awmod@dividend,w
  1537  032A  01F0               	clrf	?___awmod
  1538  032B  07F0               	addwf	?___awmod,f
  1539  032C  0008               	return
  1540  032D                     __end_of___awmod:	
  1541                           
  1542                           	psect	text5
  1543  037F                     __ptext5:	
  1544 ;; *************** function ___awdiv *****************
  1545 ;; Defined at:
  1546 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  divisor         2    0[COMMON] int 
  1549 ;;  dividend        2    2[COMMON] int 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  quotient        2    7[COMMON] int 
  1552 ;;  sign            1    6[COMMON] unsigned char 
  1553 ;;  counter         1    5[COMMON] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2    0[COMMON] int 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1
  1563 ;;      Params:         4       0       0
  1564 ;;      Locals:         4       0       0
  1565 ;;      Temps:          1       0       0
  1566 ;;      Totals:         9       0       0
  1567 ;;Total ram usage:        9 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_LCDWriteInt
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function ___awdiv
  1578  037F                     ___awdiv:	
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1582  037F  01F6               	clrf	___awdiv@sign
  1583  0380  1FF1               	btfss	___awdiv@divisor+1,7
  1584  0381  2B89               	goto	l1281
  1585  0382  09F0               	comf	___awdiv@divisor,f
  1586  0383  09F1               	comf	___awdiv@divisor+1,f
  1587  0384  0AF0               	incf	___awdiv@divisor,f
  1588  0385  1903               	skipnz
  1589  0386  0AF1               	incf	___awdiv@divisor+1,f
  1590  0387  01F6               	clrf	___awdiv@sign
  1591  0388  0AF6               	incf	___awdiv@sign,f
  1592  0389                     l1281:	
  1593  0389  1FF3               	btfss	___awdiv@dividend+1,7
  1594  038A  2B94               	goto	l1287
  1595  038B  09F2               	comf	___awdiv@dividend,f
  1596  038C  09F3               	comf	___awdiv@dividend+1,f
  1597  038D  0AF2               	incf	___awdiv@dividend,f
  1598  038E  1903               	skipnz
  1599  038F  0AF3               	incf	___awdiv@dividend+1,f
  1600  0390  3001               	movlw	1
  1601  0391  00F4               	movwf	??___awdiv
  1602  0392  0874               	movf	??___awdiv,w
  1603  0393  06F6               	xorwf	___awdiv@sign,f
  1604  0394                     l1287:	
  1605  0394  01F7               	clrf	___awdiv@quotient
  1606  0395  01F8               	clrf	___awdiv@quotient+1
  1607  0396  0871               	movf	___awdiv@divisor+1,w
  1608  0397  0470               	iorwf	___awdiv@divisor,w
  1609  0398  1903               	skipnz
  1610  0399  2BCB               	goto	l1309
  1611  039A  01F5               	clrf	___awdiv@counter
  1612  039B  0AF5               	incf	___awdiv@counter,f
  1613  039C                     l1297:	
  1614  039C  1BF1               	btfsc	___awdiv@divisor+1,7
  1615  039D  2BAA               	goto	l1299
  1616  039E  3001               	movlw	1
  1617  039F                     u1075:	
  1618  039F  1003               	clrc
  1619  03A0  0DF0               	rlf	___awdiv@divisor,f
  1620  03A1  0DF1               	rlf	___awdiv@divisor+1,f
  1621  03A2  3EFF               	addlw	-1
  1622  03A3  1D03               	skipz
  1623  03A4  2B9F               	goto	u1075
  1624  03A5  3001               	movlw	1
  1625  03A6  00F4               	movwf	??___awdiv
  1626  03A7  0874               	movf	??___awdiv,w
  1627  03A8  07F5               	addwf	___awdiv@counter,f
  1628  03A9  2B9C               	goto	l1297
  1629  03AA                     l1299:	
  1630  03AA  3001               	movlw	1
  1631  03AB                     u1095:	
  1632  03AB  1003               	clrc
  1633  03AC  0DF7               	rlf	___awdiv@quotient,f
  1634  03AD  0DF8               	rlf	___awdiv@quotient+1,f
  1635  03AE  3EFF               	addlw	-1
  1636  03AF  1D03               	skipz
  1637  03B0  2BAB               	goto	u1095
  1638  03B1  0871               	movf	___awdiv@divisor+1,w
  1639  03B2  0273               	subwf	___awdiv@dividend+1,w
  1640  03B3  1D03               	skipz
  1641  03B4  2BB7               	goto	u1105
  1642  03B5  0870               	movf	___awdiv@divisor,w
  1643  03B6  0272               	subwf	___awdiv@dividend,w
  1644  03B7                     u1105:	
  1645  03B7  1C03               	skipc
  1646  03B8  2BC0               	goto	l1305
  1647  03B9  0870               	movf	___awdiv@divisor,w
  1648  03BA  02F2               	subwf	___awdiv@dividend,f
  1649  03BB  0871               	movf	___awdiv@divisor+1,w
  1650  03BC  1C03               	skipc
  1651  03BD  03F3               	decf	___awdiv@dividend+1,f
  1652  03BE  02F3               	subwf	___awdiv@dividend+1,f
  1653  03BF  1477               	bsf	___awdiv@quotient,0
  1654  03C0                     l1305:	
  1655  03C0  3001               	movlw	1
  1656  03C1                     u1115:	
  1657  03C1  1003               	clrc
  1658  03C2  0CF1               	rrf	___awdiv@divisor+1,f
  1659  03C3  0CF0               	rrf	___awdiv@divisor,f
  1660  03C4  3EFF               	addlw	-1
  1661  03C5  1D03               	skipz
  1662  03C6  2BC1               	goto	u1115
  1663  03C7  3001               	movlw	1
  1664  03C8  02F5               	subwf	___awdiv@counter,f
  1665  03C9  1D03               	btfss	3,2
  1666  03CA  2BAA               	goto	l1299
  1667  03CB                     l1309:	
  1668  03CB  0876               	movf	___awdiv@sign,w
  1669  03CC  1903               	btfsc	3,2
  1670  03CD  2BD3               	goto	l1313
  1671  03CE  09F7               	comf	___awdiv@quotient,f
  1672  03CF  09F8               	comf	___awdiv@quotient+1,f
  1673  03D0  0AF7               	incf	___awdiv@quotient,f
  1674  03D1  1903               	skipnz
  1675  03D2  0AF8               	incf	___awdiv@quotient+1,f
  1676  03D3                     l1313:	
  1677  03D3  0878               	movf	___awdiv@quotient+1,w
  1678  03D4  01F1               	clrf	?___awdiv+1
  1679  03D5  07F1               	addwf	?___awdiv+1,f
  1680  03D6  0877               	movf	___awdiv@quotient,w
  1681  03D7  01F0               	clrf	?___awdiv
  1682  03D8  07F0               	addwf	?___awdiv,f
  1683  03D9  0008               	return
  1684  03DA                     __end_of___awdiv:	
  1685                           
  1686                           	psect	text6
  1687  0295                     __ptext6:	
  1688 ;; *************** function _LCDInit *****************
  1689 ;; Defined at:
  1690 ;;		line 195 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\lcd_hd44780_pic16.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  style           1    wreg     unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  style           1    0[BANK0 ] unsigned char 
  1695 ;;  __i             1    1[BANK0 ] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;		None               void
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1
  1705 ;;      Params:         0       0       0
  1706 ;;      Locals:         0       2       0
  1707 ;;      Temps:          2       0       0
  1708 ;;      Totals:         2       2       0
  1709 ;;Total ram usage:        4 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    2
  1712 ;; This function calls:
  1713 ;;		_LCDBusyLoop
  1714 ;;		_LCDByte
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function _LCDInit
  1722  0295                     _LCDInit:	
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1726                           ;LCDInit@style stored from wreg
  1727  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0297  00A0               	movwf	LCDInit@style
  1730                           
  1731                           ;lcd_hd44780_pic16.c: 211: _delay((unsigned long)((30)*(10000000/4000.0)));
  1732  0298  3062               	movlw	98
  1733  0299  00FD               	movwf	??_LCDInit+1
  1734  029A  3065               	movlw	101
  1735  029B  00FC               	movwf	??_LCDInit
  1736  029C                     u1797:	
  1737  029C  0BFC               	decfsz	??_LCDInit,f
  1738  029D  2A9C               	goto	u1797
  1739  029E  0BFD               	decfsz	??_LCDInit+1,f
  1740  029F  2A9C               	goto	u1797
  1741  02A0  2AA1               	nop2
  1742                           
  1743                           ;lcd_hd44780_pic16.c: 214: TRISC&=(~(0x0F<<0));
  1744  02A1  30F0               	movlw	240
  1745  02A2  00FC               	movwf	??_LCDInit
  1746  02A3  087C               	movf	??_LCDInit,w
  1747  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  1748  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  1749  02A6  0587               	andwf	7,f	;volatile
  1750                           
  1751                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC5=0;
  1752  02A7  1287               	bcf	7,5	;volatile
  1753                           
  1754                           ;lcd_hd44780_pic16.c: 217: TRISCbits.TRISC7=0;
  1755  02A8  1387               	bcf	7,7	;volatile
  1756                           
  1757                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC6=0;
  1758  02A9  1307               	bcf	7,6	;volatile
  1759                           
  1760                           ;lcd_hd44780_pic16.c: 220: PORTC&=(~(0x0F<<0));
  1761  02AA  30F0               	movlw	240
  1762  02AB  00FC               	movwf	??_LCDInit
  1763  02AC  087C               	movf	??_LCDInit,w
  1764  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1765  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1766  02AF  0587               	andwf	7,f	;volatile
  1767                           
  1768                           ;lcd_hd44780_pic16.c: 222: (RC5=0);
  1769  02B0  1287               	bcf	7,5	;volatile
  1770                           
  1771                           ;lcd_hd44780_pic16.c: 223: (RC6=0);
  1772  02B1  1307               	bcf	7,6	;volatile
  1773                           
  1774                           ;lcd_hd44780_pic16.c: 224: (RC7=0);
  1775  02B2  1387               	bcf	7,7	;volatile
  1776                           
  1777                           ;lcd_hd44780_pic16.c: 227: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  1778  02B3  0000               	nop
  1779                           
  1780                           ;lcd_hd44780_pic16.c: 229: (RC5=1);
  1781  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1782  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1783  02B6  1687               	bsf	7,5	;volatile
  1784                           
  1785                           ;lcd_hd44780_pic16.c: 230: PORTC|=((0b00000010)<<0);
  1786  02B7  1487               	bsf	7,1	;volatile
  1787                           
  1788                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1789  02B8  2AB9               	nop2	;2 cycle nop
  1790                           
  1791                           ;lcd_hd44780_pic16.c: 232: (RC5=0);
  1792  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1793  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1794  02BB  1287               	bcf	7,5	;volatile
  1795                           
  1796                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(10000000/4000000.0)));
  1797  02BC  2ABD               	nop2	;2 cycle nop
  1798                           
  1799                           ;lcd_hd44780_pic16.c: 236: LCDBusyLoop();
  1800  02BD  232D               	fcall	_LCDBusyLoop
  1801                           
  1802                           ;lcd_hd44780_pic16.c: 241: (LCDByte(0b00101000,0));
  1803  02BE  01F5               	clrf	LCDByte@isdata
  1804  02BF  3028               	movlw	40
  1805  02C0  2256               	fcall	_LCDByte
  1806                           
  1807                           ;lcd_hd44780_pic16.c: 242: (LCDByte(0b00001100|style,0));
  1808  02C1  01F5               	clrf	LCDByte@isdata
  1809  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1810  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1811  02C4  0820               	movf	LCDInit@style,w
  1812  02C5  380C               	iorlw	12
  1813  02C6  2256               	fcall	_LCDByte
  1814                           
  1815                           ;lcd_hd44780_pic16.c: 245: (LCDByte(0b01000000,0));
  1816  02C7  01F5               	clrf	LCDByte@isdata
  1817  02C8  3040               	movlw	64
  1818  02C9  2256               	fcall	_LCDByte
  1819                           
  1820                           ;lcd_hd44780_pic16.c: 247: uint8_t __i;
  1821                           ;lcd_hd44780_pic16.c: 248: for(__i=0;__i<sizeof(__cgram);__i++)
  1822  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1823  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1824  02CC  01A1               	clrf	LCDInit@__i
  1825  02CD                     L4:	
  1826  02CD  3010               	movlw	16
  1827  02CE  0221               	subwf	LCDInit@__i,w
  1828  02CF  1803               	btfsc	3,0
  1829  02D0  0008               	return
  1830                           
  1831                           ;lcd_hd44780_pic16.c: 249: (LCDByte(__cgram[__i],1));
  1832  02D1  01F5               	clrf	LCDByte@isdata
  1833  02D2  0AF5               	incf	LCDByte@isdata,f
  1834  02D3  0821               	movf	LCDInit@__i,w
  1835  02D4  3E4F               	addlw	___cgram& (0+255)
  1836  02D5  0084               	movwf	4
  1837  02D6  1383               	bcf	3,7	;select IRP bank0
  1838  02D7  0800               	movf	0,w
  1839  02D8  2256               	fcall	_LCDByte
  1840  02D9  3001               	movlw	1
  1841  02DA  00FC               	movwf	??_LCDInit
  1842  02DB  087C               	movf	??_LCDInit,w
  1843  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1844  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1845  02DE  07A1               	addwf	LCDInit@__i,f
  1846  02DF  2ACD               	goto	L4
  1847  02E0                     __end_of_LCDInit:	
  1848                           
  1849                           	psect	text7
  1850  01D4                     __ptext7:	
  1851 ;; *************** function _LCDGotoXY *****************
  1852 ;; Defined at:
  1853 ;;		line 364 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\lcd_hd44780_pic16.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  x               1    wreg     unsigned char 
  1856 ;;  y               1   12[COMMON] unsigned char 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  x               1    0[BANK0 ] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;		None               void
  1861 ;; Registers used:
  1862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1
  1868 ;;      Params:         1       0       0
  1869 ;;      Locals:         0       1       0
  1870 ;;      Temps:          1       0       0
  1871 ;;      Totals:         2       1       0
  1872 ;;Total ram usage:        3 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    2
  1875 ;; This function calls:
  1876 ;;		_LCDByte
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function _LCDGotoXY
  1884  01D4                     _LCDGotoXY:	
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1888                           ;LCDGotoXY@x stored from wreg
  1889  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1890  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1891  01D6  00A0               	movwf	LCDGotoXY@x
  1892                           
  1893                           ;lcd_hd44780_pic16.c: 366: if(x>=20) return;
  1894  01D7  3014               	movlw	20
  1895  01D8  0220               	subwf	LCDGotoXY@x,w
  1896  01D9  1803               	btfsc	3,0
  1897  01DA  0008               	return
  1898  01DB  29E5               	goto	l1593
  1899  01DC                     l69:	
  1900                           ;lcd_hd44780_pic16.c: 374: case 1:
  1901                           
  1902                           ;lcd_hd44780_pic16.c: 373: break;
  1903                           
  1904                           ;lcd_hd44780_pic16.c: 371: {
  1905                           ;lcd_hd44780_pic16.c: 372: case 0:
  1906                           
  1907                           ;lcd_hd44780_pic16.c: 370: switch(y)
  1908                           
  1909                           
  1910                           ;lcd_hd44780_pic16.c: 375: x|=0b01000000;
  1911  01DC  1720               	bsf	LCDGotoXY@x,6
  1912                           
  1913                           ;lcd_hd44780_pic16.c: 376: break;
  1914  01DD  29F0               	goto	l68
  1915  01DE                     l1587:	
  1916                           ;lcd_hd44780_pic16.c: 377: case 2:
  1917                           
  1918                           
  1919                           ;lcd_hd44780_pic16.c: 378: x+=0x14;
  1920  01DE  3014               	movlw	20
  1921  01DF  29E1               	goto	L5
  1922  01E0                     l1589:	
  1923                           ;lcd_hd44780_pic16.c: 380: case 3:
  1924                           
  1925                           ;lcd_hd44780_pic16.c: 379: break;
  1926                           
  1927                           
  1928                           ;lcd_hd44780_pic16.c: 381: x+=0x54;
  1929  01E0  3054               	movlw	84
  1930  01E1                     L5:	
  1931  01E1  00FD               	movwf	??_LCDGotoXY
  1932  01E2  087D               	movf	??_LCDGotoXY,w
  1933  01E3  07A0               	addwf	LCDGotoXY@x,f
  1934                           
  1935                           ;lcd_hd44780_pic16.c: 383: }
  1936                           
  1937                           ;lcd_hd44780_pic16.c: 382: break;
  1938  01E4  29F0               	goto	l68
  1939  01E5                     l1593:	
  1940  01E5  087C               	movf	LCDGotoXY@y,w
  1941                           
  1942                           ; Switch size 1, requested type "space"
  1943                           ; Number of cases is 4, Range of values is 0 to 3
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; direct_byte           10     6 (fixed)
  1947                           ; simple_byte           13     7 (average)
  1948                           ; jumptable            260     6 (fixed)
  1949                           ;	Chosen strategy is direct_byte
  1950  01E6  0084               	movwf	4
  1951  01E7  3004               	movlw	4
  1952  01E8  0204               	subwf	4,w
  1953  01E9  1803               	skipnc
  1954  01EA  29F0               	goto	l68
  1955  01EB  3000               	movlw	high S1741
  1956  01EC  008A               	movwf	10
  1957  01ED  305B               	movlw	low S1741
  1958  01EE  0704               	addwf	4,w
  1959  01EF  0082               	movwf	2
  1960  01F0                     l68:	
  1961                           
  1962                           ;lcd_hd44780_pic16.c: 405: x|=0b10000000;
  1963  01F0  17A0               	bsf	LCDGotoXY@x,7
  1964                           
  1965                           ;lcd_hd44780_pic16.c: 406: (LCDByte(x,0));
  1966  01F1  01F5               	clrf	LCDByte@isdata
  1967  01F2  0820               	movf	LCDGotoXY@x,w
  1968  01F3  2256               	fcall	_LCDByte
  1969  01F4  0008               	return
  1970  01F5                     __end_of_LCDGotoXY:	
  1971                           
  1972                           	psect	swtext1
  1973  005B                     __pswtext1:	
  1974  005B                     S1741:	
  1975  005B  29F0               	ljmp	l68
  1976  005C  29DC               	ljmp	l69
  1977  005D  29DE               	ljmp	l1587
  1978  005E  29E0               	ljmp	l1589
  1979                           
  1980                           	psect	text8
  1981  0256                     __ptext8:	
  1982 ;; *************** function _LCDByte *****************
  1983 ;; Defined at:
  1984 ;;		line 82 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\lcd_hd44780_pic16.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  c               1    wreg     unsigned char 
  1987 ;;  isdata          1    5[COMMON] unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  c               1   10[COMMON] unsigned char 
  1990 ;;  temp            1   11[COMMON] unsigned char 
  1991 ;;  ln              1    9[COMMON] unsigned char 
  1992 ;;  hn              1    8[COMMON] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;		None               void
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1
  2002 ;;      Params:         1       0       0
  2003 ;;      Locals:         4       0       0
  2004 ;;      Temps:          2       0       0
  2005 ;;      Totals:         7       0       0
  2006 ;;Total ram usage:        7 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    1
  2009 ;; This function calls:
  2010 ;;		_LCDBusyLoop
  2011 ;; This function is called by:
  2012 ;;		_LCDInit
  2013 ;;		_LCDWriteString
  2014 ;;		_LCDWriteInt
  2015 ;;		_LCDGotoXY
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _LCDByte
  2022  0256                     _LCDByte:	
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2026                           ;LCDByte@c stored from wreg
  2027  0256  00FA               	movwf	LCDByte@c
  2028                           
  2029                           ;lcd_hd44780_pic16.c: 91: uint8_t hn,ln;
  2030                           ;lcd_hd44780_pic16.c: 92: uint8_t temp;
  2031                           ;lcd_hd44780_pic16.c: 94: hn=c>>4;
  2032  0257  087A               	movf	LCDByte@c,w
  2033  0258  00F6               	movwf	??_LCDByte
  2034  0259  3004               	movlw	4
  2035  025A                     u1025:	
  2036  025A  1003               	clrc
  2037  025B  0CF6               	rrf	??_LCDByte,f
  2038  025C  3EFF               	addlw	-1
  2039  025D  1D03               	skipz
  2040  025E  2A5A               	goto	u1025
  2041  025F  0876               	movf	??_LCDByte,w
  2042  0260  00F7               	movwf	??_LCDByte+1
  2043  0261  0877               	movf	??_LCDByte+1,w
  2044  0262  00F8               	movwf	LCDByte@hn
  2045                           
  2046                           ;lcd_hd44780_pic16.c: 95: ln=(c & 0x0F);
  2047  0263  087A               	movf	LCDByte@c,w
  2048  0264  390F               	andlw	15
  2049  0265  00F6               	movwf	??_LCDByte
  2050  0266  0876               	movf	??_LCDByte,w
  2051  0267  00F9               	movwf	LCDByte@ln
  2052                           
  2053                           ;lcd_hd44780_pic16.c: 97: if(isdata==0)
  2054  0268  08F5               	movf	LCDByte@isdata,f
  2055  0269  1D03               	skipz
  2056  026A  2A6F               	goto	l21
  2057                           
  2058                           ;lcd_hd44780_pic16.c: 98: (RC7=0);
  2059  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2060  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2061  026D  1387               	bcf	7,7	;volatile
  2062  026E  2A72               	goto	l22
  2063  026F                     l21:	
  2064                           
  2065                           ;lcd_hd44780_pic16.c: 99: else
  2066                           ;lcd_hd44780_pic16.c: 100: (RC7=1);
  2067  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0271  1787               	bsf	7,7	;volatile
  2070  0272                     l22:	
  2071                           
  2072                           ;lcd_hd44780_pic16.c: 102: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2073  0272  0000               	nop
  2074                           
  2075                           ;lcd_hd44780_pic16.c: 104: (RC5=1);
  2076  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0275  1687               	bsf	7,5	;volatile
  2079                           
  2080                           ;lcd_hd44780_pic16.c: 108: temp=(PORTC & (~(0X0F<<0)))|((hn<<0));
  2081  0276  0807               	movf	7,w	;volatile
  2082  0277  39F0               	andlw	240
  2083  0278  0478               	iorwf	LCDByte@hn,w
  2084  0279  00F6               	movwf	??_LCDByte
  2085  027A  0876               	movf	??_LCDByte,w
  2086  027B  00FB               	movwf	LCDByte@temp
  2087                           
  2088                           ;lcd_hd44780_pic16.c: 109: PORTC=temp;
  2089  027C  087B               	movf	LCDByte@temp,w
  2090  027D  0087               	movwf	7	;volatile
  2091                           
  2092                           ;lcd_hd44780_pic16.c: 111: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2093  027E  2A7F               	nop2	;2 cycle nop
  2094                           
  2095                           ;lcd_hd44780_pic16.c: 115: (RC5=0);
  2096  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0281  1287               	bcf	7,5	;volatile
  2099                           
  2100                           ;lcd_hd44780_pic16.c: 117: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2101  0282  2A83               	nop2	;2 cycle nop
  2102                           
  2103                           ;lcd_hd44780_pic16.c: 120: (RC5=1);
  2104  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0285  1687               	bsf	7,5	;volatile
  2107                           
  2108                           ;lcd_hd44780_pic16.c: 122: temp=(PORTC & (~(0X0F<<0)))|((ln<<0));
  2109  0286  0807               	movf	7,w	;volatile
  2110  0287  39F0               	andlw	240
  2111  0288  0479               	iorwf	LCDByte@ln,w
  2112  0289  00F6               	movwf	??_LCDByte
  2113  028A  0876               	movf	??_LCDByte,w
  2114  028B  00FB               	movwf	LCDByte@temp
  2115                           
  2116                           ;lcd_hd44780_pic16.c: 124: PORTC=temp;
  2117  028C  087B               	movf	LCDByte@temp,w
  2118  028D  0087               	movwf	7	;volatile
  2119                           
  2120                           ;lcd_hd44780_pic16.c: 126: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2121  028E  2A8F               	nop2	;2 cycle nop
  2122                           
  2123                           ;lcd_hd44780_pic16.c: 130: (RC5=0);
  2124  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0291  1287               	bcf	7,5	;volatile
  2127                           
  2128                           ;lcd_hd44780_pic16.c: 132: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2129  0292  2A93               	nop2	;2 cycle nop
  2130                           
  2131                           ;lcd_hd44780_pic16.c: 134: LCDBusyLoop();
  2132  0293  232D               	fcall	_LCDBusyLoop
  2133  0294  0008               	return
  2134  0295                     __end_of_LCDByte:	
  2135                           
  2136                           	psect	text9
  2137  032D                     __ptext9:	
  2138 ;; *************** function _LCDBusyLoop *****************
  2139 ;; Defined at:
  2140 ;;		line 137 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\lcd_hd44780_pic16.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  status          1    4[COMMON] unsigned char 
  2145 ;;  temp            1    3[COMMON] unsigned char 
  2146 ;;  busy            1    2[COMMON] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;		None               void
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1
  2156 ;;      Params:         0       0       0
  2157 ;;      Locals:         3       0       0
  2158 ;;      Temps:          2       0       0
  2159 ;;      Totals:         5       0       0
  2160 ;;Total ram usage:        5 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_LCDByte
  2166 ;;		_LCDInit
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _LCDBusyLoop
  2172  032D                     _LCDBusyLoop:	
  2173                           
  2174                           ;lcd_hd44780_pic16.c: 141: uint8_t busy,status=0x00,temp;
  2175                           
  2176                           ;incstack = 0
  2177                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2178  032D  01F4               	clrf	LCDBusyLoop@status
  2179                           
  2180                           ;lcd_hd44780_pic16.c: 144: TRISC|=(0x0f<<0);
  2181  032E  300F               	movlw	15
  2182  032F  00F0               	movwf	??_LCDBusyLoop
  2183  0330  0870               	movf	??_LCDBusyLoop,w
  2184  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0332  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0333  0487               	iorwf	7,f	;volatile
  2187                           
  2188                           ;lcd_hd44780_pic16.c: 147: (RC6=1);
  2189  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0336  1707               	bsf	7,6	;volatile
  2192                           
  2193                           ;lcd_hd44780_pic16.c: 148: (RC7=0);
  2194  0337  1387               	bcf	7,7	;volatile
  2195                           
  2196                           ;lcd_hd44780_pic16.c: 152: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2197  0338  0000               	nop
  2198  0339                     l1177:	
  2199                           ;lcd_hd44780_pic16.c: 155: do
  2200                           
  2201                           
  2202                           ;lcd_hd44780_pic16.c: 156: {
  2203                           ;lcd_hd44780_pic16.c: 158: (RC5=1);
  2204  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2205  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2206  033B  1687               	bsf	7,5	;volatile
  2207                           
  2208                           ;lcd_hd44780_pic16.c: 161: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2209  033C  0000               	nop
  2210                           
  2211                           ;lcd_hd44780_pic16.c: 163: status=(PORTC>>0);
  2212  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2213  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2214  033F  0807               	movf	7,w	;volatile
  2215  0340  00F0               	movwf	??_LCDBusyLoop
  2216  0341  0870               	movf	??_LCDBusyLoop,w
  2217  0342  00F4               	movwf	LCDBusyLoop@status
  2218                           
  2219                           ;lcd_hd44780_pic16.c: 164: status=status<<4;
  2220  0343  0874               	movf	LCDBusyLoop@status,w
  2221  0344  00F0               	movwf	??_LCDBusyLoop
  2222  0345  3003               	movlw	3
  2223  0346                     u895:	
  2224  0346  1003               	clrc
  2225  0347  0DF0               	rlf	??_LCDBusyLoop,f
  2226  0348  3EFF               	addlw	-1
  2227  0349  1D03               	skipz
  2228  034A  2B46               	goto	u895
  2229  034B  1003               	clrc
  2230  034C  0D70               	rlf	??_LCDBusyLoop,w
  2231  034D  00F1               	movwf	??_LCDBusyLoop+1
  2232  034E  0871               	movf	??_LCDBusyLoop+1,w
  2233  034F  00F4               	movwf	LCDBusyLoop@status
  2234                           
  2235                           ;lcd_hd44780_pic16.c: 166: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2236  0350  0000               	nop
  2237                           
  2238                           ;lcd_hd44780_pic16.c: 169: (RC5=0);
  2239  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0353  1287               	bcf	7,5	;volatile
  2242                           
  2243                           ;lcd_hd44780_pic16.c: 170: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2244  0354  2B55               	nop2	;2 cycle nop
  2245                           
  2246                           ;lcd_hd44780_pic16.c: 172: (RC5=1);
  2247  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0357  1687               	bsf	7,5	;volatile
  2250                           
  2251                           ;lcd_hd44780_pic16.c: 173: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2252  0358  0000               	nop
  2253                           
  2254                           ;lcd_hd44780_pic16.c: 175: temp=(PORTC>>0);
  2255  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2256  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2257  035B  0807               	movf	7,w	;volatile
  2258  035C  00F0               	movwf	??_LCDBusyLoop
  2259  035D  0870               	movf	??_LCDBusyLoop,w
  2260  035E  00F3               	movwf	LCDBusyLoop@temp
  2261                           
  2262                           ;lcd_hd44780_pic16.c: 176: temp&=0x0F;
  2263  035F  300F               	movlw	15
  2264  0360  00F0               	movwf	??_LCDBusyLoop
  2265  0361  0870               	movf	??_LCDBusyLoop,w
  2266  0362  05F3               	andwf	LCDBusyLoop@temp,f
  2267                           
  2268                           ;lcd_hd44780_pic16.c: 178: status=status|temp;
  2269  0363  0874               	movf	LCDBusyLoop@status,w
  2270  0364  0473               	iorwf	LCDBusyLoop@temp,w
  2271  0365  00F0               	movwf	??_LCDBusyLoop
  2272  0366  0870               	movf	??_LCDBusyLoop,w
  2273  0367  00F4               	movwf	LCDBusyLoop@status
  2274                           
  2275                           ;lcd_hd44780_pic16.c: 180: busy=status & 0b10000000;
  2276  0368  0874               	movf	LCDBusyLoop@status,w
  2277  0369  3980               	andlw	128
  2278  036A  00F0               	movwf	??_LCDBusyLoop
  2279  036B  0870               	movf	??_LCDBusyLoop,w
  2280  036C  00F2               	movwf	LCDBusyLoop@busy
  2281                           
  2282                           ;lcd_hd44780_pic16.c: 182: _delay((unsigned long)((0.5)*(10000000/4000000.0)));
  2283  036D  0000               	nop
  2284                           
  2285                           ;lcd_hd44780_pic16.c: 184: (RC5=0);
  2286  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2287  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0370  1287               	bcf	7,5	;volatile
  2289                           
  2290                           ;lcd_hd44780_pic16.c: 185: _delay((unsigned long)((1)*(10000000/4000000.0)));
  2291  0371  2B72               	nop2	;2 cycle nop
  2292                           
  2293                           ;lcd_hd44780_pic16.c: 186: }while(busy);
  2294  0372  08F2               	movf	LCDBusyLoop@busy,f
  2295  0373  1D03               	skipz
  2296  0374  2B39               	goto	l1177
  2297                           
  2298                           ;lcd_hd44780_pic16.c: 188: (RC6=0);
  2299  0375  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0376  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0377  1307               	bcf	7,6	;volatile
  2302                           
  2303                           ;lcd_hd44780_pic16.c: 191: TRISC&=(~(0x0F<<0));
  2304  0378  30F0               	movlw	240
  2305  0379  00F0               	movwf	??_LCDBusyLoop
  2306  037A  0870               	movf	??_LCDBusyLoop,w
  2307  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2308  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2309  037D  0587               	andwf	7,f	;volatile
  2310  037E  0008               	return
  2311  037F                     __end_of_LCDBusyLoop:	
  2312                           
  2313                           	psect	text10
  2314  0197                     __ptext10:	
  2315 ;; *************** function _HCSR04Trigger *****************
  2316 ;; Defined at:
  2317 ;;		line 82 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\main.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;		None               void
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1
  2331 ;;      Params:         0       0       0
  2332 ;;      Locals:         0       0       0
  2333 ;;      Temps:          1       0       0
  2334 ;;      Totals:         1       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _HCSR04Trigger
  2346  0197                     _HCSR04Trigger:	
  2347                           
  2348                           ;main.c: 85: PORTA|=(1<<0);
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _HCSR04Trigger: [wreg+status,2+status,0]
  2352  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0199  1405               	bsf	5,0	;volatile
  2355                           
  2356                           ;main.c: 87: _delay((unsigned long)((15)*(10000000/4000000.0)));
  2357  019A  300C               	movlw	12
  2358  019B  00F0               	movwf	??_HCSR04Trigger
  2359  019C                     u1807:	
  2360  019C  0BF0               	decfsz	??_HCSR04Trigger,f
  2361  019D  299C               	goto	u1807
  2362                           
  2363                           ;main.c: 89: PORTA&=~(1<<0);
  2364  019E  30FE               	movlw	254
  2365  019F  00F0               	movwf	??_HCSR04Trigger
  2366  01A0  0870               	movf	??_HCSR04Trigger,w
  2367  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2368  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2369  01A3  0585               	andwf	5,f	;volatile
  2370  01A4  0008               	return
  2371  01A5                     __end_of_HCSR04Trigger:	
  2372                           
  2373                           	psect	text11
  2374  0190                     __ptext11:	
  2375 ;; *************** function _HCSR04Init *****************
  2376 ;; Defined at:
  2377 ;;		line 77 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\main.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1
  2391 ;;      Params:         0       0       0
  2392 ;;      Locals:         0       0       0
  2393 ;;      Temps:          1       0       0
  2394 ;;      Totals:         1       0       0
  2395 ;;Total ram usage:        1 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function _HCSR04Init
  2406  0190                     _HCSR04Init:	
  2407                           
  2408                           ;main.c: 79: TRISA&=~(1<<0);
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _HCSR04Init: [wreg+status,2+status,0]
  2412  0190  30FE               	movlw	254
  2413  0191  00F0               	movwf	??_HCSR04Init
  2414  0192  0870               	movf	??_HCSR04Init,w
  2415  0193  1683               	bsf	3,5	;RP0=1, select bank1
  2416  0194  1303               	bcf	3,6	;RP1=0, select bank1
  2417  0195  0585               	andwf	5,f	;volatile
  2418  0196  0008               	return
  2419  0197                     __end_of_HCSR04Init:	
  2420                           
  2421                           	psect	text12
  2422  0639                     __ptext12:	
  2423 ;; *************** function _GetPulseWidth *****************
  2424 ;; Defined at:
  2425 ;;		line 94 in file "E:\Study Material\XC8 PROJECTS\Ultrasonic Distance Meter\main.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  i               4   36[BANK0 ] unsigned long 
  2430 ;;  result          4   32[BANK0 ] unsigned long 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2   30[BANK0 ] int 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1
  2440 ;;      Params:         0       2       0
  2441 ;;      Locals:         0       8       0
  2442 ;;      Temps:          0       0       0
  2443 ;;      Totals:         0      10       0
  2444 ;;Total ram usage:       10 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		___ftmul
  2449 ;;		___fttol
  2450 ;;		___lltoft
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _GetPulseWidth
  2458  0639                     _GetPulseWidth:	
  2459                           
  2460                           ;main.c: 96: uint32_t i,result;
  2461                           ;main.c: 99: for(i=0;i<600000;i++)
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _GetPulseWidth: [wreg+status,2+status,0+pclath+cstack]
  2465  0639  3000               	movlw	0
  2466  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2467  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2468  063C  00C7               	movwf	GetPulseWidth@i+3
  2469  063D  3000               	movlw	0
  2470  063E  00C6               	movwf	GetPulseWidth@i+2
  2471  063F  3000               	movlw	0
  2472  0640  00C5               	movwf	GetPulseWidth@i+1
  2473  0641  3000               	movlw	0
  2474  0642  00C4               	movwf	GetPulseWidth@i
  2475  0643  2E52               	goto	L6
  2476  0644                     l1617:	
  2477                           ;main.c: 103: else
  2478                           ;main.c: 104: break;
  2479                           
  2480                           ;main.c: 102: continue;
  2481                           
  2482  0644  3001               	movlw	1
  2483  0645  07C4               	addwf	GetPulseWidth@i,f
  2484  0646  3000               	movlw	0
  2485  0647  1803               	skipnc
  2486  0648  3001               	movlw	1
  2487  0649  07C5               	addwf	GetPulseWidth@i+1,f
  2488  064A  3000               	movlw	0
  2489  064B  1803               	skipnc
  2490  064C  3001               	movlw	1
  2491  064D  07C6               	addwf	GetPulseWidth@i+2,f
  2492  064E  3000               	movlw	0
  2493  064F  1803               	skipnc
  2494  0650  3001               	movlw	1
  2495  0651  07C7               	addwf	GetPulseWidth@i+3,f
  2496  0652                     L6:	
  2497  0652  3000               	movlw	0
  2498  0653  0247               	subwf	GetPulseWidth@i+3,w
  2499  0654  1D03               	skipz
  2500  0655  2E60               	goto	u1665
  2501  0656  3009               	movlw	9
  2502  0657  0246               	subwf	GetPulseWidth@i+2,w
  2503  0658  1D03               	skipz
  2504  0659  2E60               	goto	u1665
  2505  065A  3027               	movlw	39
  2506  065B  0245               	subwf	GetPulseWidth@i+1,w
  2507  065C  1D03               	skipz
  2508  065D  2E60               	goto	u1665
  2509  065E  30C0               	movlw	192
  2510  065F  0244               	subwf	GetPulseWidth@i,w
  2511  0660                     u1665:	
  2512  0660  1803               	btfsc	3,0
  2513  0661  2E64               	goto	l1619
  2514                           
  2515                           ;main.c: 100: {
  2516                           ;main.c: 101: if(!(PORTA & (1<<1)))
  2517  0662  1C85               	btfss	5,1	;volatile
  2518  0663  2E44               	goto	l1617
  2519  0664                     l1619:	
  2520                           
  2521                           ;main.c: 105: }
  2522                           ;main.c: 107: if(i==600000)
  2523  0664  3000               	movlw	0
  2524  0665  0647               	xorwf	GetPulseWidth@i+3,w
  2525  0666  1D03               	skipz
  2526  0667  2E72               	goto	u1675
  2527  0668  3009               	movlw	9
  2528  0669  0646               	xorwf	GetPulseWidth@i+2,w
  2529  066A  1D03               	skipz
  2530  066B  2E72               	goto	u1675
  2531  066C  3027               	movlw	39
  2532  066D  0645               	xorwf	GetPulseWidth@i+1,w
  2533  066E  1D03               	skipz
  2534  066F  2E72               	goto	u1675
  2535  0670  30C0               	movlw	192
  2536  0671  0644               	xorwf	GetPulseWidth@i,w
  2537  0672                     u1675:	
  2538  0672  1D03               	skipz
  2539  0673  2E79               	goto	l115
  2540                           
  2541                           ;main.c: 108: return -1;
  2542  0674  30FF               	movlw	255
  2543  0675  00BE               	movwf	?_GetPulseWidth
  2544  0676  30FF               	movlw	255
  2545  0677  00BF               	movwf	?_GetPulseWidth+1
  2546  0678  0008               	return
  2547  0679                     l115:	
  2548                           
  2549                           ;main.c: 113: T1CKPS0=1;
  2550  0679  1610               	bsf	16,4	;volatile
  2551                           
  2552                           ;main.c: 114: TMR1=0x00;
  2553  067A  018E               	clrf	14	;volatile
  2554  067B  018F               	clrf	15	;volatile
  2555                           
  2556                           ;main.c: 115: TMR1ON=1;
  2557  067C  1410               	bsf	16,0	;volatile
  2558                           
  2559                           ;main.c: 118: for(i=0;i<600000;i++)
  2560  067D  3000               	movlw	0
  2561  067E  00C7               	movwf	GetPulseWidth@i+3
  2562  067F  3000               	movlw	0
  2563  0680  00C6               	movwf	GetPulseWidth@i+2
  2564  0681  3000               	movlw	0
  2565  0682  00C5               	movwf	GetPulseWidth@i+1
  2566  0683  3000               	movlw	0
  2567  0684  00C4               	movwf	GetPulseWidth@i
  2568  0685  2E9B               	goto	L7
  2569  0686                     l1635:	
  2570                           
  2571                           ;main.c: 121: {
  2572                           ;main.c: 122: if(TMR1 > 60000) break; else continue;
  2573  0686  30EA               	movlw	234
  2574  0687  020F               	subwf	15,w	;volatile
  2575  0688  3061               	movlw	97
  2576  0689  1903               	skipnz
  2577  068A  020E               	subwf	14,w	;volatile
  2578  068B  1803               	btfsc	3,0
  2579  068C  2EAD               	goto	l1643
  2580                           
  2581                           ;main.c: 124: else
  2582                           ;main.c: 125: break;
  2583                           
  2584                           ;main.c: 123: }
  2585  068D  3001               	movlw	1
  2586  068E  07C4               	addwf	GetPulseWidth@i,f
  2587  068F  3000               	movlw	0
  2588  0690  1803               	skipnc
  2589  0691  3001               	movlw	1
  2590  0692  07C5               	addwf	GetPulseWidth@i+1,f
  2591  0693  3000               	movlw	0
  2592  0694  1803               	skipnc
  2593  0695  3001               	movlw	1
  2594  0696  07C6               	addwf	GetPulseWidth@i+2,f
  2595  0697  3000               	movlw	0
  2596  0698  1803               	skipnc
  2597  0699  3001               	movlw	1
  2598  069A  07C7               	addwf	GetPulseWidth@i+3,f
  2599  069B                     L7:	
  2600  069B  3000               	movlw	0
  2601  069C  0247               	subwf	GetPulseWidth@i+3,w
  2602  069D  1D03               	skipz
  2603  069E  2EA9               	goto	u1715
  2604  069F  3009               	movlw	9
  2605  06A0  0246               	subwf	GetPulseWidth@i+2,w
  2606  06A1  1D03               	skipz
  2607  06A2  2EA9               	goto	u1715
  2608  06A3  3027               	movlw	39
  2609  06A4  0245               	subwf	GetPulseWidth@i+1,w
  2610  06A5  1D03               	skipz
  2611  06A6  2EA9               	goto	u1715
  2612  06A7  30C0               	movlw	192
  2613  06A8  0244               	subwf	GetPulseWidth@i,w
  2614  06A9                     u1715:	
  2615  06A9  1803               	btfsc	3,0
  2616  06AA  2EAD               	goto	l1643
  2617                           
  2618                           ;main.c: 119: {
  2619                           ;main.c: 120: if(PORTA & (1<<1))
  2620  06AB  1885               	btfsc	5,1	;volatile
  2621  06AC  2E86               	goto	l1635
  2622  06AD                     l1643:	
  2623                           
  2624                           ;main.c: 126: }
  2625                           ;main.c: 128: if(i==600000)
  2626  06AD  3000               	movlw	0
  2627  06AE  0647               	xorwf	GetPulseWidth@i+3,w
  2628  06AF  1D03               	skipz
  2629  06B0  2EBB               	goto	u1725
  2630  06B1  3009               	movlw	9
  2631  06B2  0646               	xorwf	GetPulseWidth@i+2,w
  2632  06B3  1D03               	skipz
  2633  06B4  2EBB               	goto	u1725
  2634  06B5  3027               	movlw	39
  2635  06B6  0645               	xorwf	GetPulseWidth@i+1,w
  2636  06B7  1D03               	skipz
  2637  06B8  2EBB               	goto	u1725
  2638  06B9  30C0               	movlw	192
  2639  06BA  0644               	xorwf	GetPulseWidth@i,w
  2640  06BB                     u1725:	
  2641  06BB  1D03               	skipz
  2642  06BC  2EC2               	goto	l1649
  2643                           
  2644                           ;main.c: 129: return -2;
  2645  06BD  30FE               	movlw	254
  2646  06BE  00BE               	movwf	?_GetPulseWidth
  2647  06BF  30FF               	movlw	255
  2648  06C0  00BF               	movwf	?_GetPulseWidth+1
  2649  06C1  0008               	return
  2650  06C2                     l1649:	
  2651                           
  2652                           ;main.c: 132: result=TMR1;
  2653  06C2  080E               	movf	14,w	;volatile
  2654  06C3  00C0               	movwf	GetPulseWidth@result
  2655  06C4  080F               	movf	15,w	;volatile
  2656  06C5  00C1               	movwf	GetPulseWidth@result+1
  2657  06C6  01C2               	clrf	GetPulseWidth@result+2
  2658  06C7  01C3               	clrf	GetPulseWidth@result+3
  2659                           
  2660                           ;main.c: 135: TMR1ON=0;
  2661  06C8  1010               	bcf	16,0	;volatile
  2662                           
  2663                           ;main.c: 137: if(result > 60000)
  2664  06C9  3000               	movlw	0
  2665  06CA  0243               	subwf	GetPulseWidth@result+3,w
  2666  06CB  1D03               	skipz
  2667  06CC  2ED7               	goto	u1735
  2668  06CD  3000               	movlw	0
  2669  06CE  0242               	subwf	GetPulseWidth@result+2,w
  2670  06CF  1D03               	skipz
  2671  06D0  2ED7               	goto	u1735
  2672  06D1  30EA               	movlw	234
  2673  06D2  0241               	subwf	GetPulseWidth@result+1,w
  2674  06D3  1D03               	skipz
  2675  06D4  2ED7               	goto	u1735
  2676  06D5  3061               	movlw	97
  2677  06D6  0240               	subwf	GetPulseWidth@result,w
  2678  06D7                     u1735:	
  2679  06D7  1C03               	skipc
  2680  06D8  2EDE               	goto	l1659
  2681                           
  2682                           ;main.c: 138: return -2;
  2683  06D9  30FE               	movlw	254
  2684  06DA  00BE               	movwf	?_GetPulseWidth
  2685  06DB  30FF               	movlw	255
  2686  06DC  00BF               	movwf	?_GetPulseWidth+1
  2687  06DD  0008               	return
  2688  06DE                     l1659:	
  2689                           
  2690                           ;main.c: 139: else
  2691                           ;main.c: 140: return (result * 0.8);
  2692  06DE  0843               	movf	GetPulseWidth@result+3,w
  2693  06DF  00FB               	movwf	___lltoft@c+3
  2694  06E0  0842               	movf	GetPulseWidth@result+2,w
  2695  06E1  00FA               	movwf	___lltoft@c+2
  2696  06E2  0841               	movf	GetPulseWidth@result+1,w
  2697  06E3  00F9               	movwf	___lltoft@c+1
  2698  06E4  0840               	movf	GetPulseWidth@result,w
  2699  06E5  00F8               	movwf	___lltoft@c
  2700  06E6  21F5               	fcall	___lltoft
  2701  06E7  0878               	movf	?___lltoft,w
  2702  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2703  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2704  06EA  00A3               	movwf	___ftmul@f2
  2705  06EB  0879               	movf	?___lltoft+1,w
  2706  06EC  00A4               	movwf	___ftmul@f2+1
  2707  06ED  087A               	movf	?___lltoft+2,w
  2708  06EE  00A5               	movwf	___ftmul@f2+2
  2709  06EF  30CD               	movlw	205
  2710  06F0  00A0               	movwf	___ftmul@f1
  2711  06F1  304C               	movlw	76
  2712  06F2  00A1               	movwf	___ftmul@f1+1
  2713  06F3  303F               	movlw	63
  2714  06F4  00A2               	movwf	___ftmul@f1+2
  2715  06F5  2708               	fcall	___ftmul
  2716  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2717  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2718  06F8  0820               	movf	?___ftmul,w
  2719  06F9  00B0               	movwf	___fttol@f1
  2720  06FA  0821               	movf	?___ftmul+1,w
  2721  06FB  00B1               	movwf	___fttol@f1+1
  2722  06FC  0822               	movf	?___ftmul+2,w
  2723  06FD  00B2               	movwf	___fttol@f1+2
  2724  06FE  2442               	fcall	___fttol
  2725  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0700  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0701  0831               	movf	?___fttol+1,w
  2728  0702  01BF               	clrf	?_GetPulseWidth+1
  2729  0703  07BF               	addwf	?_GetPulseWidth+1,f
  2730  0704  0830               	movf	?___fttol,w
  2731  0705  01BE               	clrf	?_GetPulseWidth
  2732  0706  07BE               	addwf	?_GetPulseWidth,f
  2733  0707  0008               	return
  2734  0708                     __end_of_GetPulseWidth:	
  2735                           
  2736                           	psect	text13
  2737  01F5                     __ptext13:	
  2738 ;; *************** function ___lltoft *****************
  2739 ;; Defined at:
  2740 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  c               4    8[COMMON] unsigned long 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  exp             1   13[COMMON] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  3    8[COMMON] float 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1
  2754 ;;      Params:         4       0       0
  2755 ;;      Locals:         1       0       0
  2756 ;;      Temps:          1       0       0
  2757 ;;      Totals:         6       0       0
  2758 ;;Total ram usage:        6 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		___ftpack
  2763 ;; This function is called by:
  2764 ;;		_GetPulseWidth
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___lltoft
  2770  01F5                     ___lltoft:	
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2774  01F5  308E               	movlw	142
  2775  01F6  00FC               	movwf	??___lltoft
  2776  01F7  087C               	movf	??___lltoft,w
  2777  01F8  00FD               	movwf	___lltoft@exp
  2778  01F9                     l1453:	
  2779  01F9  30FF               	movlw	255
  2780  01FA  057B               	andwf	___lltoft@c+3,w
  2781  01FB  1903               	btfsc	3,2
  2782  01FC  2A0B               	goto	l1455
  2783  01FD  3001               	movlw	1
  2784  01FE                     u1475:	
  2785  01FE  1003               	clrc
  2786  01FF  0CFB               	rrf	___lltoft@c+3,f
  2787  0200  0CFA               	rrf	___lltoft@c+2,f
  2788  0201  0CF9               	rrf	___lltoft@c+1,f
  2789  0202  0CF8               	rrf	___lltoft@c,f
  2790  0203  3EFF               	addlw	-1
  2791  0204  1D03               	skipz
  2792  0205  29FE               	goto	u1475
  2793  0206  3001               	movlw	1
  2794  0207  00FC               	movwf	??___lltoft
  2795  0208  087C               	movf	??___lltoft,w
  2796  0209  07FD               	addwf	___lltoft@exp,f
  2797  020A  29F9               	goto	l1453
  2798  020B                     l1455:	
  2799  020B  0878               	movf	___lltoft@c,w
  2800  020C  00F0               	movwf	___ftpack@arg
  2801  020D  0879               	movf	___lltoft@c+1,w
  2802  020E  00F1               	movwf	___ftpack@arg+1
  2803  020F  087A               	movf	___lltoft@c+2,w
  2804  0210  00F2               	movwf	___ftpack@arg+2
  2805  0211  087D               	movf	___lltoft@exp,w
  2806  0212  00FC               	movwf	??___lltoft
  2807  0213  087C               	movf	??___lltoft,w
  2808  0214  00F3               	movwf	___ftpack@exp
  2809  0215  01F4               	clrf	___ftpack@sign
  2810  0216  23DA               	fcall	___ftpack
  2811  0217  0870               	movf	?___ftpack,w
  2812  0218  00F8               	movwf	?___lltoft
  2813  0219  0871               	movf	?___ftpack+1,w
  2814  021A  00F9               	movwf	?___lltoft+1
  2815  021B  0872               	movf	?___ftpack+2,w
  2816  021C  00FA               	movwf	?___lltoft+2
  2817  021D  0008               	return
  2818  021E                     __end_of___lltoft:	
  2819                           
  2820                           	psect	text14
  2821  0442                     __ptext14:	
  2822 ;; *************** function ___fttol *****************
  2823 ;; Defined at:
  2824 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  f1              3   16[BANK0 ] float 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  lval            4   25[BANK0 ] unsigned long 
  2829 ;;  exp1            1   29[BANK0 ] unsigned char 
  2830 ;;  sign1           1   24[BANK0 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  4   16[BANK0 ] long 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1
  2840 ;;      Params:         0       4       0
  2841 ;;      Locals:         0       6       0
  2842 ;;      Temps:          0       4       0
  2843 ;;      Totals:         0      14       0
  2844 ;;Total ram usage:       14 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_GetPulseWidth
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function ___fttol
  2856  0442                     ___fttol:	
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2860  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0444  0830               	movf	___fttol@f1,w
  2863  0445  00B4               	movwf	??___fttol
  2864  0446  0831               	movf	___fttol@f1+1,w
  2865  0447  00B5               	movwf	??___fttol+1
  2866  0448  0832               	movf	___fttol@f1+2,w
  2867  0449  00B6               	movwf	??___fttol+2
  2868  044A  1003               	clrc
  2869  044B  0D35               	rlf	??___fttol+1,w
  2870  044C  0D36               	rlf	??___fttol+2,w
  2871  044D  00B7               	movwf	??___fttol+3
  2872  044E  0837               	movf	??___fttol+3,w
  2873  044F  00BD               	movwf	___fttol@exp1
  2874  0450  08BD               	movf	___fttol@exp1,f
  2875  0451  1D03               	skipz
  2876  0452  2C5C               	goto	l1411
  2877  0453  3000               	movlw	0
  2878  0454  00B3               	movwf	?___fttol+3
  2879  0455  3000               	movlw	0
  2880  0456  00B2               	movwf	?___fttol+2
  2881  0457  3000               	movlw	0
  2882  0458  00B1               	movwf	?___fttol+1
  2883  0459  3000               	movlw	0
  2884  045A  00B0               	movwf	?___fttol
  2885  045B  0008               	return
  2886  045C                     l1411:	
  2887  045C  0830               	movf	___fttol@f1,w
  2888  045D  00B4               	movwf	??___fttol
  2889  045E  0831               	movf	___fttol@f1+1,w
  2890  045F  00B5               	movwf	??___fttol+1
  2891  0460  0832               	movf	___fttol@f1+2,w
  2892  0461  00B6               	movwf	??___fttol+2
  2893  0462  3017               	movlw	23
  2894  0463                     u1385:	
  2895  0463  1003               	clrc
  2896  0464  0CB6               	rrf	??___fttol+2,f
  2897  0465  0CB5               	rrf	??___fttol+1,f
  2898  0466  0CB4               	rrf	??___fttol,f
  2899  0467  3EFF               	addlw	-1
  2900  0468  1D03               	skipz
  2901  0469  2C63               	goto	u1385
  2902  046A  0834               	movf	??___fttol,w
  2903  046B  00B7               	movwf	??___fttol+3
  2904  046C  0837               	movf	??___fttol+3,w
  2905  046D  00B8               	movwf	___fttol@sign1
  2906  046E  17B1               	bsf	___fttol@f1+1,7
  2907  046F  30FF               	movlw	255
  2908  0470  05B0               	andwf	___fttol@f1,f
  2909  0471  30FF               	movlw	255
  2910  0472  05B1               	andwf	___fttol@f1+1,f
  2911  0473  3000               	movlw	0
  2912  0474  05B2               	andwf	___fttol@f1+2,f
  2913  0475  0830               	movf	___fttol@f1,w
  2914  0476  00B9               	movwf	___fttol@lval
  2915  0477  0831               	movf	___fttol@f1+1,w
  2916  0478  00BA               	movwf	___fttol@lval+1
  2917  0479  0832               	movf	___fttol@f1+2,w
  2918  047A  00BB               	movwf	___fttol@lval+2
  2919  047B  01BC               	clrf	___fttol@lval+3
  2920  047C  308E               	movlw	142
  2921  047D  02BD               	subwf	___fttol@exp1,f
  2922  047E  1FBD               	btfss	___fttol@exp1,7
  2923  047F  2C9E               	goto	l1431
  2924  0480  083D               	movf	___fttol@exp1,w
  2925  0481  3A80               	xorlw	128
  2926  0482  3E8F               	addlw	143
  2927  0483  1803               	skipnc
  2928  0484  2C8E               	goto	l1429
  2929  0485  3000               	movlw	0
  2930  0486  00B3               	movwf	?___fttol+3
  2931  0487  3000               	movlw	0
  2932  0488  00B2               	movwf	?___fttol+2
  2933  0489  3000               	movlw	0
  2934  048A  00B1               	movwf	?___fttol+1
  2935  048B  3000               	movlw	0
  2936  048C  00B0               	movwf	?___fttol
  2937  048D  0008               	return
  2938  048E                     l1429:	
  2939  048E  3001               	movlw	1
  2940  048F                     u1415:	
  2941  048F  1003               	clrc
  2942  0490  0CBC               	rrf	___fttol@lval+3,f
  2943  0491  0CBB               	rrf	___fttol@lval+2,f
  2944  0492  0CBA               	rrf	___fttol@lval+1,f
  2945  0493  0CB9               	rrf	___fttol@lval,f
  2946  0494  3EFF               	addlw	-1
  2947  0495  1D03               	skipz
  2948  0496  2C8F               	goto	u1415
  2949  0497  3001               	movlw	1
  2950  0498  00B4               	movwf	??___fttol
  2951  0499  0834               	movf	??___fttol,w
  2952  049A  07BD               	addwf	___fttol@exp1,f
  2953  049B  1903               	btfsc	3,2
  2954  049C  2CB9               	goto	l1441
  2955  049D  2C8E               	goto	l1429
  2956  049E                     l1431:	
  2957  049E  3018               	movlw	24
  2958  049F  023D               	subwf	___fttol@exp1,w
  2959  04A0  1C03               	skipc
  2960  04A1  2CB6               	goto	l1439
  2961  04A2  3000               	movlw	0
  2962  04A3  00B3               	movwf	?___fttol+3
  2963  04A4  3000               	movlw	0
  2964  04A5  00B2               	movwf	?___fttol+2
  2965  04A6  3000               	movlw	0
  2966  04A7  00B1               	movwf	?___fttol+1
  2967  04A8  3000               	movlw	0
  2968  04A9  00B0               	movwf	?___fttol
  2969  04AA  0008               	return
  2970  04AB                     l1437:	
  2971  04AB  3001               	movlw	1
  2972  04AC  00B4               	movwf	??___fttol
  2973  04AD                     u1445:	
  2974  04AD  1003               	clrc
  2975  04AE  0DB9               	rlf	___fttol@lval,f
  2976  04AF  0DBA               	rlf	___fttol@lval+1,f
  2977  04B0  0DBB               	rlf	___fttol@lval+2,f
  2978  04B1  0DBC               	rlf	___fttol@lval+3,f
  2979  04B2  0BB4               	decfsz	??___fttol,f
  2980  04B3  2CAD               	goto	u1445
  2981  04B4  3001               	movlw	1
  2982  04B5  02BD               	subwf	___fttol@exp1,f
  2983  04B6                     l1439:	
  2984  04B6  08BD               	movf	___fttol@exp1,f
  2985  04B7  1D03               	skipz
  2986  04B8  2CAB               	goto	l1437
  2987  04B9                     l1441:	
  2988  04B9  0838               	movf	___fttol@sign1,w
  2989  04BA  1903               	btfsc	3,2
  2990  04BB  2CC7               	goto	l1445
  2991  04BC  09B9               	comf	___fttol@lval,f
  2992  04BD  09BA               	comf	___fttol@lval+1,f
  2993  04BE  09BB               	comf	___fttol@lval+2,f
  2994  04BF  09BC               	comf	___fttol@lval+3,f
  2995  04C0  0AB9               	incf	___fttol@lval,f
  2996  04C1  1903               	skipnz
  2997  04C2  0ABA               	incf	___fttol@lval+1,f
  2998  04C3  1903               	skipnz
  2999  04C4  0ABB               	incf	___fttol@lval+2,f
  3000  04C5  1903               	skipnz
  3001  04C6  0ABC               	incf	___fttol@lval+3,f
  3002  04C7                     l1445:	
  3003  04C7  083C               	movf	___fttol@lval+3,w
  3004  04C8  00B3               	movwf	?___fttol+3
  3005  04C9  083B               	movf	___fttol@lval+2,w
  3006  04CA  00B2               	movwf	?___fttol+2
  3007  04CB  083A               	movf	___fttol@lval+1,w
  3008  04CC  00B1               	movwf	?___fttol+1
  3009  04CD  0839               	movf	___fttol@lval,w
  3010  04CE  00B0               	movwf	?___fttol
  3011  04CF  0008               	return
  3012  04D0                     __end_of___fttol:	
  3013                           
  3014                           	psect	text15
  3015  0708                     __ptext15:	
  3016 ;; *************** function ___ftmul *****************
  3017 ;; Defined at:
  3018 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  f1              3    0[BANK0 ] float 
  3021 ;;  f2              3    3[BANK0 ] float 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3024 ;;  sign            1   15[BANK0 ] unsigned char 
  3025 ;;  cntr            1   14[BANK0 ] unsigned char 
  3026 ;;  exp             1   10[BANK0 ] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  3    0[BANK0 ] float 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1
  3036 ;;      Params:         0       6       0
  3037 ;;      Locals:         0       6       0
  3038 ;;      Temps:          0       4       0
  3039 ;;      Totals:         0      16       0
  3040 ;;Total ram usage:       16 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    1
  3043 ;; This function calls:
  3044 ;;		___ftpack
  3045 ;; This function is called by:
  3046 ;;		_GetPulseWidth
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function ___ftmul
  3053  0708                     ___ftmul:	
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3057  0708  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0709  1303               	bcf	3,6	;RP1=0, select bank0
  3059  070A  0820               	movf	___ftmul@f1,w
  3060  070B  00A6               	movwf	??___ftmul
  3061  070C  0821               	movf	___ftmul@f1+1,w
  3062  070D  00A7               	movwf	??___ftmul+1
  3063  070E  0822               	movf	___ftmul@f1+2,w
  3064  070F  00A8               	movwf	??___ftmul+2
  3065  0710  1003               	clrc
  3066  0711  0D27               	rlf	??___ftmul+1,w
  3067  0712  0D28               	rlf	??___ftmul+2,w
  3068  0713  00A9               	movwf	??___ftmul+3
  3069  0714  0829               	movf	??___ftmul+3,w
  3070  0715  00AA               	movwf	___ftmul@exp
  3071  0716  08AA               	movf	___ftmul@exp,f
  3072  0717  1D03               	skipz
  3073  0718  2F20               	goto	l1361
  3074  0719  3000               	movlw	0
  3075  071A  00A0               	movwf	?___ftmul
  3076  071B  3000               	movlw	0
  3077  071C  00A1               	movwf	?___ftmul+1
  3078  071D  3000               	movlw	0
  3079  071E  00A2               	movwf	?___ftmul+2
  3080  071F  0008               	return
  3081  0720                     l1361:	
  3082  0720  0823               	movf	___ftmul@f2,w
  3083  0721  00A6               	movwf	??___ftmul
  3084  0722  0824               	movf	___ftmul@f2+1,w
  3085  0723  00A7               	movwf	??___ftmul+1
  3086  0724  0825               	movf	___ftmul@f2+2,w
  3087  0725  00A8               	movwf	??___ftmul+2
  3088  0726  1003               	clrc
  3089  0727  0D27               	rlf	??___ftmul+1,w
  3090  0728  0D28               	rlf	??___ftmul+2,w
  3091  0729  00A9               	movwf	??___ftmul+3
  3092  072A  0829               	movf	??___ftmul+3,w
  3093  072B  00AF               	movwf	___ftmul@sign
  3094  072C  08AF               	movf	___ftmul@sign,f
  3095  072D  1D03               	skipz
  3096  072E  2F36               	goto	l1367
  3097  072F  3000               	movlw	0
  3098  0730  00A0               	movwf	?___ftmul
  3099  0731  3000               	movlw	0
  3100  0732  00A1               	movwf	?___ftmul+1
  3101  0733  3000               	movlw	0
  3102  0734  00A2               	movwf	?___ftmul+2
  3103  0735  0008               	return
  3104  0736                     l1367:	
  3105  0736  082F               	movf	___ftmul@sign,w
  3106  0737  3E7B               	addlw	123
  3107  0738  00A6               	movwf	??___ftmul
  3108  0739  0826               	movf	??___ftmul,w
  3109  073A  07AA               	addwf	___ftmul@exp,f
  3110  073B  0820               	movf	___ftmul@f1,w
  3111  073C  00A6               	movwf	??___ftmul
  3112  073D  0821               	movf	___ftmul@f1+1,w
  3113  073E  00A7               	movwf	??___ftmul+1
  3114  073F  0822               	movf	___ftmul@f1+2,w
  3115  0740  00A8               	movwf	??___ftmul+2
  3116  0741  3010               	movlw	16
  3117  0742                     u1255:	
  3118  0742  1003               	clrc
  3119  0743  0CA8               	rrf	??___ftmul+2,f
  3120  0744  0CA7               	rrf	??___ftmul+1,f
  3121  0745  0CA6               	rrf	??___ftmul,f
  3122  0746  3EFF               	addlw	-1
  3123  0747  1D03               	skipz
  3124  0748  2F42               	goto	u1255
  3125  0749  0826               	movf	??___ftmul,w
  3126  074A  00A9               	movwf	??___ftmul+3
  3127  074B  0829               	movf	??___ftmul+3,w
  3128  074C  00AF               	movwf	___ftmul@sign
  3129  074D  0823               	movf	___ftmul@f2,w
  3130  074E  00A6               	movwf	??___ftmul
  3131  074F  0824               	movf	___ftmul@f2+1,w
  3132  0750  00A7               	movwf	??___ftmul+1
  3133  0751  0825               	movf	___ftmul@f2+2,w
  3134  0752  00A8               	movwf	??___ftmul+2
  3135  0753  3010               	movlw	16
  3136  0754                     u1265:	
  3137  0754  1003               	clrc
  3138  0755  0CA8               	rrf	??___ftmul+2,f
  3139  0756  0CA7               	rrf	??___ftmul+1,f
  3140  0757  0CA6               	rrf	??___ftmul,f
  3141  0758  3EFF               	addlw	-1
  3142  0759  1D03               	skipz
  3143  075A  2F54               	goto	u1265
  3144  075B  0826               	movf	??___ftmul,w
  3145  075C  00A9               	movwf	??___ftmul+3
  3146  075D  0829               	movf	??___ftmul+3,w
  3147  075E  06AF               	xorwf	___ftmul@sign,f
  3148  075F  3080               	movlw	128
  3149  0760  00A6               	movwf	??___ftmul
  3150  0761  0826               	movf	??___ftmul,w
  3151  0762  05AF               	andwf	___ftmul@sign,f
  3152  0763  17A1               	bsf	___ftmul@f1+1,7
  3153  0764  17A4               	bsf	___ftmul@f2+1,7
  3154  0765  30FF               	movlw	255
  3155  0766  05A3               	andwf	___ftmul@f2,f
  3156  0767  30FF               	movlw	255
  3157  0768  05A4               	andwf	___ftmul@f2+1,f
  3158  0769  3000               	movlw	0
  3159  076A  05A5               	andwf	___ftmul@f2+2,f
  3160  076B  3000               	movlw	0
  3161  076C  00AB               	movwf	___ftmul@f3_as_product
  3162  076D  3000               	movlw	0
  3163  076E  00AC               	movwf	___ftmul@f3_as_product+1
  3164  076F  3000               	movlw	0
  3165  0770  00AD               	movwf	___ftmul@f3_as_product+2
  3166  0771  3007               	movlw	7
  3167  0772  00A6               	movwf	??___ftmul
  3168  0773  0826               	movf	??___ftmul,w
  3169  0774  00AE               	movwf	___ftmul@cntr
  3170  0775                     l1379:	
  3171  0775  1C20               	btfss	___ftmul@f1,0
  3172  0776  2F85               	goto	l1383
  3173  0777  0823               	movf	___ftmul@f2,w
  3174  0778  07AB               	addwf	___ftmul@f3_as_product,f
  3175  0779  0824               	movf	___ftmul@f2+1,w
  3176  077A  1103               	clrz
  3177  077B  1803               	skipnc
  3178  077C  0A24               	incf	___ftmul@f2+1,w
  3179  077D  1D03               	btfss	3,2
  3180  077E  07AC               	addwf	___ftmul@f3_as_product+1,f
  3181  077F  0825               	movf	___ftmul@f2+2,w
  3182  0780  1103               	clrz
  3183  0781  1803               	skipnc
  3184  0782  0A25               	incf	___ftmul@f2+2,w
  3185  0783  1D03               	btfss	3,2
  3186  0784  07AD               	addwf	___ftmul@f3_as_product+2,f
  3187  0785                     l1383:	
  3188  0785  3001               	movlw	1
  3189  0786                     u1295:	
  3190  0786  1003               	clrc
  3191  0787  0CA2               	rrf	___ftmul@f1+2,f
  3192  0788  0CA1               	rrf	___ftmul@f1+1,f
  3193  0789  0CA0               	rrf	___ftmul@f1,f
  3194  078A  3EFF               	addlw	-1
  3195  078B  1D03               	skipz
  3196  078C  2F86               	goto	u1295
  3197  078D  3001               	movlw	1
  3198  078E                     u1305:	
  3199  078E  1003               	clrc
  3200  078F  0DA3               	rlf	___ftmul@f2,f
  3201  0790  0DA4               	rlf	___ftmul@f2+1,f
  3202  0791  0DA5               	rlf	___ftmul@f2+2,f
  3203  0792  3EFF               	addlw	-1
  3204  0793  1D03               	skipz
  3205  0794  2F8E               	goto	u1305
  3206  0795  3001               	movlw	1
  3207  0796  02AE               	subwf	___ftmul@cntr,f
  3208  0797  1D03               	btfss	3,2
  3209  0798  2F75               	goto	l1379
  3210  0799  3009               	movlw	9
  3211  079A  00A6               	movwf	??___ftmul
  3212  079B  0826               	movf	??___ftmul,w
  3213  079C  00AE               	movwf	___ftmul@cntr
  3214  079D                     l1391:	
  3215  079D  1C20               	btfss	___ftmul@f1,0
  3216  079E  2FAD               	goto	l1395
  3217  079F  0823               	movf	___ftmul@f2,w
  3218  07A0  07AB               	addwf	___ftmul@f3_as_product,f
  3219  07A1  0824               	movf	___ftmul@f2+1,w
  3220  07A2  1103               	clrz
  3221  07A3  1803               	skipnc
  3222  07A4  0A24               	incf	___ftmul@f2+1,w
  3223  07A5  1D03               	btfss	3,2
  3224  07A6  07AC               	addwf	___ftmul@f3_as_product+1,f
  3225  07A7  0825               	movf	___ftmul@f2+2,w
  3226  07A8  1103               	clrz
  3227  07A9  1803               	skipnc
  3228  07AA  0A25               	incf	___ftmul@f2+2,w
  3229  07AB  1D03               	btfss	3,2
  3230  07AC  07AD               	addwf	___ftmul@f3_as_product+2,f
  3231  07AD                     l1395:	
  3232  07AD  3001               	movlw	1
  3233  07AE                     u1345:	
  3234  07AE  1003               	clrc
  3235  07AF  0CA2               	rrf	___ftmul@f1+2,f
  3236  07B0  0CA1               	rrf	___ftmul@f1+1,f
  3237  07B1  0CA0               	rrf	___ftmul@f1,f
  3238  07B2  3EFF               	addlw	-1
  3239  07B3  1D03               	skipz
  3240  07B4  2FAE               	goto	u1345
  3241  07B5  3001               	movlw	1
  3242  07B6                     u1355:	
  3243  07B6  1003               	clrc
  3244  07B7  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3245  07B8  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3246  07B9  0CAB               	rrf	___ftmul@f3_as_product,f
  3247  07BA  3EFF               	addlw	-1
  3248  07BB  1D03               	skipz
  3249  07BC  2FB6               	goto	u1355
  3250  07BD  3001               	movlw	1
  3251  07BE  02AE               	subwf	___ftmul@cntr,f
  3252  07BF  1D03               	btfss	3,2
  3253  07C0  2F9D               	goto	l1391
  3254  07C1  082B               	movf	___ftmul@f3_as_product,w
  3255  07C2  00F0               	movwf	___ftpack@arg
  3256  07C3  082C               	movf	___ftmul@f3_as_product+1,w
  3257  07C4  00F1               	movwf	___ftpack@arg+1
  3258  07C5  082D               	movf	___ftmul@f3_as_product+2,w
  3259  07C6  00F2               	movwf	___ftpack@arg+2
  3260  07C7  082A               	movf	___ftmul@exp,w
  3261  07C8  00A6               	movwf	??___ftmul
  3262  07C9  0826               	movf	??___ftmul,w
  3263  07CA  00F3               	movwf	___ftpack@exp
  3264  07CB  082F               	movf	___ftmul@sign,w
  3265  07CC  00A7               	movwf	??___ftmul+1
  3266  07CD  0827               	movf	??___ftmul+1,w
  3267  07CE  00F4               	movwf	___ftpack@sign
  3268  07CF  23DA               	fcall	___ftpack
  3269  07D0  0870               	movf	?___ftpack,w
  3270  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3271  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3272  07D3  00A0               	movwf	?___ftmul
  3273  07D4  0871               	movf	?___ftpack+1,w
  3274  07D5  00A1               	movwf	?___ftmul+1
  3275  07D6  0872               	movf	?___ftpack+2,w
  3276  07D7  00A2               	movwf	?___ftmul+2
  3277  07D8  0008               	return
  3278  07D9                     __end_of___ftmul:	
  3279                           
  3280                           	psect	text16
  3281  03DA                     __ptext16:	
  3282 ;; *************** function ___ftpack *****************
  3283 ;; Defined at:
  3284 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  arg             3    0[COMMON] unsigned um
  3287 ;;  exp             1    3[COMMON] unsigned char 
  3288 ;;  sign            1    4[COMMON] unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  3    0[COMMON] float 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1
  3300 ;;      Params:         5       0       0
  3301 ;;      Locals:         0       0       0
  3302 ;;      Temps:          3       0       0
  3303 ;;      Totals:         8       0       0
  3304 ;;Total ram usage:        8 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		___awtoft
  3310 ;;		___ftmul
  3311 ;;		___lltoft
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function ___ftpack
  3317  03DA                     ___ftpack:	
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3321  03DA  0873               	movf	___ftpack@exp,w
  3322  03DB  1903               	btfsc	3,2
  3323  03DC  2BE2               	goto	l1217
  3324  03DD  0872               	movf	___ftpack@arg+2,w
  3325  03DE  0471               	iorwf	___ftpack@arg+1,w
  3326  03DF  0470               	iorwf	___ftpack@arg,w
  3327  03E0  1D03               	skipz
  3328  03E1  2BF5               	goto	l1223
  3329  03E2                     l1217:	
  3330  03E2  3000               	movlw	0
  3331  03E3  00F0               	movwf	?___ftpack
  3332  03E4  3000               	movlw	0
  3333  03E5  00F1               	movwf	?___ftpack+1
  3334  03E6  3000               	movlw	0
  3335  03E7  00F2               	movwf	?___ftpack+2
  3336  03E8  0008               	return
  3337  03E9                     l1221:	
  3338  03E9  3001               	movlw	1
  3339  03EA  00F5               	movwf	??___ftpack
  3340  03EB  0875               	movf	??___ftpack,w
  3341  03EC  07F3               	addwf	___ftpack@exp,f
  3342  03ED  3001               	movlw	1
  3343  03EE                     u935:	
  3344  03EE  1003               	clrc
  3345  03EF  0CF2               	rrf	___ftpack@arg+2,f
  3346  03F0  0CF1               	rrf	___ftpack@arg+1,f
  3347  03F1  0CF0               	rrf	___ftpack@arg,f
  3348  03F2  3EFF               	addlw	-1
  3349  03F3  1D03               	skipz
  3350  03F4  2BEE               	goto	u935
  3351  03F5                     l1223:	
  3352  03F5  30FE               	movlw	254
  3353  03F6  0572               	andwf	___ftpack@arg+2,w
  3354  03F7  1903               	btfsc	3,2
  3355  03F8  2C10               	goto	l381
  3356  03F9  2BE9               	goto	l1221
  3357  03FA                     l1225:	
  3358  03FA  3001               	movlw	1
  3359  03FB  00F5               	movwf	??___ftpack
  3360  03FC  0875               	movf	??___ftpack,w
  3361  03FD  07F3               	addwf	___ftpack@exp,f
  3362  03FE  3001               	movlw	1
  3363  03FF  07F0               	addwf	___ftpack@arg,f
  3364  0400  3000               	movlw	0
  3365  0401  1803               	skipnc
  3366  0402  3001               	movlw	1
  3367  0403  07F1               	addwf	___ftpack@arg+1,f
  3368  0404  3000               	movlw	0
  3369  0405  1803               	skipnc
  3370  0406  3001               	movlw	1
  3371  0407  07F2               	addwf	___ftpack@arg+2,f
  3372  0408  3001               	movlw	1
  3373  0409                     u955:	
  3374  0409  1003               	clrc
  3375  040A  0CF2               	rrf	___ftpack@arg+2,f
  3376  040B  0CF1               	rrf	___ftpack@arg+1,f
  3377  040C  0CF0               	rrf	___ftpack@arg,f
  3378  040D  3EFF               	addlw	-1
  3379  040E  1D03               	skipz
  3380  040F  2C09               	goto	u955
  3381  0410                     l381:	
  3382  0410  30FF               	movlw	255
  3383  0411  0572               	andwf	___ftpack@arg+2,w
  3384  0412  1903               	btfsc	3,2
  3385  0413  2C1F               	goto	l1233
  3386  0414  2BFA               	goto	l1225
  3387  0415                     l1231:	
  3388  0415  3001               	movlw	1
  3389  0416  02F3               	subwf	___ftpack@exp,f
  3390  0417  3001               	movlw	1
  3391  0418                     u975:	
  3392  0418  1003               	clrc
  3393  0419  0DF0               	rlf	___ftpack@arg,f
  3394  041A  0DF1               	rlf	___ftpack@arg+1,f
  3395  041B  0DF2               	rlf	___ftpack@arg+2,f
  3396  041C  3EFF               	addlw	-1
  3397  041D  1D03               	skipz
  3398  041E  2C18               	goto	u975
  3399  041F                     l1233:	
  3400  041F  1FF1               	btfss	___ftpack@arg+1,7
  3401  0420  2C15               	goto	l1231
  3402  0421  1873               	btfsc	___ftpack@exp,0
  3403  0422  2C29               	goto	l387
  3404  0423  30FF               	movlw	255
  3405  0424  05F0               	andwf	___ftpack@arg,f
  3406  0425  307F               	movlw	127
  3407  0426  05F1               	andwf	___ftpack@arg+1,f
  3408  0427  30FF               	movlw	255
  3409  0428  05F2               	andwf	___ftpack@arg+2,f
  3410  0429                     l387:	
  3411  0429  1003               	clrc
  3412  042A  0CF3               	rrf	___ftpack@exp,f
  3413  042B  0873               	movf	___ftpack@exp,w
  3414  042C  00F5               	movwf	??___ftpack
  3415  042D  01F6               	clrf	??___ftpack+1
  3416  042E  01F7               	clrf	??___ftpack+2
  3417  042F  3010               	movlw	16
  3418  0430                     u1005:	
  3419  0430  1003               	clrc
  3420  0431  0DF5               	rlf	??___ftpack,f
  3421  0432  0DF6               	rlf	??___ftpack+1,f
  3422  0433  0DF7               	rlf	??___ftpack+2,f
  3423  0434  3EFF               	addlw	-1
  3424  0435  1D03               	skipz
  3425  0436  2C30               	goto	u1005
  3426  0437  0875               	movf	??___ftpack,w
  3427  0438  04F0               	iorwf	___ftpack@arg,f
  3428  0439  0876               	movf	??___ftpack+1,w
  3429  043A  04F1               	iorwf	___ftpack@arg+1,f
  3430  043B  0877               	movf	??___ftpack+2,w
  3431  043C  04F2               	iorwf	___ftpack@arg+2,f
  3432  043D  0874               	movf	___ftpack@sign,w
  3433  043E  1903               	btfsc	3,2
  3434  043F  0008               	return
  3435  0440  17F2               	bsf	___ftpack@arg+2,7
  3436  0441  0008               	return
  3437  0442                     __end_of___ftpack:	
  3438  007E                     btemp	set	126	;btemp
  3439  007E                     wtemp	set	126
  3440  007E                     wtemp0	set	126
  3441  0080                     wtemp1	set	128
  3442  0082                     wtemp2	set	130
  3443  0084                     wtemp3	set	132
  3444  0086                     wtemp4	set	134
  3445  0088                     wtemp5	set	136
  3446  007F                     wtemp6	set	127
  3447  007E                     ttemp	set	126
  3448  007E                     ttemp0	set	126
  3449  0081                     ttemp1	set	129
  3450  0084                     ttemp2	set	132
  3451  0087                     ttemp3	set	135
  3452  007F                     ttemp4	set	127
  3453  007E                     ltemp	set	126
  3454  007E                     ltemp0	set	126
  3455  0082                     ltemp1	set	130
  3456  0086                     ltemp2	set	134
  3457  0080                     ltemp3	set	128


Data Sizes:
    Strings     84
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      68
    BANK1            32      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_7(CODE[4]), STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[15]), STR_2(CODE[18]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteInt
    _main->___awtoft
    ___awtoft->___ftpack
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop
    _GetPulseWidth->___lltoft
    ___lltoft->___ftpack
    ___fttol->___awtoft
    ___fttol->___lltoft
    ___ftmul->___awtoft
    ___ftmul->___lltoft

Critical Paths under _main in BANK0

    _main->_GetPulseWidth
    _GetPulseWidth->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   16603
                                             40 BANK0      7     7      0
                      _GetPulseWidth
                         _HCSR04Init
                      _HCSR04Trigger
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1790
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1438
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2394
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1277
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1511
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1070
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _HCSR04Trigger                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _HCSR04Init                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetPulseWidth                                       10     8      2    4491
                                             30 BANK0     10     8      2
                            ___ftmul
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1768
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2184
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1646
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetPulseWidth
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
   _HCSR04Init
   _HCSR04Trigger
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2F      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      52       8        0.0%
ABS                  0      0      52       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Sep 12 18:42:29 2015

           ?_LCDBusyLoop 0070                        pc 0002                       l21 026F  
                     l22 0272                       l59 0614                       l68 01F0  
                     l69 01DC             ___awdiv@sign 0076                       fsr 0004  
                    l115 0679                      l381 0410                      l387 0429  
                    _RC5 003D                      _RC6 003E                      _RC7 003F  
                    u935 03EE                      u955 0409                      u975 0418  
                    u895 0346                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     S1741 005B  LCDWriteInt@field_length 0022  
        __end_of_LCDByte 0295          __end_of_LCDInit 02E0             ?_LCDWriteInt 0020  
            LCDByte@temp 007B                     l1221 03E9                     l1231 0415  
                   l1223 03F5                     l1233 041F                     l1225 03FA  
                   l1217 03E2                     l1313 03D3                     l1305 03C0  
                   l1411 045C                     l1309 03CB                     l1325 02EA  
                   l1431 049E                     l1351 0326                     l1343 0313  
                   l1361 0720                     l1441 04B9                     l1177 0339  
                   l1281 0389                     l1337 02F7                     l1329 02F1  
                   l1339 0305                     l1347 031E                     l1523 0243  
                   l1531 0221                     l1445 04C7                     l1437 04AB  
                   l1429 048E                     l1453 01F9                     l1391 079D  
                   l1383 0785                     l1367 0736                     l1439 04B6  
                   l1455 020B                     l1287 0394                     l1527 0247  
                   l1703 051C                     l1617 0644                     l1297 039C  
                   l1561 05E9                     l1545 05A5                     l1395 07AD  
                   l1379 0775                     l1635 0686                     l1643 06AD  
                   l1619 0664                     l1299 03AA                     l1571 0602  
                   l1555 05B9                     l1547 05A9                     l1707 052C  
                   l1567 05F4                     l1671 01BF                     l1649 06C2  
                   l1593 01E5                     l1569 05FA                     l1659 06DE  
                   l1587 01DE                     l1589 01E0                     l1689 04FA  
                   STR_1 0007                     STR_2 0019                     STR_3 002B  
                   STR_4 004E                     STR_5 003A                     STR_6 0044  
                   STR_7 0057                     u1005 0430                     u1025 025A  
                   u1105 03B7                     u1115 03C1                     u1205 0314  
                   u1305 078E                     u1075 039F                     u1255 0742  
                   u1415 048F                     u1095 03AB                     u1175 02FA  
                   u1345 07AE                     u1265 0754                     u1355 07B6  
                   u1195 030B                     u1445 04AD                     u1295 0786  
                   u1615 0623                     u1385 0463                     u1475 01FE  
                   u1715 06A9                     u1725 06BB                     u1735 06D7  
                   u1807 019C                     u1665 0660                     u1675 0672  
                   u1755 0514                     u1765 0524                     u1777 04F3  
                   u1787 0576                     u1797 029C                     _TMR1 000E  
                   _main 04D0             ___ftpack@arg 0070       __size_of_LCDGotoXY 0021  
           ___ftpack@exp 0073                     btemp 007E                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
    __size_of_HCSR04Init 0007             ___ftmul@cntr 002E             ___ftmul@sign 002F  
           ___fttol@exp1 003D             ___fttol@lval 0039                    ?_main 0070  
        __end_of___awdiv 03DA          __end_of___awmod 032D             LCDInit@style 0020  
        __end_of___ftmul 07D9          ___awdiv@divisor 0070          __end_of___fttol 04D0  
                  _PCFG1 04F9                    _PCFG2 04FA          ___awdiv@counter 0075  
                  _PORTA 0005                    _PORTC 0007                    _TRISA 0085  
                  _TRISC 0087             ___lltoft@exp 007D            ___awtoft@sign 007D  
          ___ftpack@sign 0074                    main@d 004B                    main@r 004D  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07D9             __end_of_main 057E                   ??_main 0048  
          ___fttol@sign1 0038    __end_of_HCSR04Trigger 01A5        __end_of_LCDGotoXY 01F5  
          LCDByte@isdata 0075                ??_LCDByte 0076                ??_LCDInit 007C  
       ___awdiv@dividend 0072         __end_of___awtoft 01D4         __end_of___ftpack 0442  
       __end_of___lltoft 021E                   _TMR1ON 0080           _LCDWriteString 021E  
              ??___awdiv 0074                ??___awmod 0074                ??___ftmul 0026  
              ??___fttol 0034    __end_of_GetPulseWidth 0708     __size_of_LCDBusyLoop 0052  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
  ___ftmul@f3_as_product 002B             ??_HCSR04Init 0070             LCDWriteInt@i 002A  
           LCDWriteInt@j 0028     __size_of_LCDWriteInt 00BB  __end_of__initialization 07FE  
 __end_of_LCDWriteString 0256                LCDByte@hn 0078                LCDByte@ln 0079  
             ___awtoft@c 0078               ___ftmul@f1 0020               ___ftmul@f2 0023  
         GetPulseWidth@i 0044       __end_of_HCSR04Init 0197               ___fttol@f1 0030  
         __pcstackCOMMON 0070             __pidataBANK0 01A5               ___lltoft@c 0078  
             __pbssBANK0 005F          ?_LCDWriteString 0070               __pmaintext 04D0  
              ?___awtoft 0078                ?___ftpack 0070                ?___lltoft 0078  
                _T1CKPS0 0084                  _LCDByte 0256                  _LCDInit 0295  
             __stringtab 0001                  ___cgram 004F                  ___awdiv 037F  
                ___awmod 02E0                  ___ftmul 0708                  ___fttol 0442  
             ??___awtoft 007B               ??___ftpack 0075               ??___lltoft 007C  
                __ptext1 01B5                  __ptext2 021E                  __ptext3 057E  
                __ptext4 02E0                  __ptext5 037F                  __ptext6 0295  
                __ptext7 01D4                  __ptext8 0256                  __ptext9 032D  
       ___awmod@dividend 0072                _LCDGotoXY 01D4     end_of_initialization 07FE  
              _PORTCbits 0007        LCDWriteString@msg 0021                _TRISCbits 0087  
             ?_LCDGotoXY 007C               LCDInit@__i 0021               LCDGotoXY@x 0020  
             LCDGotoXY@y 007C   __size_of_HCSR04Trigger 000E              ___ftmul@exp 002A  
          ??_LCDBusyLoop 0070      GetPulseWidth@result 0040      start_initialization 07D9  
          ??_LCDWriteInt 007C         ??_LCDWriteString 007C   __size_of_GetPulseWidth 00CF  
            __pdataBANK0 004F      __end_of_LCDBusyLoop 037F            _HCSR04Trigger 0197  
               ?_LCDByte 0075        __size_of___awtoft 001F                 ?_LCDInit 0070  
      __size_of___ftpack 0068        __size_of___lltoft 0029                 LCDByte@c 007A  
              ___latbits 0000            __pcstackBANK0 0020              ??_LCDGotoXY 007D  
    __end_of__stringdata 005B      __end_of_LCDWriteInt 0639                 ?___awdiv 0070  
               ?___awmod 0070                 ?___ftmul 0020                 ?___fttol 0030  
          _GetPulseWidth 0639                __pstrings 0001                __pswtext1 005B  
         ?_HCSR04Trigger 0070          LCDBusyLoop@busy 0072          LCDBusyLoop@temp 0073  
            _LCDBusyLoop 032D           ?_GetPulseWidth 003E         LCDWriteString@cc 0020  
            __stringbase 0006              __stringdata 0007         __size_of_LCDByte 003F  
       __size_of_LCDInit 004B              _LCDWriteInt 057E         __size_of___awdiv 005B  
       __size_of___awmod 004D         __size_of___ftmul 00D1         __size_of___fttol 008E  
        ??_HCSR04Trigger 0070        LCDBusyLoop@status 0074                 ___awtoft 01B5  
               ___ftpack 03DA       __end_of__stringtab 0007                 ___lltoft 01F5  
        LCDWriteInt@F784 005F               _HCSR04Init 0190                 __ptext10 0197  
               __ptext11 0190                 __ptext12 0639                 __ptext13 01F5  
               __ptext14 0442                 __ptext15 0708                 __ptext16 03DA  
          __size_of_main 00AE          ??_GetPulseWidth 007E           LCDWriteInt@val 0020  
         LCDWriteInt@str 0023                stringcode 0001              ?_HCSR04Init 0070  
               stringdir 0001                 stringtab 0001  __size_of_LCDWriteString 0038  
