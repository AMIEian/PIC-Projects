

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Nov 26 13:38:38 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     _INTCONbits	set	4082
    18  0000                     _PIR1bits	set	3998
    19  0000                     _PORTB	set	3969
    20  0000                     _RCREG	set	4014
    21  0000                     _RCSTAbits	set	4011
    22  0000                     _SPBRG	set	4015
    23  0000                     _TRISB	set	3987
    24  0000                     _TRISCbits	set	3988
    25  0000                     _TXREG	set	4013
    26  0000                     _TXSTAbits	set	4012
    27  0000                     _PEIE	set	32662
    28  0000                     _RCIE	set	31981
    29  0000                     _RCIF	set	31989
    30                           
    31 ;;
    32 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    33 ;;
    34 ;; *************** function _main *****************
    35 ;; Defined at:
    36 ;;		line 10 in file "E:\Study Material\XC8 PROJECTS\18F Serial Test\SerTest.c"
    37 ;; Parameters:    Size  Location     Type
    38 ;;		None
    39 ;; Auto vars:     Size  Location     Type
    40 ;;  data            1   25[COMRAM] unsigned char 
    41 ;;  n               1   23[COMRAM] unsigned char 
    42 ;;  count           1   24[COMRAM] unsigned char 
    43 ;; Return value:  Size  Location     Type
    44 ;;		None               void
    45 ;; Registers used:
    46 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    47 ;; Tracked objects:
    48 ;;		On entry : 0/0
    49 ;;		On exit  : 0/0
    50 ;;		Unchanged: 0/0
    51 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    52 ;;      Params:         0       0       0       0       0       0       0
    53 ;;      Locals:         3       0       0       0       0       0       0
    54 ;;      Temps:          0       0       0       0       0       0       0
    55 ;;      Totals:         3       0       0       0       0       0       0
    56 ;;Total ram usage:        3 bytes
    57 ;; Hardware stack levels required when called:    3
    58 ;; This function calls:
    59 ;;		_USARTDataAvailable
    60 ;;		_USARTInit
    61 ;;		_USARTReadData
    62 ;;		_USARTWriteChar
    63 ;; This function is called by:
    64 ;;		Startup code after reset
    65 ;; This function uses a non-reentrant model
    66 ;;
    67                           
    68                           	psect	text0
    69  00018E                     __ptext0:
    70                           	opt stack 0
    71  00018E                     _main:
    72                           	opt stack 28
    73                           
    74                           ;incstack = 0
    75  00018E  FFFF               	dw	65535
    76                           
    77                           ;SerTest.c: 12: TRISB = 0x00;
    78  000190  0E00               	movlw	0
    79  000192  6E93               	movwf	3987,c	;volatile
    80                           
    81                           ;SerTest.c: 13: char count;
    82                           ;SerTest.c: 14: for(count = 0; count < 10; count++)
    83  000194  0E00               	movlw	0
    84  000196  6E60               	movwf	main@count,c
    85  000198  D00C               	goto	L1
    86  00019A                     l149:
    87                           
    88                           ;SerTest.c: 15: {
    89                           ;SerTest.c: 16: PORTB = 0xFF;
    90  00019A  6881               	setf	3969,c	;volatile
    91                           
    92                           ;SerTest.c: 17: _delay(10);
    93  00019C  0E02               	movlw	2
    94  00019E                     u337:
    95  00019E  F000               	nop	
    96  0001A0  2EE8               	decfsz	wreg,f,c
    97  0001A2  D7FD               	goto	u337
    98                           
    99                           ;SerTest.c: 18: PORTB = 0x00;
   100  0001A4  0E00               	movlw	0
   101  0001A6  6E81               	movwf	3969,c	;volatile
   102                           
   103                           ;SerTest.c: 19: _delay(10);
   104  0001A8  0E02               	movlw	2
   105  0001AA                     u347:
   106  0001AA  F000               	nop	
   107  0001AC  2EE8               	decfsz	wreg,f,c
   108  0001AE  D7FD               	goto	u347
   109  0001B0  2A60               	incf	main@count,f,c
   110  0001B2                     L1:
   111  0001B2  0E09               	movlw	9
   112  0001B4  6460               	cpfsgt	main@count,c
   113  0001B6  D7F1               	goto	l149
   114                           
   115                           ;SerTest.c: 20: }
   116                           ;SerTest.c: 23: USARTInit(9600);
   117  0001B8  0E25               	movlw	37
   118  0001BA  6E5C               	movwf	USARTInit@baud_rate+1,c
   119  0001BC  0E80               	movlw	128
   120  0001BE  6E5B               	movwf	USARTInit@baud_rate,c
   121  0001C0  EC46  F000         	call	_USARTInit	;wreg free
   122  0001C4                     l151:
   123                           
   124                           ;SerTest.c: 26: {
   125                           ;SerTest.c: 28: uint8_t n= USARTDataAvailable();
   126  0001C4  ECF9  F000         	call	_USARTDataAvailable	;wreg free
   127  0001C8  6E5F               	movwf	main@n,c
   128                           
   129                           ;SerTest.c: 31: if(n!=0)
   130  0001CA  505F               	movf	main@n,w,c
   131  0001CC  B4D8               	btfsc	status,2,c
   132  0001CE  D7FA               	goto	l151
   133                           
   134                           ;SerTest.c: 32: {
   135                           ;SerTest.c: 34: char data=USARTReadData();
   136  0001D0  EC1D  F001         	call	_USARTReadData	;wreg free
   137  0001D4  6E61               	movwf	main@data,c
   138                           
   139                           ;SerTest.c: 36: if(data == 'R')
   140  0001D6  5061               	movf	main@data,w,c
   141  0001D8  0A52               	xorlw	82
   142  0001DA  B4D8               	btfsc	status,2,c
   143                           
   144                           ;SerTest.c: 37: PORTB = 0xFF;
   145  0001DC  6881               	setf	3969,c	;volatile
   146                           
   147                           ;SerTest.c: 38: if(data == 'B')
   148  0001DE  5061               	movf	main@data,w,c
   149  0001E0  0A42               	xorlw	66
   150  0001E2  A4D8               	btfss	status,2,c
   151  0001E4  D002               	goto	l959
   152                           
   153                           ;SerTest.c: 39: PORTB = 0x00;
   154  0001E6  0E00               	movlw	0
   155  0001E8  6E81               	movwf	3969,c	;volatile
   156  0001EA                     l959:
   157                           
   158                           ;SerTest.c: 42: USARTWriteChar(data);
   159  0001EA  5061               	movf	main@data,w,c
   160  0001EC  EC48  F001         	call	_USARTWriteChar
   161  0001F0  D7E9               	goto	l151
   162  0001F2                     __end_of_main:
   163                           	opt stack 0
   164                           wreg	equ	0xFE8
   165                           status	equ	0xFD8
   166                           
   167                           	psect	cinit
   168  00027A                     __pcinit:
   169                           	opt stack 0
   170  00027A                     start_initialization:
   171                           	opt stack 0
   172  00027A                     __initialization:
   173                           	opt stack 0
   174                           
   175                           ; Clear objects allocated to COMRAM (71 bytes)
   176  00027A  EE00  F001         	lfsr	0,__pbssCOMRAM
   177  00027E  0E47               	movlw	71
   178  000280                     clear_0:
   179  000280  6AEE               	clrf	postinc0,c
   180  000282  06E8               	decf	wreg,f,c
   181  000284  E1FD               	bnz	clear_0
   182  000286                     end_of_initialization:
   183                           	opt stack 0
   184  000286                     __end_of__initialization:
   185                           	opt stack 0
   186  000286  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  000288  6EF8               	movwf	tblptru,c
   188  00028A  0100               	movlb	0
   189  00028C  EFC7  F000         	goto	_main	;jump to C main() function
   190                           tblptru	equ	0xFF8
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           status	equ	0xFD8
   194                           
   195                           	psect	bssCOMRAM
   196  000001                     __pbssCOMRAM:
   197                           	opt stack 0
   198  000001                     _URBuff:
   199                           	opt stack 0
   200  000001                     	ds	64
   201  000041                     USARTWriteInt@F3686:
   202                           	opt stack 0
   203  000041                     	ds	5
   204  000046                     _UQEnd:
   205                           	opt stack 0
   206  000046                     	ds	1
   207  000047                     _UQFront:
   208                           	opt stack 0
   209  000047                     	ds	1
   210                           tblptru	equ	0xFF8
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           status	equ	0xFD8
   214                           
   215                           	psect	cstackCOMRAM
   216  000048                     __pcstackCOMRAM:
   217                           	opt stack 0
   218  000048                     ??_USARTHandleRxInt:
   219  000048                     
   220                           ; 1 bytes @ 0x0
   221  000048                     	ds	4
   222  00004C                     USARTHandleRxInt@data:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x4
   226  00004C                     	ds	1
   227  00004D                     ??_ISR:
   228                           
   229                           ; 0 bytes @ 0x5
   230  00004D                     	ds	14
   231  00005B                     ??_USARTDataAvailable:
   232  00005B                     USARTWriteChar@ch:
   233                           	opt stack 0
   234  00005B                     USARTReadData@data:
   235                           	opt stack 0
   236  00005B                     USARTInit@baud_rate:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x13
   240  00005B                     	ds	2
   241  00005D                     ??_USARTInit:
   242                           
   243                           ; 0 bytes @ 0x15
   244  00005D                     	ds	2
   245  00005F                     main@n:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x17
   249  00005F                     	ds	1
   250  000060                     main@count:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x18
   254  000060                     	ds	1
   255  000061                     main@data:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x19
   259  000061                     	ds	1
   260                           tblptru	equ	0xFF8
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           status	equ	0xFD8
   264                           
   265 ;; *************** function _USARTWriteChar *****************
   266 ;; Defined at:
   267 ;;		line 77 in file "E:\Study Material\XC8 PROJECTS\18F Serial Test\usart_pic16.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;  ch              1    wreg     unsigned char 
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  ch              1   19[COMRAM] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;		None               void
   274 ;; Registers used:
   275 ;;		wreg
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   281 ;;      Params:         0       0       0       0       0       0       0
   282 ;;      Locals:         1       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0
   284 ;;      Totals:         1       0       0       0       0       0       0
   285 ;;Total ram usage:        1 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; Hardware stack levels required when called:    2
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;;		_USARTWriteString
   293 ;;		_USARTWriteLine
   294 ;;		_USARTWriteInt
   295 ;;		_USARTGotoNewLine
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text1
   300  000290                     __ptext1:
   301                           	opt stack 0
   302  000290                     _USARTWriteChar:
   303                           	opt stack 28
   304                           
   305                           ;incstack = 0
   306  000290  FFFF               	dw	65535
   307                           
   308                           ;USARTWriteChar@ch stored from wreg
   309  000292  6E5B               	movwf	USARTWriteChar@ch,c
   310  000294                     l38:
   311  000294  A89E               	btfss	3998,4,c	;volatile
   312  000296  D7FE               	goto	l38
   313                           
   314                           ;usart_pic16.c: 81: TXREG=ch;
   315  000298  C05B  FFAD         	movff	USARTWriteChar@ch,4013	;volatile
   316  00029C  0012               	return	
   317  00029E  FFFF               	dw	65535	; errata NOP
   318  0002A0                     __end_of_USARTWriteChar:
   319                           	opt stack 0
   320                           tblptru	equ	0xFF8
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _USARTReadData *****************
   326 ;; Defined at:
   327 ;;		line 125 in file "E:\Study Material\XC8 PROJECTS\18F Serial Test\usart_pic16.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  data            1   19[COMRAM] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      unsigned char 
   334 ;; Registers used:
   335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   341 ;;      Params:         0       0       0       0       0       0       0
   342 ;;      Locals:         1       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0
   344 ;;      Totals:         1       0       0       0       0       0       0
   345 ;;Total ram usage:        1 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    2
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;;		_USARTReadBuffer
   353 ;;		_USARTFlushBuffer
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text2
   358  00023A                     __ptext2:
   359                           	opt stack 0
   360  00023A                     _USARTReadData:
   361                           	opt stack 28
   362                           
   363                           ;incstack = 0
   364  00023A  FFFF               	dw	65535
   365                           
   366                           ;usart_pic16.c: 127: char data;
   367                           ;usart_pic16.c: 130: if(UQFront==-1)
   368  00023C  2847               	incf	_UQFront,w,c	;volatile
   369  00023E  A4D8               	btfss	status,2,c
   370  000240  D002               	goto	l813
   371                           
   372                           ;usart_pic16.c: 131: return 0;
   373  000242  0E00               	movlw	0
   374  000244  D018               	goto	l66
   375  000246                     l813:
   376                           
   377                           ;usart_pic16.c: 133: data=URBuff[UQFront];
   378  000246  5047               	movf	_UQFront,w,c	;volatile
   379  000248  0D01               	mullw	1
   380  00024A  0E01               	movlw	low _URBuff	;volatile
   381  00024C  24F3               	addwf	prodl,w,c
   382  00024E  6ED9               	movwf	fsr2l,c
   383  000250  0E00               	movlw	high _URBuff	;volatile
   384  000252  20F4               	addwfc	prodh,w,c
   385  000254  6EDA               	movwf	fsr2h,c
   386  000256  50DF               	movf	indf2,w,c
   387  000258  6E5B               	movwf	USARTReadData@data,c
   388                           
   389                           ;usart_pic16.c: 135: if(UQFront==UQEnd)
   390  00025A  5046               	movf	_UQEnd,w,c	;volatile
   391  00025C  6247               	cpfseq	_UQFront,c	;volatile
   392  00025E  D003               	goto	l819
   393                           
   394                           ;usart_pic16.c: 136: {
   395                           ;usart_pic16.c: 139: UQFront=UQEnd=-1;
   396  000260  6846               	setf	_UQEnd,c	;volatile
   397  000262  6847               	setf	_UQFront,c	;volatile
   398                           
   399                           ;usart_pic16.c: 140: }
   400  000264  D007               	goto	l68
   401  000266                     l819:
   402                           
   403                           ;usart_pic16.c: 141: else
   404                           ;usart_pic16.c: 142: {
   405                           ;usart_pic16.c: 143: UQFront++;
   406  000266  2A47               	incf	_UQFront,f,c	;volatile
   407                           
   408                           ;usart_pic16.c: 145: if(UQFront==64)
   409  000268  5047               	movf	_UQFront,w,c	;volatile
   410  00026A  0A40               	xorlw	64
   411  00026C  A4D8               	btfss	status,2,c
   412  00026E  D002               	goto	l68
   413                           
   414                           ;usart_pic16.c: 146: UQFront=0;
   415  000270  0E00               	movlw	0
   416  000272  6E47               	movwf	_UQFront,c	;volatile
   417  000274                     l68:
   418                           
   419                           ;usart_pic16.c: 147: }
   420                           ;usart_pic16.c: 149: return data;
   421  000274  505B               	movf	USARTReadData@data,w,c
   422  000276                     l66:
   423  000276  0012               	return	
   424  000278  FFFF               	dw	65535	; errata NOP
   425  00027A                     __end_of_USARTReadData:
   426                           	opt stack 0
   427                           tblptru	equ	0xFF8
   428                           prodh	equ	0xFF4
   429                           prodl	equ	0xFF3
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           indf2	equ	0xFDF
   433                           fsr2h	equ	0xFDA
   434                           fsr2l	equ	0xFD9
   435                           status	equ	0xFD8
   436                           
   437 ;; *************** function _USARTInit *****************
   438 ;; Defined at:
   439 ;;		line 31 in file "E:\Study Material\XC8 PROJECTS\18F Serial Test\usart_pic16.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  baud_rate       2   19[COMRAM] unsigned int 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;		None               void
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   453 ;;      Params:         2       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0
   455 ;;      Temps:          2       0       0       0       0       0       0
   456 ;;      Totals:         4       0       0       0       0       0       0
   457 ;;Total ram usage:        4 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    2
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text3
   468  00008C                     __ptext3:
   469                           	opt stack 0
   470  00008C                     _USARTInit:
   471                           	opt stack 28
   472                           
   473                           ;incstack = 0
   474  00008C  FFFF               	dw	65535
   475                           
   476                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
   477  00008E  6846               	setf	_UQEnd,c	;volatile
   478  000090  6847               	setf	_UQFront,c	;volatile
   479                           
   480                           ;usart_pic16.c: 38: switch(baud_rate)
   481  000092  D009               	goto	l751
   482  000094                     l30:
   483                           
   484                           ;usart_pic16.c: 41: SPBRG=255;
   485  000094  68AF               	setf	4015,c	;volatile
   486                           
   487                           ;usart_pic16.c: 42: break;
   488  000096  D02C               	goto	l31
   489  000098                     l743:
   490                           
   491                           ;usart_pic16.c: 44: SPBRG=129;
   492  000098  0E81               	movlw	129
   493  00009A  D003               	goto	L3
   494  00009C                     l745:
   495                           
   496                           ;usart_pic16.c: 47: SPBRG=64;
   497  00009C  0E40               	movlw	64
   498  00009E  D001               	goto	L3
   499  0000A0                     l747:
   500                           
   501                           ;usart_pic16.c: 50: SPBRG=42;
   502  0000A0  0E2A               	movlw	42
   503  0000A2                     L3:
   504  0000A2  6EAF               	movwf	4015,c	;volatile
   505                           
   506                           ;usart_pic16.c: 51: break;
   507  0000A4  D025               	goto	l31
   508  0000A6                     l751:
   509  0000A6  C05B  F05D         	movff	USARTInit@baud_rate,??_USARTInit
   510  0000AA  C05C  F05E         	movff	USARTInit@baud_rate+1,??_USARTInit+1
   511                           
   512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
   513                           ; Switch size 1, requested type "space"
   514                           ; Number of cases is 4, Range of values is 37 to 225
   515                           ; switch strategies available:
   516                           ; Name         Instructions Cycles
   517                           ; simple_byte           13     7 (average)
   518                           ;	Chosen strategy is simple_byte
   519  0000AE  505E               	movf	??_USARTInit+1,w,c
   520  0000B0  0A25               	xorlw	37	; case 37
   521  0000B2  B4D8               	btfsc	status,2,c
   522  0000B4  D00A               	goto	l977
   523  0000B6  0A6E               	xorlw	110	; case 75
   524  0000B8  B4D8               	btfsc	status,2,c
   525  0000BA  D00C               	goto	l979
   526  0000BC  0ADD               	xorlw	221	; case 150
   527  0000BE  B4D8               	btfsc	status,2,c
   528  0000C0  D00E               	goto	l981
   529  0000C2  0A77               	xorlw	119	; case 225
   530  0000C4  B4D8               	btfsc	status,2,c
   531  0000C6  D010               	goto	l983
   532  0000C8  D013               	goto	l31
   533  0000CA                     l977:
   534                           
   535                           ; Switch size 1, requested type "space"
   536                           ; Number of cases is 1, Range of values is 128 to 128
   537                           ; switch strategies available:
   538                           ; Name         Instructions Cycles
   539                           ; simple_byte            4     3 (average)
   540                           ;	Chosen strategy is simple_byte
   541  0000CA  505D               	movf	??_USARTInit,w,c
   542  0000CC  0A80               	xorlw	128	; case 128
   543  0000CE  B4D8               	btfsc	status,2,c
   544  0000D0  D7E1               	goto	l30
   545  0000D2  D00E               	goto	l31
   546  0000D4                     l979:
   547                           
   548                           ; Switch size 1, requested type "space"
   549                           ; Number of cases is 1, Range of values is 0 to 0
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte            4     3 (average)
   553                           ;	Chosen strategy is simple_byte
   554  0000D4  505D               	movf	??_USARTInit,w,c
   555  0000D6  0A00               	xorlw	0	; case 0
   556  0000D8  B4D8               	btfsc	status,2,c
   557  0000DA  D7DE               	goto	l743
   558  0000DC  D009               	goto	l31
   559  0000DE                     l981:
   560                           
   561                           ; Switch size 1, requested type "space"
   562                           ; Number of cases is 1, Range of values is 0 to 0
   563                           ; switch strategies available:
   564                           ; Name         Instructions Cycles
   565                           ; simple_byte            4     3 (average)
   566                           ;	Chosen strategy is simple_byte
   567  0000DE  505D               	movf	??_USARTInit,w,c
   568  0000E0  0A00               	xorlw	0	; case 0
   569  0000E2  B4D8               	btfsc	status,2,c
   570  0000E4  D7DB               	goto	l745
   571  0000E6  D004               	goto	l31
   572  0000E8                     l983:
   573                           
   574                           ; Switch size 1, requested type "space"
   575                           ; Number of cases is 1, Range of values is 0 to 0
   576                           ; switch strategies available:
   577                           ; Name         Instructions Cycles
   578                           ; simple_byte            4     3 (average)
   579                           ;	Chosen strategy is simple_byte
   580  0000E8  505D               	movf	??_USARTInit,w,c
   581  0000EA  0A00               	xorlw	0	; case 0
   582  0000EC  B4D8               	btfsc	status,2,c
   583  0000EE  D7D8               	goto	l747
   584  0000F0                     l31:
   585                           
   586                           ;usart_pic16.c: 55: TRISCbits.RC6 = 0;
   587  0000F0  9C94               	bcf	3988,6,c	;volatile
   588                           
   589                           ;usart_pic16.c: 56: TRISCbits.RC7 = 1;
   590  0000F2  8E94               	bsf	3988,7,c	;volatile
   591                           
   592                           ;usart_pic16.c: 59: TXSTAbits.TX9=0;
   593  0000F4  9CAC               	bcf	4012,6,c	;volatile
   594                           
   595                           ;usart_pic16.c: 60: TXSTAbits.TXEN=1;
   596  0000F6  8AAC               	bsf	4012,5,c	;volatile
   597                           
   598                           ;usart_pic16.c: 61: TXSTAbits.SYNC=0;
   599  0000F8  98AC               	bcf	4012,4,c	;volatile
   600                           
   601                           ;usart_pic16.c: 62: TXSTAbits.BRGH=1;
   602  0000FA  84AC               	bsf	4012,2,c	;volatile
   603                           
   604                           ;usart_pic16.c: 65: RCSTAbits.SPEN=1;
   605  0000FC  8EAB               	bsf	4011,7,c	;volatile
   606                           
   607                           ;usart_pic16.c: 66: RCSTAbits.RX9=0;
   608  0000FE  9CAB               	bcf	4011,6,c	;volatile
   609                           
   610                           ;usart_pic16.c: 67: RCSTAbits.CREN=1;
   611  000100  88AB               	bsf	4011,4,c	;volatile
   612                           
   613                           ;usart_pic16.c: 68: RCSTAbits.ADDEN=0;
   614  000102  96AB               	bcf	4011,3,c	;volatile
   615                           
   616                           ;usart_pic16.c: 71: RCIE=1;
   617  000104  8A9D               	bsf	3997,5,c	;volatile
   618                           
   619                           ;usart_pic16.c: 72: PEIE=1;
   620  000106  8CF2               	bsf	intcon,6,c	;volatile
   621                           
   622                           ;usart_pic16.c: 74: (INTCONbits.GIE = 1);
   623  000108  8EF2               	bsf	intcon,7,c	;volatile
   624  00010A  0012               	return	
   625  00010C  FFFF               	dw	65535	; errata NOP
   626  00010E                     __end_of_USARTInit:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           prodh	equ	0xFF4
   630                           prodl	equ	0xFF3
   631                           intcon	equ	0xFF2
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           indf2	equ	0xFDF
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           
   639 ;; *************** function _USARTDataAvailable *****************
   640 ;; Defined at:
   641 ;;		line 152 in file "E:\Study Material\XC8 PROJECTS\18F Serial Test\usart_pic16.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      unsigned char 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   655 ;;      Params:         0       0       0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0
   657 ;;      Temps:          1       0       0       0       0       0       0
   658 ;;      Totals:         1       0       0       0       0       0       0
   659 ;;Total ram usage:        1 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    2
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_main
   666 ;;		_USARTFlushBuffer
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text4
   671  0001F2                     __ptext4:
   672                           	opt stack 0
   673  0001F2                     _USARTDataAvailable:
   674                           	opt stack 28
   675                           
   676                           ;incstack = 0
   677  0001F2  FFFF               	dw	65535
   678                           
   679                           ;usart_pic16.c: 154: if(UQFront==-1) return 0;
   680  0001F4  2847               	incf	_UQFront,w,c	;volatile
   681  0001F6  A4D8               	btfss	status,2,c
   682  0001F8  D002               	goto	l833
   683  0001FA  0E00               	movlw	0
   684  0001FC  D01C               	goto	l73
   685  0001FE                     l833:
   686                           
   687                           ;usart_pic16.c: 155: if(UQFront<UQEnd)
   688  0001FE  5047               	movf	_UQFront,w,c	;volatile
   689  000200  0A80               	xorlw	128
   690  000202  6E5B               	movwf	??_USARTDataAvailable& (0+255),c
   691  000204  5046               	movf	_UQEnd,w,c	;volatile
   692  000206  0A80               	xorlw	128
   693  000208  5C5B               	subwf	??_USARTDataAvailable,w,c
   694  00020A  B0D8               	btfsc	status,0,c
   695  00020C  D006               	goto	l841
   696                           
   697                           ;usart_pic16.c: 156: return(UQEnd-UQFront+1);
   698  00020E  5047               	movf	_UQFront,w,c	;volatile
   699  000210  0800               	sublw	0
   700  000212  2446               	addwf	_UQEnd,w,c	;volatile
   701  000214  6E5B               	movwf	??_USARTDataAvailable& (0+255),c
   702  000216  285B               	incf	??_USARTDataAvailable,w,c
   703  000218  D00E               	goto	l73
   704  00021A                     l841:
   705                           
   706                           ;usart_pic16.c: 157: else if(UQFront>UQEnd)
   707  00021A  5046               	movf	_UQEnd,w,c	;volatile
   708  00021C  0A80               	xorlw	128
   709  00021E  6E5B               	movwf	??_USARTDataAvailable& (0+255),c
   710  000220  5047               	movf	_UQFront,w,c	;volatile
   711  000222  0A80               	xorlw	128
   712  000224  5C5B               	subwf	??_USARTDataAvailable,w,c
   713  000226  B0D8               	btfsc	status,0,c
   714  000228  D005               	goto	l849
   715                           
   716                           ;usart_pic16.c: 158: return (64-UQFront+UQEnd+1);
   717  00022A  5047               	movf	_UQFront,w,c	;volatile
   718  00022C  0800               	sublw	0
   719  00022E  2446               	addwf	_UQEnd,w,c	;volatile
   720  000230  0F41               	addlw	65
   721  000232  D001               	goto	l73
   722  000234                     l849:
   723                           
   724                           ;usart_pic16.c: 159: else
   725                           ;usart_pic16.c: 160: return 1;
   726  000234  0E01               	movlw	1
   727  000236                     l73:
   728  000236  0012               	return	
   729  000238  FFFF               	dw	65535	; errata NOP
   730  00023A                     __end_of_USARTDataAvailable:
   731                           	opt stack 0
   732                           tblptru	equ	0xFF8
   733                           prodh	equ	0xFF4
   734                           prodl	equ	0xFF3
   735                           intcon	equ	0xFF2
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           indf2	equ	0xFDF
   739                           fsr2h	equ	0xFDA
   740                           fsr2l	equ	0xFD9
   741                           status	equ	0xFD8
   742                           
   743 ;; *************** function _ISR *****************
   744 ;; Defined at:
   745 ;;		line 6 in file "E:\Study Material\XC8 PROJECTS\18F Serial Test\isr.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;		None               void
   752 ;; Registers used:
   753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   759 ;;      Params:         0       0       0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0
   761 ;;      Temps:         14       0       0       0       0       0       0
   762 ;;      Totals:        14       0       0       0       0       0       0
   763 ;;Total ram usage:       14 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    1
   766 ;; This function calls:
   767 ;;		_USARTHandleRxInt
   768 ;; This function is called by:
   769 ;;		Interrupt level 2
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	intcode
   774  000008                     __pintcode:
   775                           	opt stack 0
   776  000008                     _ISR:
   777                           	opt stack 28
   778                           
   779                           ;incstack = 0
   780  000008  FFFF               	dw	65535	; errata NOP
   781  00000A  CFFA F04D          	movff	pclath,??_ISR
   782  00000E  CFFB F04E          	movff	pclatu,??_ISR+1
   783  000012  CFE9 F04F          	movff	fsr0l,??_ISR+2
   784  000016  CFEA F050          	movff	fsr0h,??_ISR+3
   785  00001A  CFE1 F051          	movff	fsr1l,??_ISR+4
   786  00001E  CFE2 F052          	movff	fsr1h,??_ISR+5
   787  000022  CFD9 F053          	movff	fsr2l,??_ISR+6
   788  000026  CFDA F054          	movff	fsr2h,??_ISR+7
   789  00002A  CFF3 F055          	movff	prodl,??_ISR+8
   790  00002E  CFF4 F056          	movff	prodh,??_ISR+9
   791  000032  CFF6 F057          	movff	tblptrl,??_ISR+10
   792  000036  CFF7 F058          	movff	tblptrh,??_ISR+11
   793  00003A  CFF8 F059          	movff	tblptru,??_ISR+12
   794  00003E  CFF5 F05A          	movff	tablat,??_ISR+13
   795                           
   796                           ;isr.c: 8: if (RCIE && RCIF) {
   797  000042  BA9D               	btfsc	3997,5,c	;volatile
   798  000044  AA9E               	btfss	3998,5,c	;volatile
   799  000046  D002               	goto	i2l126
   800                           
   801                           ;isr.c: 9: USARTHandleRxInt();
   802  000048  EC87  F000         	call	_USARTHandleRxInt	;wreg free
   803  00004C                     i2l126:
   804  00004C  C05A  FFF5         	movff	??_ISR+13,tablat
   805  000050  C059  FFF8         	movff	??_ISR+12,tblptru
   806  000054  C058  FFF7         	movff	??_ISR+11,tblptrh
   807  000058  C057  FFF6         	movff	??_ISR+10,tblptrl
   808  00005C  C056  FFF4         	movff	??_ISR+9,prodh
   809  000060  C055  FFF3         	movff	??_ISR+8,prodl
   810  000064  C054  FFDA         	movff	??_ISR+7,fsr2h
   811  000068  C053  FFD9         	movff	??_ISR+6,fsr2l
   812  00006C  C052  FFE2         	movff	??_ISR+5,fsr1h
   813  000070  C051  FFE1         	movff	??_ISR+4,fsr1l
   814  000074  C050  FFEA         	movff	??_ISR+3,fsr0h
   815  000078  C04F  FFE9         	movff	??_ISR+2,fsr0l
   816  00007C  C04E  FFFB         	movff	??_ISR+1,pclatu
   817  000080  C04D  FFFA         	movff	??_ISR,pclath
   818  000084  0011               	retfie		f
   819  000086  FFFF               	dw	65535	; errata NOP
   820  000088                     __end_of_ISR:
   821                           	opt stack 0
   822                           pclatu	equ	0xFFB
   823                           pclath	equ	0xFFA
   824                           tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           prodh	equ	0xFF4
   829                           prodl	equ	0xFF3
   830                           intcon	equ	0xFF2
   831                           postinc0	equ	0xFEE
   832                           fsr0h	equ	0xFEA
   833                           fsr0l	equ	0xFE9
   834                           wreg	equ	0xFE8
   835                           fsr1h	equ	0xFE2
   836                           fsr1l	equ	0xFE1
   837                           indf2	equ	0xFDF
   838                           fsr2h	equ	0xFDA
   839                           fsr2l	equ	0xFD9
   840                           status	equ	0xFD8
   841                           
   842 ;; *************** function _USARTHandleRxInt *****************
   843 ;; Defined at:
   844 ;;		line 101 in file "E:\Study Material\XC8 PROJECTS\18F Serial Test\usart_pic16.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  data            1    4[COMRAM] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;		None               void
   851 ;; Registers used:
   852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   858 ;;      Params:         0       0       0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0       0       0
   860 ;;      Temps:          4       0       0       0       0       0       0
   861 ;;      Totals:         5       0       0       0       0       0       0
   862 ;;Total ram usage:        5 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_ISR
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text6
   872  00010E                     __ptext6:
   873                           	opt stack 0
   874  00010E                     _USARTHandleRxInt:
   875                           	opt stack 28
   876                           
   877                           ;incstack = 0
   878  00010E  FFFF               	dw	65535
   879                           
   880                           ;usart_pic16.c: 104: char data=RCREG;
   881  000110  CFAE F04C          	movff	4014,USARTHandleRxInt@data	;volatile
   882                           
   883                           ;usart_pic16.c: 107: if(((UQEnd==64-1) && UQFront==0) || ((UQEnd+1)==UQFront))
   884  000114  5046               	movf	_UQEnd,w,c	;volatile
   885  000116  0A3F               	xorlw	63
   886  000118  A4D8               	btfss	status,2,c
   887  00011A  D003               	goto	i2l787
   888  00011C  5047               	movf	_UQFront,w,c	;volatile
   889  00011E  B4D8               	btfsc	status,2,c
   890  000120  D015               	goto	i2l789
   891  000122                     i2l787:
   892  000122  C047  F048         	movff	_UQFront,??_USARTHandleRxInt	;volatile
   893  000126  6A49               	clrf	(??_USARTHandleRxInt+1)& (0+255),c
   894  000128  BE48               	btfsc	??_USARTHandleRxInt& (0+255),7,c
   895  00012A  0649               	decf	(??_USARTHandleRxInt+1)& (0+255),f,c
   896  00012C  C046  F04A         	movff	_UQEnd,??_USARTHandleRxInt+2	;volatile
   897  000130  6A4B               	clrf	(??_USARTHandleRxInt+3)& (0+255),c
   898  000132  BE4A               	btfsc	(??_USARTHandleRxInt+2)& (0+255),7,c
   899  000134  064B               	decf	(??_USARTHandleRxInt+3)& (0+255),f,c
   900  000136  0E01               	movlw	1
   901  000138  264A               	addwf	??_USARTHandleRxInt+2,f,c
   902  00013A  0E00               	movlw	0
   903  00013C  224B               	addwfc	??_USARTHandleRxInt+3,f,c
   904  00013E  5049               	movf	??_USARTHandleRxInt+1,w,c
   905  000140  184B               	xorwf	??_USARTHandleRxInt+3,w,c
   906  000142  E102               	bnz	i2u5_45
   907  000144  5048               	movf	??_USARTHandleRxInt,w,c
   908  000146  184A               	xorwf	??_USARTHandleRxInt+2,w,c
   909  000148                     i2u5_45:
   910  000148  A4D8               	btfss	status,2,c
   911  00014A  D007               	goto	i2l795
   912  00014C                     i2l789:
   913                           
   914                           ;usart_pic16.c: 108: {
   915                           ;usart_pic16.c: 110: UQFront++;
   916  00014C  2A47               	incf	_UQFront,f,c	;volatile
   917                           
   918                           ;usart_pic16.c: 111: if(UQFront==64) UQFront=0;
   919  00014E  5047               	movf	_UQFront,w,c	;volatile
   920  000150  0A40               	xorlw	64
   921  000152  A4D8               	btfss	status,2,c
   922  000154  D002               	goto	i2l795
   923  000156  0E00               	movlw	0
   924  000158  6E47               	movwf	_UQFront,c	;volatile
   925  00015A                     i2l795:
   926                           
   927                           ;usart_pic16.c: 112: }
   928                           ;usart_pic16.c: 114: if(UQEnd==64-1)
   929  00015A  5046               	movf	_UQEnd,w,c	;volatile
   930  00015C  0A3F               	xorlw	63
   931  00015E  A4D8               	btfss	status,2,c
   932  000160  D003               	goto	i2l799
   933                           
   934                           ;usart_pic16.c: 115: UQEnd=0;
   935  000162  0E00               	movlw	0
   936  000164  6E46               	movwf	_UQEnd,c	;volatile
   937  000166  D001               	goto	i2l801
   938  000168                     i2l799:
   939                           
   940                           ;usart_pic16.c: 116: else
   941                           ;usart_pic16.c: 117: UQEnd++;
   942  000168  2A46               	incf	_UQEnd,f,c	;volatile
   943  00016A                     i2l801:
   944                           
   945                           ;usart_pic16.c: 119: URBuff[UQEnd]=data;
   946  00016A  5046               	movf	_UQEnd,w,c	;volatile
   947  00016C  0D01               	mullw	1
   948  00016E  0E01               	movlw	low _URBuff	;volatile
   949  000170  24F3               	addwf	prodl,w,c
   950  000172  6ED9               	movwf	fsr2l,c
   951  000174  0E00               	movlw	high _URBuff	;volatile
   952  000176  20F4               	addwfc	prodh,w,c
   953  000178  6EDA               	movwf	fsr2h,c
   954  00017A  C04C  FFDF         	movff	USARTHandleRxInt@data,indf2
   955                           
   956                           ;usart_pic16.c: 121: if(UQFront==-1) UQFront=0;
   957  00017E  2847               	incf	_UQFront,w,c	;volatile
   958  000180  A4D8               	btfss	status,2,c
   959  000182  D002               	goto	i2l62
   960  000184  0E00               	movlw	0
   961  000186  6E47               	movwf	_UQFront,c	;volatile
   962  000188                     i2l62:
   963  000188  0012               	return	
   964  00018A  FFFF               	dw	65535	; errata NOP
   965  00018C                     __end_of_USARTHandleRxInt:
   966                           	opt stack 0
   967  00018C  FFFF               	dw	65535	; assembler added errata NOP
   968                           pclatu	equ	0xFFB
   969                           pclath	equ	0xFFA
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           prodh	equ	0xFF4
   975                           prodl	equ	0xFF3
   976                           intcon	equ	0xFF2
   977                           postinc0	equ	0xFEE
   978                           fsr0h	equ	0xFEA
   979                           fsr0l	equ	0xFE9
   980                           wreg	equ	0xFE8
   981                           fsr1h	equ	0xFE2
   982                           fsr1l	equ	0xFE1
   983                           indf2	equ	0xFDF
   984                           fsr2h	equ	0xFDA
   985                           fsr2l	equ	0xFD9
   986                           status	equ	0xFD8
   987                           pclatu	equ	0xFFB
   988                           pclath	equ	0xFFA
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           prodh	equ	0xFF4
   994                           prodl	equ	0xFF3
   995                           intcon	equ	0xFF2
   996                           postinc0	equ	0xFEE
   997                           fsr0h	equ	0xFEA
   998                           fsr0l	equ	0xFE9
   999                           wreg	equ	0xFE8
  1000                           fsr1h	equ	0xFE2
  1001                           fsr1l	equ	0xFE1
  1002                           indf2	equ	0xFDF
  1003                           fsr2h	equ	0xFDA
  1004                           fsr2l	equ	0xFD9
  1005                           status	equ	0xFD8
  1006                           
  1007                           	psect	rparam
  1008  0000                     pclatu	equ	0xFFB
  1009                           pclath	equ	0xFFA
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           prodh	equ	0xFF4
  1015                           prodl	equ	0xFF3
  1016                           intcon	equ	0xFF2
  1017                           postinc0	equ	0xFEE
  1018                           fsr0h	equ	0xFEA
  1019                           fsr0l	equ	0xFE9
  1020                           wreg	equ	0xFE8
  1021                           fsr1h	equ	0xFE2
  1022                           fsr1l	equ	0xFE1
  1023                           indf2	equ	0xFDF
  1024                           fsr2h	equ	0xFDA
  1025                           fsr2l	equ	0xFD9
  1026                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      97
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USARTInit

Critical Paths under _ISR in COMRAM

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     178
                                             23 COMRAM     3     3      0
                 _USARTDataAvailable
                          _USARTInit
                      _USARTReadData
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (1) _USARTWriteChar                                       1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USARTReadData                                        1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            4     2      2      58
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _USARTDataAvailable                                   1     1      0       0
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 14    14      0      15
                                              5 COMRAM    14    14      0
                   _USARTHandleRxInt
 ---------------------------------------------------------------------------------
 (3) _USARTHandleRxInt                                     5     5      0      15
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USARTDataAvailable
   _USARTInit
   _USARTReadData
   _USARTWriteChar

 _ISR (ROOT)
   _USARTHandleRxInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      61       1       76.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      15        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Nov 26 13:38:38 2015

                           l30 0094                             l31 00F0                             l38 0294  
                           l73 0236                             l66 0276                             l68 0274  
           USARTInit@baud_rate 005B                            l151 01C4                            l149 019A  
                          l813 0246                            l743 0098                            l751 00A6  
                          l841 021A                            l833 01FE                            l745 009C  
         ??_USARTDataAvailable 005B                            l747 00A0                            l819 0266  
                          l849 0234                            l981 00DE                            l983 00E8  
                          l959 01EA                            l977 00CA                            l979 00D4  
                          u337 019E                            u347 01AA                            _ISR 0008  
               ?_USARTReadData 0048                   __CFG_BOR$OFF 000000                            prod 000FF3  
                          wreg 000FE8                   __CFG_LVP$OFF 000000                           ?_ISR 0048  
                 __CFG_WDT$OFF 000000                           _PEIE 007F96                           _RCIE 007CED  
                         _RCIF 007CF5                           i2l62 0188         __end_of_USARTWriteChar 02A0  
                         _main 018E                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9              USARTReadData@data 005B  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0088                          ??_ISR 004D              ?_USARTHandleRxInt 0048  
                __CFG_OSCS$OFF 000000                          ?_main 0048             ??_USARTHandleRxInt 0048  
             USARTWriteChar@ch 005B                          i2l126 004C                          i2l801 016A  
                        i2l795 015A                          i2l787 0122                          i2l789 014C  
                        i2l799 0168                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _PORTB 000F81                          _TRISB 000F93                          _TXREG 000FAD  
                        _UQEnd 0046                  __CFG_PWRT$OFF 000000                          main@n 005F  
                        tablat 000FF5             __size_of_USARTInit 0082                ?_USARTWriteChar 0048  
                        status 000FD8                __initialization 027A                   __end_of_main 01F2  
               __CFG_OSC$HSPLL 000000                ??_USARTReadData 005B                         ??_main 005F  
                __activetblptr 000002                         i2u5_45 0148                         _URBuff 0001  
                       clear_0 0280              __end_of_USARTInit 010E                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                     __accesstop 0080  
      __end_of__initialization 0286                 __pcstackCOMRAM 0048    __size_of_USARTDataAvailable 0048  
             ??_USARTWriteChar 005B             USARTWriteInt@F3686 0041      __size_of_USARTHandleRxInt 007E  
                      _UQFront 0047                        __Hparam 0000                        __Lparam 0000  
                      __pcinit 027A                        __ramtop 0600                        __ptext0 018E  
                      __ptext1 0290                        __ptext2 023A                        __ptext3 008C  
                      __ptext4 01F2                        __ptext6 010E                   __size_of_ISR 0080  
         end_of_initialization 0286                  __Lmediumconst 0000                      _RCSTAbits 000FAB  
                      postinc0 000FEE          __end_of_USARTReadData 027A                      _USARTInit 008C  
                    _TRISCbits 000F94                      _TXSTAbits 000FAC            start_initialization 027A  
                   ?_USARTInit 005B                    __end_of_ISR 0088               _USARTHandleRxInt 010E  
                  __pbssCOMRAM 0001                      __pintcode 0008     __end_of_USARTDataAvailable 023A  
                  ??_USARTInit 005D                       _PIR1bits 000F9E                      main@count 0060  
      __size_of_USARTWriteChar 0010                       __Hrparam 0000                       __Lrparam 0000  
     __end_of_USARTHandleRxInt 018C                  __size_of_main 0064         __size_of_USARTReadData 0040  
                     main@data 0061                     _INTCONbits 000FF2                       intlevel2 02A0  
                _USARTReadData 023A           USARTHandleRxInt@data 004C             _USARTDataAvailable 01F2  
          ?_USARTDataAvailable 0048                 _USARTWriteChar 0290  
