Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"1188 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f876a.h
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1237
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1298
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1952
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"2304
[v _RC3 `Vb ~T0 @X0 0 e@59 ]
"2306
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
"2308
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
"2292
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
[v F980 `(v ~T0 @X0 1 tf1`ul ]
"154 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic.h
[v __delay `JF980 ~T0 @X0 0 e ]
[p i __delay ]
"42 C:\Program Files (x86)\Microchip\xc8\v1.33\include\eeprom_routines.h
[v _eeprom_read `(uc ~T0 @X0 0 ef1`uc ]
"79 E:\Study Material\XC8 PROJECTS\Modem Advance\sim300.h
[v _SIM300Init `(c ~T0 @X0 0 ef ]
"76
[v _SIM300Cmd `(c ~T0 @X0 0 ef1`*Cuc ]
"76 E:\Study Material\XC8 PROJECTS\Modem Advance\MobileAdv.c
[v _USARTFlushBuffer `(i ~T0 @X0 0 ef ]
"23
[v _phase_check `(uc ~T0 @X0 0 ef ]
"21
[v _start `(v ~T0 @X0 0 ef ]
"22
[v _stop `(v ~T0 @X0 0 ef ]
"20
[v _SMSCommunication `(v ~T0 @X0 0 ef ]
"19
[v _SIM300WaitForValidCall `(c ~T0 @X0 0 ef ]
"2276 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f876a.h
[v _RA5 `Vb ~T0 @X0 0 e@45 ]
"41 C:\Program Files (x86)\Microchip\xc8\v1.33\include\eeprom_routines.h
[v _eeprom_write `(v ~T0 @X0 0 ef2`uc`uc ]
"89 E:\Study Material\XC8 PROJECTS\Modem Advance\sim300.h
[v _SIM300SendMsg `(c ~T0 @X0 0 ef3`*Cuc`*Cuc`*uc ]
"82
[v _SIM300RingResponse `(c ~T0 @X0 0 ef1`ui ]
"54 C:\Program Files (x86)\Microchip\xc8\v1.33\include\string.h
[v _strnicmp `(i ~T0 @X0 0 ef3`*Cuc`*Cuc`ui ]
"66
[v _strrichr `(*uc ~T0 @X0 0 ef2`*Cuc`i ]
"64
[v _strichr `(*uc ~T0 @X0 0 ef2`*Cuc`i ]
"86 E:\Study Material\XC8 PROJECTS\Modem Advance\sim300.h
[v _SIM300WaitForValidMsg `(c ~T0 @X0 0 ef ]
"43 C:\Program Files (x86)\Microchip\xc8\v1.33\include\string.h
[v _strcpy `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"62
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"42
[v _strcat `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"2298 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f876a.h
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"2300
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"2302
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f876a.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f876a.h
[; ;pic16f876a.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f876a.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f876a.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f876a.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f876a.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f876a.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f876a.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f876a.h: 70: typedef union {
[; ;pic16f876a.h: 71: struct {
[; ;pic16f876a.h: 72: unsigned C :1;
[; ;pic16f876a.h: 73: unsigned DC :1;
[; ;pic16f876a.h: 74: unsigned Z :1;
[; ;pic16f876a.h: 75: unsigned nPD :1;
[; ;pic16f876a.h: 76: unsigned nTO :1;
[; ;pic16f876a.h: 77: unsigned RP :2;
[; ;pic16f876a.h: 78: unsigned IRP :1;
[; ;pic16f876a.h: 79: };
[; ;pic16f876a.h: 80: struct {
[; ;pic16f876a.h: 81: unsigned :5;
[; ;pic16f876a.h: 82: unsigned RP0 :1;
[; ;pic16f876a.h: 83: unsigned RP1 :1;
[; ;pic16f876a.h: 84: };
[; ;pic16f876a.h: 85: struct {
[; ;pic16f876a.h: 86: unsigned CARRY :1;
[; ;pic16f876a.h: 87: };
[; ;pic16f876a.h: 88: struct {
[; ;pic16f876a.h: 89: unsigned :2;
[; ;pic16f876a.h: 90: unsigned ZERO :1;
[; ;pic16f876a.h: 91: };
[; ;pic16f876a.h: 92: } STATUSbits_t;
[; ;pic16f876a.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f876a.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f876a.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f876a.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f876a.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f876a.h: 163: typedef union {
[; ;pic16f876a.h: 164: struct {
[; ;pic16f876a.h: 165: unsigned RA0 :1;
[; ;pic16f876a.h: 166: unsigned RA1 :1;
[; ;pic16f876a.h: 167: unsigned RA2 :1;
[; ;pic16f876a.h: 168: unsigned RA3 :1;
[; ;pic16f876a.h: 169: unsigned RA4 :1;
[; ;pic16f876a.h: 170: unsigned RA5 :1;
[; ;pic16f876a.h: 171: };
[; ;pic16f876a.h: 172: } PORTAbits_t;
[; ;pic16f876a.h: 173: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f876a.h: 207: extern volatile unsigned char PORTB @ 0x006;
"209
[; ;pic16f876a.h: 209: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f876a.h: 212: typedef union {
[; ;pic16f876a.h: 213: struct {
[; ;pic16f876a.h: 214: unsigned RB0 :1;
[; ;pic16f876a.h: 215: unsigned RB1 :1;
[; ;pic16f876a.h: 216: unsigned RB2 :1;
[; ;pic16f876a.h: 217: unsigned RB3 :1;
[; ;pic16f876a.h: 218: unsigned RB4 :1;
[; ;pic16f876a.h: 219: unsigned RB5 :1;
[; ;pic16f876a.h: 220: unsigned RB6 :1;
[; ;pic16f876a.h: 221: unsigned RB7 :1;
[; ;pic16f876a.h: 222: };
[; ;pic16f876a.h: 223: } PORTBbits_t;
[; ;pic16f876a.h: 224: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f876a.h: 268: extern volatile unsigned char PORTC @ 0x007;
"270
[; ;pic16f876a.h: 270: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f876a.h: 273: typedef union {
[; ;pic16f876a.h: 274: struct {
[; ;pic16f876a.h: 275: unsigned RC0 :1;
[; ;pic16f876a.h: 276: unsigned RC1 :1;
[; ;pic16f876a.h: 277: unsigned RC2 :1;
[; ;pic16f876a.h: 278: unsigned RC3 :1;
[; ;pic16f876a.h: 279: unsigned RC4 :1;
[; ;pic16f876a.h: 280: unsigned RC5 :1;
[; ;pic16f876a.h: 281: unsigned RC6 :1;
[; ;pic16f876a.h: 282: unsigned RC7 :1;
[; ;pic16f876a.h: 283: };
[; ;pic16f876a.h: 284: } PORTCbits_t;
[; ;pic16f876a.h: 285: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f876a.h: 329: extern volatile unsigned char PCLATH @ 0x00A;
"331
[; ;pic16f876a.h: 331: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f876a.h: 334: typedef union {
[; ;pic16f876a.h: 335: struct {
[; ;pic16f876a.h: 336: unsigned PCLATH :5;
[; ;pic16f876a.h: 337: };
[; ;pic16f876a.h: 338: } PCLATHbits_t;
[; ;pic16f876a.h: 339: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f876a.h: 348: extern volatile unsigned char INTCON @ 0x00B;
"350
[; ;pic16f876a.h: 350: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f876a.h: 353: typedef union {
[; ;pic16f876a.h: 354: struct {
[; ;pic16f876a.h: 355: unsigned RBIF :1;
[; ;pic16f876a.h: 356: unsigned INTF :1;
[; ;pic16f876a.h: 357: unsigned TMR0IF :1;
[; ;pic16f876a.h: 358: unsigned RBIE :1;
[; ;pic16f876a.h: 359: unsigned INTE :1;
[; ;pic16f876a.h: 360: unsigned TMR0IE :1;
[; ;pic16f876a.h: 361: unsigned PEIE :1;
[; ;pic16f876a.h: 362: unsigned GIE :1;
[; ;pic16f876a.h: 363: };
[; ;pic16f876a.h: 364: struct {
[; ;pic16f876a.h: 365: unsigned :2;
[; ;pic16f876a.h: 366: unsigned T0IF :1;
[; ;pic16f876a.h: 367: unsigned :2;
[; ;pic16f876a.h: 368: unsigned T0IE :1;
[; ;pic16f876a.h: 369: };
[; ;pic16f876a.h: 370: } INTCONbits_t;
[; ;pic16f876a.h: 371: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f876a.h: 425: extern volatile unsigned char PIR1 @ 0x00C;
"427
[; ;pic16f876a.h: 427: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f876a.h: 430: typedef union {
[; ;pic16f876a.h: 431: struct {
[; ;pic16f876a.h: 432: unsigned TMR1IF :1;
[; ;pic16f876a.h: 433: unsigned TMR2IF :1;
[; ;pic16f876a.h: 434: unsigned CCP1IF :1;
[; ;pic16f876a.h: 435: unsigned SSPIF :1;
[; ;pic16f876a.h: 436: unsigned TXIF :1;
[; ;pic16f876a.h: 437: unsigned RCIF :1;
[; ;pic16f876a.h: 438: unsigned ADIF :1;
[; ;pic16f876a.h: 439: };
[; ;pic16f876a.h: 440: } PIR1bits_t;
[; ;pic16f876a.h: 441: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f876a.h: 480: extern volatile unsigned char PIR2 @ 0x00D;
"482
[; ;pic16f876a.h: 482: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f876a.h: 485: typedef union {
[; ;pic16f876a.h: 486: struct {
[; ;pic16f876a.h: 487: unsigned CCP2IF :1;
[; ;pic16f876a.h: 488: unsigned :2;
[; ;pic16f876a.h: 489: unsigned BCLIF :1;
[; ;pic16f876a.h: 490: unsigned EEIF :1;
[; ;pic16f876a.h: 491: unsigned :1;
[; ;pic16f876a.h: 492: unsigned CMIF :1;
[; ;pic16f876a.h: 493: };
[; ;pic16f876a.h: 494: } PIR2bits_t;
[; ;pic16f876a.h: 495: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f876a.h: 519: extern volatile unsigned short TMR1 @ 0x00E;
"521
[; ;pic16f876a.h: 521: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f876a.h: 525: extern volatile unsigned char TMR1L @ 0x00E;
"527
[; ;pic16f876a.h: 527: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f876a.h: 531: extern volatile unsigned char TMR1H @ 0x00F;
"533
[; ;pic16f876a.h: 533: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f876a.h: 537: extern volatile unsigned char T1CON @ 0x010;
"539
[; ;pic16f876a.h: 539: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f876a.h: 542: typedef union {
[; ;pic16f876a.h: 543: struct {
[; ;pic16f876a.h: 544: unsigned TMR1ON :1;
[; ;pic16f876a.h: 545: unsigned TMR1CS :1;
[; ;pic16f876a.h: 546: unsigned nT1SYNC :1;
[; ;pic16f876a.h: 547: unsigned T1OSCEN :1;
[; ;pic16f876a.h: 548: unsigned T1CKPS :2;
[; ;pic16f876a.h: 549: };
[; ;pic16f876a.h: 550: struct {
[; ;pic16f876a.h: 551: unsigned :2;
[; ;pic16f876a.h: 552: unsigned T1SYNC :1;
[; ;pic16f876a.h: 553: unsigned :1;
[; ;pic16f876a.h: 554: unsigned T1CKPS0 :1;
[; ;pic16f876a.h: 555: unsigned T1CKPS1 :1;
[; ;pic16f876a.h: 556: };
[; ;pic16f876a.h: 557: struct {
[; ;pic16f876a.h: 558: unsigned :2;
[; ;pic16f876a.h: 559: unsigned T1INSYNC :1;
[; ;pic16f876a.h: 560: };
[; ;pic16f876a.h: 561: } T1CONbits_t;
[; ;pic16f876a.h: 562: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f876a.h: 611: extern volatile unsigned char TMR2 @ 0x011;
"613
[; ;pic16f876a.h: 613: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f876a.h: 617: extern volatile unsigned char T2CON @ 0x012;
"619
[; ;pic16f876a.h: 619: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f876a.h: 622: typedef union {
[; ;pic16f876a.h: 623: struct {
[; ;pic16f876a.h: 624: unsigned T2CKPS :2;
[; ;pic16f876a.h: 625: unsigned TMR2ON :1;
[; ;pic16f876a.h: 626: unsigned TOUTPS :4;
[; ;pic16f876a.h: 627: };
[; ;pic16f876a.h: 628: struct {
[; ;pic16f876a.h: 629: unsigned T2CKPS0 :1;
[; ;pic16f876a.h: 630: unsigned T2CKPS1 :1;
[; ;pic16f876a.h: 631: unsigned :1;
[; ;pic16f876a.h: 632: unsigned TOUTPS0 :1;
[; ;pic16f876a.h: 633: unsigned TOUTPS1 :1;
[; ;pic16f876a.h: 634: unsigned TOUTPS2 :1;
[; ;pic16f876a.h: 635: unsigned TOUTPS3 :1;
[; ;pic16f876a.h: 636: };
[; ;pic16f876a.h: 637: } T2CONbits_t;
[; ;pic16f876a.h: 638: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f876a.h: 687: extern volatile unsigned char SSPBUF @ 0x013;
"689
[; ;pic16f876a.h: 689: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f876a.h: 693: extern volatile unsigned char SSPCON @ 0x014;
"695
[; ;pic16f876a.h: 695: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f876a.h: 698: typedef union {
[; ;pic16f876a.h: 699: struct {
[; ;pic16f876a.h: 700: unsigned SSPM :4;
[; ;pic16f876a.h: 701: unsigned CKP :1;
[; ;pic16f876a.h: 702: unsigned SSPEN :1;
[; ;pic16f876a.h: 703: unsigned SSPOV :1;
[; ;pic16f876a.h: 704: unsigned WCOL :1;
[; ;pic16f876a.h: 705: };
[; ;pic16f876a.h: 706: struct {
[; ;pic16f876a.h: 707: unsigned SSPM0 :1;
[; ;pic16f876a.h: 708: unsigned SSPM1 :1;
[; ;pic16f876a.h: 709: unsigned SSPM2 :1;
[; ;pic16f876a.h: 710: unsigned SSPM3 :1;
[; ;pic16f876a.h: 711: };
[; ;pic16f876a.h: 712: } SSPCONbits_t;
[; ;pic16f876a.h: 713: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f876a.h: 762: extern volatile unsigned short CCPR1 @ 0x015;
"764
[; ;pic16f876a.h: 764: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f876a.h: 768: extern volatile unsigned char CCPR1L @ 0x015;
"770
[; ;pic16f876a.h: 770: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f876a.h: 774: extern volatile unsigned char CCPR1H @ 0x016;
"776
[; ;pic16f876a.h: 776: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f876a.h: 780: extern volatile unsigned char CCP1CON @ 0x017;
"782
[; ;pic16f876a.h: 782: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f876a.h: 785: typedef union {
[; ;pic16f876a.h: 786: struct {
[; ;pic16f876a.h: 787: unsigned CCP1M :4;
[; ;pic16f876a.h: 788: unsigned CCP1Y :1;
[; ;pic16f876a.h: 789: unsigned CCP1X :1;
[; ;pic16f876a.h: 790: };
[; ;pic16f876a.h: 791: struct {
[; ;pic16f876a.h: 792: unsigned CCP1M0 :1;
[; ;pic16f876a.h: 793: unsigned CCP1M1 :1;
[; ;pic16f876a.h: 794: unsigned CCP1M2 :1;
[; ;pic16f876a.h: 795: unsigned CCP1M3 :1;
[; ;pic16f876a.h: 796: };
[; ;pic16f876a.h: 797: } CCP1CONbits_t;
[; ;pic16f876a.h: 798: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f876a.h: 837: extern volatile unsigned char RCSTA @ 0x018;
"839
[; ;pic16f876a.h: 839: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f876a.h: 842: typedef union {
[; ;pic16f876a.h: 843: struct {
[; ;pic16f876a.h: 844: unsigned RX9D :1;
[; ;pic16f876a.h: 845: unsigned OERR :1;
[; ;pic16f876a.h: 846: unsigned FERR :1;
[; ;pic16f876a.h: 847: unsigned ADDEN :1;
[; ;pic16f876a.h: 848: unsigned CREN :1;
[; ;pic16f876a.h: 849: unsigned SREN :1;
[; ;pic16f876a.h: 850: unsigned RX9 :1;
[; ;pic16f876a.h: 851: unsigned SPEN :1;
[; ;pic16f876a.h: 852: };
[; ;pic16f876a.h: 853: struct {
[; ;pic16f876a.h: 854: unsigned RCD8 :1;
[; ;pic16f876a.h: 855: unsigned :5;
[; ;pic16f876a.h: 856: unsigned RC9 :1;
[; ;pic16f876a.h: 857: };
[; ;pic16f876a.h: 858: struct {
[; ;pic16f876a.h: 859: unsigned :6;
[; ;pic16f876a.h: 860: unsigned nRC8 :1;
[; ;pic16f876a.h: 861: };
[; ;pic16f876a.h: 862: struct {
[; ;pic16f876a.h: 863: unsigned :6;
[; ;pic16f876a.h: 864: unsigned RC8_9 :1;
[; ;pic16f876a.h: 865: };
[; ;pic16f876a.h: 866: } RCSTAbits_t;
[; ;pic16f876a.h: 867: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f876a.h: 931: extern volatile unsigned char TXREG @ 0x019;
"933
[; ;pic16f876a.h: 933: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f876a.h: 937: extern volatile unsigned char RCREG @ 0x01A;
"939
[; ;pic16f876a.h: 939: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f876a.h: 943: extern volatile unsigned short CCPR2 @ 0x01B;
"945
[; ;pic16f876a.h: 945: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f876a.h: 949: extern volatile unsigned char CCPR2L @ 0x01B;
"951
[; ;pic16f876a.h: 951: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f876a.h: 955: extern volatile unsigned char CCPR2H @ 0x01C;
"957
[; ;pic16f876a.h: 957: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f876a.h: 961: extern volatile unsigned char CCP2CON @ 0x01D;
"963
[; ;pic16f876a.h: 963: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f876a.h: 966: typedef union {
[; ;pic16f876a.h: 967: struct {
[; ;pic16f876a.h: 968: unsigned CCP2M :4;
[; ;pic16f876a.h: 969: unsigned CCP2Y :1;
[; ;pic16f876a.h: 970: unsigned CCP2X :1;
[; ;pic16f876a.h: 971: };
[; ;pic16f876a.h: 972: struct {
[; ;pic16f876a.h: 973: unsigned CCP2M0 :1;
[; ;pic16f876a.h: 974: unsigned CCP2M1 :1;
[; ;pic16f876a.h: 975: unsigned CCP2M2 :1;
[; ;pic16f876a.h: 976: unsigned CCP2M3 :1;
[; ;pic16f876a.h: 977: };
[; ;pic16f876a.h: 978: } CCP2CONbits_t;
[; ;pic16f876a.h: 979: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f876a.h: 1018: extern volatile unsigned char ADRESH @ 0x01E;
"1020
[; ;pic16f876a.h: 1020: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f876a.h: 1024: extern volatile unsigned char ADCON0 @ 0x01F;
"1026
[; ;pic16f876a.h: 1026: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f876a.h: 1029: typedef union {
[; ;pic16f876a.h: 1030: struct {
[; ;pic16f876a.h: 1031: unsigned ADON :1;
[; ;pic16f876a.h: 1032: unsigned :1;
[; ;pic16f876a.h: 1033: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 1034: unsigned CHS :3;
[; ;pic16f876a.h: 1035: unsigned ADCS :2;
[; ;pic16f876a.h: 1036: };
[; ;pic16f876a.h: 1037: struct {
[; ;pic16f876a.h: 1038: unsigned :2;
[; ;pic16f876a.h: 1039: unsigned GO :1;
[; ;pic16f876a.h: 1040: unsigned CHS0 :1;
[; ;pic16f876a.h: 1041: unsigned CHS1 :1;
[; ;pic16f876a.h: 1042: unsigned CHS2 :1;
[; ;pic16f876a.h: 1043: unsigned ADCS0 :1;
[; ;pic16f876a.h: 1044: unsigned ADCS1 :1;
[; ;pic16f876a.h: 1045: };
[; ;pic16f876a.h: 1046: struct {
[; ;pic16f876a.h: 1047: unsigned :2;
[; ;pic16f876a.h: 1048: unsigned nDONE :1;
[; ;pic16f876a.h: 1049: };
[; ;pic16f876a.h: 1050: struct {
[; ;pic16f876a.h: 1051: unsigned :2;
[; ;pic16f876a.h: 1052: unsigned GO_DONE :1;
[; ;pic16f876a.h: 1053: };
[; ;pic16f876a.h: 1054: } ADCON0bits_t;
[; ;pic16f876a.h: 1055: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f876a.h: 1119: extern volatile unsigned char OPTION_REG @ 0x081;
"1121
[; ;pic16f876a.h: 1121: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f876a.h: 1124: typedef union {
[; ;pic16f876a.h: 1125: struct {
[; ;pic16f876a.h: 1126: unsigned PS :3;
[; ;pic16f876a.h: 1127: unsigned PSA :1;
[; ;pic16f876a.h: 1128: unsigned T0SE :1;
[; ;pic16f876a.h: 1129: unsigned T0CS :1;
[; ;pic16f876a.h: 1130: unsigned INTEDG :1;
[; ;pic16f876a.h: 1131: unsigned nRBPU :1;
[; ;pic16f876a.h: 1132: };
[; ;pic16f876a.h: 1133: struct {
[; ;pic16f876a.h: 1134: unsigned PS0 :1;
[; ;pic16f876a.h: 1135: unsigned PS1 :1;
[; ;pic16f876a.h: 1136: unsigned PS2 :1;
[; ;pic16f876a.h: 1137: };
[; ;pic16f876a.h: 1138: } OPTION_REGbits_t;
[; ;pic16f876a.h: 1139: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f876a.h: 1188: extern volatile unsigned char TRISA @ 0x085;
"1190
[; ;pic16f876a.h: 1190: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f876a.h: 1193: typedef union {
[; ;pic16f876a.h: 1194: struct {
[; ;pic16f876a.h: 1195: unsigned TRISA0 :1;
[; ;pic16f876a.h: 1196: unsigned TRISA1 :1;
[; ;pic16f876a.h: 1197: unsigned TRISA2 :1;
[; ;pic16f876a.h: 1198: unsigned TRISA3 :1;
[; ;pic16f876a.h: 1199: unsigned TRISA4 :1;
[; ;pic16f876a.h: 1200: unsigned TRISA5 :1;
[; ;pic16f876a.h: 1201: };
[; ;pic16f876a.h: 1202: } TRISAbits_t;
[; ;pic16f876a.h: 1203: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f876a.h: 1237: extern volatile unsigned char TRISB @ 0x086;
"1239
[; ;pic16f876a.h: 1239: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f876a.h: 1242: typedef union {
[; ;pic16f876a.h: 1243: struct {
[; ;pic16f876a.h: 1244: unsigned TRISB0 :1;
[; ;pic16f876a.h: 1245: unsigned TRISB1 :1;
[; ;pic16f876a.h: 1246: unsigned TRISB2 :1;
[; ;pic16f876a.h: 1247: unsigned TRISB3 :1;
[; ;pic16f876a.h: 1248: unsigned TRISB4 :1;
[; ;pic16f876a.h: 1249: unsigned TRISB5 :1;
[; ;pic16f876a.h: 1250: unsigned TRISB6 :1;
[; ;pic16f876a.h: 1251: unsigned TRISB7 :1;
[; ;pic16f876a.h: 1252: };
[; ;pic16f876a.h: 1253: } TRISBbits_t;
[; ;pic16f876a.h: 1254: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f876a.h: 1298: extern volatile unsigned char TRISC @ 0x087;
"1300
[; ;pic16f876a.h: 1300: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f876a.h: 1303: typedef union {
[; ;pic16f876a.h: 1304: struct {
[; ;pic16f876a.h: 1305: unsigned TRISC0 :1;
[; ;pic16f876a.h: 1306: unsigned TRISC1 :1;
[; ;pic16f876a.h: 1307: unsigned TRISC2 :1;
[; ;pic16f876a.h: 1308: unsigned TRISC3 :1;
[; ;pic16f876a.h: 1309: unsigned TRISC4 :1;
[; ;pic16f876a.h: 1310: unsigned TRISC5 :1;
[; ;pic16f876a.h: 1311: unsigned TRISC6 :1;
[; ;pic16f876a.h: 1312: unsigned TRISC7 :1;
[; ;pic16f876a.h: 1313: };
[; ;pic16f876a.h: 1314: } TRISCbits_t;
[; ;pic16f876a.h: 1315: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f876a.h: 1359: extern volatile unsigned char PIE1 @ 0x08C;
"1361
[; ;pic16f876a.h: 1361: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f876a.h: 1364: typedef union {
[; ;pic16f876a.h: 1365: struct {
[; ;pic16f876a.h: 1366: unsigned TMR1IE :1;
[; ;pic16f876a.h: 1367: unsigned TMR2IE :1;
[; ;pic16f876a.h: 1368: unsigned CCP1IE :1;
[; ;pic16f876a.h: 1369: unsigned SSPIE :1;
[; ;pic16f876a.h: 1370: unsigned TXIE :1;
[; ;pic16f876a.h: 1371: unsigned RCIE :1;
[; ;pic16f876a.h: 1372: unsigned ADIE :1;
[; ;pic16f876a.h: 1373: };
[; ;pic16f876a.h: 1374: } PIE1bits_t;
[; ;pic16f876a.h: 1375: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f876a.h: 1414: extern volatile unsigned char PIE2 @ 0x08D;
"1416
[; ;pic16f876a.h: 1416: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f876a.h: 1419: typedef union {
[; ;pic16f876a.h: 1420: struct {
[; ;pic16f876a.h: 1421: unsigned CCP2IE :1;
[; ;pic16f876a.h: 1422: unsigned :2;
[; ;pic16f876a.h: 1423: unsigned BCLIE :1;
[; ;pic16f876a.h: 1424: unsigned EEIE :1;
[; ;pic16f876a.h: 1425: unsigned :1;
[; ;pic16f876a.h: 1426: unsigned CMIE :1;
[; ;pic16f876a.h: 1427: };
[; ;pic16f876a.h: 1428: } PIE2bits_t;
[; ;pic16f876a.h: 1429: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f876a.h: 1453: extern volatile unsigned char PCON @ 0x08E;
"1455
[; ;pic16f876a.h: 1455: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f876a.h: 1458: typedef union {
[; ;pic16f876a.h: 1459: struct {
[; ;pic16f876a.h: 1460: unsigned nBOR :1;
[; ;pic16f876a.h: 1461: unsigned nPOR :1;
[; ;pic16f876a.h: 1462: };
[; ;pic16f876a.h: 1463: struct {
[; ;pic16f876a.h: 1464: unsigned nBO :1;
[; ;pic16f876a.h: 1465: };
[; ;pic16f876a.h: 1466: } PCONbits_t;
[; ;pic16f876a.h: 1467: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f876a.h: 1486: extern volatile unsigned char SSPCON2 @ 0x091;
"1488
[; ;pic16f876a.h: 1488: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f876a.h: 1491: typedef union {
[; ;pic16f876a.h: 1492: struct {
[; ;pic16f876a.h: 1493: unsigned SEN :1;
[; ;pic16f876a.h: 1494: unsigned RSEN :1;
[; ;pic16f876a.h: 1495: unsigned PEN :1;
[; ;pic16f876a.h: 1496: unsigned RCEN :1;
[; ;pic16f876a.h: 1497: unsigned ACKEN :1;
[; ;pic16f876a.h: 1498: unsigned ACKDT :1;
[; ;pic16f876a.h: 1499: unsigned ACKSTAT :1;
[; ;pic16f876a.h: 1500: unsigned GCEN :1;
[; ;pic16f876a.h: 1501: };
[; ;pic16f876a.h: 1502: } SSPCON2bits_t;
[; ;pic16f876a.h: 1503: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f876a.h: 1547: extern volatile unsigned char PR2 @ 0x092;
"1549
[; ;pic16f876a.h: 1549: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f876a.h: 1553: extern volatile unsigned char SSPADD @ 0x093;
"1555
[; ;pic16f876a.h: 1555: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f876a.h: 1559: extern volatile unsigned char SSPSTAT @ 0x094;
"1561
[; ;pic16f876a.h: 1561: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f876a.h: 1564: typedef union {
[; ;pic16f876a.h: 1565: struct {
[; ;pic16f876a.h: 1566: unsigned BF :1;
[; ;pic16f876a.h: 1567: unsigned UA :1;
[; ;pic16f876a.h: 1568: unsigned R_nW :1;
[; ;pic16f876a.h: 1569: unsigned S :1;
[; ;pic16f876a.h: 1570: unsigned P :1;
[; ;pic16f876a.h: 1571: unsigned D_nA :1;
[; ;pic16f876a.h: 1572: unsigned CKE :1;
[; ;pic16f876a.h: 1573: unsigned SMP :1;
[; ;pic16f876a.h: 1574: };
[; ;pic16f876a.h: 1575: struct {
[; ;pic16f876a.h: 1576: unsigned :2;
[; ;pic16f876a.h: 1577: unsigned R :1;
[; ;pic16f876a.h: 1578: unsigned :2;
[; ;pic16f876a.h: 1579: unsigned D :1;
[; ;pic16f876a.h: 1580: };
[; ;pic16f876a.h: 1581: struct {
[; ;pic16f876a.h: 1582: unsigned :2;
[; ;pic16f876a.h: 1583: unsigned I2C_READ :1;
[; ;pic16f876a.h: 1584: unsigned I2C_START :1;
[; ;pic16f876a.h: 1585: unsigned I2C_STOP :1;
[; ;pic16f876a.h: 1586: unsigned I2C_DATA :1;
[; ;pic16f876a.h: 1587: };
[; ;pic16f876a.h: 1588: struct {
[; ;pic16f876a.h: 1589: unsigned :2;
[; ;pic16f876a.h: 1590: unsigned nW :1;
[; ;pic16f876a.h: 1591: unsigned :2;
[; ;pic16f876a.h: 1592: unsigned nA :1;
[; ;pic16f876a.h: 1593: };
[; ;pic16f876a.h: 1594: struct {
[; ;pic16f876a.h: 1595: unsigned :2;
[; ;pic16f876a.h: 1596: unsigned nWRITE :1;
[; ;pic16f876a.h: 1597: unsigned :2;
[; ;pic16f876a.h: 1598: unsigned nADDRESS :1;
[; ;pic16f876a.h: 1599: };
[; ;pic16f876a.h: 1600: struct {
[; ;pic16f876a.h: 1601: unsigned :2;
[; ;pic16f876a.h: 1602: unsigned R_W :1;
[; ;pic16f876a.h: 1603: unsigned :2;
[; ;pic16f876a.h: 1604: unsigned D_A :1;
[; ;pic16f876a.h: 1605: };
[; ;pic16f876a.h: 1606: struct {
[; ;pic16f876a.h: 1607: unsigned :2;
[; ;pic16f876a.h: 1608: unsigned READ_WRITE :1;
[; ;pic16f876a.h: 1609: unsigned :2;
[; ;pic16f876a.h: 1610: unsigned DATA_ADDRESS :1;
[; ;pic16f876a.h: 1611: };
[; ;pic16f876a.h: 1612: } SSPSTATbits_t;
[; ;pic16f876a.h: 1613: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f876a.h: 1727: extern volatile unsigned char TXSTA @ 0x098;
"1729
[; ;pic16f876a.h: 1729: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f876a.h: 1732: typedef union {
[; ;pic16f876a.h: 1733: struct {
[; ;pic16f876a.h: 1734: unsigned TX9D :1;
[; ;pic16f876a.h: 1735: unsigned TRMT :1;
[; ;pic16f876a.h: 1736: unsigned BRGH :1;
[; ;pic16f876a.h: 1737: unsigned :1;
[; ;pic16f876a.h: 1738: unsigned SYNC :1;
[; ;pic16f876a.h: 1739: unsigned TXEN :1;
[; ;pic16f876a.h: 1740: unsigned TX9 :1;
[; ;pic16f876a.h: 1741: unsigned CSRC :1;
[; ;pic16f876a.h: 1742: };
[; ;pic16f876a.h: 1743: struct {
[; ;pic16f876a.h: 1744: unsigned TXD8 :1;
[; ;pic16f876a.h: 1745: unsigned :5;
[; ;pic16f876a.h: 1746: unsigned nTX8 :1;
[; ;pic16f876a.h: 1747: };
[; ;pic16f876a.h: 1748: struct {
[; ;pic16f876a.h: 1749: unsigned :6;
[; ;pic16f876a.h: 1750: unsigned TX8_9 :1;
[; ;pic16f876a.h: 1751: };
[; ;pic16f876a.h: 1752: } TXSTAbits_t;
[; ;pic16f876a.h: 1753: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f876a.h: 1807: extern volatile unsigned char SPBRG @ 0x099;
"1809
[; ;pic16f876a.h: 1809: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f876a.h: 1813: extern volatile unsigned char CMCON @ 0x09C;
"1815
[; ;pic16f876a.h: 1815: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f876a.h: 1818: typedef union {
[; ;pic16f876a.h: 1819: struct {
[; ;pic16f876a.h: 1820: unsigned CM :3;
[; ;pic16f876a.h: 1821: unsigned CIS :1;
[; ;pic16f876a.h: 1822: unsigned C1INV :1;
[; ;pic16f876a.h: 1823: unsigned C2INV :1;
[; ;pic16f876a.h: 1824: unsigned C1OUT :1;
[; ;pic16f876a.h: 1825: unsigned C2OUT :1;
[; ;pic16f876a.h: 1826: };
[; ;pic16f876a.h: 1827: struct {
[; ;pic16f876a.h: 1828: unsigned CM0 :1;
[; ;pic16f876a.h: 1829: unsigned CM1 :1;
[; ;pic16f876a.h: 1830: unsigned CM2 :1;
[; ;pic16f876a.h: 1831: };
[; ;pic16f876a.h: 1832: } CMCONbits_t;
[; ;pic16f876a.h: 1833: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f876a.h: 1882: extern volatile unsigned char CVRCON @ 0x09D;
"1884
[; ;pic16f876a.h: 1884: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f876a.h: 1887: typedef union {
[; ;pic16f876a.h: 1888: struct {
[; ;pic16f876a.h: 1889: unsigned CVR :4;
[; ;pic16f876a.h: 1890: unsigned :1;
[; ;pic16f876a.h: 1891: unsigned CVRR :1;
[; ;pic16f876a.h: 1892: unsigned CVROE :1;
[; ;pic16f876a.h: 1893: unsigned CVREN :1;
[; ;pic16f876a.h: 1894: };
[; ;pic16f876a.h: 1895: struct {
[; ;pic16f876a.h: 1896: unsigned CVR0 :1;
[; ;pic16f876a.h: 1897: unsigned CVR1 :1;
[; ;pic16f876a.h: 1898: unsigned CVR2 :1;
[; ;pic16f876a.h: 1899: unsigned CVR3 :1;
[; ;pic16f876a.h: 1900: };
[; ;pic16f876a.h: 1901: } CVRCONbits_t;
[; ;pic16f876a.h: 1902: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f876a.h: 1946: extern volatile unsigned char ADRESL @ 0x09E;
"1948
[; ;pic16f876a.h: 1948: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f876a.h: 1952: extern volatile unsigned char ADCON1 @ 0x09F;
"1954
[; ;pic16f876a.h: 1954: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f876a.h: 1957: typedef union {
[; ;pic16f876a.h: 1958: struct {
[; ;pic16f876a.h: 1959: unsigned PCFG :4;
[; ;pic16f876a.h: 1960: unsigned :2;
[; ;pic16f876a.h: 1961: unsigned ADCS2 :1;
[; ;pic16f876a.h: 1962: unsigned ADFM :1;
[; ;pic16f876a.h: 1963: };
[; ;pic16f876a.h: 1964: struct {
[; ;pic16f876a.h: 1965: unsigned PCFG0 :1;
[; ;pic16f876a.h: 1966: unsigned PCFG1 :1;
[; ;pic16f876a.h: 1967: unsigned PCFG2 :1;
[; ;pic16f876a.h: 1968: unsigned PCFG3 :1;
[; ;pic16f876a.h: 1969: };
[; ;pic16f876a.h: 1970: } ADCON1bits_t;
[; ;pic16f876a.h: 1971: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f876a.h: 2010: extern volatile unsigned char EEDATA @ 0x10C;
"2012
[; ;pic16f876a.h: 2012: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f876a.h: 2016: extern volatile unsigned char EEADR @ 0x10D;
"2018
[; ;pic16f876a.h: 2018: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f876a.h: 2022: extern volatile unsigned char EEDATH @ 0x10E;
"2024
[; ;pic16f876a.h: 2024: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f876a.h: 2028: extern volatile unsigned char EEADRH @ 0x10F;
"2030
[; ;pic16f876a.h: 2030: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f876a.h: 2034: extern volatile unsigned char EECON1 @ 0x18C;
"2036
[; ;pic16f876a.h: 2036: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f876a.h: 2039: typedef union {
[; ;pic16f876a.h: 2040: struct {
[; ;pic16f876a.h: 2041: unsigned RD :1;
[; ;pic16f876a.h: 2042: unsigned WR :1;
[; ;pic16f876a.h: 2043: unsigned WREN :1;
[; ;pic16f876a.h: 2044: unsigned WRERR :1;
[; ;pic16f876a.h: 2045: unsigned :3;
[; ;pic16f876a.h: 2046: unsigned EEPGD :1;
[; ;pic16f876a.h: 2047: };
[; ;pic16f876a.h: 2048: } EECON1bits_t;
[; ;pic16f876a.h: 2049: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f876a.h: 2078: extern volatile unsigned char EECON2 @ 0x18D;
"2080
[; ;pic16f876a.h: 2080: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f876a.h: 2090: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f876a.h: 2092: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f876a.h: 2094: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f876a.h: 2096: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f876a.h: 2098: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f876a.h: 2100: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f876a.h: 2102: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f876a.h: 2104: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f876a.h: 2106: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f876a.h: 2108: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f876a.h: 2110: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f876a.h: 2112: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f876a.h: 2114: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f876a.h: 2116: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f876a.h: 2118: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f876a.h: 2120: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f876a.h: 2122: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f876a.h: 2124: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f876a.h: 2126: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f876a.h: 2128: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f876a.h: 2130: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f876a.h: 2132: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f876a.h: 2134: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f876a.h: 2136: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f876a.h: 2138: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f876a.h: 2140: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f876a.h: 2142: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f876a.h: 2144: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f876a.h: 2146: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f876a.h: 2148: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f876a.h: 2150: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f876a.h: 2152: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f876a.h: 2154: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f876a.h: 2156: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f876a.h: 2158: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f876a.h: 2160: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f876a.h: 2162: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f876a.h: 2164: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f876a.h: 2166: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f876a.h: 2168: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f876a.h: 2170: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f876a.h: 2172: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f876a.h: 2174: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f876a.h: 2176: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f876a.h: 2178: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f876a.h: 2180: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f876a.h: 2182: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f876a.h: 2184: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f876a.h: 2186: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f876a.h: 2188: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f876a.h: 2190: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f876a.h: 2192: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f876a.h: 2194: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f876a.h: 2196: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f876a.h: 2198: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f876a.h: 2200: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f876a.h: 2202: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2204: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f876a.h: 2206: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2208: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2210: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f876a.h: 2212: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f876a.h: 2214: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f876a.h: 2216: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f876a.h: 2218: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f876a.h: 2220: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f876a.h: 2222: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2224: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2226: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2228: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2230: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2232: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f876a.h: 2234: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f876a.h: 2236: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f876a.h: 2238: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f876a.h: 2240: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f876a.h: 2242: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f876a.h: 2244: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f876a.h: 2246: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f876a.h: 2248: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f876a.h: 2250: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f876a.h: 2252: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f876a.h: 2254: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f876a.h: 2256: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f876a.h: 2258: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f876a.h: 2260: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f876a.h: 2262: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f876a.h: 2264: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f876a.h: 2266: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f876a.h: 2268: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f876a.h: 2270: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f876a.h: 2272: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f876a.h: 2274: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f876a.h: 2276: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f876a.h: 2278: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f876a.h: 2280: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f876a.h: 2282: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f876a.h: 2284: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f876a.h: 2286: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f876a.h: 2288: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f876a.h: 2290: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f876a.h: 2292: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f876a.h: 2294: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f876a.h: 2296: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f876a.h: 2298: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f876a.h: 2300: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f876a.h: 2302: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f876a.h: 2304: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f876a.h: 2306: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f876a.h: 2308: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f876a.h: 2310: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f876a.h: 2312: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f876a.h: 2314: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2316: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2318: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 2320: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f876a.h: 2322: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f876a.h: 2324: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f876a.h: 2326: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f876a.h: 2328: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2330: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f876a.h: 2332: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f876a.h: 2334: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f876a.h: 2336: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2338: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 2340: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2342: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2344: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f876a.h: 2346: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f876a.h: 2348: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f876a.h: 2350: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f876a.h: 2352: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f876a.h: 2354: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f876a.h: 2356: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f876a.h: 2358: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f876a.h: 2360: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f876a.h: 2362: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f876a.h: 2364: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f876a.h: 2366: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f876a.h: 2368: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f876a.h: 2370: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f876a.h: 2372: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 2374: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 2376: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f876a.h: 2378: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f876a.h: 2380: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f876a.h: 2382: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 2384: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f876a.h: 2386: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 2388: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f876a.h: 2390: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f876a.h: 2392: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 2394: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 2396: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f876a.h: 2398: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f876a.h: 2400: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f876a.h: 2402: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f876a.h: 2404: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f876a.h: 2406: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f876a.h: 2408: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f876a.h: 2410: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f876a.h: 2412: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f876a.h: 2414: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f876a.h: 2416: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f876a.h: 2418: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f876a.h: 2420: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f876a.h: 2422: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f876a.h: 2424: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f876a.h: 2426: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f876a.h: 2428: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f876a.h: 2430: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f876a.h: 2432: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f876a.h: 2434: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f876a.h: 2436: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f876a.h: 2438: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f876a.h: 2440: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f876a.h: 2442: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f876a.h: 2444: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f876a.h: 2446: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f876a.h: 2448: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f876a.h: 2450: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f876a.h: 2452: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f876a.h: 2454: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f876a.h: 2456: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f876a.h: 2458: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f876a.h: 2460: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f876a.h: 2462: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f876a.h: 2464: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 2466: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 2468: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 2470: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 2472: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f876a.h: 2474: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f876a.h: 2476: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f876a.h: 2478: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f876a.h: 2480: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f876a.h: 2482: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f876a.h: 2484: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f876a.h: 2486: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f876a.h: 2488: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f876a.h: 2490: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2492: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2494: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 2496: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 2498: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2500: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f876a.h: 2502: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f876a.h: 2504: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f876a.h: 2506: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2508: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 2510: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f876a.h: 2512: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 2514: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2516: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;string.h: 4: typedef int ptrdiff_t;
[; ;string.h: 5: typedef unsigned size_t;
[; ;string.h: 6: typedef unsigned short wchar_t;
[; ;string.h: 9: extern int errno;
[; ;string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 24: extern void * memset(void *, int, size_t);
[; ;string.h: 42: extern char * strcat(char *, const char *);
[; ;string.h: 43: extern char * strcpy(char *, const char *);
[; ;string.h: 44: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 45: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 46: extern char * strdup(const char *);
[; ;string.h: 47: extern char * strtok(char *, const char *);
[; ;string.h: 50: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 51: extern int strcmp(const char *, const char *);
[; ;string.h: 52: extern int stricmp(const char *, const char *);
[; ;string.h: 53: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 54: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 55: extern void * memchr(const void *, int, size_t);
[; ;string.h: 56: extern size_t strcspn(const char *, const char *);
[; ;string.h: 57: extern char * strpbrk(const char *, const char *);
[; ;string.h: 58: extern size_t strspn(const char *, const char *);
[; ;string.h: 59: extern char * strstr(const char *, const char *);
[; ;string.h: 60: extern char * stristr(const char *, const char *);
[; ;string.h: 61: extern char * strerror(int);
[; ;string.h: 62: extern size_t strlen(const char *);
[; ;string.h: 63: extern char * strchr(const char *, int);
[; ;string.h: 64: extern char * strichr(const char *, int);
[; ;string.h: 65: extern char * strrchr(const char *, int);
[; ;string.h: 66: extern char * strrichr(const char *, int);
"71 E:\Study Material\XC8 PROJECTS\Modem Advance\sim300.h
[v _sim300_buffer `uc ~T0 @X0 -> 70 `i e ]
[; ;sim300.h: 71: char sim300_buffer[70];
"73
[v _MSG_number `uc ~T0 @X0 -> 15 `i e ]
[; ;sim300.h: 73: char MSG_number[15];
[; ;sim300.h: 76: int8_t SIM300Cmd(const char *cmd);
[; ;sim300.h: 79: int8_t SIM300Init();
[; ;sim300.h: 80: int8_t SIM300CheckResponse(const char *response,const char *check,uint8_t len);
[; ;sim300.h: 81: int8_t SIM300WaitForResponse(uint16_t timeout);
[; ;sim300.h: 82: int8_t SIM300RingResponse(uint16_t timeout);
[; ;sim300.h: 84: int8_t SIM300DeleteMsg(uint8_t i);
[; ;sim300.h: 86: int8_t SIM300WaitForValidMsg();
[; ;sim300.h: 88: int8_t SIM300ReadValidMsg(uint8_t i);
[; ;sim300.h: 89: int8_t SIM300SendMsg(const char *, const char *,uint8_t *);
[; ;MobileAdv.c: 19: int8_t SIM300WaitForValidCall();
[; ;MobileAdv.c: 20: void SMSCommunication();
[; ;MobileAdv.c: 21: void start();
[; ;MobileAdv.c: 22: void stop();
[; ;MobileAdv.c: 23: char phase_check();
"25 E:\Study Material\XC8 PROJECTS\Modem Advance\MobileAdv.c
[v _MOTOR_FLAG `uc ~T0 @X0 1 e ]
[i _MOTOR_FLAG
-> -> 0 `i `uc
]
[v _LP_FLAG `uc ~T0 @X0 1 e ]
[i _LP_FLAG
-> -> 0 `i `uc
]
[; ;MobileAdv.c: 25: char MOTOR_FLAG = 0, LP_FLAG = 0;
"27
[v _WRONG_NUMBER `uc ~T0 @X0 1 e ]
[i _WRONG_NUMBER
-> -> 0 `i `uc
]
[v _RING_COUNT `uc ~T0 @X0 1 e ]
[i _RING_COUNT
-> -> 0 `i `uc
]
[v _REQUIRED_RING_COUNT `uc ~T0 @X0 1 e ]
[i _REQUIRED_RING_COUNT
-> -> 1 `i `uc
]
[v _Timer `uc ~T0 @X0 1 e ]
[i _Timer
-> -> 0 `i `uc
]
[; ;MobileAdv.c: 27: unsigned char WRONG_NUMBER = 0, RING_COUNT = 0, REQUIRED_RING_COUNT = 1, Timer = 0;
"28
[v _count `uc ~T0 @X0 1 e ]
[i _count
-> -> 0 `i `uc
]
[v _Dry_Run_Timer `uc ~T0 @X0 1 e ]
[i _Dry_Run_Timer
-> -> 0 `i `uc
]
[; ;MobileAdv.c: 28: char count = 0, Dry_Run_Timer = 0;
"29
[v _phone_number `uc ~T0 @X0 -> 40 `i e ]
[i _phone_number
:U ..
-> 65 `c
-> 84 `c
-> 68 `c
-> 0 `c
..
]
[; ;MobileAdv.c: 29: unsigned char phone_number[40] = "ATD";
"31
[v _main `(v ~T0 @X0 1 ef ]
"32
{
[; ;MobileAdv.c: 31: void main(void)
[; ;MobileAdv.c: 32: {
[e :U _main ]
[f ]
[; ;MobileAdv.c: 33: TRISA = 0xFE;
"33
[e = _TRISA -> -> 254 `i `uc ]
[; ;MobileAdv.c: 34: TRISB = 0x01;
"34
[e = _TRISB -> -> 1 `i `uc ]
[; ;MobileAdv.c: 35: TRISC = 0xC7;
"35
[e = _TRISC -> -> 199 `i `uc ]
[; ;MobileAdv.c: 36: ADCON1 = 0x06;
"36
[e = _ADCON1 -> -> 6 `i `uc ]
[; ;MobileAdv.c: 38: RC3 = 0;
"38
[e = _RC3 -> -> 0 `i `b ]
[; ;MobileAdv.c: 39: RC4 = 0;
"39
[e = _RC4 -> -> 0 `i `b ]
[; ;MobileAdv.c: 40: RC5 = 0;
"40
[e = _RC5 -> -> 0 `i `b ]
[; ;MobileAdv.c: 43: for(count = 0; count <= 10; count++)
"43
{
[e = _count -> -> 0 `i `uc ]
[e $ <= -> _count `i -> 10 `i 89  ]
[e $U 90  ]
"44
[e :U 89 ]
[; ;MobileAdv.c: 44: {
{
[; ;MobileAdv.c: 45: RB7 = 1;
"45
[e = _RB7 -> -> 1 `i `b ]
[; ;MobileAdv.c: 46: _delay(1000000);
"46
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 47: RB7 = 0;
"47
[e = _RB7 -> -> 0 `i `b ]
[; ;MobileAdv.c: 48: _delay(1000000);
"48
[e ( __delay (1 -> -> 1000000 `l `ul ]
"49
}
"43
[e ++ _count -> -> 1 `i `uc ]
[e $ <= -> _count `i -> 10 `i 89  ]
[e :U 90 ]
"49
}
[; ;MobileAdv.c: 49: }
[; ;MobileAdv.c: 52: MOTOR_FLAG = (char)eeprom_read(0x01);
"52
[e = _MOTOR_FLAG ( _eeprom_read (1 -> -> 1 `i `uc ]
[; ;MobileAdv.c: 53: if(MOTOR_FLAG != 0 && MOTOR_FLAG != 1)
"53
[e $ ! && != -> _MOTOR_FLAG `i -> 0 `i != -> _MOTOR_FLAG `i -> 1 `i 92  ]
[; ;MobileAdv.c: 54: MOTOR_FLAG = 0;
"54
[e = _MOTOR_FLAG -> -> 0 `i `uc ]
[e :U 92 ]
[; ;MobileAdv.c: 56: if(MOTOR_FLAG == 1)
"56
[e $ ! == -> _MOTOR_FLAG `i -> 1 `i 93  ]
[; ;MobileAdv.c: 57: REQUIRED_RING_COUNT = 3;
"57
[e = _REQUIRED_RING_COUNT -> -> 3 `i `uc ]
[e $U 94  ]
"58
[e :U 93 ]
[; ;MobileAdv.c: 58: else
[; ;MobileAdv.c: 59: REQUIRED_RING_COUNT = 1;
"59
[e = _REQUIRED_RING_COUNT -> -> 1 `i `uc ]
[e :U 94 ]
"61
[v _r `c ~T0 @X0 1 a ]
[; ;MobileAdv.c: 61: int8_t r= SIM300Init();
[e = _r ( _SIM300Init ..  ]
[; ;MobileAdv.c: 62: _delay(1000000);
"62
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 64: if(r == 1)
"64
[e $ ! == -> _r `i -> 1 `i 95  ]
[; ;MobileAdv.c: 65: {
"65
{
[; ;MobileAdv.c: 67: SIM300Cmd("AT+CLIP=1");
"67
[e ( _SIM300Cmd (1 :s 1C ]
[; ;MobileAdv.c: 68: _delay(1000000);
"68
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 70: SIM300Cmd("AT+CMGF=1");
"70
[e ( _SIM300Cmd (1 :s 2C ]
[; ;MobileAdv.c: 71: _delay(1000000);
"71
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 73: SIM300Cmd("AT+CMGD=1");
"73
[e ( _SIM300Cmd (1 :s 3C ]
[; ;MobileAdv.c: 74: _delay(1000000);
"74
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 76: USARTFlushBuffer();
"76
[e ( _USARTFlushBuffer ..  ]
[; ;MobileAdv.c: 78: RB7 = 1;
"78
[e = _RB7 -> -> 1 `i `b ]
[; ;MobileAdv.c: 79: _delay(1000000);
"79
[e ( __delay (1 -> -> 1000000 `l `ul ]
"82
}
[; ;MobileAdv.c: 82: }
[e $U 96  ]
"83
[e :U 95 ]
[; ;MobileAdv.c: 83: else
[; ;MobileAdv.c: 84: {
"84
{
[; ;MobileAdv.c: 86: while(1)
"86
[e :U 98 ]
[; ;MobileAdv.c: 87: {
"87
{
[; ;MobileAdv.c: 88: RB7 = 1;
"88
[e = _RB7 -> -> 1 `i `b ]
[; ;MobileAdv.c: 89: _delay(100000);
"89
[e ( __delay (1 -> -> 100000 `l `ul ]
[; ;MobileAdv.c: 90: RB7 = 0;
"90
[e = _RB7 -> -> 0 `i `b ]
[; ;MobileAdv.c: 91: _delay(100000);
"91
[e ( __delay (1 -> -> 100000 `l `ul ]
"92
}
[e :U 97 ]
"86
[e $U 98  ]
[e :U 99 ]
"93
}
[e :U 96 ]
[; ;MobileAdv.c: 92: }
[; ;MobileAdv.c: 93: }
[; ;MobileAdv.c: 97: while(1)
"97
[e :U 101 ]
[; ;MobileAdv.c: 98: {
"98
{
[; ;MobileAdv.c: 100: while(SIM300WaitForValidCall() != 1)
"100
[e $U 103  ]
[e :U 104 ]
[; ;MobileAdv.c: 101: {
"101
{
[; ;MobileAdv.c: 103: if(MOTOR_FLAG == 1)
"103
[e $ ! == -> _MOTOR_FLAG `i -> 1 `i 106  ]
[; ;MobileAdv.c: 104: {
"104
{
[; ;MobileAdv.c: 105: if(phase_check() == 1)
"105
[e $ ! == -> ( _phase_check ..  `i -> 1 `i 107  ]
[; ;MobileAdv.c: 106: {
"106
{
[; ;MobileAdv.c: 107: if(LP_FLAG == 0)
"107
[e $ ! == -> _LP_FLAG `i -> 0 `i 108  ]
[; ;MobileAdv.c: 108: {
"108
{
[; ;MobileAdv.c: 109: start();
"109
[e ( _start ..  ]
[; ;MobileAdv.c: 110: LP_FLAG = 1;
"110
[e = _LP_FLAG -> -> 1 `i `uc ]
"111
}
[e :U 108 ]
"112
}
[; ;MobileAdv.c: 111: }
[; ;MobileAdv.c: 112: }
[e $U 109  ]
"113
[e :U 107 ]
[; ;MobileAdv.c: 113: else
[; ;MobileAdv.c: 114: {
"114
{
[; ;MobileAdv.c: 115: if(LP_FLAG == 1)
"115
[e $ ! == -> _LP_FLAG `i -> 1 `i 110  ]
[; ;MobileAdv.c: 116: {
"116
{
[; ;MobileAdv.c: 117: stop();
"117
[e ( _stop ..  ]
[; ;MobileAdv.c: 118: LP_FLAG = 0;
"118
[e = _LP_FLAG -> -> 0 `i `uc ]
"119
}
[e :U 110 ]
"120
}
[e :U 109 ]
"141
}
[e :U 106 ]
[; ;MobileAdv.c: 119: }
[; ;MobileAdv.c: 120: }
[; ;MobileAdv.c: 141: }
[; ;MobileAdv.c: 143: if(WRONG_NUMBER == 1)
"143
[e $ ! == -> _WRONG_NUMBER `i -> 1 `i 111  ]
[; ;MobileAdv.c: 144: {
"144
{
[; ;MobileAdv.c: 146: _delay(1000000);
"146
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 147: SIM300Cmd("ATH");
"147
[e ( _SIM300Cmd (1 :s 4C ]
[; ;MobileAdv.c: 148: _delay(1000000);
"148
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 149: WRONG_NUMBER = 0;
"149
[e = _WRONG_NUMBER -> -> 0 `i `uc ]
"150
}
[e :U 111 ]
[; ;MobileAdv.c: 150: }
[; ;MobileAdv.c: 153: SMSCommunication();
"153
[e ( _SMSCommunication ..  ]
[; ;MobileAdv.c: 155: if(RING_COUNT != 0)
"155
[e $ ! != -> _RING_COUNT `i -> 0 `i 112  ]
[; ;MobileAdv.c: 156: {
"156
{
[; ;MobileAdv.c: 157: if(Timer > 2)
"157
[e $ ! > -> _Timer `i -> 2 `i 113  ]
[; ;MobileAdv.c: 158: {
"158
{
[; ;MobileAdv.c: 159: RING_COUNT = 0;
"159
[e = _RING_COUNT -> -> 0 `i `uc ]
[; ;MobileAdv.c: 160: Timer = 0;
"160
[e = _Timer -> -> 0 `i `uc ]
"161
}
[; ;MobileAdv.c: 161: }
[e $U 114  ]
"162
[e :U 113 ]
[; ;MobileAdv.c: 162: else
[; ;MobileAdv.c: 163: {
"163
{
[; ;MobileAdv.c: 164: Timer++;
"164
[e ++ _Timer -> -> 1 `i `uc ]
"165
}
[e :U 114 ]
"166
}
[e :U 112 ]
[; ;MobileAdv.c: 165: }
[; ;MobileAdv.c: 166: }
[; ;MobileAdv.c: 168: if(RING_COUNT == 0)
"168
[e $ ! == -> _RING_COUNT `i -> 0 `i 115  ]
[; ;MobileAdv.c: 169: {
"169
{
[; ;MobileAdv.c: 171: r= SIM300Init();
"171
[e = _r ( _SIM300Init ..  ]
[; ;MobileAdv.c: 172: _delay(250000);
"172
[e ( __delay (1 -> -> 250000 `l `ul ]
[; ;MobileAdv.c: 174: if(r != 1)
"174
[e $ ! != -> _r `i -> 1 `i 116  ]
[; ;MobileAdv.c: 175: {
"175
{
[; ;MobileAdv.c: 177: while(r != 1)
"177
[e $U 117  ]
[e :U 118 ]
[; ;MobileAdv.c: 178: {
"178
{
[; ;MobileAdv.c: 179: RB7 = 1;
"179
[e = _RB7 -> -> 1 `i `b ]
[; ;MobileAdv.c: 180: _delay(100000);
"180
[e ( __delay (1 -> -> 100000 `l `ul ]
[; ;MobileAdv.c: 181: RB7 = 0;
"181
[e = _RB7 -> -> 0 `i `b ]
[; ;MobileAdv.c: 183: r= SIM300Init();
"183
[e = _r ( _SIM300Init ..  ]
[; ;MobileAdv.c: 184: _delay(250000);
"184
[e ( __delay (1 -> -> 250000 `l `ul ]
[; ;MobileAdv.c: 185: USARTFlushBuffer();
"185
[e ( _USARTFlushBuffer ..  ]
"186
}
[e :U 117 ]
"177
[e $ != -> _r `i -> 1 `i 118  ]
[e :U 119 ]
[; ;MobileAdv.c: 186: }
[; ;MobileAdv.c: 187: RB7 = 1;
"187
[e = _RB7 -> -> 1 `i `b ]
"188
}
[e :U 116 ]
[; ;MobileAdv.c: 188: }
[; ;MobileAdv.c: 189: USARTFlushBuffer();
"189
[e ( _USARTFlushBuffer ..  ]
"190
}
[e :U 115 ]
"191
}
[e :U 103 ]
"100
[e $ != -> ( _SIM300WaitForValidCall ..  `i -> 1 `i 104  ]
[e :U 105 ]
[; ;MobileAdv.c: 190: }
[; ;MobileAdv.c: 191: }
[; ;MobileAdv.c: 194: if ( MOTOR_FLAG == 0 )
"194
[e $ ! == -> _MOTOR_FLAG `i -> 0 `i 120  ]
[; ;MobileAdv.c: 195: {
"195
{
[; ;MobileAdv.c: 197: if ( phase_check() == 1 )
"197
[e $ ! == -> ( _phase_check ..  `i -> 1 `i 121  ]
[; ;MobileAdv.c: 198: {
"198
{
[; ;MobileAdv.c: 199: _delay(5000000);
"199
[e ( __delay (1 -> -> 5000000 `l `ul ]
[; ;MobileAdv.c: 202: SIM300Cmd("ATH");
"202
[e ( _SIM300Cmd (1 :s 5C ]
[; ;MobileAdv.c: 203: _delay(1000000);
"203
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 206: LP_FLAG = 1;
"206
[e = _LP_FLAG -> -> 1 `i `uc ]
[; ;MobileAdv.c: 207: start();
"207
[e ( _start ..  ]
[; ;MobileAdv.c: 208: MOTOR_FLAG = 1;
"208
[e = _MOTOR_FLAG -> -> 1 `i `uc ]
[; ;MobileAdv.c: 209: REQUIRED_RING_COUNT = 3;
"209
[e = _REQUIRED_RING_COUNT -> -> 3 `i `uc ]
[; ;MobileAdv.c: 210: Dry_Run_Timer = 0;
"210
[e = _Dry_Run_Timer -> -> 0 `i `uc ]
"212
[v _ten_seconds `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 212: unsigned char ten_seconds = 0;
[e = _ten_seconds -> -> 0 `i `uc ]
[; ;MobileAdv.c: 213: while(phase_check() == 1 && ten_seconds < 5)
"213
[e $U 122  ]
[e :U 123 ]
[; ;MobileAdv.c: 214: {
"214
{
[; ;MobileAdv.c: 215: _delay(10000000);
"215
[e ( __delay (1 -> -> 10000000 `l `ul ]
[; ;MobileAdv.c: 216: ten_seconds++;
"216
[e ++ _ten_seconds -> -> 1 `i `uc ]
"217
}
[e :U 122 ]
"213
[e $ && == -> ( _phase_check ..  `i -> 1 `i < -> _ten_seconds `i -> 5 `i 123  ]
[e :U 124 ]
[; ;MobileAdv.c: 217: }
[; ;MobileAdv.c: 218: if(ten_seconds >= 5 && RA5 == 1)
"218
[e $ ! && >= -> _ten_seconds `i -> 5 `i == -> _RA5 `i -> 1 `i 125  ]
[; ;MobileAdv.c: 219: {
"219
{
[; ;MobileAdv.c: 221: SIM300Cmd(phone_number);
"221
[e ( _SIM300Cmd (1 -> &U _phone_number `*Cuc ]
[; ;MobileAdv.c: 222: _delay(30000000);
"222
[e ( __delay (1 -> -> 30000000 `l `ul ]
[; ;MobileAdv.c: 223: SIM300Cmd("ATH");
"223
[e ( _SIM300Cmd (1 :s 6C ]
[; ;MobileAdv.c: 224: _delay(1000000);
"224
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 226: eeprom_write(0x01,1);
"226
[e ( _eeprom_write (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"229
[v _i `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 229: char i = 3;
[e = _i -> -> 3 `i `uc ]
[; ;MobileAdv.c: 230: while(phone_number[i] != ';')
"230
[e $U 126  ]
[e :U 127 ]
[; ;MobileAdv.c: 231: {
"231
{
[; ;MobileAdv.c: 232: eeprom_write(i,phone_number[i]);
"232
[e ( _eeprom_write (2 , _i *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux ]
[; ;MobileAdv.c: 233: i++;
"233
[e ++ _i -> -> 1 `i `uc ]
"234
}
[e :U 126 ]
"230
[e $ != -> *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux `ui -> 59 `ui 127  ]
[e :U 128 ]
[; ;MobileAdv.c: 234: }
[; ;MobileAdv.c: 235: eeprom_write(i,';');
"235
[e ( _eeprom_write (2 , _i -> -> 59 `ui `uc ]
"236
}
[; ;MobileAdv.c: 236: }
[e $U 129  ]
"237
[e :U 125 ]
[; ;MobileAdv.c: 237: else
[; ;MobileAdv.c: 238: {
"238
{
[; ;MobileAdv.c: 239: stop();
"239
[e ( _stop ..  ]
"240
[v _i `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 240: uint8_t i = 3;
[e = _i -> -> 3 `i `uc ]
[; ;MobileAdv.c: 241: while(phone_number[i] != ';')
"241
[e $U 130  ]
[e :U 131 ]
[; ;MobileAdv.c: 242: {
"242
{
[; ;MobileAdv.c: 243: MSG_number[i-3] = phone_number[i];
"243
[e = *U + &U _MSG_number * -> -> - -> _i `i -> 3 `i `ui `ux -> -> # *U &U _MSG_number `ui `ux *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux ]
[; ;MobileAdv.c: 244: i++;
"244
[e ++ _i -> -> 1 `i `uc ]
"245
}
[e :U 130 ]
"241
[e $ != -> *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux `ui -> 59 `ui 131  ]
[e :U 132 ]
[; ;MobileAdv.c: 245: }
[; ;MobileAdv.c: 246: MSG_number[i-3] = '\0';
"246
[e = *U + &U _MSG_number * -> -> - -> _i `i -> 3 `i `ui `ux -> -> # *U &U _MSG_number `ui `ux -> -> 0 `ui `uc ]
"247
[v _ref `uc ~T0 @X0 1 a ]
[v _result `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 247: uint8_t ref,result;
[; ;MobileAdv.c: 248: result=SIM300SendMsg(MSG_number,"STARTER PROBLEM...!",&ref);
"248
[e = _result -> ( _SIM300SendMsg (3 , , -> &U _MSG_number `*Cuc :s 7C &U _ref `uc ]
[; ;MobileAdv.c: 249: _delay(1000000);
"249
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 250: MOTOR_FLAG = 0;
"250
[e = _MOTOR_FLAG -> -> 0 `i `uc ]
[; ;MobileAdv.c: 251: LP_FLAG = 0;
"251
[e = _LP_FLAG -> -> 0 `i `uc ]
"252
}
[e :U 129 ]
"253
}
[; ;MobileAdv.c: 252: }
[; ;MobileAdv.c: 253: }
[e $U 133  ]
"255
[e :U 121 ]
[; ;MobileAdv.c: 255: else
[; ;MobileAdv.c: 256: {
"256
{
[; ;MobileAdv.c: 258: _delay(35000000);
"258
[e ( __delay (1 -> -> 35000000 `l `ul ]
[; ;MobileAdv.c: 260: SIM300Cmd("ATH");
"260
[e ( _SIM300Cmd (1 :s 8C ]
[; ;MobileAdv.c: 261: _delay(1000000);
"261
[e ( __delay (1 -> -> 1000000 `l `ul ]
"262
}
[e :U 133 ]
[; ;MobileAdv.c: 262: }
[; ;MobileAdv.c: 263: continue;
"263
[e $U 100  ]
"264
}
[e :U 120 ]
[; ;MobileAdv.c: 264: }
[; ;MobileAdv.c: 267: if( MOTOR_FLAG == 1 )
"267
[e $ ! == -> _MOTOR_FLAG `i -> 1 `i 134  ]
[; ;MobileAdv.c: 268: {
"268
{
[; ;MobileAdv.c: 269: _delay(6000000);
"269
[e ( __delay (1 -> -> 6000000 `l `ul ]
[; ;MobileAdv.c: 272: SIM300Cmd("ATH");
"272
[e ( _SIM300Cmd (1 :s 9C ]
[; ;MobileAdv.c: 273: _delay(1000000);
"273
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 275: stop();
"275
[e ( _stop ..  ]
[; ;MobileAdv.c: 276: MOTOR_FLAG = 0;
"276
[e = _MOTOR_FLAG -> -> 0 `i `uc ]
[; ;MobileAdv.c: 277: LP_FLAG = 0;
"277
[e = _LP_FLAG -> -> 0 `i `uc ]
[; ;MobileAdv.c: 278: REQUIRED_RING_COUNT = 1;
"278
[e = _REQUIRED_RING_COUNT -> -> 1 `i `uc ]
[; ;MobileAdv.c: 281: _delay(10000000);
"281
[e ( __delay (1 -> -> 10000000 `l `ul ]
[; ;MobileAdv.c: 284: SIM300Cmd(phone_number);
"284
[e ( _SIM300Cmd (1 -> &U _phone_number `*Cuc ]
[; ;MobileAdv.c: 285: _delay(30000000);
"285
[e ( __delay (1 -> -> 30000000 `l `ul ]
[; ;MobileAdv.c: 286: SIM300Cmd("ATH");
"286
[e ( _SIM300Cmd (1 :s 10C ]
[; ;MobileAdv.c: 287: _delay(1000000);
"287
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 289: eeprom_write(0x01,0);
"289
[e ( _eeprom_write (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"292
[v _i `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 292: char i = 3;
[e = _i -> -> 3 `i `uc ]
[; ;MobileAdv.c: 293: while(phone_number[i] != ';')
"293
[e $U 135  ]
[e :U 136 ]
[; ;MobileAdv.c: 294: {
"294
{
[; ;MobileAdv.c: 295: eeprom_write(i,phone_number[i]);
"295
[e ( _eeprom_write (2 , _i *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux ]
[; ;MobileAdv.c: 296: i++;
"296
[e ++ _i -> -> 1 `i `uc ]
"297
}
[e :U 135 ]
"293
[e $ != -> *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux `ui -> 59 `ui 136  ]
[e :U 137 ]
[; ;MobileAdv.c: 297: }
[; ;MobileAdv.c: 298: eeprom_write(i,';');
"298
[e ( _eeprom_write (2 , _i -> -> 59 `ui `uc ]
[; ;MobileAdv.c: 299: continue;
"299
[e $U 100  ]
"300
}
[e :U 134 ]
"301
}
[e :U 100 ]
"97
[e $U 101  ]
[e :U 102 ]
[; ;MobileAdv.c: 300: }
[; ;MobileAdv.c: 301: }
[; ;MobileAdv.c: 302: }
"302
[e :UE 88 ]
}
"303
[v _SIM300WaitForValidCall `(c ~T0 @X0 1 ef ]
"304
{
[; ;MobileAdv.c: 303: int8_t SIM300WaitForValidCall()
[; ;MobileAdv.c: 304: {
[e :U _SIM300WaitForValidCall ]
[f ]
"308
[v _len `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 308: uint8_t len=SIM300RingResponse(15000);
[e = _len -> ( _SIM300RingResponse (1 -> -> 15000 `i `ui `uc ]
[; ;MobileAdv.c: 309: if(len==0)
"309
[e $ ! == -> _len `i -> 0 `i 139  ]
[; ;MobileAdv.c: 310: return -3;
"310
[e ) -> -U -> 3 `i `c ]
[e $UE 138  ]
[e :U 139 ]
[; ;MobileAdv.c: 312: sim300_buffer[len-1]='\0';
"312
[e = *U + &U _sim300_buffer * -> -> - -> _len `i -> 1 `i `ui `ux -> -> # *U &U _sim300_buffer `ui `ux -> -> 0 `ui `uc ]
[; ;MobileAdv.c: 315: if(strnicmp(sim300_buffer+10,"+CLIP:",6)==0)
"315
[e $ ! == ( _strnicmp (3 , , -> + &U _sim300_buffer * -> -> 10 `i `x -> -> # *U &U _sim300_buffer `i `x `*Cuc :s 11C -> -> 6 `i `ui -> 0 `i 140  ]
[; ;MobileAdv.c: 316: {
"316
{
[; ;MobileAdv.c: 319: if(strrichr(sim300_buffer,'X') != (0))
"319
[e $ ! != ( _strrichr (2 , -> &U _sim300_buffer `*Cuc -> -> 88 `ui `i -> -> 0 `i `*uc 141  ]
[; ;MobileAdv.c: 320: {
"320
{
[; ;MobileAdv.c: 321: if(RING_COUNT == REQUIRED_RING_COUNT)
"321
[e $ ! == -> _RING_COUNT `i -> _REQUIRED_RING_COUNT `i 142  ]
[; ;MobileAdv.c: 322: {
"322
{
[v _start `*uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 324: char *start;
[; ;MobileAdv.c: 325: start = strichr(sim300_buffer+10,'"');
"325
[e = _start ( _strichr (2 , -> + &U _sim300_buffer * -> -> 10 `i `x -> -> # *U &U _sim300_buffer `i `x `*Cuc -> -> 34 `ui `i ]
[; ;MobileAdv.c: 326: start++;
"326
[e ++ _start * -> -> 1 `i `x -> -> # *U _start `i `x ]
"327
[v _i `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 327: char i = 3;
[e = _i -> -> 3 `i `uc ]
[; ;MobileAdv.c: 328: while(*start != '"')
"328
[e $U 143  ]
[e :U 144 ]
[; ;MobileAdv.c: 329: {
"329
{
[; ;MobileAdv.c: 330: phone_number[i] = *start;
"330
[e = *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux *U _start ]
[; ;MobileAdv.c: 331: start++;
"331
[e ++ _start * -> -> 1 `i `x -> -> # *U _start `i `x ]
[; ;MobileAdv.c: 332: i++;
"332
[e ++ _i -> -> 1 `i `uc ]
"333
}
[e :U 143 ]
"328
[e $ != -> *U _start `ui -> 34 `ui 144  ]
[e :U 145 ]
[; ;MobileAdv.c: 333: }
[; ;MobileAdv.c: 334: phone_number[i] = ';';
"334
[e = *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux -> -> 59 `ui `uc ]
[; ;MobileAdv.c: 335: i++;
"335
[e ++ _i -> -> 1 `i `uc ]
[; ;MobileAdv.c: 336: phone_number[i] = '\0';
"336
[e = *U + &U _phone_number * -> _i `ux -> -> # *U &U _phone_number `ui `ux -> -> 0 `ui `uc ]
[; ;MobileAdv.c: 337: RING_COUNT = 0;
"337
[e = _RING_COUNT -> -> 0 `i `uc ]
[; ;MobileAdv.c: 338: Timer = 0;
"338
[e = _Timer -> -> 0 `i `uc ]
[; ;MobileAdv.c: 340: USARTFlushBuffer();
"340
[e ( _USARTFlushBuffer ..  ]
[; ;MobileAdv.c: 341: return 1;
"341
[e ) -> -> 1 `i `c ]
[e $UE 138  ]
"342
}
[; ;MobileAdv.c: 342: }
[e $U 146  ]
"343
[e :U 142 ]
[; ;MobileAdv.c: 343: else
[; ;MobileAdv.c: 344: {
"344
{
[; ;MobileAdv.c: 345: RING_COUNT++;
"345
[e ++ _RING_COUNT -> -> 1 `i `uc ]
[; ;MobileAdv.c: 346: Timer = 0;
"346
[e = _Timer -> -> 0 `i `uc ]
[; ;MobileAdv.c: 348: USARTFlushBuffer();
"348
[e ( _USARTFlushBuffer ..  ]
[; ;MobileAdv.c: 349: return -2;
"349
[e ) -> -U -> 2 `i `c ]
[e $UE 138  ]
"350
}
[e :U 146 ]
"351
}
[; ;MobileAdv.c: 350: }
[; ;MobileAdv.c: 351: }
[e $U 147  ]
"352
[e :U 141 ]
[; ;MobileAdv.c: 352: else
[; ;MobileAdv.c: 353: {
"353
{
[; ;MobileAdv.c: 354: WRONG_NUMBER = 1;
"354
[e = _WRONG_NUMBER -> -> 1 `i `uc ]
[; ;MobileAdv.c: 356: USARTFlushBuffer();
"356
[e ( _USARTFlushBuffer ..  ]
[; ;MobileAdv.c: 357: return -2;
"357
[e ) -> -U -> 2 `i `c ]
[e $UE 138  ]
"358
}
[e :U 147 ]
"359
}
[; ;MobileAdv.c: 358: }
[; ;MobileAdv.c: 359: }
[e $U 148  ]
"361
[e :U 140 ]
[; ;MobileAdv.c: 361: else
[; ;MobileAdv.c: 362: {
"362
{
[; ;MobileAdv.c: 365: return -2;
"365
[e ) -> -U -> 2 `i `c ]
[e $UE 138  ]
"366
}
[e :U 148 ]
[; ;MobileAdv.c: 366: }
[; ;MobileAdv.c: 367: }
"367
[e :UE 138 ]
}
"370
[v _SMSCommunication `(v ~T0 @X0 1 ef ]
"371
{
[; ;MobileAdv.c: 370: void SMSCommunication()
[; ;MobileAdv.c: 371: {
[e :U _SMSCommunication ]
[f ]
"372
[v _result `uc ~T0 @X0 1 a ]
"373
[v _len `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 372: uint8_t result;
[; ;MobileAdv.c: 373: char len, i, c;
[; ;MobileAdv.c: 374: result = SIM300WaitForValidMsg();
"374
[e = _result -> ( _SIM300WaitForValidMsg ..  `uc ]
[; ;MobileAdv.c: 375: if(result == 1)
"375
[e $ ! == -> _result `i -> 1 `i 150  ]
[; ;MobileAdv.c: 376: {
"376
{
[; ;MobileAdv.c: 377: if(MOTOR_FLAG == 1)
"377
[e $ ! == -> _MOTOR_FLAG `i -> 1 `i 151  ]
[; ;MobileAdv.c: 378: {
"378
{
[; ;MobileAdv.c: 379: if(LP_FLAG == 1)
"379
[e $ ! == -> _LP_FLAG `i -> 1 `i 152  ]
[; ;MobileAdv.c: 380: {
"380
{
[; ;MobileAdv.c: 381: strcpy(phone_number,"");
"381
[e ( _strcpy (2 , &U _phone_number :s 12C ]
[; ;MobileAdv.c: 382: strcpy(phone_number,"MOTOR ON BY: ");
"382
[e ( _strcpy (2 , &U _phone_number :s 13C ]
[; ;MobileAdv.c: 383: len = strlen(phone_number);
"383
[e = _len -> ( _strlen (1 -> &U _phone_number `*Cuc `uc ]
[; ;MobileAdv.c: 384: i = 3;
"384
[e = _i -> -> 3 `i `uc ]
[; ;MobileAdv.c: 385: c = '+';
"385
[e = _c -> -> 43 `ui `uc ]
[; ;MobileAdv.c: 386: while(c != ';')
"386
[e $U 153  ]
[e :U 154 ]
[; ;MobileAdv.c: 387: {
"387
{
[; ;MobileAdv.c: 388: c = (char)eeprom_read(i);
"388
[e = _c ( _eeprom_read (1 _i ]
[; ;MobileAdv.c: 389: phone_number[len] = c;
"389
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux _c ]
[; ;MobileAdv.c: 390: i++;
"390
[e ++ _i -> -> 1 `i `uc ]
[; ;MobileAdv.c: 391: len++;
"391
[e ++ _len -> -> 1 `i `uc ]
"392
}
[e :U 153 ]
"386
[e $ != -> _c `ui -> 59 `ui 154  ]
[e :U 155 ]
[; ;MobileAdv.c: 392: }
[; ;MobileAdv.c: 393: phone_number[len-1] = '\0';
"393
[e = *U + &U _phone_number * -> -> - -> _len `i -> 1 `i `ui `ux -> -> # *U &U _phone_number `ui `ux -> -> 0 `ui `uc ]
[; ;MobileAdv.c: 394: strcat(phone_number,"\nPOWER OK!");
"394
[e ( _strcat (2 , &U _phone_number :s 14C ]
"395
[v _ref `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 395: uint8_t ref;
[; ;MobileAdv.c: 396: result=SIM300SendMsg(MSG_number,phone_number,&ref);
"396
[e = _result -> ( _SIM300SendMsg (3 , , -> &U _MSG_number `*Cuc -> &U _phone_number `*Cuc &U _ref `uc ]
[; ;MobileAdv.c: 397: _delay(1000000);
"397
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 398: strcpy(phone_number,"");
"398
[e ( _strcpy (2 , &U _phone_number :s 15C ]
[; ;MobileAdv.c: 399: strcpy(phone_number,"ATD");
"399
[e ( _strcpy (2 , &U _phone_number :s 16C ]
[; ;MobileAdv.c: 400: return;
"400
[e $UE 149  ]
"401
}
[e :U 152 ]
[; ;MobileAdv.c: 401: }
[; ;MobileAdv.c: 402: if(LP_FLAG == 0)
"402
[e $ ! == -> _LP_FLAG `i -> 0 `i 156  ]
[; ;MobileAdv.c: 403: {
"403
{
[; ;MobileAdv.c: 404: strcpy(phone_number,"");
"404
[e ( _strcpy (2 , &U _phone_number :s 17C ]
[; ;MobileAdv.c: 405: strcpy(phone_number,"POWER FAIL ON PHASE ");
"405
[e ( _strcpy (2 , &U _phone_number :s 18C ]
[; ;MobileAdv.c: 406: if(RC0 == 0)
"406
[e $ ! == -> _RC0 `i -> 0 `i 157  ]
[; ;MobileAdv.c: 407: {
"407
{
[; ;MobileAdv.c: 408: len = strlen(phone_number);
"408
[e = _len -> ( _strlen (1 -> &U _phone_number `*Cuc `uc ]
[; ;MobileAdv.c: 409: phone_number[len] = '-';
"409
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 45 `ui `uc ]
[; ;MobileAdv.c: 410: len++;
"410
[e ++ _len -> -> 1 `i `uc ]
[; ;MobileAdv.c: 411: phone_number[len] = '1';
"411
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 49 `ui `uc ]
[; ;MobileAdv.c: 412: len++;
"412
[e ++ _len -> -> 1 `i `uc ]
[; ;MobileAdv.c: 413: phone_number[len] = '\0';
"413
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 0 `ui `uc ]
"414
}
[e :U 157 ]
[; ;MobileAdv.c: 414: }
[; ;MobileAdv.c: 415: if(RC1 == 0)
"415
[e $ ! == -> _RC1 `i -> 0 `i 158  ]
[; ;MobileAdv.c: 416: {
"416
{
[; ;MobileAdv.c: 417: len = strlen(phone_number);
"417
[e = _len -> ( _strlen (1 -> &U _phone_number `*Cuc `uc ]
[; ;MobileAdv.c: 418: phone_number[len] = '-';
"418
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 45 `ui `uc ]
[; ;MobileAdv.c: 419: len++;
"419
[e ++ _len -> -> 1 `i `uc ]
[; ;MobileAdv.c: 420: phone_number[len] = '2';
"420
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 50 `ui `uc ]
[; ;MobileAdv.c: 421: len++;
"421
[e ++ _len -> -> 1 `i `uc ]
[; ;MobileAdv.c: 422: phone_number[len] = '\0';
"422
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 0 `ui `uc ]
"423
}
[e :U 158 ]
[; ;MobileAdv.c: 423: }
[; ;MobileAdv.c: 424: if(RC2 == 0)
"424
[e $ ! == -> _RC2 `i -> 0 `i 159  ]
[; ;MobileAdv.c: 425: {
"425
{
[; ;MobileAdv.c: 426: len = strlen(phone_number);
"426
[e = _len -> ( _strlen (1 -> &U _phone_number `*Cuc `uc ]
[; ;MobileAdv.c: 427: phone_number[len] = '-';
"427
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 45 `ui `uc ]
[; ;MobileAdv.c: 428: len++;
"428
[e ++ _len -> -> 1 `i `uc ]
[; ;MobileAdv.c: 429: phone_number[len] = '3';
"429
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 51 `ui `uc ]
[; ;MobileAdv.c: 430: len++;
"430
[e ++ _len -> -> 1 `i `uc ]
[; ;MobileAdv.c: 431: phone_number[len] = '\0';
"431
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux -> -> 0 `ui `uc ]
"432
}
[e :U 159 ]
"433
[v _ref `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 432: }
[; ;MobileAdv.c: 433: uint8_t ref;
[; ;MobileAdv.c: 434: result=SIM300SendMsg(MSG_number,phone_number,&ref);
"434
[e = _result -> ( _SIM300SendMsg (3 , , -> &U _MSG_number `*Cuc -> &U _phone_number `*Cuc &U _ref `uc ]
[; ;MobileAdv.c: 435: _delay(1000000);
"435
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 436: strcpy(phone_number,"");
"436
[e ( _strcpy (2 , &U _phone_number :s 19C ]
[; ;MobileAdv.c: 437: strcpy(phone_number,"ATD");
"437
[e ( _strcpy (2 , &U _phone_number :s 20C ]
[; ;MobileAdv.c: 438: return;
"438
[e $UE 149  ]
"439
}
[e :U 156 ]
"440
}
[e :U 151 ]
[; ;MobileAdv.c: 439: }
[; ;MobileAdv.c: 440: }
[; ;MobileAdv.c: 441: if(MOTOR_FLAG == 0)
"441
[e $ ! == -> _MOTOR_FLAG `i -> 0 `i 160  ]
[; ;MobileAdv.c: 442: {
"442
{
[; ;MobileAdv.c: 443: if(Dry_Run_Timer > 6)
"443
[e $ ! > -> _Dry_Run_Timer `i -> 6 `i 161  ]
[; ;MobileAdv.c: 444: {
"444
{
[; ;MobileAdv.c: 446: strcpy(phone_number,"");
"446
[e ( _strcpy (2 , &U _phone_number :s 21C ]
[; ;MobileAdv.c: 447: strcpy(phone_number,"DRY RUN.");
"447
[e ( _strcpy (2 , &U _phone_number :s 22C ]
"448
}
[; ;MobileAdv.c: 448: }
[e $U 162  ]
"449
[e :U 161 ]
[; ;MobileAdv.c: 449: else
[; ;MobileAdv.c: 450: {
"450
{
[; ;MobileAdv.c: 451: strcpy(phone_number,"");
"451
[e ( _strcpy (2 , &U _phone_number :s 23C ]
[; ;MobileAdv.c: 452: strcpy(phone_number,"MOTOR OFF BY: ");
"452
[e ( _strcpy (2 , &U _phone_number :s 24C ]
[; ;MobileAdv.c: 453: len = strlen(phone_number);
"453
[e = _len -> ( _strlen (1 -> &U _phone_number `*Cuc `uc ]
[; ;MobileAdv.c: 454: i = 3;
"454
[e = _i -> -> 3 `i `uc ]
[; ;MobileAdv.c: 455: c = '+';
"455
[e = _c -> -> 43 `ui `uc ]
[; ;MobileAdv.c: 456: while(c != ';')
"456
[e $U 163  ]
[e :U 164 ]
[; ;MobileAdv.c: 457: {
"457
{
[; ;MobileAdv.c: 458: c = (char)eeprom_read(i);
"458
[e = _c ( _eeprom_read (1 _i ]
[; ;MobileAdv.c: 459: phone_number[len] = c;
"459
[e = *U + &U _phone_number * -> _len `ux -> -> # *U &U _phone_number `ui `ux _c ]
[; ;MobileAdv.c: 460: i++;
"460
[e ++ _i -> -> 1 `i `uc ]
[; ;MobileAdv.c: 461: len++;
"461
[e ++ _len -> -> 1 `i `uc ]
"462
}
[e :U 163 ]
"456
[e $ != -> _c `ui -> 59 `ui 164  ]
[e :U 165 ]
[; ;MobileAdv.c: 462: }
[; ;MobileAdv.c: 463: phone_number[len-1] = '\0';
"463
[e = *U + &U _phone_number * -> -> - -> _len `i -> 1 `i `ui `ux -> -> # *U &U _phone_number `ui `ux -> -> 0 `ui `uc ]
"464
}
[e :U 162 ]
[; ;MobileAdv.c: 464: }
[; ;MobileAdv.c: 466: if(phase_check() == 1)
"466
[e $ ! == -> ( _phase_check ..  `i -> 1 `i 166  ]
[; ;MobileAdv.c: 467: {
"467
{
[; ;MobileAdv.c: 468: strcat(phone_number,"\nPOWER OK!");
"468
[e ( _strcat (2 , &U _phone_number :s 25C ]
"469
}
[; ;MobileAdv.c: 469: }
[e $U 167  ]
"470
[e :U 166 ]
[; ;MobileAdv.c: 470: else
[; ;MobileAdv.c: 471: {
"471
{
[; ;MobileAdv.c: 472: strcat(phone_number,"\nPOWER FAIL!");
"472
[e ( _strcat (2 , &U _phone_number :s 26C ]
"473
}
[e :U 167 ]
"475
[v _ref `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 473: }
[; ;MobileAdv.c: 475: uint8_t ref;
[; ;MobileAdv.c: 476: result=SIM300SendMsg(MSG_number,phone_number,&ref);
"476
[e = _result -> ( _SIM300SendMsg (3 , , -> &U _MSG_number `*Cuc -> &U _phone_number `*Cuc &U _ref `uc ]
[; ;MobileAdv.c: 477: _delay(1000000);
"477
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 478: strcpy(phone_number,"");
"478
[e ( _strcpy (2 , &U _phone_number :s 27C ]
[; ;MobileAdv.c: 479: strcpy(phone_number,"ATD");
"479
[e ( _strcpy (2 , &U _phone_number :s 28C ]
[; ;MobileAdv.c: 480: return;
"480
[e $UE 149  ]
"481
}
[e :U 160 ]
"482
}
[e :U 150 ]
[; ;MobileAdv.c: 481: }
[; ;MobileAdv.c: 482: }
[; ;MobileAdv.c: 483: if(result == 201)
"483
[e $ ! == -> _result `i -> 201 `i 168  ]
[; ;MobileAdv.c: 484: {
"484
{
"485
[v _ref `uc ~T0 @X0 1 a ]
[; ;MobileAdv.c: 485: uint8_t ref;
[; ;MobileAdv.c: 486: result=SIM300SendMsg(MSG_number,"Invalid Keyword",&ref);
"486
[e = _result -> ( _SIM300SendMsg (3 , , -> &U _MSG_number `*Cuc :s 29C &U _ref `uc ]
[; ;MobileAdv.c: 487: _delay(1000000);
"487
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 488: return;
"488
[e $UE 149  ]
"489
}
[e :U 168 ]
[; ;MobileAdv.c: 489: }
[; ;MobileAdv.c: 491: USARTFlushBuffer();
"491
[e ( _USARTFlushBuffer ..  ]
[; ;MobileAdv.c: 492: return;
"492
[e $UE 149  ]
[; ;MobileAdv.c: 493: }
"493
[e :UE 149 ]
}
"495
[v _start `(v ~T0 @X0 1 ef ]
"496
{
[; ;MobileAdv.c: 495: void start()
[; ;MobileAdv.c: 496: {
[e :U _start ]
[f ]
[; ;MobileAdv.c: 498: RC3 = 1;
"498
[e = _RC3 -> -> 1 `i `b ]
[; ;MobileAdv.c: 499: _delay(5000000);
"499
[e ( __delay (1 -> -> 5000000 `l `ul ]
[; ;MobileAdv.c: 500: RC3 = 0;
"500
[e = _RC3 -> -> 0 `i `b ]
[; ;MobileAdv.c: 501: RC5 = 1;
"501
[e = _RC5 -> -> 1 `i `b ]
[; ;MobileAdv.c: 502: _delay(1000000);
"502
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 503: return;
"503
[e $UE 169  ]
[; ;MobileAdv.c: 504: }
"504
[e :UE 169 ]
}
"507
[v _stop `(v ~T0 @X0 1 ef ]
"508
{
[; ;MobileAdv.c: 507: void stop()
[; ;MobileAdv.c: 508: {
[e :U _stop ]
[f ]
[; ;MobileAdv.c: 510: RC4 = 1;
"510
[e = _RC4 -> -> 1 `i `b ]
[; ;MobileAdv.c: 511: _delay(6000000);
"511
[e ( __delay (1 -> -> 6000000 `l `ul ]
[; ;MobileAdv.c: 512: RC4 = 0;
"512
[e = _RC4 -> -> 0 `i `b ]
[; ;MobileAdv.c: 513: RC5 = 0;
"513
[e = _RC5 -> -> 0 `i `b ]
[; ;MobileAdv.c: 514: _delay(1000000);
"514
[e ( __delay (1 -> -> 1000000 `l `ul ]
[; ;MobileAdv.c: 515: return;
"515
[e $UE 170  ]
[; ;MobileAdv.c: 516: }
"516
[e :UE 170 ]
}
"519
[v _phase_check `(uc ~T0 @X0 1 ef ]
"520
{
[; ;MobileAdv.c: 519: char phase_check()
[; ;MobileAdv.c: 520: {
[e :U _phase_check ]
[f ]
[; ;MobileAdv.c: 522: if( RC0 == 1 && RC1 == 1 && RC2 == 1 )
"522
[e $ ! && && == -> _RC0 `i -> 1 `i == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 1 `i 172  ]
[; ;MobileAdv.c: 523: {
"523
{
[; ;MobileAdv.c: 525: return 1;
"525
[e ) -> -> 1 `i `uc ]
[e $UE 171  ]
"526
}
[; ;MobileAdv.c: 526: }
[e $U 173  ]
"527
[e :U 172 ]
[; ;MobileAdv.c: 527: else
[; ;MobileAdv.c: 528: {
"528
{
[; ;MobileAdv.c: 530: return 0;
"530
[e ) -> -> 0 `i `uc ]
[e $UE 171  ]
"531
}
[e :U 173 ]
[; ;MobileAdv.c: 531: }
[; ;MobileAdv.c: 532: }
"532
[e :UE 171 ]
}
[a 29C 73 110 118 97 108 105 100 32 75 101 121 119 111 114 100 0 ]
[a 4C 65 84 72 0 ]
[a 5C 65 84 72 0 ]
[a 6C 65 84 72 0 ]
[a 8C 65 84 72 0 ]
[a 9C 65 84 72 0 ]
[a 10C 65 84 72 0 ]
[a 16C 65 84 68 0 ]
[a 20C 65 84 68 0 ]
[a 28C 65 84 68 0 ]
[a 11C 43 67 76 73 80 58 0 ]
[a 1C 65 84 43 67 76 73 80 61 49 0 ]
[a 2C 65 84 43 67 77 71 70 61 49 0 ]
[a 3C 65 84 43 67 77 71 68 61 49 0 ]
[a 22C 68 82 89 32 82 85 78 46 0 ]
[a 26C 10 80 79 87 69 82 32 70 65 73 76 33 0 ]
[a 14C 10 80 79 87 69 82 32 79 75 33 0 ]
[a 25C 10 80 79 87 69 82 32 79 75 33 0 ]
[a 7C 83 84 65 82 84 69 82 32 80 82 79 66 76 69 77 46 46 46 33 0 ]
[a 18C 80 79 87 69 82 32 70 65 73 76 32 79 78 32 80 72 65 83 69 32 0 ]
[a 13C 77 79 84 79 82 32 79 78 32 66 89 58 32 0 ]
[a 24C 77 79 84 79 82 32 79 70 70 32 66 89 58 32 0 ]
[a 12C 0 ]
[a 15C 0 ]
[a 17C 0 ]
[a 19C 0 ]
[a 21C 0 ]
[a 23C 0 ]
[a 27C 0 ]
