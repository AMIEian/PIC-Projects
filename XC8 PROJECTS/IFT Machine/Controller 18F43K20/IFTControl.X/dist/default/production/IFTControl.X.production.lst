

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 03 15:41:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F43K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 05/05/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F43K20 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	nvCOMRAM
    65  000008                     __pnvCOMRAM:
    66                           	callstack 0
    67  000008                     _TMR3_InterruptHandler:
    68                           	callstack 0
    69  000008                     	ds	2
    70  00000A                     _timer3ReloadVal:
    71                           	callstack 0
    72  00000A                     	ds	2
    73  0000                     _TMR3	set	4018
    74  0000                     _T2CONbits	set	4042
    75  0000                     _T2CON	set	4042
    76  0000                     _PIR1bits	set	3998
    77  0000                     _TMR2	set	4044
    78  0000                     _PR2	set	4043
    79  0000                     _CCPR2H	set	4028
    80  0000                     _CCPR2L	set	4027
    81  0000                     _CCP2CON	set	4026
    82  0000                     _T3CONbits	set	4017
    83  0000                     _T3CON	set	4017
    84  0000                     _TMR3L	set	4018
    85  0000                     _TMR3H	set	4019
    86  0000                     _LATCbits	set	3979
    87  0000                     _INTCON2bits	set	4081
    88  0000                     _WPUB	set	3964
    89  0000                     _ANSELH	set	3967
    90  0000                     _ANSEL	set	3966
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISC	set	3988
    93  0000                     _TRISB	set	3987
    94  0000                     _TRISA	set	3986
    95  0000                     _TRISE	set	3990
    96  0000                     _LATC	set	3979
    97  0000                     _LATB	set	3978
    98  0000                     _LATA	set	3977
    99  0000                     _LATD	set	3980
   100  0000                     _LATE	set	3981
   101  0000                     _PIR2bits	set	4001
   102  0000                     _PIE2bits	set	4000
   103  0000                     _INTCONbits	set	4082
   104  0000                     _RCONbits	set	4048
   105  0000                     _OSCTUNE	set	3995
   106  0000                     _OSCCON	set	4051
   107                           
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111  000170                     __pcinit:
   112                           	callstack 0
   113  000170                     start_initialization:
   114                           	callstack 0
   115  000170                     __initialization:
   116                           	callstack 0
   117  000170                     end_of_initialization:
   118                           	callstack 0
   119  000170                     __end_of__initialization:
   120                           	callstack 0
   121  000170  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   122  000172  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   123  000174  0E00               	movlw	low (__Lmediumconst shr (0+16))
   124  000176  6EF8               	movwf	tblptru,c
   125  000178  0100               	movlb	0
   126  00017A  EFA7  F000         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	cstackCOMRAM
   129  000001                     __pcstackCOMRAM:
   130                           	callstack 0
   131  000001                     TMR3_WriteTimer@timerVal:
   132                           	callstack 0
   133                           
   134                           ; 2 bytes @ 0x0
   135  000001                     	ds	2
   136  000003                     ??_TMR3_ISR:
   137  000003                     
   138                           ; 1 bytes @ 0x2
   139  000003                     	ds	1
   140  000004                     ??_INTERRUPT_InterruptManager:
   141                           
   142                           ; 1 bytes @ 0x3
   143  000004                     	ds	2
   144  000006                     TMR3_SetInterruptHandler@InterruptHandler:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0x5
   148  000006                     	ds	2
   149  000008                     
   150                           ; 1 bytes @ 0x7
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 49 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2, status,0, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1
   170 ;;      Params:         0       0       0
   171 ;;      Locals:         0       0       0
   172 ;;      Temps:          0       0       0
   173 ;;      Totals:         0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels required when called: 7
   176 ;; This function calls:
   177 ;;		_SYSTEM_Initialize
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  00014E                     __ptext0:
   185                           	callstack 0
   186  00014E                     _main:
   187                           	callstack 24
   188  00014E                     
   189                           ;main.c: 52:     SYSTEM_Initialize();
   190  00014E  EC9A  F000         	call	_SYSTEM_Initialize	;wreg free
   191  000152                     
   192                           ;main.c: 59:     (INTCONbits.GIE = 1);
   193  000152  8EF2               	bsf	242,7,c	;volatile
   194  000154                     
   195                           ;main.c: 65:     (INTCONbits.PEIE = 1);
   196  000154  8CF2               	bsf	242,6,c	;volatile
   197  000156  848B               	bsf	139,2,c	;volatile
   198  000158                     l93:
   199  000158  EFAC  F000         	goto	l93
   200  00015C  EF26  F000         	goto	start
   201  000160                     __end_of_main:
   202                           	callstack 0
   203                           
   204 ;; *************** function _SYSTEM_Initialize *****************
   205 ;; Defined at:
   206 ;;		line 50 in file "mcc_generated_files/mcc.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1
   220 ;;      Params:         0       0       0
   221 ;;      Locals:         0       0       0
   222 ;;      Temps:          0       0       0
   223 ;;      Totals:         0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels used: 1
   226 ;; Hardware stack levels required when called: 6
   227 ;; This function calls:
   228 ;;		_INTERRUPT_Initialize
   229 ;;		_OSCILLATOR_Initialize
   230 ;;		_PIN_MANAGER_Initialize
   231 ;;		_PWM2_Initialize
   232 ;;		_TMR2_Initialize
   233 ;;		_TMR3_Initialize
   234 ;; This function is called by:
   235 ;;		_main
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text1
   240  000134                     __ptext1:
   241                           	callstack 0
   242  000134                     _SYSTEM_Initialize:
   243                           	callstack 24
   244  000134                     
   245                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   246  000134  ECD0  F000         	call	_INTERRUPT_Initialize	;wreg free
   247  000138                     
   248                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   249  000138  EC44  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   250  00013C                     
   251                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   252  00013C  ECCB  F000         	call	_OSCILLATOR_Initialize	;wreg free
   253  000140                     
   254                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
   255  000140  EC87  F000         	call	_TMR3_Initialize	;wreg free
   256  000144                     
   257                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
   258  000144  ECB0  F000         	call	_TMR2_Initialize	;wreg free
   259  000148                     
   260                           ;mcc_generated_files/mcc.c: 58:     PWM2_Initialize();
   261  000148  ECBF  F000         	call	_PWM2_Initialize	;wreg free
   262  00014C  0012               	return		;funcret
   263  00014E                     __end_of_SYSTEM_Initialize:
   264                           	callstack 0
   265                           
   266 ;; *************** function _TMR3_Initialize *****************
   267 ;; Defined at:
   268 ;;		line 64 in file "mcc_generated_files/tmr3.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1
   282 ;;      Params:         0       0       0
   283 ;;      Locals:         0       0       0
   284 ;;      Temps:          0       0       0
   285 ;;      Totals:         0       0       0
   286 ;;Total ram usage:        0 bytes
   287 ;; Hardware stack levels used: 1
   288 ;; Hardware stack levels required when called: 5
   289 ;; This function calls:
   290 ;;		_TMR3_SetInterruptHandler
   291 ;; This function is called by:
   292 ;;		_SYSTEM_Initialize
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text2
   297  00010E                     __ptext2:
   298                           	callstack 0
   299  00010E                     _TMR3_Initialize:
   300                           	callstack 24
   301  00010E                     
   302                           ;mcc_generated_files/tmr3.c: 69:   TMR3H = 0x9E;
   303  00010E  0E9E               	movlw	158
   304  000110  6EB3               	movwf	179,c	;volatile
   305                           
   306                           ;mcc_generated_files/tmr3.c: 72:   TMR3L = 0x58;
   307  000112  0E58               	movlw	88
   308  000114  6EB2               	movwf	178,c	;volatile
   309  000116                     
   310                           ;mcc_generated_files/tmr3.c: 75:     timer3ReloadVal=TMR3;
   311  000116  CFB2 F00A          	movff	4018,_timer3ReloadVal	;volatile
   312  00011A  CFB3 F00B          	movff	4019,_timer3ReloadVal+1	;volatile
   313  00011E                     
   314                           ;mcc_generated_files/tmr3.c: 78:     PIR2bits.TMR3IF = 0;
   315  00011E  92A1               	bcf	161,1,c	;volatile
   316  000120                     
   317                           ;mcc_generated_files/tmr3.c: 81:     PIE2bits.TMR3IE = 1;
   318  000120  82A0               	bsf	160,1,c	;volatile
   319  000122                     
   320                           ;mcc_generated_files/tmr3.c: 84:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
   321  000122  0EA4               	movlw	low _TMR3_DefaultInterruptHandler
   322  000124  6E06               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
   323  000126  0E01               	movlw	high _TMR3_DefaultInterruptHandler
   324  000128  6E07               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
   325  00012A  ECC6  F000         	call	_TMR3_SetInterruptHandler	;wreg free
   326  00012E                     
   327                           ;mcc_generated_files/tmr3.c: 87:     T3CON = 0x31;
   328  00012E  0E31               	movlw	49
   329  000130  6EB1               	movwf	177,c	;volatile
   330  000132  0012               	return		;funcret
   331  000134                     __end_of_TMR3_Initialize:
   332                           	callstack 0
   333                           
   334 ;; *************** function _TMR3_SetInterruptHandler *****************
   335 ;; Defined at:
   336 ;;		line 169 in file "mcc_generated_files/tmr3.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
   339 ;;		 -> TMR3_DefaultInterruptHandler(1), 
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1
   351 ;;      Params:         2       0       0
   352 ;;      Locals:         0       0       0
   353 ;;      Temps:          0       0       0
   354 ;;      Totals:         2       0       0
   355 ;;Total ram usage:        2 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; Hardware stack levels required when called: 4
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_TMR3_Initialize
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text3
   366  00018C                     __ptext3:
   367                           	callstack 0
   368  00018C                     _TMR3_SetInterruptHandler:
   369                           	callstack 24
   370  00018C                     
   371                           ;mcc_generated_files/tmr3.c: 170:     TMR3_InterruptHandler = InterruptHandler;
   372  00018C  C006  F008         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
   373  000190  C007  F009         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
   374  000194  0012               	return		;funcret
   375  000196                     __end_of_TMR3_SetInterruptHandler:
   376                           	callstack 0
   377                           
   378 ;; *************** function _TMR2_Initialize *****************
   379 ;; Defined at:
   380 ;;		line 62 in file "mcc_generated_files/tmr2.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1
   394 ;;      Params:         0       0       0
   395 ;;      Locals:         0       0       0
   396 ;;      Temps:          0       0       0
   397 ;;      Totals:         0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 4
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_SYSTEM_Initialize
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text4
   409  000160                     __ptext4:
   410                           	callstack 0
   411  000160                     _TMR2_Initialize:
   412                           	callstack 25
   413  000160                     
   414                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xF9;
   415  000160  0EF9               	movlw	249
   416  000162  6ECB               	movwf	203,c	;volatile
   417                           
   418                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
   419  000164  0E00               	movlw	0
   420  000166  6ECC               	movwf	204,c	;volatile
   421  000168                     
   422                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
   423  000168  929E               	bcf	158,1,c	;volatile
   424                           
   425                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
   426  00016A  0E05               	movlw	5
   427  00016C  6ECA               	movwf	202,c	;volatile
   428  00016E  0012               	return		;funcret
   429  000170                     __end_of_TMR2_Initialize:
   430                           	callstack 0
   431                           
   432 ;; *************** function _PWM2_Initialize *****************
   433 ;; Defined at:
   434 ;;		line 64 in file "mcc_generated_files/pwm2.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1
   448 ;;      Params:         0       0       0
   449 ;;      Locals:         0       0       0
   450 ;;      Temps:          0       0       0
   451 ;;      Totals:         0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 4
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_SYSTEM_Initialize
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text5
   463  00017E                     __ptext5:
   464                           	callstack 0
   465  00017E                     _PWM2_Initialize:
   466                           	callstack 25
   467  00017E                     
   468                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x0C;
   469  00017E  0E0C               	movlw	12
   470  000180  6EBA               	movwf	186,c	;volatile
   471                           
   472                           ;mcc_generated_files/pwm2.c: 72:  CCPR2L = 0x00;
   473  000182  0E00               	movlw	0
   474  000184  6EBB               	movwf	187,c	;volatile
   475                           
   476                           ;mcc_generated_files/pwm2.c: 75:  CCPR2H = 0x00;
   477  000186  0E00               	movlw	0
   478  000188  6EBC               	movwf	188,c	;volatile
   479  00018A  0012               	return		;funcret
   480  00018C                     __end_of_PWM2_Initialize:
   481                           	callstack 0
   482                           
   483 ;; *************** function _PIN_MANAGER_Initialize *****************
   484 ;; Defined at:
   485 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1
   499 ;;      Params:         0       0       0
   500 ;;      Locals:         0       0       0
   501 ;;      Temps:          0       0       0
   502 ;;      Totals:         0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 4
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_SYSTEM_Initialize
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text6
   514  000088                     __ptext6:
   515                           	callstack 0
   516  000088                     _PIN_MANAGER_Initialize:
   517                           	callstack 25
   518  000088                     
   519                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   520  000088  0E00               	movlw	0
   521  00008A  6E8D               	movwf	141,c	;volatile
   522                           
   523                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   524  00008C  0E00               	movlw	0
   525  00008E  6E8C               	movwf	140,c	;volatile
   526                           
   527                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   528  000090  0E00               	movlw	0
   529  000092  6E89               	movwf	137,c	;volatile
   530                           
   531                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   532  000094  0E00               	movlw	0
   533  000096  6E8A               	movwf	138,c	;volatile
   534                           
   535                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   536  000098  0E00               	movlw	0
   537  00009A  6E8B               	movwf	139,c	;volatile
   538                           
   539                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   540  00009C  0E07               	movlw	7
   541  00009E  6E96               	movwf	150,c	;volatile
   542  0000A0                     
   543                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   544  0000A0  6892               	setf	146,c	;volatile
   545  0000A2                     
   546                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   547  0000A2  6893               	setf	147,c	;volatile
   548                           
   549                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xF9;
   550  0000A4  0EF9               	movlw	249
   551  0000A6  6E94               	movwf	148,c	;volatile
   552  0000A8                     
   553                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   554  0000A8  6895               	setf	149,c	;volatile
   555  0000AA                     
   556                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   557  0000AA  687E               	setf	126,c	;volatile
   558                           
   559                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   560  0000AC  0E1F               	movlw	31
   561  0000AE  6E7F               	movwf	127,c	;volatile
   562                           
   563                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   564  0000B0  0E00               	movlw	0
   565  0000B2  6E7C               	movwf	124,c	;volatile
   566  0000B4                     
   567                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   568  0000B4  8EF1               	bsf	241,7,c	;volatile
   569  0000B6  0012               	return		;funcret
   570  0000B8                     __end_of_PIN_MANAGER_Initialize:
   571                           	callstack 0
   572                           
   573 ;; *************** function _OSCILLATOR_Initialize *****************
   574 ;; Defined at:
   575 ;;		line 61 in file "mcc_generated_files/mcc.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1
   589 ;;      Params:         0       0       0
   590 ;;      Locals:         0       0       0
   591 ;;      Temps:          0       0       0
   592 ;;      Totals:         0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 4
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_SYSTEM_Initialize
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text7
   604  000196                     __ptext7:
   605                           	callstack 0
   606  000196                     _OSCILLATOR_Initialize:
   607                           	callstack 25
   608  000196                     
   609                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x72;
   610  000196  0E72               	movlw	114
   611  000198  6ED3               	movwf	211,c	;volatile
   612                           
   613                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
   614  00019A  0E00               	movlw	0
   615  00019C  6E9B               	movwf	155,c	;volatile
   616  00019E  0012               	return		;funcret
   617  0001A0                     __end_of_OSCILLATOR_Initialize:
   618                           	callstack 0
   619                           
   620 ;; *************** function _INTERRUPT_Initialize *****************
   621 ;; Defined at:
   622 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		None
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1
   636 ;;      Params:         0       0       0
   637 ;;      Locals:         0       0       0
   638 ;;      Temps:          0       0       0
   639 ;;      Totals:         0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used: 1
   642 ;; Hardware stack levels required when called: 4
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_SYSTEM_Initialize
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text8
   651  0001A0                     __ptext8:
   652                           	callstack 0
   653  0001A0                     _INTERRUPT_Initialize:
   654                           	callstack 25
   655  0001A0                     
   656                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   657  0001A0  9ED0               	bcf	208,7,c	;volatile
   658  0001A2  0012               	return		;funcret
   659  0001A4                     __end_of_INTERRUPT_Initialize:
   660                           	callstack 0
   661                           
   662 ;; *************** function _INTERRUPT_InterruptManager *****************
   663 ;; Defined at:
   664 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1
   678 ;;      Params:         0       0       0
   679 ;;      Locals:         0       0       0
   680 ;;      Temps:          2       0       0
   681 ;;      Totals:         2       0       0
   682 ;;Total ram usage:        2 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 3
   685 ;; This function calls:
   686 ;;		_TMR3_ISR
   687 ;; This function is called by:
   688 ;;		Interrupt level 2
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	intcode
   693  000008                     __pintcode:
   694                           	callstack 0
   695  000008                     _INTERRUPT_InterruptManager:
   696                           	callstack 24
   697                           
   698                           ;incstack = 0
   699  000008  820C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   700  00000A  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManager
   701  00000E  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   702  000012                     
   703                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
   704  000012  ACF2               	btfss	242,6,c	;volatile
   705  000014  EF0E  F000         	goto	i2u12_41
   706  000018  EF10  F000         	goto	i2u12_40
   707  00001C                     i2u12_41:
   708  00001C  EF20  F000         	goto	i2l44
   709  000020                     i2u12_40:
   710  000020                     
   711                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
   712  000020  A2A0               	btfss	160,1,c	;volatile
   713  000022  EF15  F000         	goto	i2u13_41
   714  000026  EF17  F000         	goto	i2u13_40
   715  00002A                     i2u13_41:
   716  00002A  EF20  F000         	goto	i2l44
   717  00002E                     i2u13_40:
   718  00002E  A2A1               	btfss	161,1,c	;volatile
   719  000030  EF1C  F000         	goto	i2u14_41
   720  000034  EF1E  F000         	goto	i2u14_40
   721  000038                     i2u14_41:
   722  000038  EF20  F000         	goto	i2l44
   723  00003C                     i2u14_40:
   724  00003C                     
   725                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR3_ISR();
   726  00003C  EC28  F000         	call	_TMR3_ISR	;wreg free
   727  000040                     i2l44:
   728  000040  C005  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   729  000044  C004  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   730  000048  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   731  00004A  0011               	retfie		f
   732  00004C                     __end_of_INTERRUPT_InterruptManager:
   733                           	callstack 0
   734                           
   735 ;; *************** function _TMR3_ISR *****************
   736 ;; Defined at:
   737 ;;		line 145 in file "mcc_generated_files/tmr3.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1
   751 ;;      Params:         0       0       0
   752 ;;      Locals:         0       0       0
   753 ;;      Temps:          1       0       0
   754 ;;      Totals:         1       0       0
   755 ;;Total ram usage:        1 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 2
   758 ;; This function calls:
   759 ;;		_TMR3_CallBack
   760 ;;		_TMR3_WriteTimer
   761 ;; This function is called by:
   762 ;;		_INTERRUPT_InterruptManager
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text10
   767  000050                     __ptext10:
   768                           	callstack 0
   769  000050                     _TMR3_ISR:
   770                           	callstack 24
   771  000050  B48B               	btfsc	139,2,c	;volatile
   772  000052  EF2D  F000         	goto	i2u11_41
   773  000056  EF30  F000         	goto	i2u11_40
   774  00005A                     i2u11_41:
   775  00005A  0E01               	movlw	1
   776  00005C  EF31  F000         	goto	i2u11_46
   777  000060                     i2u11_40:
   778  000060  0E00               	movlw	0
   779  000062                     i2u11_46:
   780  000062  0AFF               	xorlw	255
   781  000064  6E03               	movwf	??_TMR3_ISR^0,c
   782  000066  4603               	rlncf	??_TMR3_ISR^0,f,c
   783  000068  4603               	rlncf	??_TMR3_ISR^0,f,c
   784  00006A  508B               	movf	139,w,c	;volatile
   785  00006C  1803               	xorwf	??_TMR3_ISR^0,w,c
   786  00006E  0BFB               	andlw	-5
   787  000070  1803               	xorwf	??_TMR3_ISR^0,w,c
   788  000072  6E8B               	movwf	139,c	;volatile
   789  000074                     
   790                           ;mcc_generated_files/tmr3.c: 151:     PIR2bits.TMR3IF = 0;
   791  000074  92A1               	bcf	161,1,c	;volatile
   792  000076                     
   793                           ;mcc_generated_files/tmr3.c: 152:     TMR3_WriteTimer(timer3ReloadVal);
   794  000076  C00A  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
   795  00007A  C00B  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
   796  00007E  EC73  F000         	call	_TMR3_WriteTimer	;wreg free
   797  000082                     
   798                           ;mcc_generated_files/tmr3.c: 156:     TMR3_CallBack();
   799  000082  EC5C  F000         	call	_TMR3_CallBack	;wreg free
   800  000086  0012               	return		;funcret
   801  000088                     __end_of_TMR3_ISR:
   802                           	callstack 0
   803                           
   804 ;; *************** function _TMR3_WriteTimer *****************
   805 ;; Defined at:
   806 ;;		line 118 in file "mcc_generated_files/tmr3.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  timerVal        2    0[COMRAM] unsigned short 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1
   820 ;;      Params:         2       0       0
   821 ;;      Locals:         0       0       0
   822 ;;      Temps:          0       0       0
   823 ;;      Totals:         2       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_TMR3_ISR
   830 ;;		_TMR3_Reload
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text11
   835  0000E6                     __ptext11:
   836                           	callstack 0
   837  0000E6                     _TMR3_WriteTimer:
   838                           	callstack 25
   839  0000E6                     
   840                           ;mcc_generated_files/tmr3.c: 118: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 119: {;mcc_generated_files/tmr3.c: 120:     if (T3CONbits.nT3SYNC == 1)
   841  0000E6  A4B1               	btfss	177,2,c	;volatile
   842  0000E8  EF78  F000         	goto	i2u10_41
   843  0000EC  EF7A  F000         	goto	i2u10_40
   844  0000F0                     i2u10_41:
   845  0000F0  EF82  F000         	goto	i2l1021
   846  0000F4                     i2u10_40:
   847  0000F4                     
   848                           ;mcc_generated_files/tmr3.c: 121:     {;mcc_generated_files/tmr3.c: 123:         T3CONbi
      +                          ts.TMR3ON = 0;
   849  0000F4  90B1               	bcf	177,0,c	;volatile
   850  0000F6                     
   851                           ;mcc_generated_files/tmr3.c: 126:         TMR3H = (uint8_t)(timerVal >> 8);
   852  0000F6  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
   853  0000F8  6EB3               	movwf	179,c	;volatile
   854  0000FA                     
   855                           ;mcc_generated_files/tmr3.c: 127:         TMR3L = (uint8_t)timerVal;
   856  0000FA  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
   857  0000FE                     
   858                           ;mcc_generated_files/tmr3.c: 130:         T3CONbits.TMR3ON =1;
   859  0000FE  80B1               	bsf	177,0,c	;volatile
   860                           
   861                           ;mcc_generated_files/tmr3.c: 131:     }
   862  000100  EF86  F000         	goto	i2l139
   863  000104                     i2l1021:
   864                           
   865                           ;mcc_generated_files/tmr3.c: 133:     {;mcc_generated_files/tmr3.c: 135:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
   866  000104  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
   867  000106  6EB3               	movwf	179,c	;volatile
   868  000108                     
   869                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = (uint8_t)timerVal;
   870  000108  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
   871  00010C                     i2l139:
   872  00010C  0012               	return		;funcret
   873  00010E                     __end_of_TMR3_WriteTimer:
   874                           	callstack 0
   875                           
   876 ;; *************** function _TMR3_CallBack *****************
   877 ;; Defined at:
   878 ;;		line 159 in file "mcc_generated_files/tmr3.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1
   892 ;;      Params:         0       0       0
   893 ;;      Locals:         0       0       0
   894 ;;      Temps:          0       0       0
   895 ;;      Totals:         0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 1
   899 ;; This function calls:
   900 ;;		Absolute function
   901 ;;		_TMR3_DefaultInterruptHandler
   902 ;; This function is called by:
   903 ;;		_TMR3_ISR
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text12
   908  0000B8                     __ptext12:
   909                           	callstack 0
   910  0000B8                     _TMR3_CallBack:
   911                           	callstack 24
   912  0000B8                     
   913                           ;mcc_generated_files/tmr3.c: 163:     if(TMR3_InterruptHandler)
   914  0000B8  5008               	movf	_TMR3_InterruptHandler^0,w,c
   915  0000BA  1009               	iorwf	(_TMR3_InterruptHandler+1)^0,w,c
   916  0000BC  B4D8               	btfsc	status,2,c
   917  0000BE  EF63  F000         	goto	i2u2_41
   918  0000C2  EF65  F000         	goto	i2u2_40
   919  0000C6                     i2u2_41:
   920  0000C6  EF72  F000         	goto	i2l151
   921  0000CA                     i2u2_40:
   922  0000CA                     
   923                           ;mcc_generated_files/tmr3.c: 164:     {;mcc_generated_files/tmr3.c: 165:         TMR3_In
      +                          terruptHandler();
   924  0000CA  D802               	call	i2u3_48
   925  0000CC  EF72  F000         	goto	i2u3_49
   926  0000D0                     i2u3_48:
   927  0000D0  0005               	push	
   928  0000D2  6EFA               	movwf	pclath,c
   929  0000D4  5008               	movf	_TMR3_InterruptHandler^0,w,c
   930  0000D6  6EFD               	movwf	tosl,c
   931  0000D8  5009               	movf	(_TMR3_InterruptHandler+1)^0,w,c
   932  0000DA  6EFE               	movwf	tosh,c
   933  0000DC  50F8               	movf	tblptru,w,c
   934  0000DE  6EFF               	movwf	tosu,c
   935  0000E0  50FA               	movf	pclath,w,c
   936  0000E2  0012               	return		;indir
   937  0000E4                     i2u3_49:
   938  0000E4                     i2l151:
   939  0000E4  0012               	return		;funcret
   940  0000E6                     __end_of_TMR3_CallBack:
   941                           	callstack 0
   942                           
   943 ;; *************** function _TMR3_DefaultInterruptHandler *****************
   944 ;; Defined at:
   945 ;;		line 173 in file "mcc_generated_files/tmr3.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		None
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1
   959 ;;      Params:         0       0       0
   960 ;;      Locals:         0       0       0
   961 ;;      Temps:          0       0       0
   962 ;;      Totals:         0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_TMR3_Initialize
   969 ;;		_TMR3_CallBack
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text13
   974  0001A4                     __ptext13:
   975                           	callstack 0
   976  0001A4                     _TMR3_DefaultInterruptHandler:
   977                           	callstack 24
   978  0001A4  0012               	return		;funcret
   979  0001A6                     __end_of_TMR3_DefaultInterruptHandler:
   980                           	callstack 0
   981  0000                     
   982                           	psect	text14
   983  000000                     __ptext14:
   984                           	callstack 0
   985  000000                     
   986                           	psect	rparam
   987  0000                     
   988                           	psect	temp
   989  00000C                     btemp:
   990                           	callstack 0
   991  00000C                     	ds	1
   992  0000                     int$flags	set	btemp
   993  0000                     wtemp8	set	btemp+1
   994  0000                     ttemp5	set	btemp+1
   995  0000                     ttemp6	set	btemp+4
   996  0000                     ttemp7	set	btemp+8
   997                           
   998                           	psect	idloc
   999                           
  1000                           ;Config register IDLOC0 @ 0x200000
  1001                           ;	unspecified, using default values
  1002  200000                     	org	2097152
  1003  200000  FF                 	db	255
  1004                           
  1005                           ;Config register IDLOC1 @ 0x200001
  1006                           ;	unspecified, using default values
  1007  200001                     	org	2097153
  1008  200001  FF                 	db	255
  1009                           
  1010                           ;Config register IDLOC2 @ 0x200002
  1011                           ;	unspecified, using default values
  1012  200002                     	org	2097154
  1013  200002  FF                 	db	255
  1014                           
  1015                           ;Config register IDLOC3 @ 0x200003
  1016                           ;	unspecified, using default values
  1017  200003                     	org	2097155
  1018  200003  FF                 	db	255
  1019                           
  1020                           ;Config register IDLOC4 @ 0x200004
  1021                           ;	unspecified, using default values
  1022  200004                     	org	2097156
  1023  200004  FF                 	db	255
  1024                           
  1025                           ;Config register IDLOC5 @ 0x200005
  1026                           ;	unspecified, using default values
  1027  200005                     	org	2097157
  1028  200005  FF                 	db	255
  1029                           
  1030                           ;Config register IDLOC6 @ 0x200006
  1031                           ;	unspecified, using default values
  1032  200006                     	org	2097158
  1033  200006  FF                 	db	255
  1034                           
  1035                           ;Config register IDLOC7 @ 0x200007
  1036                           ;	unspecified, using default values
  1037  200007                     	org	2097159
  1038  200007  FF                 	db	255
  1039                           
  1040                           	psect	config
  1041                           
  1042                           ; Padding undefined space
  1043  300000                     	org	3145728
  1044  300000  FF                 	db	255
  1045                           
  1046                           ;Config register CONFIG1H @ 0x300001
  1047                           ;	Oscillator Selection bits
  1048                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1049                           ;	Fail-Safe Clock Monitor Enable bit
  1050                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1051                           ;	Internal/External Oscillator Switchover bit
  1052                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1053  300001                     	org	3145729
  1054  300001  08                 	db	8
  1055                           
  1056                           ;Config register CONFIG2L @ 0x300002
  1057                           ;	Power-up Timer Enable bit
  1058                           ;	PWRT = OFF, PWRT disabled
  1059                           ;	Brown-out Reset Enable bits
  1060                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1061                           ;	Brown Out Reset Voltage bits
  1062                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1063  300002                     	org	3145730
  1064  300002  19                 	db	25
  1065                           
  1066                           ;Config register CONFIG2H @ 0x300003
  1067                           ;	Watchdog Timer Enable bit
  1068                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1069                           ;	Watchdog Timer Postscale Select bits
  1070                           ;	WDTPS = 32768, 1:32768
  1071  300003                     	org	3145731
  1072  300003  1E                 	db	30
  1073                           
  1074                           ; Padding undefined space
  1075  300004                     	org	3145732
  1076  300004  FF                 	db	255
  1077                           
  1078                           ;Config register CONFIG3H @ 0x300005
  1079                           ;	CCP2 MUX bit
  1080                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1081                           ;	PORTB A/D Enable bit
  1082                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1083                           ;	Low-Power Timer1 Oscillator Enable bit
  1084                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1085                           ;	HFINTOSC Fast Start-up
  1086                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1087                           ;	MCLR Pin Enable bit
  1088                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1089  300005                     	org	3145733
  1090  300005  09                 	db	9
  1091                           
  1092                           ;Config register CONFIG4L @ 0x300006
  1093                           ;	Stack Full/Underflow Reset Enable bit
  1094                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1095                           ;	Single-Supply ICSP Enable bit
  1096                           ;	LVP = OFF, Single-Supply ICSP disabled
  1097                           ;	Extended Instruction Set Enable bit
  1098                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1099                           ;	Background Debugger Enable bit
  1100                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1101  300006                     	org	3145734
  1102  300006  81                 	db	129
  1103                           
  1104                           ; Padding undefined space
  1105  300007                     	org	3145735
  1106  300007  FF                 	db	255
  1107                           
  1108                           ;Config register CONFIG5L @ 0x300008
  1109                           ;	Code Protection Block 0
  1110                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1111                           ;	Code Protection Block 1
  1112                           ;	CP1 = OFF, Block 1 (001000-001FFFh) not code-protected
  1113  300008                     	org	3145736
  1114  300008  0F                 	db	15
  1115                           
  1116                           ;Config register CONFIG5H @ 0x300009
  1117                           ;	Boot Block Code Protection bit
  1118                           ;	CPB = OFF, Boot block (000000-0001FFh) not code-protected
  1119                           ;	Data EEPROM Code Protection bit
  1120                           ;	CPD = OFF, Data EEPROM not code-protected
  1121  300009                     	org	3145737
  1122  300009  C0                 	db	192
  1123                           
  1124                           ;Config register CONFIG6L @ 0x30000A
  1125                           ;	Write Protection Block 0
  1126                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1127                           ;	Write Protection Block 1
  1128                           ;	WRT1 = OFF, Block 1 (001000-001FFFh) not write-protected
  1129  30000A                     	org	3145738
  1130  30000A  0F                 	db	15
  1131                           
  1132                           ;Config register CONFIG6H @ 0x30000B
  1133                           ;	Configuration Register Write Protection bit
  1134                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1135                           ;	Boot Block Write Protection bit
  1136                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1137                           ;	Data EEPROM Write Protection bit
  1138                           ;	WRTD = OFF, Data EEPROM not write-protected
  1139  30000B                     	org	3145739
  1140  30000B  E0                 	db	224
  1141                           
  1142                           ;Config register CONFIG7L @ 0x30000C
  1143                           ;	Table Read Protection Block 0
  1144                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1145                           ;	Table Read Protection Block 1
  1146                           ;	EBTR1 = OFF, Block 1 (001000-001FFFh) not protected from table reads executed in other
      +                           blocks
  1147  30000C                     	org	3145740
  1148  30000C  0F                 	db	15
  1149                           
  1150                           ;Config register CONFIG7H @ 0x30000D
  1151                           ;	Boot Block Table Read Protection bit
  1152                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1153  30000D                     	org	3145741
  1154  30000D  40                 	db	64
  1155                           tosu	equ	0xFFF
  1156                           tosh	equ	0xFFE
  1157                           tosl	equ	0xFFD
  1158                           stkptr	equ	0xFFC
  1159                           pclatu	equ	0xFFB
  1160                           pclath	equ	0xFFA
  1161                           pcl	equ	0xFF9
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           prodh	equ	0xFF4
  1167                           prodl	equ	0xFF3
  1168                           indf0	equ	0xFEF
  1169                           postinc0	equ	0xFEE
  1170                           postdec0	equ	0xFED
  1171                           preinc0	equ	0xFEC
  1172                           plusw0	equ	0xFEB
  1173                           fsr0h	equ	0xFEA
  1174                           fsr0l	equ	0xFE9
  1175                           wreg	equ	0xFE8
  1176                           indf1	equ	0xFE7
  1177                           postinc1	equ	0xFE6
  1178                           postdec1	equ	0xFE5
  1179                           preinc1	equ	0xFE4
  1180                           plusw1	equ	0xFE3
  1181                           fsr1h	equ	0xFE2
  1182                           fsr1l	equ	0xFE1
  1183                           bsr	equ	0xFE0
  1184                           indf2	equ	0xFDF
  1185                           postinc2	equ	0xFDE
  1186                           postdec2	equ	0xFDD
  1187                           preinc2	equ	0xFDC
  1188                           plusw2	equ	0xFDB
  1189                           fsr2h	equ	0xFDA
  1190                           fsr2l	equ	0xFD9
  1191                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      11
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR3_Initialize->_TMR3_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR3_ISR
    _TMR3_ISR->_TMR3_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      98
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     240
                                              3 COMRAM     2     2      0
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             1     1      0     240
                                              2 COMRAM     1     1      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      7       B       1       11.7%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
ABS                  0      0       B       7        0.0%
BIGRAM             1FF      0       0       8        0.0%
DATA                 0      0       B       9        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 03 15:41:48 2021

                                      l22 019E                                        l35 01A2  
                                      l19 014C                                        l77 00B6  
                                      l93 0158                                       l125 0132  
                                     l154 0194                                       l166 018A  
                                     l182 016E                                       l911 017E  
                                     l907 0160                                       l909 0168  
                                     l881 0088                                       l891 00B4  
                                     l883 00A0                                       l893 0196  
                                     l885 00A2                                       l879 01A0  
                                     l887 00A8                                       l889 00AA  
                                     l997 018C                                       l999 010E  
                                     _PR2 000FCB                           _TMR2_Initialize 0160  
                                     tosl 000FFD                                      l1001 0116  
                                    l1003 011E                                      l1005 0120  
                                    l1007 0122                                      l1031 0140  
                                    l1009 012E                                      l1033 0144  
                                    l1025 0134                                      l1035 0148  
                                    l1027 0138                                      l1029 013C  
                                    l1053 014E                                      l1055 0152  
                                    l1057 0154                                      l1059 0156  
                         _timer3ReloadVal 000A                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    i2l44 0040                                      _TMR2 000FCC  
                                    _TMR3 000FB2                                      _WPUB 000F7C  
                                    _main 014E                                      btemp 000C  
                                    start 004C                           _TMR3_Initialize 010E  
                            ___param_bank 000000                   __end_of_PWM2_Initialize 018C  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 01A0  
                                   ?_main 0001                                     _ANSEL 000F7E  
                                   _T2CON 000FCA                                     _T3CON 000FB1  
                                   i2l151 00E4                                     i2l145 0050  
                                   i2l139 010C                                     i2l147 0086  
                                   i2l157 01A4                                     i2l927 00B8  
                                   i2l929 00CA                                     _TMR3H 000FB3  
                                   _TMR3L 000FB2                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
       __size_of_TMR3_SetInterruptHandler 000A                 ?_TMR3_SetInterruptHandler 0006  
                        __end_of_TMR3_ISR 0088            ??_TMR3_DefaultInterruptHandler 0001  
                                   pclath 000FFA                                     ttemp5 000D  
                                   ttemp6 0010                                     ttemp7 0014  
                                   status 000FD8                                     wtemp8 000D  
                         __initialization 0170                              __end_of_main 0160  
                 __end_of_TMR2_Initialize 0170               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 0008                             __activetblptr 000002  
                   _TMR3_InterruptHandler 0008                                    _CCPR2H 000FBC  
                                  _CCPR2L 000FBB                                    _ANSELH 000F7F  
                                  i2l1011 00E6                                    i2l1013 00F4  
                                  i2l1021 0104                                    i2l1023 0108  
                                  i2l1015 00F6                                    i2l1017 00FA  
                                  i2l1041 0076                                    i2l1019 00FE  
                                  i2l1043 0082                                    i2l1051 003C  
                 __end_of_TMR3_Initialize 0134                                    i2l1037 0050  
                                  i2l1045 0012                                    i2l1039 0074  
                                  i2l1047 0020                                    i2l1049 002E  
                                  _OSCCON 000FD3                                    i2u2_40 00CA  
                                  i2u2_41 00C6                                    i2u3_48 00D0  
                                  i2u3_49 00E4                           _TMR3_WriteTimer 00E6  
                        ?_PWM2_Initialize 0001                                    isa$std 000001  
                                  tblptru 000FF8  TMR3_SetInterruptHandler@InterruptHandler 0006  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 0134  
                              __accesstop 0060                   __end_of__initialization 0170  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                   __end_of_TMR3_CallBack 00E6                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0008                                 ?_TMR3_ISR 0001  
                        ?_TMR2_Initialize 0001                 __end_of_SYSTEM_Initialize 014E  
                 __end_of_TMR3_WriteTimer 010E                          ?_TMR3_Initialize 0001  
                              __pnvCOMRAM 0008          __end_of_TMR3_SetInterruptHandler 0196  
                              ??_TMR3_ISR 0003                                   _CCP2CON 000FBA  
                                 i2u10_40 00F4                                   i2u10_41 00F0  
                                 i2u11_40 0060                                   i2u11_41 005A  
                                 i2u11_46 0062                                   i2u12_40 0020  
                                 i2u12_41 001C                                   i2u13_40 002E  
                                 i2u13_41 002A                                   i2u14_40 003C  
                                 i2u14_41 0038                                   _OSCTUNE 000F9B  
                                 __Hparam 0000                                   __Lparam 0000  
                                 __pcinit 0170                                   __ramtop 0200  
                                 __ptext0 014E                                   __ptext1 0134  
                                 __ptext2 010E                                   __ptext3 018C  
                                 __ptext4 0160                                   __ptext5 017E  
                                 __ptext6 0088                                   __ptext7 0196  
                                 __ptext8 01A0                     _OSCILLATOR_Initialize 0196  
                               _T2CONbits 000FCA                                 _T3CONbits 000FB1  
                ??_PIN_MANAGER_Initialize 0006                __size_of_SYSTEM_Initialize 001A  
                    end_of_initialization 0170                          ?_TMR3_WriteTimer 0001  
                           __Lmediumconst 0000                  _TMR3_SetInterruptHandler 018C  
            __end_of_INTERRUPT_Initialize 01A4                         __size_of_TMR3_ISR 0038  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 0170  
                __size_of_PWM2_Initialize 000E           __size_of_PIN_MANAGER_Initialize 0030  
                __size_of_TMR2_Initialize 0010                    __size_of_TMR3_CallBack 002E  
                  _PIN_MANAGER_Initialize 0088                  __size_of_TMR3_Initialize 0026  
                               __pintcode 0008              ??_INTERRUPT_InterruptManager 0004  
                    _INTERRUPT_Initialize 01A0                         ??_PWM2_Initialize 0006  
                                _LATCbits 000F8B                                  _PIE2bits 000FA0  
     __size_of_INTERRUPT_InterruptManager 0044                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                ??_TMR3_SetInterruptHandler 0008  
                           _TMR3_CallBack 00B8                                  _RCONbits 000FD0  
                                _TMR3_ISR 0050                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                         ??_TMR2_Initialize 0006  
                          ?_TMR3_CallBack 0001                                  __Hrparam 0000  
                __size_of_TMR3_WriteTimer 0028                                  __Lrparam 0000  
                 ??_OSCILLATOR_Initialize 0006                         ??_TMR3_Initialize 0008  
                                __ptext10 0050                                  __ptext11 00E6  
                                __ptext12 00B8                                  __ptext13 01A4  
                                __ptext14 0000                   TMR3_WriteTimer@timerVal 0001  
                           __size_of_main 0012                                  isa$xinst 000000  
                                int$flags 000C        __end_of_INTERRUPT_InterruptManager 004C  
              _INTERRUPT_InterruptManager 0008      __end_of_TMR3_DefaultInterruptHandler 01A6  
   __size_of_TMR3_DefaultInterruptHandler 0002              _TMR3_DefaultInterruptHandler 01A4  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 0006  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                         ??_TMR3_CallBack 0001                         ??_TMR3_WriteTimer 0003  
         fp__TMR3_DefaultInterruptHandler 0000             ?_TMR3_DefaultInterruptHandler 0001  
                         _PWM2_Initialize 017E            __end_of_PIN_MANAGER_Initialize 00B8  
